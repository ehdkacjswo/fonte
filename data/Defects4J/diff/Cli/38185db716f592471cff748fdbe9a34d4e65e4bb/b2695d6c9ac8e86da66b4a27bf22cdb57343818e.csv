is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,19, <p>Thrown when more than one option in an option group
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,20, has been provided.</p>
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,22, @author John Keyes ( john at integralsource.com )
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,23, @see ParseException
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,25,ublic class AlreadySelectedException
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,26,xtends ParseException {
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,29, <p>Construct a new <code>AlreadySelectedException</code>
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,30, with the specified detail message.</p>
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,32, @param message the detail message
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,34,ublic AlreadySelectedException(String message)
False,src/java/org/apache/commons/cli/AlreadySelectedException.java,src/java/org/apache/commons/cli/AlreadySelectedException.java,36,uper(message);
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,19, The class BasicParser provides a very simple implementation of
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,20," the {@link Parser#flatten(Options,String[],boolean) flatten} method."
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,22, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,23, @see Parser
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,25,ublic class BasicParser extends Parser {
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,28, <p>A simple implementation of {@link Parser}'s abstract
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,29," {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,31, <p><b>Note:</b> <code>options</code> and <code>stopAtNonOption</code>
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,32, are not used in this <code>flatten</code> method.</p>
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,34, @param options The command line {@link Options}
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,35, @param arguments The command line arguments to be parsed
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,36, @param stopAtNonOption Specifies whether to stop flattening
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,37, when an non option is found.
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,38, @return The <code>arguments</code> String array.
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,40,"rotected String[] flatten(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,41,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,43,/ just echo the arguments
False,src/java/org/apache/commons/cli/BasicParser.java,src/java/org/apache/commons/cli/BasicParser.java,44,eturn arguments;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,2, Copyright 2004 The Apache Software Foundation
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,18,mport java.util.HashSet;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,19,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,20,mport java.util.List;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,21,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,22,mport java.util.Set;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,24,mport org.apache.commons.cli2.Group;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,25,mport org.apache.commons.cli2.Option;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,26,mport org.apache.commons.cli2.builder.ArgumentBuilder;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,27,mport org.apache.commons.cli2.builder.DefaultOptionBuilder;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,28,mport org.apache.commons.cli2.builder.GroupBuilder;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,29,mport org.apache.commons.cli2.validation.InvalidArgumentException;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,30,mport org.apache.commons.cli2.validation.Validator;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,33, A utility class for converting data structures version 1 to
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,34, version 2 Option instances.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,36,ublic class CLI2Converter {
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,38,rivate CLI2Converter(){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,39,/ prevent creation of static utility class
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,43, Creates a version 2 Option instance from a version 1 Option instance.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,45, @param option1 the version 1 Option to convert
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,46, @return a version 2 Option
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,48,ublic static Option option(final org.apache.commons.cli.Option option1){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,50,inal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,51,builder.withRequired(option1.isRequired());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,53,inal String shortName = option1.getOpt();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,54,"f(shortName!=null && !"" "".equals(shortName)){"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,55,builder.withShortName(shortName);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,58,inal String longName = option1.getLongOpt();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,59,f(longName!=null){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,60,builder.withLongName(longName);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,62,builder.withId(option1.getId());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,64,inal String description = option1.getDescription();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,65,f(description!=null){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,66,builder.withDescription(description);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,69,f(option1.hasArg()){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,70,inal ArgumentBuilder abuilder = new ArgumentBuilder();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,71,inal String argName = option1.getArgName();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,72,builder.withName(argName);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,73,builder.withMaximum(option1.getArgs());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,74,f(option1.hasValueSeparator()){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,75,builder.withSubsequentSeparator(option1.getValueSeparator());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,77,f(option1.hasOptionalArg()){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,78,builder.withMinimum(0);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,80,lse{
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,81,/TODO check what non-optional arg means
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,82,builder.withMinimum(option1.getArgs());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,85,inal Object type = option1.getType();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,86,f(type!=null){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,87,builder.withValidator(new TypeHandlerValidator(type));
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,90,builder.withArgument(abuilder.create());
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,93,eturn obuilder.create();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,97, Creates a version 2 Group instance from a version 1 OptionGroup instance.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,99, @param optionGroup1 the version 1 OptionGroup to convert
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,100, @return a version 2 Group
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,102,ublic static Group group(final OptionGroup optionGroup1){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,104,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,106,or(final Iterator i = optionGroup1.getOptions().iterator();i.hasNext();){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,107,inal org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,108,inal Option option2 = option(option1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,109,builder.withOption(option2);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,112,builder.withMaximum(1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,114,f(optionGroup1.isRequired()){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,115,builder.withMinimum(1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,118,eturn gbuilder.create();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,122, Creates a version 2 Group instance from a version 1 Options instance.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,124, @param options1 the version 1 Options to convert
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,125, @return a version 2 Group
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,127,ublic static Group group(final Options options1){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,129,inal GroupBuilder gbuilder = new GroupBuilder();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,131,inal Set optionGroups = new HashSet();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,133,or(final Iterator i = options1.getOptionGroups().iterator();i.hasNext();){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,134,inal OptionGroup optionGroup1 = (OptionGroup)i.next();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,135,roup group = group(optionGroup1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,136,builder.withOption(group);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,137,ptionGroups.add(optionGroup1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,140,or(final Iterator i = options1.getOptions().iterator();i.hasNext();){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,141,inal org.apache.commons.cli.Option option1 = (org.apache.commons.cli.Option)i.next();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,142,"f(!optionInAGroup(option1,optionGroups)){"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,143,inal Option option2 = option(option1);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,144,builder.withOption(option2);
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,148,eturn gbuilder.create();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,151,"rivate static boolean optionInAGroup(final org.apache.commons.cli.Option option1, final Set optionGroups) {"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,152,or (Iterator i = optionGroups.iterator(); i.hasNext();) {
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,153,ptionGroup group = (OptionGroup) i.next();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,154,f(group.getOptions().contains(option1)){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,155,eturn true;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,158,eturn false;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,162,lass TypeHandlerValidator implements Validator{
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,164,rivate final Object type;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,167, Creates a new Validator using the TypeHandler class.
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,169, @see TypeHandler
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,170, @param type The required type for valid elements
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,172,ublic TypeHandlerValidator(final Object type){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,173,his.type = type;
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,176,* (non-Javadoc)
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,177, @see org.apache.commons.cli2.validation.Validator#validate(java.util.List)
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,179,ublic void validate(final List values) throws InvalidArgumentException {
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,180,inal ListIterator i = values.listIterator();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,181,hile(i.hasNext()){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,182,inal String value = (String)i.next();
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,183,"inal Object converted = TypeHandler.createValue(value,type);"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,184,f(converted==null){
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,185,"hrow new InvalidArgumentException(""Unable to understand value: "" + value);"
False,src/java/org/apache/commons/cli/CLI2Converter.java,src/java/org/apache/commons/cli/CLI2Converter.java,187,.set(converted);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,18,mport java.util.Collection;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,19,mport java.util.HashMap;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,20,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,21,mport java.util.LinkedList;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,22,mport java.util.List;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,23,mport java.util.Map;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,26, <p>Represents list of arguments parsed against
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,27, a {@link Options} descriptor.<p>
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,29," <p>It allows querying of a boolean {@link #hasOption(String opt)},"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,30, in addition to retrieving the {@link #getOptionValue(String opt)}
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,31, for options requiring arguments.</p>
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,33," <p>Additionally, any left-over or unrecognized arguments,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,34, are available for further processing.</p>
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,36, @author bob mcwhirter (bob @ werken.com)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,37," @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,38, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,40,ublic class CommandLine {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,42,** the unrecognised options/arguments */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,43,rivate List args = new LinkedList();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,45,** the processed options */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,46,rivate Map options = new HashMap();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,48,** the option name map */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,49,rivate Map names = new HashMap();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,51,** Map of unique options for ease to get complete list of options */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,52,rivate Map hashcodeMap = new HashMap();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,54,** the processed options */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,55,rivate Option[] optionsArray;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,58, Creates a command line.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,60,ommandLine()
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,62,/ nothing to do
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,66, Query to see if an option has been set.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,68, @param opt Short name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,69," @return true if set, false if not"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,71,ublic boolean hasOption(String opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73,eturn options.containsKey(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,77, Query to see if an option has been set.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,79, @param opt character name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,80," @return true if set, false if not"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,82,ublic boolean hasOption(char opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,84,eturn hasOption(String.valueOf(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,88, Return the <code>Object</code> type of this <code>Option</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,90, @param opt the name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,91, @return the type of this <code>Option</code>
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,93,ublic Object getOptionObject(String opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,95,tring res = getOptionValue(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,97,f (!options.containsKey(opt))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,99,eturn null;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,102,bject type = ((Option) options.get(opt)).getType();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,104,"eturn (res == null)        ? null : TypeHandler.createValue(res, type);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,108, Return the <code>Object</code> type of this <code>Option</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,110, @param opt the name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,111, @return the type of opt
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,113,ublic Object getOptionObject(char opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,115,eturn getOptionObject(String.valueOf(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,119," Retrieve the argument, if any, of this option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,121, @param opt the name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,122," @return Value of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,123, otherwise null.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,125,ublic String getOptionValue(String opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,127,tring[] values = getOptionValues(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,129,eturn (values == null) ? null : values[0];
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,133," Retrieve the argument, if any, of this option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,135, @param opt the character name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,136," @return Value of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,137, otherwise null.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,139,ublic String getOptionValue(char opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,141,eturn getOptionValue(String.valueOf(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,145," Retrieves the array of values, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,147, @param opt string name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,148," @return Values of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,149, otherwise null.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,151,ublic String[] getOptionValues(String opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,153,pt = Util.stripLeadingHyphens(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,tring key = opt;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,157,f (names.containsKey(opt))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,159,ey = (String) names.get(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,162,f (options.containsKey(key))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,164,eturn ((Option) options.get(key)).getValues();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,167,eturn null;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,171," Retrieves the array of values, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,173, @param opt character name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,174," @return Values of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,175, otherwise null.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,177,ublic String[] getOptionValues(char opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,179,eturn getOptionValues(String.valueOf(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,183," Retrieve the argument, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,185, @param opt name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,186, @param defaultValue is the default value to be returned if the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,187, is not specified
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,188," @return Value of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,189, otherwise <code>defaultValue</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,191,"ublic String getOptionValue(String opt, String defaultValue)"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,193,tring answer = getOptionValue(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,195,eturn (answer != null) ? answer : defaultValue;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,199," Retrieve the argument, if any, of an option."
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,201, @param opt character name of the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,202, @param defaultValue is the default value to be returned if the option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,203, is not specified
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,204," @return Value of the argument if option is set, and has an argument,"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,205, otherwise <code>defaultValue</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,207,"ublic String getOptionValue(char opt, String defaultValue)"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,209,"eturn getOptionValue(String.valueOf(opt), defaultValue);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,213, Retrieve any left-over non-recognized options and arguments
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,215, @return remaining items passed in but not parsed as an array
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,217,ublic String[] getArgs()
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,219,tring[] answer = new String[args.size()];
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,221,rgs.toArray(answer);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,223,eturn answer;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,227, Retrieve any left-over non-recognized options and arguments
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,229, @return remaining items passed in but not parsed as a <code>List</code>.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,231,ublic List getArgList()
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,233,eturn args;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,237, jkeyes
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,238, - commented out until it is implemented properly
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,239," <p>Dump state, suitable for debugging.</p>"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,241, @return Stringified form of this object
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,245,ublic String toString() {
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,246,tringBuffer buf = new StringBuffer();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,248,"uf.append(""[ CommandLine: [ options: "");"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,249,uf.append(options.toString());
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,250,"uf.append("" ] [ args: "");"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,251,uf.append(args.toString());
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,252,"uf.append("" ] ]"");"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,254,eturn buf.toString();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,259, Add left-over unrecognized option/argument.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,261, @param arg the unrecognised option/argument.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,263,oid addArg(String arg)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,265,rgs.add(arg);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,269, Add an option to the command line.  The values of
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,270, the option are stored.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,272, @param opt the processed option
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,274,oid addOption(Option opt)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,276,"ashcodeMap.put(new Integer(opt.hashCode()), opt);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,278,tring key = opt.getKey();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,280,f (key == null)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,282,ey = opt.getLongOpt();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,284,lse
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,286,"ames.put(opt.getLongOpt(), key);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,289,"ptions.put(key, opt);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,293, Returns an iterator over the Option members of CommandLine.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,295, @return an <code>Iterator</code> over the processed {@link Option}
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,296, members of this {@link CommandLine}
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,298,ublic Iterator iterator()
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,300,eturn hashcodeMap.values().iterator();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,304, Returns an array of the processed {@link Option}s.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,306, @return an array of the processed {@link Option}s.
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,308,ublic Option[] getOptions()
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,310,ollection processed = options.values();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,313,/ reinitialise array
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,314,ptionsArray = new Option[processed.size()];
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,316,/ return the array
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,317,eturn (Option[]) processed.toArray(optionsArray);
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,18,mport java.util.Properties;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,21, A class that implements the <code>CommandLineParser</code> interface
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,22, can parse a String array according to the {@link Options} specified
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,23, and return a {@link CommandLine}.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,25, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,27,ublic interface CommandLineParser {
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,30, Parse the arguments according to the specified options.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,32, @param options the specified Options
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,33, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,34, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,36, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,37, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,39,"ommandLine parse(Options options, String[] arguments)"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,40,hrows ParseException;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,43, Parse the arguments according to the specified options and
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,44, properties.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,46, @param options the specified Options
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,47, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,48, @param properties command line option name-value pairs
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,49, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,51, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,52, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,54,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,55,roperties properties)
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,56,hrows ParseException;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,59, Parse the arguments according to the specified options.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,61, @param options the specified Options
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,62, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,63, @param stopAtNonOption specifies whether to continue parsing the
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,64, arguments if a non option is encountered.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,66, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,67, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,68, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,70,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,71,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,72,hrows ParseException;
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,75, Parse the arguments according to the specified options and
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,76, properties.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,78, @param options the specified Options
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,79, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,80, @param properties command line option name-value pairs
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,81, @param stopAtNonOption specifies whether to continue parsing the
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,83, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,84, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,85, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,87,"ommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,88,"roperties properties, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/CommandLineParser.java,src/java/org/apache/commons/cli/CommandLineParser.java,89,hrows ParseException;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,18,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,21, The class GnuParser provides an implementation of the
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,22," {@link Parser#flatten(Options,String[],boolean) flatten} method."
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,24, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,25, @see Parser
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,26, @version $Revision$
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,28,ublic class GnuParser extends Parser {
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,30,** holder for flattened tokens */
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,31,rivate ArrayList tokens = new ArrayList();
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,34, <p>Resets the members to their original state i.e. remove
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,35, all of <code>tokens</code> entries.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,37,rivate void init()
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,39,okens.clear();
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,43, <p>This flatten method does so using the following rules:
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,44, <ol>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,45,  <li>If an {@link Option} exists for the first character of
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,46,  the <code>arguments</code> entry <b>AND</b> an {@link Option}
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,47,  does not exist for the whole <code>argument</code> then
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,48,  add the first character as an option to the processed tokens
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,49,"  list e.g. ""-D"" and add the rest of the entry to the also.</li>"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,50,  <li>Otherwise just add the token to the processed tokens list.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,51,  </li>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,52, </ol>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,53, </p>
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,55, @param options The Options to parse the arguments by.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,56, @param arguments The arguments that have to be flattened.
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,57, @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,58, flattening when a non option has been encountered
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,59, @return a String array of the flattened arguments
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,61,"rotected String[] flatten(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,62,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,64,nit();
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,66,oolean eatTheRest = false;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,67,ption currentOption = null;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,69,or (int i = 0; i < arguments.length; i++)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,71,"f (""--"".equals(arguments[i]))"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,73,atTheRest = true;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,74,"okens.add(""--"");"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,76,"lse if (""-"".equals(arguments[i]))"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,78,"okens.add(""-"");"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,80,"lse if (arguments[i].startsWith(""-""))"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,82,ption option = options.getOption(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,84,/ this is not an Option
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,85,f (option == null)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,87,/ handle special properties Option
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,88,ption specialOption =
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,89,"ptions.getOption(arguments[i].substring(0, 2));"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,91,f (specialOption != null)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,93,"okens.add(arguments[i].substring(0, 2));"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,94,okens.add(arguments[i].substring(2));
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,96,lse if (stopAtNonOption)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,98,atTheRest = true;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,99,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,101,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,103,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,106,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,108,urrentOption = option;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,110,/ special option
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,111,ption specialOption =
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,112,"ptions.getOption(arguments[i].substring(0, 2));"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,114,f ((specialOption != null) && (option == null))
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,116,"okens.add(arguments[i].substring(0, 2));"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,117,okens.add(arguments[i].substring(2));
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,119,lse if ((currentOption != null) && currentOption.hasArg())
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,121,f (currentOption.hasArg())
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,123,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,124,urrentOption = null;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,126,lse if (currentOption.hasArgs())
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,128,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,130,lse if (stopAtNonOption)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,132,atTheRest = true;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,133,"okens.add(""--"");"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,134,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,136,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,138,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,141,lse if (currentOption != null)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,143,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,145,lse if (stopAtNonOption)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,147,atTheRest = true;
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,148,"okens.add(""--"");"
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,149,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,151,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,153,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,157,lse
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,159,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,162,f (eatTheRest)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,164,or (i++; i < arguments.length; i++)
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,166,okens.add(arguments[i]);
False,src/java/org/apache/commons/cli/GnuParser.java,src/java/org/apache/commons/cli/GnuParser.java,171,eturn (String[]) tokens.toArray(new String[] {  });
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,18,mport java.io.PrintWriter;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,20,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,21,mport java.util.Collection;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,22,mport java.util.Collections;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,23,mport java.util.Comparator;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,24,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,25,mport java.util.List;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,28, A formatter of help messages for the current command line options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,30, @author Slawek Zachcial
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,31, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,33,ublic class HelpFormatter {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,34,/ --------------------------------------------------------------- Constants
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,36,** default number of characters per line */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,37,ublic static final int DEFAULT_WIDTH = 74;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,39,** default padding to the left of each line */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,40,ublic static final int DEFAULT_LEFT_PAD = 1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,43,ublic static final int DEFAULT_DESC_PAD = 3;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,45,** the string to display at the begining of the usage statement */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,46,"ublic static final String DEFAULT_SYNTAX_PREFIX = ""usage: "";"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,48,** default prefix for shortOpts */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,49,"ublic static final String DEFAULT_OPT_PREFIX = ""-"";"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,51,** default prefix for long Option */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,52,"ublic static final String DEFAULT_LONG_OPT_PREFIX = ""--"";"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,54,** default name for an argument */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,55,"ublic static final String DEFAULT_ARG_NAME = ""arg"";"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,57,/ -------------------------------------------------------------- Attributes
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,59,** number of characters per line */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,60,rivate int defaultWidth = DEFAULT_WIDTH;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,62,** amount of padding to the left of each line */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,63,rivate int defaultLeftPad = DEFAULT_LEFT_PAD;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,66,rivate int defaultDescPad = DEFAULT_DESC_PAD;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,68,** the string to display at the begining of the usage statement */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,69,rivate String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,71,** the new line character/string ?? */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,72,"rivate String defaultNewLine = System.getProperty(""line.separator"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,74,** the shortOpt prefix */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,75,rivate String defaultOptPrefix = DEFAULT_OPT_PREFIX;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,77,** the long Opt prefix */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,78,rivate String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,80,** the name of the argument */
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,81,rivate String defaultArgName = DEFAULT_ARG_NAME;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,84, Sets the 'width'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,86, @param width the new value of 'width'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,88,ublic void setWidth(int width)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,90,his.defaultWidth = width;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,94, Returns the 'width'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,96, @return the 'width'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,98,ublic int getWidth()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,100,eturn this.defaultWidth;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,104, Sets the 'leftPadding'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,106, @param padding the new value of 'leftPadding'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,108,ublic void setLeftPadding(int padding)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,110,his.defaultLeftPad = padding;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,114, Returns the 'leftPadding'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,116, @return the 'leftPadding'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,118,ublic int getLeftPadding()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,120,eturn this.defaultLeftPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,124, Sets the 'descPadding'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,126, @param padding the new value of 'descPadding'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,128,ublic void setDescPadding(int padding)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,130,his.defaultDescPad = padding;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,134, Returns the 'descPadding'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,136, @return the 'descPadding'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,138,ublic int getDescPadding()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,140,eturn this.defaultDescPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,144, Sets the 'syntaxPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,146, @param prefix the new value of 'syntaxPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,148,ublic void setSyntaxPrefix(String prefix)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,150,his.defaultSyntaxPrefix = prefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,154, Returns the 'syntaxPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,156, @return the 'syntaxPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,158,ublic String getSyntaxPrefix()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,160,eturn this.defaultSyntaxPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,164, Sets the 'newLine'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,166, @param newline the new value of 'newLine'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,168,ublic void setNewLine(String newline)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,170,his.defaultNewLine = newline;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,174, Returns the 'newLine'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,176, @return the 'newLine'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,178,ublic String getNewLine()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,180,eturn this.defaultNewLine;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,184, Sets the 'optPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,186, @param prefix the new value of 'optPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,188,ublic void setOptPrefix(String prefix)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,190,his.defaultOptPrefix = prefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,194, Returns the 'optPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,196, @return the 'optPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,198,ublic String getOptPrefix()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,200,eturn this.defaultOptPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,204, Sets the 'longOptPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,206, @param prefix the new value of 'longOptPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,208,ublic void setLongOptPrefix(String prefix)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,210,his.defaultLongOptPrefix = prefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,214, Returns the 'longOptPrefix'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,216, @return the 'longOptPrefix'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,218,ublic String getLongOptPrefix()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,220,eturn this.defaultLongOptPrefix;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,224, Sets the 'argName'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,226, @param name the new value of 'argName'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,228,ublic void setArgName(String name)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,230,his.defaultArgName = name;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,234, Returns the 'argName'.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,236, @return the 'argName'
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,238,ublic String getArgName()
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,240,eturn this.defaultArgName;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,244,/ ------------------------------------------------------------------ Public
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,247, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,248, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,249, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,251, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,252, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,254,"ublic void printHelp(String cmdLineSyntax, Options options)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,256,"rintHelp(defaultWidth, cmdLineSyntax, null, options, null, false);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,260, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,261, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,262, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,264, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,265, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,266, @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,267, usage statement
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,269,"ublic void printHelp(String cmdLineSyntax, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,270,oolean autoUsage)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,272,"rintHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,276, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,277, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,278, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,280, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,281, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,282, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,283, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,285,"ublic void printHelp(String cmdLineSyntax, String header, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,286,tring footer)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,288,"rintHelp(cmdLineSyntax, header, options, footer, false);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,292, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,293, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,294, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,296, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,297, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,298, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,299, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,300, @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,301, usage statement
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,303,"ublic void printHelp(String cmdLineSyntax, String header, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,304,"tring footer, boolean autoUsage)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,306,"rintHelp(defaultWidth, cmdLineSyntax, header, options, footer,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,307,utoUsage);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,311, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,312, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,313, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,315, @param width the number of characters to be displayed on each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,316, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,317, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,318, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,319, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,321,"ublic void printHelp(int width, String cmdLineSyntax, String header,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,322,"ptions options, String footer)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,324,"rintHelp(width, cmdLineSyntax, header, options, footer, false);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,328, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,329, command line syntax.  This method prints help information to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,330, System.out.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,332, @param width the number of characters to be displayed on each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,333, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,334, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,335, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,336, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,337, @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,338, usage statement
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,340,"ublic void printHelp(int width, String cmdLineSyntax, String header,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,341,"ptions options, String footer, boolean autoUsage)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,343,rintWriter pw = new PrintWriter(System.out);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,345,"rintHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,346,"efaultDescPad, footer, autoUsage);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,347,w.flush();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,351, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,352, command line syntax.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,354, @param pw the writer to which the help will be written
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,355, @param width the number of characters to be displayed on each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,356, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,357, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,358, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,359, @param leftPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,360, to each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,361, @param descPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,362, to each description line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,363, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,365,"ublic void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,366,"tring header, Options options, int leftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,367,"nt descPad, String footer)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,369,"rintHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,370,"ooter, false);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,375, <p>Print the help for <code>options</code> with the specified
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,376, command line syntax.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,378, @param pw the writer to which the help will be written
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,379, @param width the number of characters to be displayed on each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,380, @param cmdLineSyntax the syntax for this application
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,381, @param header the banner to display at the begining of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,382, @param options the Options instance
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,383, @param leftPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,384, to each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,385, @param descPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,386, to each description line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,387, @param footer the banner to display at the end of the help
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,388, @param autoUsage whether to print an automatically generated
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,389, usage statement
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,391,"ublic void printHelp(PrintWriter pw, int width, String cmdLineSyntax,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,392,"tring header, Options options, int leftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,393,"nt descPad, String footer, boolean autoUsage)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,395,f ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,397,"hrow new IllegalArgumentException(""cmdLineSyntax not provided"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,400,f (autoUsage)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,402,"rintUsage(pw, width, cmdLineSyntax, options);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,404,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,406,"rintUsage(pw, width, cmdLineSyntax);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,409,f ((header != null) && (header.trim().length() > 0))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,411,"rintWrapped(pw, width, header);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,414,"rintOptions(pw, width, options, leftPad, descPad);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,416,f ((footer != null) && (footer.trim().length() > 0))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,418,"rintWrapped(pw, width, footer);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,423, <p>Prints the usage statement for the specified application.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,425, @param pw The PrintWriter to print the usage statement
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,426, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,427, @param app The application name
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,428, @param options The command line Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,431,"ublic void printUsage(PrintWriter pw, int width, String app,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,432,ptions options)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,434,/ initialise the string buffer
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,435,tringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,436,"append("" "");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,438,/ create a list for processed option groups
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,439,inal Collection processedGroups = new ArrayList();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,441,/ temp variable
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,442,ption option;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,444,/ iterate over the options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,445,or (Iterator i = options.getOptions().iterator(); i.hasNext();)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,447,/ get the next Option
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,448,ption = (Option) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,450,/ check if the option is part of an OptionGroup
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,451,ptionGroup group = options.getOptionGroup(option);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,453,/ if the option is part of a group
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,454,f (group != null)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,456,/ and if the group has not already been processed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,457,f (!processedGroups.contains(group))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,459,/ add the group to the processed list
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,460,rocessedGroups.add(group);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,463,/ add the usage clause
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,464,"ppendOptionGroup(buff, group);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,467,/ otherwise the option was displayed in the group
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,468,/ previously so ignore it.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,471,/ if the Option is not part of an OptionGroup
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,472,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,474,"ppendOption(buff, option, option.isRequired());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,477,f (i.hasNext())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,479,"uff.append("" "");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,484,/ call printWrapped
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,485,"rintWrapped(pw, width, buff.toString().indexOf(' ') + 1,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,486,uff.toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,490, Appends the usage clause for an OptionGroup to a StringBuffer.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,491, The clause is wrapped in square brackets if the group is required.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,492, The display of the options is handled by appendOption
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,493, @param buff the StringBuffer to append to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,494, @param group the group to append
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,495," @see #appendOption(StringBuffer,Option,boolean)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,497,"rivate static void appendOptionGroup(final StringBuffer buff,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,498,inal OptionGroup group)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,500,f (!group.isRequired())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,502,"uff.append(""["");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,505,/ for each option in the OptionGroup
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,506,or (Iterator i = group.getOptions().iterator(); i.hasNext();)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,508,/ whether the option is required or not is handled at group level
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,509,"ppendOption(buff, (Option) i.next(), true);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,511,f (i.hasNext())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,513,"uff.append("" | "");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,517,f (!group.isRequired())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,519,"uff.append(""]"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,524, Appends the usage clause for an Option to a StringBuffer.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,526, @param buff the StringBuffer to append to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,527, @param option the Option to append
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,528, @param required whether the Option is required or not
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,530,"rivate static void appendOption(final StringBuffer buff,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,531,"inal Option option,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,532,inal boolean required)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,534,f (!required)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,536,"uff.append(""["");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,539,f (option.getOpt() != null)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,541,"uff.append(""-"").append(option.getOpt());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,543,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,545,"uff.append(""--"").append(option.getLongOpt());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,548,/ if the Option has a value
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,549,f (option.hasArg() && (option.getArgName() != null))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,551,"uff.append("" <"").append(option.getArgName()).append("">"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,554,/ if the Option is not a required option
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,555,f (!required)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,557,"uff.append(""]"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,562," <p>Print the cmdLineSyntax to the specified writer, using the"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,563, specified width.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,565, @param pw The printWriter to write the help to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,566, @param width The number of characters per line for the usage statement.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,567, @param cmdLineSyntax The usage statement.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,569,"ublic void printUsage(PrintWriter pw, int width, String cmdLineSyntax)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,571,nt argPos = cmdLineSyntax.indexOf(' ') + 1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,573,"rintWrapped(pw, width, defaultSyntaxPrefix.length() + argPos,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,574,efaultSyntaxPrefix + cmdLineSyntax);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,578," <p>Print the help for the specified Options to the specified writer,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,579," using the specified width, left padding and description padding.</p>"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,581, @param pw The printWriter to write the help to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,582, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,583, @param options The command line Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,584, @param leftPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,585, to each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,586, @param descPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,587, to each description line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,589,"ublic void printOptions(PrintWriter pw, int width, Options options,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,590,"nt leftPad, int descPad)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,592,tringBuffer sb = new StringBuffer();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,594,"enderOptions(sb, width, options, leftPad, descPad);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,595,w.println(sb.toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,599, <p>Print the specified text to the specified PrintWriter.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,601, @param pw The printWriter to write the help to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,602, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,603, @param text The text to be written to the PrintWriter
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,605,"ublic void printWrapped(PrintWriter pw, int width, String text)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,607,"rintWrapped(pw, width, 0, text);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,611, <p>Print the specified text to the specified PrintWriter.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,613, @param pw The printWriter to write the help to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,614, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,615, @param nextLineTabStop The position on the next line for the first tab.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,616, @param text The text to be written to the PrintWriter
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,618,"ublic void printWrapped(PrintWriter pw, int width, int nextLineTabStop,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,619,tring text)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,621,tringBuffer sb = new StringBuffer(text.length());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,623,"enderWrappedText(sb, width, nextLineTabStop, text);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,624,w.println(sb.toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,627,/ --------------------------------------------------------------- Protected
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,630, <p>Render the specified Options and return the rendered Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,631, in a StringBuffer.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,633, @param sb The StringBuffer to place the rendered Options into.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,634, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,635, @param options The command line Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,636, @param leftPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,637, to each line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,638, @param descPad the number of characters of padding to be prefixed
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,639, to each description line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,641, @return the StringBuffer with the rendered Options contents.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,643,"rotected StringBuffer renderOptions(StringBuffer sb, int width,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,644,"ptions options, int leftPad,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,645,nt descPad)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,647,inal String lpad = createPadding(leftPad);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,648,inal String dpad = createPadding(descPad);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,650,"/ first create list containing only <lpad>-a,--aaa where"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,651,/ -a is opt and --aaa is long opt; in parallel look for
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,652,/ the longest opt string this list will be then used to
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,653,/ sort options ascending
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,654,nt max = 0;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,655,tringBuffer optBuf;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,656,ist prefixList = new ArrayList();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,657,ption option;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,658,ist optList = options.helpOptions();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,660,"ollections.sort(optList, new OptionComparator());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,662,or (Iterator i = optList.iterator(); i.hasNext();)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,664,ption = (Option) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,665,ptBuf = new StringBuffer(8);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,667,f (option.getOpt() == null)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,669,"ptBuf.append(lpad).append(""   "" + defaultLongOptPrefix)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,670,append(option.getLongOpt());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,672,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,674,ptBuf.append(lpad).append(defaultOptPrefix)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,675,append(option.getOpt());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,677,f (option.hasLongOpt())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,679,"ptBuf.append(',').append(defaultLongOptPrefix)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,680,append(option.getLongOpt());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,684,f (option.hasArg())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,686,f (option.hasArgName())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,688,"ptBuf.append("" <"").append(option.getArgName()).append("">"");"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,690,lse
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,692,ptBuf.append(' ');
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,696,refixList.add(optBuf);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,697,ax = (optBuf.length() > max)       ? optBuf.length() : max;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,700,nt x = 0;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,702,or (Iterator i = optList.iterator(); i.hasNext();)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,704,ption = (Option) i.next();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,705,ptBuf = new StringBuffer(prefixList.get(x++).toString());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,707,f (optBuf.length() < max)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,709,ptBuf.append(createPadding(max - optBuf.length()));
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,712,ptBuf.append(dpad);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,714,nt nextLineTabStop = max + descPad;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,716,f (option.getDescription() != null)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,718,ptBuf.append(option.getDescription());
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,721,"enderWrappedText(sb, width, nextLineTabStop, optBuf.toString());"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,723,f (i.hasNext())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,725,b.append(defaultNewLine);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,729,eturn sb;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,733, <p>Render the specified text and return the rendered Options
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,734, in a StringBuffer.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,736, @param sb The StringBuffer to place the rendered text into.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,737, @param width The number of characters to display per line
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,738, @param nextLineTabStop The position on the next line for the first tab.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,739, @param text The text to be rendered.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,741, @return the StringBuffer with the rendered Options contents.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,743,"rotected StringBuffer renderWrappedText(StringBuffer sb, int width,"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,744,"nt nextLineTabStop, String text)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,746,"nt pos = findWrapPos(text, width, 0);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,748,f (pos == -1)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,750,b.append(rtrim(text));
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,752,eturn sb;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,754,"b.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,756,/ all following lines must be padded with nextLineTabStop space
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,757,/ characters
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,758,inal String padding = createPadding(nextLineTabStop);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,760,hile (true)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,762,ext = padding + text.substring(pos).trim();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,763,"os = findWrapPos(text, width, nextLineTabStop);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,765,f (pos == -1)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,767,b.append(text);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,769,eturn sb;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,772,"b.append(rtrim(text.substring(0, pos))).append(defaultNewLine);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,777, Finds the next text wrap position after <code>startPos</code> for the
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,778, text in <code>text</code> with the column width <code>width</code>.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,779, The wrap point is the last postion before startPos+width having a
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,780," whitespace character (space, \n, \r)."
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,782, @param text The text being searched for the wrap position
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,783, @param width width of the wrapped text
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,784, @param startPos position from which to start the lookup whitespace
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,785, character
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,786, @return postion on which the text must be wrapped or -1 if the wrap
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,787, position is at the end of the text
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,789,"rotected int findWrapPos(String text, int width, int startPos)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,791,nt pos = -1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,793,/ the line ends before the max wrap pos or a new line char found
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,794,"f (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,795,"| ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,797,eturn pos+1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,799,lse if ((startPos + width) >= text.length())
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,801,eturn -1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,805,/ look for the last whitespace character before startPos+width
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,806,os = startPos + width;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,808,har c;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,810,hile ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,811,& (c != '\n') && (c != '\r'))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,813,-pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,816,/ if we found it - just return
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,817,f (pos > startPos)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,819,eturn pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,822,/ must look for the first whitespace chearacter after startPos
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,823,/ + width
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,824,os = startPos + width;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,826,hile ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,827,& (c != '\n') && (c != '\r'))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,829,+pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,832,eturn (pos == text.length())        ? (-1) : pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,836, <p>Return a String of padding of length <code>len</code>.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,838, @param len The length of the String of padding to create.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,840, @return The String of padding
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,842,rotected String createPadding(int len)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,844,tringBuffer sb = new StringBuffer(len);
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,846,or (int i = 0; i < len; ++i)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,848,b.append(' ');
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,851,eturn sb.toString();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,855, <p>Remove the trailing whitespace from the specified String.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,857, @param s The String to remove the trailing padding from.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,859, @return The String of without the trailing padding
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,861,rotected String rtrim(String s)
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,863,f ((s == null) || (s.length() == 0))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,865,eturn s;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,868,nt pos = s.length();
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,870,hile ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,872,-pos;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,875,"eturn s.substring(0, pos);"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,878,/ ------------------------------------------------------ Package protected
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,879,/ ---------------------------------------------------------------- Private
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,880,/ ---------------------------------------------------------- Inner classes
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,882, <p>This class implements the <code>Comparator</code> interface
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,883, for comparing Options.</p>
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,885,rivate static class OptionComparator
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,886,mplements Comparator {
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,889, <p>Compares its two arguments for order. Returns a negative
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,890," integer, zero, or a positive integer as the first argument"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,891," is less than, equal to, or greater than the second.</p>"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,893, @param o1 The first Option to be compared.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,894, @param o2 The second Option to be compared.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,896," @return a negative integer, zero, or a positive integer as"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,897," the first argument is less than, equal to, or greater than the"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,898, second.
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,900,"ublic int compare(Object o1, Object o2)"
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,902,ption opt1 = (Option)o1;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,903,ption opt2 = (Option)o2;
False,src/java/org/apache/commons/cli/HelpFormatter.java,src/java/org/apache/commons/cli/HelpFormatter.java,905,eturn opt1.getKey().compareToIgnoreCase(opt2.getKey());
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,19, <p>Thrown when an option requiring an argument
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,20, is not provided with an argument.</p>
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,22, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,23, @see ParseException
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,25,ublic class MissingArgumentException
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,26,xtends ParseException {
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,29, <p>Construct a new <code>MissingArgumentException</code>
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,30, with the specified detail message.</p>
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,32, @param message the detail message
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,34,ublic MissingArgumentException(String message)
False,src/java/org/apache/commons/cli/MissingArgumentException.java,src/java/org/apache/commons/cli/MissingArgumentException.java,36,uper(message);
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,19, <p>Thrown when a required option has not been provided.</p>
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,21, @author John Keyes ( john at integralsource.com )
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,22, @see ParseException
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,24,ublic class MissingOptionException
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,25,xtends ParseException {
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,28, <p>Construct a new <code>MissingSelectedException</code>
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,29, with the specified detail message.</p>
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,31, @param message the detail message
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,33,ublic MissingOptionException(String message)
False,src/java/org/apache/commons/cli/MissingOptionException.java,src/java/org/apache/commons/cli/MissingOptionException.java,35,uper(message);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,18,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,20,** <p>Describes a single command-line option.  It maintains
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,21," information regarding the short-name of the option, the long-name,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,22," if any exists, a flag indicating if an argument is required for"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,23," this option, and a self-documenting description of the option.</p>"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,25," <p>An Option is not created independantly, but is create through"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,26, an instance of {@link Options}.<p>
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,28, @see org.apache.commons.cli.Options
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,29, @see org.apache.commons.cli.CommandLine
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,31, @author bob mcwhirter (bob @ werken.com)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,32," @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,33, @version $Revision$
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,35,ublic class Option {
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,37,** constant that specifies the number of argument values has
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,38,ot been specified */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,39,ublic static final int UNINITIALIZED = -1;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,41,** constant that specifies the number of argument values is infinite */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,42,ublic static final int UNLIMITED_VALUES = -2;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,44,** opt the name of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,45,rivate String opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,47,** longOpt is the long representation of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,48,rivate String longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,50,** hasArg specifies whether this option has an associated argument */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,51,rivate boolean hasArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,53,** argName specifies the name of the argument for this option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,54,"rivate String argName = ""arg"";"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,56,** description of the option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,57,rivate String description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,59,** required specifies whether this option is required to be present */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,60,rivate boolean required;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,62,** specifies whether the argument value of this Option is optional */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,63,rivate boolean optionalArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,66, numberOfArgs specifies the number of argument values this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,67, can have
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,69,rivate int numberOfArgs = UNINITIALIZED;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,71,** the type of this Option */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,72,rivate Object type;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,74,** the list of argument values **/
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,75,rivate ArrayList values = new ArrayList();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,77,** the character that is the value separator */
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,78,rivate char valuesep;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,81, Creates an Option using the specified parameters.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,83, @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,84, @param description describes the function of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,86, @throws IllegalArgumentException if there are any non valid
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,87, Option characters in <code>opt</code>.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,89,"ublic Option(String opt, String description)"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,90,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,92,"his(opt, null, false, description);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,96, Creates an Option using the specified parameters.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,98, @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,99, @param hasArg specifies whether the Option takes an argument or not
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,100, @param description describes the function of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,102, @throws IllegalArgumentException if there are any non valid
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,103, Option characters in <code>opt</code>.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,105,"ublic Option(String opt, boolean hasArg, String description)"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,106,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,108,"his(opt, null, hasArg, description);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,112, Creates an Option using the specified parameters.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,114, @param opt short representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,115, @param longOpt the long representation of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,116, @param hasArg specifies whether the Option takes an argument or not
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,117, @param description describes the function of the option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,119, @throws IllegalArgumentException if there are any non valid
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,120, Option characters in <code>opt</code>.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,122,"ublic Option(String opt, String longOpt, boolean hasArg,"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,123,tring description)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,124,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,126,/ ensure that the option is valid
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,127,ptionValidator.validateOption(opt);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,129,his.opt = opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,130,his.longOpt = longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,132,/ if hasArg is set then the number of arguments is 1
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,133,f (hasArg)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,135,his.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,138,his.hasArg = hasArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,139,his.description = description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,143, Returns the id of this Option.  This is only set when the
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,144, Option shortOpt is a single character.  This is used for switch
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,145, statements.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,147, @return the id of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,149,ublic int getId()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,151,eturn getKey().charAt(0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,155, Returns the 'unique' Option identifier.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,157, @return the 'unique' Option identifier
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,159,tring getKey()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,161,"/ if 'opt' is null, then it is a 'long' option"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,162,f (opt == null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,164,eturn this.longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,167,eturn this.opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,171, Retrieve the name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,173, It is this String which can be used with
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,174, {@link CommandLine#hasOption(String opt)} and
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,175, {@link CommandLine#getOptionValue(String opt)} to check
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,176, for existence and argument.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,178, @return The name of this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,180,ublic String getOpt()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,182,eturn this.opt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,186, Retrieve the type of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,188, @return The type of this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,190,ublic Object getType()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,192,eturn this.type;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,196, Sets the type of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,198, @param type the type of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,200,ublic void setType(Object type)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,202,his.type = type;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,206, Retrieve the long name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,208," @return Long name of this option, or null, if there is no long name"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,210,ublic String getLongOpt()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,212,eturn this.longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,216, Sets the long name of this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,218, @param longOpt the long name of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,220,ublic void setLongOpt(String longOpt)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,222,his.longOpt = longOpt;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,226, Sets whether this Option can have an optional argument.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,228, @param optionalArg specifies whether the Option can have
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,229, an optional argument.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,231,ublic void setOptionalArg(boolean optionalArg)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,233,his.optionalArg = optionalArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,237, @return whether this Option can have an optional argument
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,239,ublic boolean hasOptionalArg()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,241,eturn this.optionalArg;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,245, Query to see if this Option has a long name
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,247, @return boolean flag indicating existence of a long name
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,249,ublic boolean hasLongOpt()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,251,eturn (this.longOpt != null);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,255, Query to see if this Option requires an argument
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,257, @return boolean flag indicating if an argument is required
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,259,ublic boolean hasArg()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,261,eturn (this.numberOfArgs > 0) || (numberOfArgs == UNLIMITED_VALUES);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,265, Retrieve the self-documenting description of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,267, @return The string description of this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,269,ublic String getDescription()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,271,eturn this.description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,275, Sets the self-documenting description of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,277, @param description The description of this option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,279,ublic void setDescription(String description)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,281,his.description = description;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,285, Query to see if this Option requires an argument
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,287, @return boolean flag indicating if an argument is required
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,289,ublic boolean isRequired()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,291,eturn this.required;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,295, Sets whether this Option is mandatory.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,297, @param required specifies whether this Option is mandatory
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,299,ublic void setRequired(boolean required)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,301,his.required = required;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,305, Sets the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,307, @param argName the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,309,ublic void setArgName(String argName)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,311,his.argName = argName;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,315, Gets the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,317, @return the display name for the argument value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,319,ublic String getArgName()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,321,eturn this.argName;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,325, Returns whether the display name for the argument value
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,326, has been set.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,328, @return if the display name for the argument value has been
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,329, set.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,331,ublic boolean hasArgName()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,333,eturn (this.argName != null && this.argName.length() > 0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,337, Query to see if this Option can take many values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,339, @return boolean flag indicating if multiple values are allowed
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,341,ublic boolean hasArgs()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,343,eturn (this.numberOfArgs > 1)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,344,| (this.numberOfArgs == UNLIMITED_VALUES);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,348, Sets the number of argument values this Option can take.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,350, @param num the number of argument values
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,352,ublic void setArgs(int num)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,354,his.numberOfArgs = num;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,358, Sets the value separator.  For example if the argument value
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,359," was a Java property, the value separator would be '='."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,361, @param sep The value separator.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,363,ublic void setValueSeparator(char sep)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,365,his.valuesep = sep;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,369, Returns the value separator character.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,371, @return the value separator character.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,373,ublic char getValueSeparator()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,375,eturn this.valuesep;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,379, Return whether this Option has specified a value separator.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,381, @return whether this Option has specified a value separator.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,383,ublic boolean hasValueSeparator()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,385,eturn (this.valuesep > 0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,389, Returns the number of argument values this Option can take.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,391, @return num the number of argument values
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,393,ublic int getArgs()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,395,eturn this.numberOfArgs;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,399, Adds the specified value to this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,401, @param value is a/the value of this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,403,oid addValue(String value)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,405,witch (numberOfArgs)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,407,ase UNINITIALIZED:
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,408,"hrow new RuntimeException(""NO_ARGS_ALLOWED"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,410,efault:
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,411,rocessValue(value);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,416, Processes the value.  If this Option has a value separator
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,417, the value will have to be parsed into individual tokens.  When
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,418, n-1 tokens have been processed and there are more value separators
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,419," in the value, parsing is ceased and the remaining characters are"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,420, added as a single token.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,422, @param value The String to be processed.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,424, @since 1.0.1
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,426,rivate void processValue(String value)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,428,/ this Option has a separator character
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,429,f (hasValueSeparator())
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,431,/ get the separator character
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,432,har sep = getValueSeparator();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,434,/ store the index for the value separator
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,435,nt index = value.indexOf(sep);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,437,/ while there are more value separators
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,438,hile (index != -1)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,440,/ next value to be added
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,441,f (values.size() == (numberOfArgs - 1))
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,443,reak;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,447,/ store
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,448,"dd(value.substring(0, index));"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,451,/ parse
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,452,alue = value.substring(index + 1);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,455,/ get new index
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,456,ndex = value.indexOf(sep);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,461,/ store the actual value or the last value that has been parsed
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,462,dd(value);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,466, Add the value to this Option.  If the number of arguments
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,467, is greater than zero and there is enough space in the list then
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,468," add the value.  Otherwise, throw a runtime exception."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,470, @param value The value to be added to this Option
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,472, @since 1.0.1
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,474,rivate void add(String value)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,476,f ((numberOfArgs > 0) && (values.size() > (numberOfArgs - 1)))
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,478,"hrow new RuntimeException(""Cannot add value, list full."");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,482,/ store value
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,483,his.values.add(value);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,487, Returns the specified value of this Option or
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,488, <code>null</code> if there is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,490, @return the value/first value of this Option or
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,491, <code>null</code> if there is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,493,ublic String getValue()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,495,eturn hasNoValues() ? null : (String) this.values.get(0);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,499, Returns the specified value of this Option or
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,500, <code>null</code> if there is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,502, @param index The index of the value to be returned.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,504, @return the specified value of this Option or
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,505, <code>null</code> if there is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,507, @throws IndexOutOfBoundsException if index is less than 1
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,508, or greater than the number of the values for this Option.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,510,ublic String getValue(int index)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,511,hrows IndexOutOfBoundsException
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,513,eturn hasNoValues() ? null : (String) this.values.get(index);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,517, Returns the value/first value of this Option or the
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,518, <code>defaultValue</code> if there is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,520, @param defaultValue The value to be returned if ther
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,521, is no value.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,523, @return the value/first value of this Option or the
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,524, <code>defaultValue</code> if there are no values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,526,ublic String getValue(String defaultValue)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,528,tring value = getValue();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,530,eturn (value != null) ? value : defaultValue;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,534, Return the values of this Option as a String array
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,535, or null if there are no values
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,537, @return the values of this Option as a String array
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,538, or null if there are no values
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,540,ublic String[] getValues()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,542,eturn hasNoValues()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,543, null : (String[]) this.values.toArray(new String[] {  });
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,547, @return the values of this Option as a List
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,548, or null if there are no values
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,550,ublic java.util.List getValuesList()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,552,eturn this.values;
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,556," Dump state, suitable for debugging."
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,558, @return Stringified form of this object
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,560,ublic String toString()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,562,"tringBuffer buf = new StringBuffer().append(""[ option: "");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,564,uf.append(this.opt);
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,566,f (this.longOpt != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,568,"uf.append("" "").append(this.longOpt);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,571,"uf.append("" "");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,573,f (hasArg)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,575,"uf.append(""+ARG"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,578,"uf.append("" :: "").append(this.description);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,580,f (this.type != null)
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,582,"uf.append("" :: "").append(this.type);"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,585,"uf.append("" ]"");"
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,587,eturn buf.toString();
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,591, Returns whether this Option has any values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,593, @return whether this Option has any values.
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,595,rivate boolean hasNoValues()
False,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,597,eturn this.values.size() == 0;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,19, <p>OptionBuilder allows the user to create Options using descriptive
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,20, methods.</p>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,21, <p>Details on the Builder pattern can be found at
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,22," <a href=""http://c2.com/cgi-bin/wiki?BuilderPattern"">"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,23, http://c2.com/cgi-bin/wiki?BuilderPattern</a>.</p>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,25, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,26, @since 1.0
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,28,ublic class OptionBuilder {
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,30,** long option */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,31,rivate static String longopt;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,33,** option description */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,34,rivate static String description;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,36,** argument name */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,37,rivate static String argName;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,39,** is required? */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,40,rivate static boolean required;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,42,** the number of arguments */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,43,rivate static int numberOfArgs = Option.UNINITIALIZED;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,45,** option type */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,46,rivate static Object type;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,48,** option can have an optional argument value */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,49,rivate static boolean optionalArg;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,51,** value separator for argument value */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,52,rivate static char valuesep;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,54,** option builder instance */
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,55,rivate static OptionBuilder instance = new OptionBuilder();
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,58, private constructor to prevent instances being created
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,60,rivate OptionBuilder()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,62,/ hide the constructor
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,66, Resets the member variables to their default values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,68,rivate static void reset()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,70,escription = null;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,71,"rgName = ""arg"";"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,72,ongopt = null;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,73,ype = null;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,74,equired = false;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,75,umberOfArgs = Option.UNINITIALIZED;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,78,/ PMM 9/6/02 - these were missing
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,79,ptionalArg = false;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,80,aluesep = (char) 0;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,84, The next Option created will have the following long option value.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,86, @param newLongopt the long option value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,87, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,89,ublic static OptionBuilder withLongOpt(String newLongopt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,91,ptionBuilder.longopt = newLongopt;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,93,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,97, The next Option created will require an argument value.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,99, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,101,ublic static OptionBuilder hasArg()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,103,ptionBuilder.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,105,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,109, The next Option created will require an argument value if
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,110, <code>hasArg</code> is true.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,112, @param hasArg if true then the Option has an argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,113, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,115,ublic static OptionBuilder hasArg(boolean hasArg)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,117,ptionBuilder.numberOfArgs = (hasArg == true) ? 1 : Option.UNINITIALIZED;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,119,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,123, The next Option created will have the specified argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,124, name.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,126, @param name the name for the argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,127, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,129,ublic static OptionBuilder withArgName(String name)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,131,ptionBuilder.argName = name;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,133,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,137, The next Option created will be required.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,139, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,141,ublic static OptionBuilder isRequired()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,143,ptionBuilder.required = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,145,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,149, The next Option created uses <code>sep</code> as a means to
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,150, separate argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,152, <b>Example:</b>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,153, <pre>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,154, Option opt = OptionBuilder.withValueSeparator(':')
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,155,                           .create('D');
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,157, CommandLine line = parser.parse(args);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,158, String propertyName = opt.getValue(0);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,159, String propertyValue = opt.getValue(1);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,160, </pre>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,162, @param sep The value separator to be used for the argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,164, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,166,ublic static OptionBuilder withValueSeparator(char sep)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,168,ptionBuilder.valuesep = sep;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,170,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,174, The next Option created uses '<code>=</code>' as a means to
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,175, separate argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,177, <b>Example:</b>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,178, <pre>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,179, Option opt = OptionBuilder.withValueSeparator()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,180,                           .create('D');
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,182, CommandLine line = parser.parse(args);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,183, String propertyName = opt.getValue(0);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,184, String propertyValue = opt.getValue(1);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,185, </pre>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,187, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,189,ublic static OptionBuilder withValueSeparator()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,191,ptionBuilder.valuesep = '=';
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,193,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,197, The next Option created will be required if <code>required</code>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,198, is true.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,200, @param newRequired if true then the Option is required
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,201, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,203,ublic static OptionBuilder isRequired(boolean newRequired)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,205,ptionBuilder.required = newRequired;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,207,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,211, The next Option created can have unlimited argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,213, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,215,ublic static OptionBuilder hasArgs()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,217,ptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,219,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,223, The next Option created can have <code>num</code>
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,224, argument values.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,226, @param num the number of args that the option can have
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,227, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,229,ublic static OptionBuilder hasArgs(int num)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,231,ptionBuilder.numberOfArgs = num;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,233,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,237, The next Option can have an optional argument.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,239, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,241,ublic static OptionBuilder hasOptionalArg()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,243,ptionBuilder.numberOfArgs = 1;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,244,ptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,246,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,250, The next Option can have an unlimited number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,251, optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,253, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,255,ublic static OptionBuilder hasOptionalArgs()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,257,ptionBuilder.numberOfArgs = Option.UNLIMITED_VALUES;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,258,ptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,260,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,264, The next Option can have the specified number of
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,265, optional arguments.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,267, @param numArgs - the maximum number of optional arguments
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,268, the next Option created can have.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,269, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,271,ublic static OptionBuilder hasOptionalArgs(int numArgs)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,273,ptionBuilder.numberOfArgs = numArgs;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,274,ptionBuilder.optionalArg = true;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,276,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,280, The next Option created will have a value that will be an instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,281, of <code>type</code>.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,283, @param newType the type of the Options argument value
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,284, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,286,ublic static OptionBuilder withType(Object newType)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,288,ptionBuilder.type = newType;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,290,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,294, The next Option created will have the specified description
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,296, @param newDescription a description of the Option's purpose
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,297, @return the OptionBuilder instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,299,ublic static OptionBuilder withDescription(String newDescription)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,301,ptionBuilder.description = newDescription;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,303,eturn instance;
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,307, Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,308, the specified Option <code>char</code>.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,310, @param opt the character representation of the Option
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,311, @return the Option instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,312, @throws IllegalArgumentException if <code>opt</code> is not
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,313, a valid character.  See Option.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,315,ublic static Option create(char opt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,316,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,318,eturn create(String.valueOf(opt));
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,322, Create an Option using the current settings
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,324, @return the Option instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,325, @throws IllegalArgumentException if <code>longOpt</code> has
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,326, not been set.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,328,ublic static Option create()
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,329,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,331,f (longopt == null)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,333,"hrow new IllegalArgumentException(""must specify longopt"");"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,336,eturn create(null);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,340, Create an Option using the current settings and with
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,341, the specified Option <code>char</code>.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,343, @param opt the <code>java.lang.String</code> representation
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,344, of the Option
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,345, @return the Option instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,346, @throws IllegalArgumentException if <code>opt</code> is not
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,347, a valid character.  See Option.
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,349,ublic static Option create(String opt)
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,350,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,352,/ create the option
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,353,"ption option = new Option(opt, description);"
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,356,/ set the option properties
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,357,ption.setLongOpt(longopt);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,358,ption.setRequired(required);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,359,ption.setOptionalArg(optionalArg);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,360,ption.setArgs(numberOfArgs);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,361,ption.setType(type);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,362,ption.setValueSeparator(valuesep);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,363,ption.setArgName(argName);
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,366,/ reset the OptionBuilder properties
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,367,ptionBuilder.reset();
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,369,/ return the Option instance
False,src/java/org/apache/commons/cli/OptionBuilder.java,src/java/org/apache/commons/cli/OptionBuilder.java,370,eturn option;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,18,mport java.util.Collection;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,19,mport java.util.HashMap;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,20,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,23, A group of mutually exclusive options.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,24, @author John Keyes ( john at integralsource.com )
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,25, @version $Revision$
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,27,ublic class OptionGroup {
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,29,** hold the options */
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,30,rivate HashMap optionMap = new HashMap();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,32,** the name of the selected option */
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,33,rivate String selected;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,35,** specified whether this group is required */
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,36,rivate boolean required;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,39, add <code>opt</code> to this group
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,41, @param opt the option to add to this group
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,42, @return this option group with opt added
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,44,ublic OptionGroup addOption(Option opt)
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,46,/ key   - option name
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,47,/ value - the option
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,48,"ptionMap.put(opt.getKey(), opt);"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,50,eturn this;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,54, @return the names of the options in this group as a
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,55, <code>Collection</code>
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,57,ublic Collection getNames()
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,59,/ the key set is the collection of names
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,60,eturn optionMap.keySet();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,64, @return the options in this group as a <code>Collection</code>
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,66,ublic Collection getOptions()
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,68,/ the values are the collection of options
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,69,eturn optionMap.values();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,73, set the selected option of this group to <code>name</code>.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,74, @param opt the option that is selected
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,75, @throws AlreadySelectedException if an option from this group has
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,76, already been selected.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,78,ublic void setSelected(Option opt)
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,79,hrows AlreadySelectedException
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,81,/ if no option has already been selected or the
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,82,/ same option is being reselected then set the
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,83,/ selected member variable
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,84,f ((this.selected == null) || this.selected.equals(opt.getOpt()))
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,86,his.selected = opt.getOpt();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,88,lse
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,90,"hrow new AlreadySelectedException(""an option from this group has """
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,91," ""already been selected: '"""
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,92," selected + ""'"");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,97, @return the selected option name
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,99,ublic String getSelected()
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,101,eturn selected;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,105, @param required specifies if this group is required
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,107,ublic void setRequired(boolean required)
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,109,his.required = required;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,113, Returns whether this option group is required.
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,115, @return whether this option group is required
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,117,ublic boolean isRequired()
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,119,eturn this.required;
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,123, <p>Returns the stringified version of this OptionGroup.</p>
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,124, @return the stringified representation of this group
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,126,ublic String toString()
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,128,tringBuffer buff = new StringBuffer();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,130,terator iter = getOptions().iterator();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,132,"uff.append(""["");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,134,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,136,ption option = (Option) iter.next();
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,138,f (option.getOpt() != null)
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,140,"uff.append(""-"");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,141,uff.append(option.getOpt());
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,143,lse
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,145,"uff.append(""--"");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,146,uff.append(option.getLongOpt());
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,149,"uff.append("" "");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,150,uff.append(option.getDescription());
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,152,f (iter.hasNext())
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,154,"uff.append("", "");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,158,"uff.append(""]"");"
False,src/java/org/apache/commons/cli/OptionGroup.java,src/java/org/apache/commons/cli/OptionGroup.java,160,eturn buff.toString();
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,19, Validates an Option string.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,21, @author John Keyes ( john at integralsource.com )
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,23,ublic class OptionValidator {
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,26, <p>Validates whether <code>opt</code> is a permissable Option
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,27, shortOpt.  The rules that specify if the <code>opt</code>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,28, is valid are:</p>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,29, <ul>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,30,  <li><code>opt</code> is not NULL</li>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,31,  <li>a single character <code>opt</code> that is either
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,32,"  ' '(special case), '?', '@' or a letter</li>"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,33,  <li>a multi character <code>opt</code> that only contains
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,34,  letters.</li>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,35, </ul>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,37, @param opt The option string to validate
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,38, @throws IllegalArgumentException if the Option is not valid.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,40,tatic void validateOption(String opt)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,41,hrows IllegalArgumentException
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,43,/ check that opt is not NULL
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,44,f (opt == null)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,46,eturn;
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,49,/ handle the single character opt
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,50,lse if (opt.length() == 1)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,52,har ch = opt.charAt(0);
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,54,f (!isValidOpt(ch))
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,56,"hrow new IllegalArgumentException(""illegal option value '"" + ch"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,61,/ handle the multi character opt
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,62,lse
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,64,har[] chars = opt.toCharArray();
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,66,or (int i = 0; i < chars.length; i++)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,68,f (!isValidChar(chars[i]))
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,70,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,71,"opt contains illegal character value '"" + chars[i]"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,79, <p>Returns whether the specified character is a valid Option.</p>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,81, @param c the option to validate
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,82," @return true if <code>c</code> is a letter, ' ', '?' or '@',"
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,83, otherwise false.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,85,rivate static boolean isValidOpt(char c)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,87,eturn (isValidChar(c) || (c == ' ') || (c == '?') || c == '@');
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,91, <p>Returns whether the specified character is a valid character.</p>
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,93, @param c the character to validate
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,94, @return true if <code>c</code> is a letter.
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,96,rivate static boolean isValidChar(char c)
False,src/java/org/apache/commons/cli/OptionValidator.java,src/java/org/apache/commons/cli/OptionValidator.java,98,eturn Character.isJavaIdentifierPart(c);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,18,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,19,mport java.util.Collection;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,20,mport java.util.Collections;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,21,mport java.util.HashMap;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,22,mport java.util.HashSet;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,23,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,24,mport java.util.List;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,25,mport java.util.Map;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,27,** <p>Main entry-point into the library.</p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,29," <p>Options represents a collection of {@link Option} objects, which"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,30, describe the possible options for a command-line.<p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,32," <p>It may flexibly parse long and short options, with or without"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,33," values.  Additionally, it may parse only a portion of a commandline,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,34, allowing for flexible multi-stage parsing.<p>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,36, @see org.apache.commons.cli.CommandLine
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,38, @author bob mcwhirter (bob @ werken.com)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,39," @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,40, @version $Revision$
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,42,ublic class Options {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,44,** a map of the options with the character key */
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,45,rivate Map shortOpts = new HashMap();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,47,** a map of the options with the long key */
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,48,rivate Map longOpts = new HashMap();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,50,** a map of the required options */
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,51,rivate List requiredOpts = new ArrayList();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,53,** a map of the option groups */
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,54,rivate Map optionGroups = new HashMap();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,56,** Construct a new Options descriptor
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,58,ublic Options()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,60,/ nothing to do
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,64, Add the specified option group.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,66, @param group the OptionGroup that is to be added
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,67, @return the resulting Options instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,69,ublic Options addOptionGroup(OptionGroup group)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,71,terator options = group.getOptions().iterator();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,73,f (group.isRequired())
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,75,equiredOpts.add(group);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,78,hile (options.hasNext())
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,80,ption option = (Option) options.next();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,83,/ an Option cannot be required if it is in an
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,84,"/ OptionGroup, either the group is required or"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,85,/ nothing is required
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,86,ption.setRequired(false);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,87,ddOption(option);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,89,"ptionGroups.put(option.getKey(), group);"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,92,eturn this;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,96, Lists the OptionGroups that are members of this Options instance.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,97, @return a Collection of OptionGroup instances.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,99,ollection getOptionGroups(){
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,100,eturn new HashSet(optionGroups.values());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,104, Add an option that only contains a short-name.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,105, It may be specified as requiring an argument.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,107, @param opt Short single-character name of the option.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,108, @param hasArg flag signally if an argument is required after this option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,109, @param description Self-documenting description
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,110, @return the resulting Options instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,112,"ublic Options addOption(String opt, boolean hasArg, String description)"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,114,"ddOption(opt, null, hasArg, description);"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,116,eturn this;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,120, Add an option that contains a short-name and a long-name.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,121, It may be specified as requiring an argument.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,123, @param opt Short single-character name of the option.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,124, @param longOpt Long multi-character name of the option.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,125, @param hasArg flag signally if an argument is required after this option
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,126, @param description Self-documenting description
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,127, @return the resulting Options instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,129,"ublic Options addOption(String opt, String longOpt, boolean hasArg,"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,130,tring description)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,132,"ddOption(new Option(opt, longOpt, hasArg, description));"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,134,eturn this;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,138, Adds an option instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,140, @param opt the option that is to be added
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,141, @return the resulting Options instance
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,143,ublic Options addOption(Option opt)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,145,tring key = opt.getKey();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,147,/ add it to the long option list
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,148,f (opt.hasLongOpt())
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,150,"ongOpts.put(opt.getLongOpt(), opt);"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,153,/ if the option is required add it to the required list
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,154,f (opt.isRequired() )
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,156,f( requiredOpts.contains(key) ) {
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,157,equiredOpts.remove( requiredOpts.indexOf(key) );
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,159,equiredOpts.add(key);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,162,"hortOpts.put(key, opt);"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,164,eturn this;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,168, Retrieve a read-only list of options in this set
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,170, @return read-only Collection of {@link Option} objects in this descriptor
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,172,ublic Collection getOptions()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,174,eturn Collections.unmodifiableCollection(helpOptions());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,178, Returns the Options for use by the HelpFormatter.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,180, @return the List of Options
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,182,ist helpOptions()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,184,ist opts = new ArrayList(shortOpts.values());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,186,/ now look through the long opts to see if there are any Long-opt
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,187,/ only options
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,188,terator iter = longOpts.values().iterator();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,190,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,192,bject item = iter.next();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,194,f (!opts.contains(item))
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,196,pts.add(item);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,200,eturn new ArrayList(opts);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,204, Returns the required options as a
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,205, <code>java.util.Collection</code>.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,207, @return Collection of required options
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,209,ublic List getRequiredOptions()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,211,eturn requiredOpts;
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,215, Retrieve the named {@link Option}
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,217, @param opt short or long name of the {@link Option}
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,218, @return the option represented by opt
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,220,ublic Option getOption(String opt)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,222,pt = Util.stripLeadingHyphens(opt);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,224,f (shortOpts.containsKey(opt))
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,226,eturn (Option) shortOpts.get(opt);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,229,eturn (Option) longOpts.get(opt);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,233, Returns whether the named {@link Option} is a member
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,234, of this {@link Options}.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,236, @param opt short or long name of the {@link Option}
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,237, @return true if the named {@link Option} is a member
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,238, of this {@link Options}
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,240,ublic boolean hasOption(String opt)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,242,pt = Util.stripLeadingHyphens(opt);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,244,eturn shortOpts.containsKey(opt) || longOpts.containsKey(opt);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,248, Returns the OptionGroup the <code>opt</code>
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,249, belongs to.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,250, @param opt the option whose OptionGroup is being queried.
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,252, @return the OptionGroup if <code>opt</code> is part
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,253," of an OptionGroup, otherwise return null"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,255,ublic OptionGroup getOptionGroup(Option opt)
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,257,eturn (OptionGroup) optionGroups.get(opt.getKey());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,261," Dump state, suitable for debugging."
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,263, @return Stringified form of this object
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,265,ublic String toString()
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,267,tringBuffer buf = new StringBuffer();
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,269,"uf.append(""[ Options: [ short "");"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,270,uf.append(shortOpts.toString());
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,271,"uf.append("" ] [ long "");"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,272,uf.append(longOpts);
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,273,"uf.append("" ]"");"
False,src/java/org/apache/commons/cli/Options.java,src/java/org/apache/commons/cli/Options.java,275,eturn buf.toString();
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,19, <p>Base for Exceptions thrown during parsing of a command-line.</p>
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,21, @author bob mcwhirter (bob @ werken.com)
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,22, @version $Revision$
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,24,ublic class ParseException extends Exception {
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,27, <p>Construct a new <code>ParseException</code>
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,28, with the specified detail message.</p>
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,30, @param message the detail message
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,32,ublic ParseException(String message)
False,src/java/org/apache/commons/cli/ParseException.java,src/java/org/apache/commons/cli/ParseException.java,34,uper(message);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,18,mport java.util.Arrays;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,19,mport java.util.Enumeration;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,20,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,21,mport java.util.List;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,22,mport java.util.ListIterator;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,23,mport java.util.Properties;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,26, <p><code>Parser</code> creates {@link CommandLine}s.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,28, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,29, @see Parser
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,30, @version $Revision$
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,32,ublic abstract class Parser implements CommandLineParser {
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,34,** commandline instance */
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,35,rivate CommandLine cmd;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,37,** current Options */
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,38,rivate Options options;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,40,** list of required options strings */
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,41,rivate List requiredOptions;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,44, <p>Subclasses must implement this method to reduce
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,45, the <code>arguments</code> that have been passed to the parse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,46, method.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,48, @param opts The Options to parse the arguments by.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,49, @param arguments The arguments that have to be flattened.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,50, @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,51, flattening when a non option has been encountered
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,52, @return a String array of the flattened arguments
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,54,"rotected abstract String[] flatten(Options opts, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,55,oolean stopAtNonOption);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,58, <p>Parses the specified <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,59, based on the specifed {@link Options}.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,61, @param options the <code>Options</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,62, @param arguments the <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,63, @return the <code>CommandLine</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,64, @throws ParseException if an error occurs when parsing the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,65, arguments.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,67,"ublic CommandLine parse(Options options, String[] arguments)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,68,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,70,"eturn parse(options, arguments, null, false);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,74, Parse the arguments according to the specified options and
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,75, properties.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,77, @param options the specified Options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,78, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,79, @param properties command line option name-value pairs
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,80, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,82, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,83, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,85,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,86,roperties properties)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,87,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,89,"eturn parse(options, arguments, properties, false);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,93, <p>Parses the specified <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,94, based on the specifed {@link Options}.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,96, @param options the <code>Options</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,97, @param arguments the <code>arguments</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,98, @param stopAtNonOption specifies whether to stop
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,99, interpreting the arguments when a non option has
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,100, been encountered and to add them to the CommandLines
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,101, args list.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,103, @return the <code>CommandLine</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,104, @throws ParseException if an error occurs when parsing the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,105, arguments.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,107,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,108,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,109,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,111,"eturn parse(options, arguments, null, stopAtNonOption);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,115, Parse the arguments according to the specified options and
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,116, properties.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,118, @param options the specified Options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,119, @param arguments the command line arguments
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,120, @param properties command line option name-value pairs
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,121, @param stopAtNonOption stop parsing the arguments when the first
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,122, non option is encountered.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,124, @return the list of atomic option and value tokens
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,126, @throws ParseException if there are any problems encountered
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,127, while parsing the command line tokens.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,129,"ublic CommandLine parse(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,130,"roperties properties, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,131,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,133,/ initialise members
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,134,his.options = options;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,135,equiredOptions = options.getRequiredOptions();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,136,md = new CommandLine();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,138,oolean eatTheRest = false;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,140,f (arguments == null)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,142,rguments = new String[0];
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,145,"ist tokenList = Arrays.asList(flatten(this.options,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,146,"rguments,"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,147,topAtNonOption));
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,149,istIterator iterator = tokenList.listIterator();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,151,/ process each flattened token
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,152,hile (iterator.hasNext())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,154,tring t = (String) iterator.next();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,156,/ the value is the double-dash
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,157,"f (""--"".equals(t))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,159,atTheRest = true;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,162,/ the value is a single dash
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,163,"lse if (""-"".equals(t))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,165,f (stopAtNonOption)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,167,atTheRest = true;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,169,lse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,171,md.addArg(t);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,175,/ the value is an option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,176,"lse if (t.startsWith(""-""))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,178,f (stopAtNonOption && !options.hasOption(t))
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,180,atTheRest = true;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,181,md.addArg(t);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,183,lse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,185,"rocessOption(t, iterator);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,189,/ the value is an argument
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,190,lse
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,192,md.addArg(t);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,194,f (stopAtNonOption)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,196,atTheRest = true;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,200,/ eat the remaining tokens
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,201,f (eatTheRest)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,203,hile (iterator.hasNext())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,205,tring str = (String) iterator.next();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,207,/ ensure only one double-dash is added
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,208,"f (!""--"".equals(str))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,210,md.addArg(str);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,216,rocessProperties(properties);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,217,heckRequiredOptions();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,219,eturn cmd;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,223, <p>Sets the values of Options using the values in
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,224, <code>properties</code>.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,226, @param properties The value properties to be processed.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,228,rivate void processProperties(Properties properties)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,230,f (properties == null)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,232,eturn;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,235,or (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,237,tring option = e.nextElement().toString();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,239,f (!cmd.hasOption(option))
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,241,ption opt = options.getOption(option);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,243,/ get the value from the properties instance
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,244,tring value = properties.getProperty(option);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,246,f (opt.hasArg())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,248,f ((opt.getValues() == null)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,249,| (opt.getValues().length == 0))
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,251,ry
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,253,pt.addValue(value);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,255,atch (RuntimeException exp)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,257,/ if we cannot add the value don't worry about it
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,261,"lse if (!(""yes"".equalsIgnoreCase(value)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,262,"| ""true"".equalsIgnoreCase(value)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,263,"| ""1"".equalsIgnoreCase(value)))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,265,"/ if the value is not yes, true or 1 then don't add the"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,266,/ option to the CommandLine
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,267,reak;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,270,md.addOption(opt);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,276, <p>Throws a {@link MissingOptionException} if all of the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,277, required options are no present.</p>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,279, @throws MissingOptionException if any of the required Options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,280, are not present.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,282,rivate void checkRequiredOptions()
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,283,hrows MissingOptionException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,285,/ if there are required options that have not been
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,286,/ processsed
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,287,f (requiredOptions.size() > 0)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,289,terator iter = requiredOptions.iterator();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,290,tringBuffer buff = new StringBuffer();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,292,/ loop through the required options
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,293,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,295,uff.append(iter.next());
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,298,hrow new MissingOptionException(buff.toString());
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,303, <p>Process the argument values for the specified Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,304, <code>opt</code> using the values retrieved from the
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,305, specified iterator <code>iter</code>.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,307, @param opt The current Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,308, @param iter The iterator over the flattened command line
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,309, Options.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,311, @throws ParseException if an argument value is required
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,312, and it is has not been found.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,314,"ublic void processArgs(Option opt, ListIterator iter)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,315,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,317,/ loop until an option is found
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,318,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,320,tring str = (String) iter.next();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,322,"/ found an Option, not an argument"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,323,"f (options.hasOption(str) && str.startsWith(""-""))"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,325,ter.previous();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,326,reak;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,329,/ found a value
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,330,ry
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,332,pt.addValue( Util.stripLeadingAndTrailingQuotes(str) );
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,334,atch (RuntimeException exp)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,336,ter.previous();
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,337,reak;
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,341,f ((opt.getValues() == null) && !opt.hasOptionalArg())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,343,"hrow new MissingArgumentException(""Missing argument for option:"""
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,344, opt.getKey());
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,349, <p>Process the Option specified by <code>arg</code>
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,350, using the values retrieved from the specfied iterator
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,351, <code>iter</code>.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,353, @param arg The String value representing an Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,354, @param iter The iterator over the flattened command
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,355, line arguments.
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,357, @throws ParseException if <code>arg</code> does not
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,358, represent an Option
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,360,"rivate void processOption(String arg, ListIterator iter)"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,361,hrows ParseException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,363,oolean hasOption = options.hasOption(arg);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,365,/ if there is no option throw an UnrecognisedOptionException
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,366,f (!hasOption)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,368,"hrow new UnrecognizedOptionException(""Unrecognized option: """
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,369, arg);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,372,/ get the option represented by arg
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,373,inal Option opt = options.getOption(arg);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,375,/ if the option is a required option remove the option from
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,376,/ the requiredOptions list
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,377,f (opt.isRequired())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,379,equiredOptions.remove(opt.getKey());
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,382,/ if the option is in an OptionGroup make that option the selected
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,383,/ option of the group
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,384,f (options.getOptionGroup(opt) != null)
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,386,ptionGroup group = options.getOptionGroup(opt);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,388,f (group.isRequired())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,390,equiredOptions.remove(group);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,393,roup.setSelected(opt);
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,396,/ if the option takes an argument value
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,397,f (opt.hasArg())
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,399,"rocessArgs(opt, iter);"
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,403,/ set the option on the command line
False,src/java/org/apache/commons/cli/Parser.java,src/java/org/apache/commons/cli/Parser.java,404,md.addOption(opt);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,19, <p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,20, Allows Options to be created from a single String.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,21, The pattern contains various single character flags and via
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,22," an optional punctuation character, their expected type."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,23, </p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,25," <table border=""1"">"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,26, <tr><td>a</td><td>-a flag</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,27, <tr><td>b@</td><td>-b [classname]</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,28, <tr><td>c&gt;</td><td>-c [filename]</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,29, <tr><td>d+</td><td>-d [classname] (creates object via empty contructor)</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,30, <tr><td>e%</td><td>-e [number] (creates Number instance)</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,31, <tr><td>f/</td><td>-f [url]</td></tr>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,32, </table>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,34, <p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,35," For example, the following allows command line flags of '-v -p string-value -f /dir/file'."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,36, </p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,37," <code>Options options = PatternOptionBuilder.parsePattern(""vp:f/"");</code>"
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,39, <p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,40, TODO These need to break out to OptionType and also
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,41, to be pluggable.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,42, </p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,44, @author Henri Yandell (bayard @ generationjava.com)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,45, @version $Revision$
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,47,ublic class PatternOptionBuilder {
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,49,** String class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,50,ublic static final Class STRING_VALUE = java.lang.String.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,52,** Object class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,53,ublic static final Class OBJECT_VALUE = java.lang.Object.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,55,** Number class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,56,ublic static final Class NUMBER_VALUE = java.lang.Number.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,58,** Date class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,59,ublic static final Class DATE_VALUE = java.util.Date.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,61,** Class class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,62,ublic static final Class CLASS_VALUE = java.lang.Class.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,64,// can we do this one??
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,65,"/ is meant to check that the file exists, else it errors."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,66,/ ie) it's for reading not writing.
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,68,** FileInputStream class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,69,ublic static final Class EXISTING_FILE_VALUE =
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,70,ava.io.FileInputStream.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,72,** File class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,73,ublic static final Class FILE_VALUE = java.io.File.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,75,** File array class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,76,ublic static final Class FILES_VALUE = java.io.File[].class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,78,** URL class */
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,79,ublic static final Class URL_VALUE = java.net.URL.class;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,82, <p>Retrieve the class that <code>ch</code> represents.</p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,84, @param ch the specified character
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,85, @return The class that <code>ch</code> represents
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,87,ublic static Object getValueClass(char ch)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,89,f (ch == '@')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,91,eturn PatternOptionBuilder.OBJECT_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,93,lse if (ch == ':')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,95,eturn PatternOptionBuilder.STRING_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,97,lse if (ch == '%')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,99,eturn PatternOptionBuilder.NUMBER_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,101,lse if (ch == '+')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,103,eturn PatternOptionBuilder.CLASS_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,105,lse if (ch == '#')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,107,eturn PatternOptionBuilder.DATE_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,109,lse if (ch == '<')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,111,eturn PatternOptionBuilder.EXISTING_FILE_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,113,lse if (ch == '>')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,115,eturn PatternOptionBuilder.FILE_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,117,lse if (ch == '*')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,119,eturn PatternOptionBuilder.FILES_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,121,lse if (ch == '/')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,123,eturn PatternOptionBuilder.URL_VALUE;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,126,eturn null;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,130," <p>Returns whether <code>ch</code> is a value code, i.e."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,131, whether it represents a class in a pattern.</p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,133, @param ch the specified character
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,134," @return true if <code>ch</code> is a value code, otherwise false."
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,136,ublic static boolean isValueCode(char ch)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,138,f ((ch != '@') && (ch != ':') && (ch != '%') && (ch != '+')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,139,& (ch != '#') && (ch != '<') && (ch != '>') && (ch != '*')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,140,& (ch != '/') && (ch != '!'))
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,142,eturn false;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,145,eturn true;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,149, <p>Returns the {@link Options} instance represented by
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,150, <code>pattern</code>.</p>
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,152, @param pattern the pattern string
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,153, @return The {@link Options} instance
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,155,ublic static Options parsePattern(String pattern)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,157,nt sz = pattern.length();
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,159,har opt = ' ';
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,160,har ch = ' ';
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,161,oolean required = false;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,162,bject type = null;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,164,ptions options = new Options();
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,166,or (int i = 0; i < sz; i++)
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,168,h = pattern.charAt(i);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,170,/ a value code comes after an option and specifies
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,171,/ details about it
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,172,f (!isValueCode(ch))
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,174,f (opt != ' ')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,176,ptionBuilder.hasArg(type != null);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,177,ptionBuilder.isRequired(required);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,178,ptionBuilder.withType(type);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,180,/ we have a previous one to deal with
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,181,ptions.addOption(OptionBuilder.create(opt));
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,182,equired = false;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,183,ype = null;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,184,pt = ' ';
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,187,pt = ch;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,189,lse if (ch == '!')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,191,equired = true;
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,193,lse
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,195,ype = getValueClass(ch);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,199,f (opt != ' ')
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,201,ptionBuilder.hasArg(type != null);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,202,ptionBuilder.isRequired(required);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,203,ptionBuilder.withType(type);
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,205,/ we have a final one to deal with
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,206,ptions.addOption(OptionBuilder.create(opt));
False,src/java/org/apache/commons/cli/PatternOptionBuilder.java,src/java/org/apache/commons/cli/PatternOptionBuilder.java,209,eturn options;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,18,mport java.util.ArrayList;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,19,mport java.util.Arrays;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,20,mport java.util.Iterator;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,23, The class PosixParser provides an implementation of the
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,24," {@link Parser#flatten(Options,String[],boolean) flatten} method."
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,26, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,27, @see Parser
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,28, @version $Revision$
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,30,ublic class PosixParser extends Parser {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,32,** holder for flattened tokens */
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,33,rivate ArrayList tokens = new ArrayList();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,35,** specifies if bursting should continue */
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,36,rivate boolean eatTheRest;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,38,** holder for the current option */
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,39,rivate Option currentOption;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,41,** the command line Options */
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,42,rivate Options options;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,45, <p>Resets the members to their original state i.e. remove
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,46," all of <code>tokens</code> entries, set <code>eatTheRest</code>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,47, to false and set <code>currentOption</code> to null.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,49,rivate void init()
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,51,atTheRest = false;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,52,okens.clear();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,53,urrentOption = null;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,57, <p>An implementation of {@link Parser}'s abstract
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,58," {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,60, <p>The following are the rules used by this flatten method.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,61, <ol>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,62,  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,63,"  burst anymore of <code>arguments</code> entries, just add each"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,64,"  successive entry without further processing.  Otherwise, ignore"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,65,  <code>stopAtNonOption</code>.</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,66,"  <li>if the current <code>arguments</code> entry is ""<b>--</b>"""
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,67,  just add the entry to the list of processed tokens</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,68,"  <li>if the current <code>arguments</code> entry is ""<b>-</b>"""
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,69,  just add the entry to the list of processed tokens</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,70,  <li>if the current <code>arguments</code> entry is two characters
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,71,"  in length and the first character is ""<b>-</b>"" then check if this"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,72,"  is a valid {@link Option} id.  If it is a valid id, then add the"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,73,  entry to the list of processed tokens and set the current {@link Option}
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,74,  member.  If it is not a valid id and <code>stopAtNonOption</code>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,75,"  is true, then the remaining entries are copied to the list of"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,76,"  processed tokens.  Otherwise, the current entry is ignored.</li>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,77,  <li>if the current <code>arguments</code> entry is more than two
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,78,"  characters in length and the first character is ""<b>-</b>"" then"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,79,  we need to burst the entry to determine its constituents.  For more
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,80,  information on the bursting algorithm see
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,81,"  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,82,  <li>if the current <code>arguments</code> entry is not handled
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,83,"  by any of the previous rules, then the entry is added to the list"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,84,  of processed tokens.</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,85, </ol>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,86, </p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,88, @param options The command line {@link Options}
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,89, @param arguments The command line arguments to be parsed
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,90, @param stopAtNonOption Specifies whether to stop flattening
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,91, when an non option is found.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,92, @return The flattened <code>arguments</code> String array.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,94,"rotected String[] flatten(Options options, String[] arguments,"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,95,oolean stopAtNonOption)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,97,nit();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,98,his.options = options;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,100,/ an iterator for the command line tokens
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,101,terator iter = Arrays.asList(arguments).iterator();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,102,tring token = null;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,104,/ process each command line token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,105,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,107,/ get the next command line token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,108,oken = (String) iter.next();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,110,/ handle SPECIAL TOKEN
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,111,"f (token.startsWith(""--""))"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,113,f (token.indexOf('=') != -1)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,115,"okens.add(token.substring(0, token.indexOf('=')));"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,116,"okens.add(token.substring(token.indexOf('=') + 1,"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,117,oken.length()));
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,119,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,121,okens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,125,/ single hyphen
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,126,"lse if (""-"".equals(token))"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,128,rocessSingleHyphen(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,130,"lse if (token.startsWith(""-""))"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,132,nt tokenLength = token.length();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,134,f (tokenLength == 2)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,136,"rocessOptionToken(token, stopAtNonOption);"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,138,lse if (options.hasOption(token)) {
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,139,okens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,141,/ requires bursting
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,142,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,144,"urstToken(token, stopAtNonOption);"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,147,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,149,f (stopAtNonOption)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,151,rocess(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,153,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,155,okens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,159,obble(iter);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,162,eturn (String[]) tokens.toArray(new String[] {  });
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,166, <p>Adds the remaining tokens to the processed tokens list.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,168, @param iter An iterator over the remaining tokens
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,170,rivate void gobble(Iterator iter)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,172,f (eatTheRest)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,174,hile (iter.hasNext())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,176,okens.add(iter.next());
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,182, <p>If there is a current option and it can have an argument
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,183, value then add the token to the processed tokens list and
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,184, set the current option to null.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,185, <p>If there is a current option and it can have argument
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,186, values then add the token to the processed tokens list.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,187, <p>If there is not a current option add the special token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,188," ""<b>--</b>"" and the current <code>value</code> to the processed"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,189, tokens list.  The add all the remaining <code>argument</code>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,190, values to the processed tokens list.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,192, @param value The current token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,194,rivate void process(String value)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,196,f ((currentOption != null) && currentOption.hasArg())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,198,f (currentOption.hasArg())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,200,okens.add(value);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,201,urrentOption = null;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,203,lse if (currentOption.hasArgs())
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,205,okens.add(value);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,208,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,210,atTheRest = true;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,211,"okens.add(""--"");"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,212,okens.add(value);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,217, <p>If it is a hyphen then add the hyphen directly to
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,218, the processed tokens list.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,220, @param hyphen The hyphen token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,222,rivate void processSingleHyphen(String hyphen)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,224,okens.add(hyphen);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,228, <p>If an {@link Option} exists for <code>token</code> then
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,229, set the current option and add the token to the processed
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,230, list.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,231, <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,232, is set then ignore the current token and add the remaining tokens
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,233, to the processed tokens list directly.</p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,235, @param token The current option token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,236, @param stopAtNonOption Specifies whether flattening should halt
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,237, at the first non option.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,239,"rivate void processOptionToken(String token, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,241,f (this.options.hasOption(token))
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,243,urrentOption = this.options.getOption(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,244,okens.add(token);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,246,lse if (stopAtNonOption)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,248,atTheRest = true;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,253, <p>Breaks <code>token</code> into its constituent parts
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,254, using the following algorithm.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,255, <ul>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,256,"  <li>ignore the first character (""<b>-</b>"")</li>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,257,  <li>foreach remaining character check if an {@link Option}
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,258,  exists with that id.</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,259,  <li>if an {@link Option} does exist then add that character
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,260,"  prepended with ""<b>-</b>"" to the list of processed tokens.</li>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,261,  <li>if the {@link Option} can have an argument value and there
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,262,  are remaining characters in the token then add the remaining
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,263,  characters as a token to the list of processed tokens.</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,264,  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,265,  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,266,"  ""<b>--</b>"" followed by the remaining characters and also"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,267,  the remaining tokens directly to the processed tokens list.</li>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,268,  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,269,  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,270,"  character prepended with ""<b>-</b>"".</li>"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,271, </ul>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,272, </p>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,274, @param token The current token to be <b>burst</b>
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,275, @param stopAtNonOption Specifies whether to stop processing
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,276, at the first non-Option encountered.
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,278,"rotected void burstToken(String token, boolean stopAtNonOption)"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,280,nt tokenLength = token.length();
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,282,or (int i = 1; i < tokenLength; i++)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,284,tring ch = String.valueOf(token.charAt(i));
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,285,oolean hasOption = options.hasOption(ch);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,287,f (hasOption)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,289,"okens.add(""-"" + ch);"
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,290,urrentOption = options.getOption(ch);
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,292,f (currentOption.hasArg() && (token.length() != (i + 1)))
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,294,okens.add(token.substring(i + 1));
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,296,reak;
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,299,lse if (stopAtNonOption)
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,301,rocess(token.substring(i));
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,303,lse
False,src/java/org/apache/commons/cli/PosixParser.java,src/java/org/apache/commons/cli/PosixParser.java,305,"okens.add(""-"" + ch);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,2, Copyright 1999-2005 The Apache Software Foundation.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,18,mport java.io.File;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,20,mport java.net.MalformedURLException;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,21,mport java.net.URL;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,23,mport java.util.Date;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,25,mport org.apache.commons.lang.math.NumberUtils;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,28, This is a temporary implementation. TypeHandler will handle the
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,29, pluggableness of OptionTypes and it will direct all of these types
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,30, of conversion functionalities to ConvertUtils component in Commons
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,31, alreayd. BeanUtils I think.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,33, @author Henri Yandell (bayard @ generationjava.com)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,34, @version $Revision$
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,36,ublic class TypeHandler {
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,39, <p>Returns the <code>Object</code> of type <code>obj</code>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,40, with the value of <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,42, @param str the command line value
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,43, @param obj the type of argument
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,44, @return The instance of <code>obj</code> initialised with
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,45, the value of <code>str</code>.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,47,"ublic static Object createValue(String str, Object obj)"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,49,"eturn createValue(str, (Class) obj);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,53, <p>Returns the <code>Object</code> of type <code>clazz</code>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,54, with the value of <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,56, @param str the command line value
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,57, @param clazz the type of argument
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,58, @return The instance of <code>clazz</code> initialised with
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,59, the value of <code>str</code>.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,61,"ublic static Object createValue(String str, Class clazz)"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,63,f (PatternOptionBuilder.STRING_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,65,eturn str;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,67,lse if (PatternOptionBuilder.OBJECT_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,69,eturn createObject(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,71,lse if (PatternOptionBuilder.NUMBER_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,73,eturn createNumber(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,75,lse if (PatternOptionBuilder.DATE_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,77,eturn createDate(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,79,lse if (PatternOptionBuilder.CLASS_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,81,eturn createClass(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,83,lse if (PatternOptionBuilder.FILE_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,85,eturn createFile(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,87,lse if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,89,eturn createFile(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,91,lse if (PatternOptionBuilder.FILES_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,93,eturn createFiles(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,95,lse if (PatternOptionBuilder.URL_VALUE == clazz)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,97,eturn createURL(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,99,lse
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,101,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,106, <p>Create an Object from the classname and empty constructor.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,108, @param str the argument value
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,109," @return the initialised object, or null if it couldn't create"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,110, the Object.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,112,ublic static Object createObject(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,114,lass cl = null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,116,ry
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,118,l = Class.forName(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,120,atch (ClassNotFoundException cnfe)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,122,"ystem.err.println(""Unable to find: "" + str);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,124,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,127,bject instance = null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,129,ry
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,131,nstance = cl.newInstance();
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,133,atch (InstantiationException cnfe)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,135,"ystem.err.println(""InstantiationException; Unable to create: """
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,136, str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,138,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,140,atch (IllegalAccessException cnfe)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,142,"ystem.err.println(""IllegalAccessException; Unable to create: """
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,143, str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,145,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,148,eturn instance;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,152, <p>Create a number from a String.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,154, @param str the value
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,155," @return the number represented by <code>str</code>, if <code>str</code>"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,156," is not a number, null is returned."
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,158,ublic static Number createNumber(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,160,/ Needs to be able to create
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,161,ry
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,163,"/ do searching for decimal point etc, but atm just make an Integer"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,164,eturn NumberUtils.createNumber(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,166,atch (NumberFormatException nfe)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,168,ystem.err.println(nfe.getMessage());
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,170,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,175, <p>Returns the class whose name is <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,177, @param str the class name
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,178," @return The class if it is found, otherwise return null"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,180,ublic static Class createClass(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,182,ry
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,184,eturn Class.forName(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,186,atch (ClassNotFoundException cnfe)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,188,"ystem.err.println(""Unable to find: "" + str);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,190,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,195, <p>Returns the date represented by <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,197, @param str the date string
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,198," @return The date if <code>str</code> is a valid date string,"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,199, otherwise return null.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,201,ublic static Date createDate(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,203,ate date = null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,205,f (date == null)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,207,"ystem.err.println(""Unable to parse: "" + str);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,210,eturn date;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,214, <p>Returns the URL represented by <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,216, @param str the URL string
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,217," @return The URL is <code>str</code> is well-formed, otherwise"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,218, return null.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,220,ublic static URL createURL(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,222,ry
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,224,eturn new URL(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,226,atch (MalformedURLException mue)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,228,"ystem.err.println(""Unable to parse: "" + str);"
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,230,eturn null;
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,235, <p>Returns the File represented by <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,237, @param str the File location
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,238, @return The file represented by <code>str</code>.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,240,ublic static File createFile(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,242,eturn new File(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,246, <p>Returns the File[] represented by <code>str</code>.</p>
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,248, @param str the paths to the files
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,249, @return The File[] represented by <code>str</code>.
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,251,ublic static File[] createFiles(String str)
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,253,/ to implement/port:
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,254,/        return FileW.findFiles(str);
False,src/java/org/apache/commons/cli/TypeHandler.java,src/java/org/apache/commons/cli/TypeHandler.java,255,eturn null;
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,19, <p>Exception thrown during parsing signalling an unrecognized
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,20, option was seen.<p>
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,22, @author bob mcwhiter (bob @ werken.com)
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,23, @version $Revision$
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,25,ublic class UnrecognizedOptionException
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,26,xtends ParseException {
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,29, <p>Construct a new <code>UnrecognizedArgumentException</code>
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,30, with the specified detail message.</p>
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,32, @param message the detail message
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,34,ublic UnrecognizedOptionException(String message)
False,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,src/java/org/apache/commons/cli/UnrecognizedOptionException.java,36,uper(message);
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,2," Copyright 1999-2001,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,14, limitations under the License.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,16,ackage org.apache.commons.cli;
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,19, Contains useful helper methods for classes within this package.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,21, @author John Keyes (john at integralsource.com)
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,23,lass Util {
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,26, <p>Remove the hyphens from the begining of <code>str</code> and
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,27, return the new String.</p>
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,29, @param str The string from which the hyphens should be removed.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,31, @return the new String.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,33,tatic String stripLeadingHyphens(String str)
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,35,"f (str.startsWith(""--""))"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,37,"eturn str.substring(2, str.length());"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,39,"lse if (str.startsWith(""-""))"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,41,"eturn str.substring(1, str.length());"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,44,eturn str;
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,48, Remove the leading and trailing quotes from <code>str</code>.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,49," E.g. if str is '""one two""', then 'one two' is returned."
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,51, @param str The string from which the leading and trailing quotes
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,52, should be removed.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,54, @return The string without the leading and trailing quotes.
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,56,tatic String stripLeadingAndTrailingQuotes(String str)
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,58,"f (str.startsWith(""\"""")) {"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,59,"tr = str.substring(1, str.length());"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,61,"f (str.endsWith(""\"""")) {"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,62,"tr = str.substring(0, str.length()-1);"
False,src/java/org/apache/commons/cli/Util.java,src/java/org/apache/commons/cli/Util.java,64,eturn str;
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,23, <p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,24, This is a collection of tests that test real world
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,25, applications command lines.
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,26, </p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,28, <p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,29, The following are the applications that are tested:
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,30, <ul>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,31, <li>Ant</li>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,32, </ul>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,33, </p>
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,35, @author John Keyes (john at integralsource.com)
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,37,ublic class ApplicationTest extends TestCase {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,39,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,40,eturn new TestSuite(ApplicationTest.class);
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,43,ublic ApplicationTest(String name)
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,45,uper(name);
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,51,ublic void testLs() {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,52,/ create the command line parser
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,53,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,54,ptions options = new Options();
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,55,"ptions.addOption( ""a"", ""all"", false, ""do not hide entries starting with ."" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,56,"ptions.addOption( ""A"", ""almost-all"", false, ""do not list implied . and .."" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,57,"ptions.addOption( ""b"", ""escape"", false, ""print octal escapes for nongraphic characters"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,58,"ptions.addOption( OptionBuilder.withLongOpt( ""block-size"" )"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,59,"withDescription( ""use SIZE-byte blocks"" )"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,60,withValueSeparator( '=' )
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,61,hasArg()
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,62,create() );
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,63,"ptions.addOption( ""B"", ""ignore-backups"", false, ""do not list implied entried ending with ~"");"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,64,"ptions.addOption( ""c"", false, ""with -lt: sort by, and show, ctime (time of last modification of file status information) with -l:show ctime and sort by name otherwise: sort by ctime"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,65,"ptions.addOption( ""C"", false, ""list entries by columns"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,67,"tring[] args = new String[]{ ""--block-size=10"" };"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,69,ry {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,70,"ommandLine line = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,71,"ssertTrue( line.hasOption( ""block-size"" ) );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,72,"ssertEquals( line.getOptionValue( ""block-size"" ), ""10"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,74,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,75,"ail( ""Unexpected exception:"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,80, Ant test
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,82,ublic void testAnt() {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,83,/ use the GNU parser
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,84,ommandLineParser parser = new GnuParser( );
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,85,ptions options = new Options();
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,86,"ptions.addOption( ""help"", false, ""print this message"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,87,"ptions.addOption( ""projecthelp"", false, ""print project help information"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,88,"ptions.addOption( ""version"", false, ""print the version information and exit"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,89,"ptions.addOption( ""quiet"", false, ""be extra quiet"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,90,"ptions.addOption( ""verbose"", false, ""be extra verbose"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,91,"ptions.addOption( ""debug"", false, ""print debug information"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,92,"ptions.addOption( ""version"", false, ""produce logging information without adornments"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,93,"ptions.addOption( ""logfile"", true, ""use given file for log"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,94,"ptions.addOption( ""logger"", true, ""the class which is to perform the logging"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,95,"ptions.addOption( ""listener"", true, ""add an instance of a class as a project listener"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,96,"ptions.addOption( ""buildfile"", true, ""use given buildfile"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,97,"ptions.addOption( OptionBuilder.withDescription( ""use value for given property"" )"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,98,hasArgs()
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,99,withValueSeparator()
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,100,create( 'D' ) );
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,101,"/, null, true, , false, true );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,102,"ptions.addOption( ""find"", true, ""search for buildfile towards the root of the filesystem and use it"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,104,"tring[] args = new String[]{ ""-buildfile"", ""mybuild.xml"","
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,105,"-Dproperty=value"", ""-Dproperty1=value1"","
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,106,"-projecthelp"" };"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,108,ry {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,109,"ommandLine line = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,111,/ check multiple values
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,112,"tring[] opts = line.getOptionValues( ""D"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,113,"ssertEquals( ""property"", opts[0] );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,114,"ssertEquals( ""value"", opts[1] );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,115,"ssertEquals( ""property1"", opts[2] );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,116,"ssertEquals( ""value1"", opts[3] );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,118,/ check single value
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,119,"ssertEquals( line.getOptionValue( ""buildfile""), ""mybuild.xml"" );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,121,/ check option
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,122,"ssertTrue( line.hasOption( ""projecthelp"") );"
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,124,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/ApplicationTest.java,src/test/org/apache/commons/cli/ApplicationTest.java,125,"ail( ""Unexpected exception:"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,23,ublic class ArgumentIsOptionTest extends TestCase {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,24,rivate Options options = null;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,25,rivate CommandLineParser parser = null;
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,27,ublic ArgumentIsOptionTest(String name) {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,28,uper(name);
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,31,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,32,eturn new TestSuite(ArgumentIsOptionTest.class);
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,35,ublic void setUp() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,36,"ptions = new Options().addOption(""p"", false, ""Option p"").addOption(""attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,37,"rue, ""Option accepts argument"");"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,39,arser = new PosixParser();
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,42,ublic void tearDown() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,45,ublic void testOptionAndOptionWithArgument() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,46,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,47,"-p"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,48,"-attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,49,"p"""
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,52,ry {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,53,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,54,"ssertTrue(""Confirm -p is set"", cl.hasOption(""p""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,55,"ssertTrue(""Confirm -attr is set"", cl.hasOption(""attr""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,56,"ssertTrue(""Confirm arg of -attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,57,"l.getOptionValue(""attr"").equals(""p""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,58,"ssertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,60,atch (ParseException e) {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,61,ail(e.toString());
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,65,ublic void testOptionWithArgument() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,66,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,67,"-attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,68,"p"""
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,71,ry {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,72,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,73,"ssertFalse(""Confirm -p is set"", cl.hasOption(""p""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,74,"ssertTrue(""Confirm -attr is set"", cl.hasOption(""attr""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,75,"ssertTrue(""Confirm arg of -attr"","
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,76,"l.getOptionValue(""attr"").equals(""p""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,77,"ssertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,79,atch (ParseException e) {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,80,ail(e.toString());
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,84,ublic void testOption() {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,85,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,86,"-p"""
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,89,ry {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,90,"ommandLine cl = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,91,"ssertTrue(""Confirm -p is set"", cl.hasOption(""p""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,92,"ssertFalse(""Confirm -attr is not set"", cl.hasOption(""attr""));"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,93,"ssertTrue(""Confirm all arguments recognized"", cl.getArgs().length == 0);"
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,95,atch (ParseException e) {
False,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,src/test/org/apache/commons/cli/ArgumentIsOptionTest.java,96,ail(e.toString());
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,18,mport java.io.ByteArrayOutputStream;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,19,mport java.io.PrintStream;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,20,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,21,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,22,mport java.util.Properties;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,24,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,25,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,26,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,28,ublic class BugsTest extends TestCase
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,30,** CommandLine instance */
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,31,rivate CommandLine _cmdline = null;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,32,rivate Option _option = null;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,34,ublic static Test suite() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,35,eturn new TestSuite( BugsTest.class );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,38,ublic BugsTest( String name )
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,40,uper( name );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,43,ublic void setUp()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,47,ublic void tearDown()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,51,ublic void test11457() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,52,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,53,"ptions.addOption( OptionBuilder.withLongOpt( ""verbose"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,54,create() );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,55,"tring[] args = new String[] { ""--verbose"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,57,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,59,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,60,"ommandLine cmd = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,61,"ssertTrue( cmd.hasOption( ""verbose"" ) );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,63,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,64,xp.printStackTrace();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,65,"ail( ""Unexpected Exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,69,ublic void test11458()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,71,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,72,ptions.addOption( OptionBuilder.withValueSeparator( '=' )
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,73,hasArgs()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,74,create( 'D' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,75,ptions.addOption( OptionBuilder.withValueSeparator( ':' )
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,76,hasArgs()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,77,create( 'p' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,78,"tring[] args = new String[] { ""-DJAVA_HOME=/opt/java"" ,"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,79,"-pfile1:file2:file3"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,81,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,83,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,84,"ommandLine cmd = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,86,tring[] values = cmd.getOptionValues( 'D' );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,88,"ssertEquals( values[0], ""JAVA_HOME"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,89,"ssertEquals( values[1], ""/opt/java"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,91,alues = cmd.getOptionValues( 'p' );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,93,"ssertEquals( values[0], ""file1"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,94,"ssertEquals( values[1], ""file2"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,95,"ssertEquals( values[2], ""file3"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,97,ava.util.Iterator iter = cmd.iterator();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,98,hile( iter.hasNext() ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,99,ption opt = (Option)iter.next();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,100,witch( opt.getId() ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,101,ase 'D':
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,102,"ssertEquals( opt.getValue( 0 ), ""JAVA_HOME"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,103,"ssertEquals( opt.getValue( 1 ), ""/opt/java"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,104,reak;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,105,ase 'p':
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,106,"ssertEquals( opt.getValue( 0 ), ""file1"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,107,"ssertEquals( opt.getValue( 1 ), ""file2"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,108,"ssertEquals( opt.getValue( 2 ), ""file3"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,109,reak;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,110,efault:
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,111,"ail( ""-D option not found"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,115,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,116,"ail( ""Unexpected Exception:\nMessage:"" + exp.getMessage()"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,117," ""Type: "" + exp.getClass().getName() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,121,ublic void test11680()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,123,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,124,"ptions.addOption(""f"", true, ""foobar"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,125,"ptions.addOption(""m"", true, ""missing"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,126,"tring[] args = new String[] { ""-f"" , ""foo"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,128,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,130,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,131,"ommandLine cmd = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,133,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,134,"md.getOptionValue( ""f"", ""default f"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,135,"md.getOptionValue( ""m"", ""default m"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,137,atch( NullPointerException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,138,"ail( ""NullPointer caught: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,141,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,142,"ail( ""Unexpected Exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,146,ublic void test11456()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,148,/ Posix
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,149,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,150,ptions.addOption( OptionBuilder.hasOptionalArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,151,create( 'a' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,152,ptions.addOption( OptionBuilder.hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,153,create( 'b' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,154,"tring[] args = new String[] { ""-a"", ""-bvalue"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,156,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,158,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,159,"ommandLine cmd = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,160,"ssertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,162,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,163,"ail( ""Unexpected Exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,166,/ GNU
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,167,ptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,168,ptions.addOption( OptionBuilder.hasOptionalArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,169,create( 'a' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,170,ptions.addOption( OptionBuilder.hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,171,create( 'b' ) );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,172,"rgs = new String[] { ""-a"", ""-b"", ""value"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,174,arser = new GnuParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,176,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,177,"ommandLine cmd = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,178,"ssertEquals( cmd.getOptionValue( 'b' ), ""value"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,180,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,181,"ail( ""Unexpected Exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,186,ublic void test12210() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,187,/ create the main options object which will handle the first parameter
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,188,ptions mainOptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,189,/ There can be 2 main exclusive options:  -exec|-rep
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,191,"/ Therefore, place them in an option group"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,193,"tring[] argv = new String[] { ""-exec"", ""-exec_opt1"", ""-exec_opt2"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,194,ptionGroup grp = new OptionGroup();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,196,"rp.addOption(new Option(""exec"",false,""description for this option""));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,198,"rp.addOption(new Option(""rep"",false,""description for this option""));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,200,ainOptions.addOptionGroup(grp);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,202,"/ for the exec option, there are 2 options..."
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,203,ptions execOptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,204,"xecOptions.addOption(""exec_opt1"",false,"" desc"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,205,"xecOptions.addOption(""exec_opt2"",false,"" desc"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,207,"/ similarly, for rep there are 2 options..."
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,208,ptions repOptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,209,"epOptions.addOption(""repopto"",false,""desc"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,210,"epOptions.addOption(""repoptt"",false,""desc"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,212,/ create the parser
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,213,nuParser parser = new GnuParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,215,"/ finally, parse the arguments:"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,217,/ first parse the main options to see what the user has specified
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,218,/ We set stopAtNonOption to true so it does not touch the remaining
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,219,/ options
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,220,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,221,"ommandLine cmd = parser.parse(mainOptions,argv,true);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,222,/ get the remaining options...
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,223,rgv = cmd.getArgs();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,225,"f(cmd.hasOption(""exec"")){"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,226,"md = parser.parse(execOptions,argv,false);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,227,/ process the exec_op1 and exec_opt2...
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,228,"ssertTrue( cmd.hasOption(""exec_opt1"") );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,229,"ssertTrue( cmd.hasOption(""exec_opt2"") );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,231,"lse if(cmd.hasOption(""rep"")){"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,232,"md = parser.parse(repOptions,argv,false);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,233,/ process the rep_op1 and rep_opt2...
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,235,lse {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,236,"ail( ""exec option not found"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,239,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,240,"ail( ""Unexpected exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,244,ublic void test13425() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,245,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,246,"ption oldpass = OptionBuilder.withLongOpt( ""old-password"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,247,"withDescription( ""Use this option to specify the old password"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,248,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,249,create( 'o' );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,250,"ption newpass = OptionBuilder.withLongOpt( ""new-password"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,251,"withDescription( ""Use this option to specify the new password"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,252,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,253,create( 'n' );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,255,tring[] args = {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,256,"-o"","
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,257,"-n"","
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,258,"newpassword"""
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,261,ptions.addOption( oldpass );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,262,ptions.addOption( newpass );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,264,arser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,266,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,267,"ommandLine line = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,269,/ catch the exception and leave the method
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,270,atch( Exception exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,271,ssertTrue( exp != null );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,272,eturn;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,274,"ail( ""MissingArgumentException not caught."" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,277,ublic void test13666() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,278,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,279,"ption dir = OptionBuilder.withDescription( ""dir"" )"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,280,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,281,create( 'd' );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,282,ptions.addOption( dir );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,285,inal PrintStream oldSystemOut = System.out;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,286,ry{
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,287,inal ByteArrayOutputStream bytes = new ByteArrayOutputStream();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,288,inal PrintStream print = new PrintStream(bytes);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,290,/ capture this platform's eol symbol
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,291,rint.println();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,292,inal String eol = bytes.toString();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,293,ytes.reset();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,295,ystem.setOut(new PrintStream(bytes));
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,296,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,297,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,298,"ormatter.printHelp( ""dir"", options );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,300,atch( Exception exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,301,"ail( ""Unexpected Exception: "" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,303,"ssertEquals(""usage: dir""+eol+"" -d <arg>   dir""+eol,bytes.toString());"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,305,inally {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,306,ystem.setOut(oldSystemOut);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,310,ublic void test13935() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,311,ptionGroup directions = new OptionGroup();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,313,"ption left = new Option( ""l"", ""left"", false, ""go left"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,314,"ption right = new Option( ""r"", ""right"", false, ""go right"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,315,"ption straight = new Option( ""s"", ""straight"", false, ""go straight"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,316,"ption forward = new Option( ""f"", ""forward"", false, ""go forward"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,317,orward.setRequired( true );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,319,irections.addOption( left );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,320,irections.addOption( right );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,321,irections.setRequired( true );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,323,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,324,pts.addOptionGroup( directions );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,325,pts.addOption( straight );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,327,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,328,oolean exception = false;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,330,tring[] args = new String[] {  };
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,331,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,332,"ommandLine line = parser.parse( opts, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,334,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,335,xception = true;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,338,f( !exception ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,339,"ail( ""Expected exception not caught."");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,342,xception = false;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,344,"rgs = new String[] { ""-s"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,345,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,346,"ommandLine line = parser.parse( opts, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,348,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,349,xception = true;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,352,f( !exception ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,353,"ail( ""Expected exception not caught."");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,356,xception = false;
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,358,"rgs = new String[] { ""-s"", ""-l"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,359,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,360,"ommandLine line = parser.parse( opts, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,362,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,363,"ail( ""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,366,pts.addOption( forward );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,367,"rgs = new String[] { ""-s"", ""-l"", ""-f"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,368,ry {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,369,"ommandLine line = parser.parse( opts, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,371,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,372,"ail( ""Unexpected exception: "" + exp.getClass().getName() + "":"" + exp.getMessage() );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,376,ublic void test14786() throws Exception {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,377,"ption o = OptionBuilder.isRequired().withDescription(""test"").create(""test"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,378,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,379,pts.addOption(o);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,380,pts.addOption(o);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,382,ommandLineParser parser = new GnuParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,384,"tring[] args = new String[] { ""-test"" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,386,"ommandLine line = parser.parse( opts, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,387,"ssertTrue( line.hasOption( ""test"" ) );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,390,ublic void test15046() throws Exception {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,391,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,392,"inal String[] CLI_ARGS = new String[] {""-z"", ""c""};"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,393,"ption option = new Option(""z"", ""timezone"", true,"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,394,"affected option"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,395,ptions cliOptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,396,liOptions.addOption(option);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,397,"arser.parse(cliOptions, CLI_ARGS);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,399,/now add conflicting option
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,400,"liOptions.addOption(""c"", ""conflict"", true, ""conflict option"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,401,"ommandLine line = parser.parse(cliOptions, CLI_ARGS);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,402,"ssertEquals( option.getValue(), ""c"" );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,403,"ssertTrue( !line.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,406,ublic void test15648() throws Exception {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,407,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,408,"inal String[] args = new String[] { ""-m"", ""\""Two Words\"""" };"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,409,"ption m = OptionBuilder.hasArgs().create(""m"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,410,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,411,ptions.addOption( m );
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,412,"ommandLine line = parser.parse( options, args );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,413,"ssertEquals( ""Two Words"", line.getOptionValue( ""m"" ) );"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,416,ublic void test27635() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,417,"ption help = new Option(""h"", ""help"", false, ""print this message"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,418,"ption version = new Option(""v"", ""version"", false, ""print version information"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,419,"ption newRun = new Option(""n"", ""new"", false, ""Create NLT cache entries only for new items"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,420,"ption trackerRun = new Option(""t"", ""tracker"", false, ""Create NLT cache entries only for tracker items"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,422,"ption timeLimit = OptionBuilder.withLongOpt(""limit"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,423,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,424,withValueSeparator()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,425,"withDescription(""Set time limit for execution, in mintues"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,426,"create(""l"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,428,"ption age = OptionBuilder.withLongOpt(""age"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,429,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,430,withValueSeparator()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,431,"withDescription(""Age (in days) of cache item before being recomputed"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,432,"create(""a"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,434,"ption server = OptionBuilder.withLongOpt(""server"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,435,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,436,withValueSeparator()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,437,"withDescription(""The NLT server address"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,438,"create(""s"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,440,"ption numResults = OptionBuilder.withLongOpt(""results"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,441,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,442,withValueSeparator()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,443,"withDescription(""Number of results per item"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,444,"create(""r"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,446,"ption configFile = OptionBuilder.withLongOpt(""config"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,447,hasArg()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,448,withValueSeparator()
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,449,"withDescription(""Use the specified configuration file"")"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,450,create();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,452,ptions mOptions = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,453,Options.addOption(help);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,454,Options.addOption(version);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,455,Options.addOption(newRun);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,456,Options.addOption(trackerRun);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,457,Options.addOption(timeLimit);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,458,Options.addOption(age);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,459,Options.addOption(server);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,460,Options.addOption(numResults);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,461,Options.addOption(configFile);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,463,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,464,"inal String EOL = System.getProperty(""line.separator"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,465,tringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,466,"ormatter.printHelp(new PrintWriter(out),80,""commandline"",""header"",mOptions,2,2,""footer"",true);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,467,ssertEquals(
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,468,"usage: commandline [--config <arg>] [-r <arg>] [-a <arg>] [-h] [-t] [-n] [-l""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,469,"       <arg>] [-s <arg>] [-v]""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,470,"header""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,471,"  -a,--age <arg>      Age (in days) of cache item before being recomputed""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,472,"     --config <arg>   Use the specified configuration file""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,473,"  -h,--help           print this message""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,474,"  -l,--limit <arg>    Set time limit for execution, in mintues""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,475,"  -n,--new            Create NLT cache entries only for new items""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,476,"  -r,--results <arg>  Number of results per item""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,477,"  -s,--server <arg>   The NLT server address""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,478,"  -t,--tracker        Create NLT cache entries only for tracker items""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,479,"  -v,--version        print version information""+EOL+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,480,"footer""+EOL"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,481,out.toString());
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,484,ublic void test31148() throws ParseException {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,485,"ption multiArgOption = new Option(""o"",""option with multiple args"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,486,ultiArgOption.setArgs(1);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,488,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,489,ptions.addOption(multiArgOption);
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,491,arser parser = new PosixParser();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,492,tring[] args = new String[]{};
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,493,roperties props = new Properties();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,494,"rops.setProperty(""o"",""ovalue"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,495,"ommandLine cl = parser.parse(options,args,props);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,497,ssertTrue(cl.hasOption('o'));
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,498,"ssertEquals(""ovalue"",cl.getOptionValue('o'));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,501,ublic void test21215() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,502,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,503,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,504,"tring SEP = System.getProperty(""line.separator"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,505,"tring header = SEP+""Header"";"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,506,"tring footer = ""Footer"";"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,507,tringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,508,"ormatter.printHelp(new PrintWriter(out),80, ""foobar"", header, options, 2, 2, footer, true);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,509,ssertEquals(
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,510,"usage: foobar""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,511,"""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,512,"Header""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,513,"""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,514,"Footer""+SEP"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,515,out.toString());
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,518,ublic void test19383() {
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,519,ptions options = new Options();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,520,"ptions.addOption(new Option(""a"",""aaa"",false,""aaaaaaa""));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,521,"ptions.addOption(new Option(null,""bbb"",false,""bbbbbbb""));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,522,"ptions.addOption(new Option(""c"",null,false,""ccccccc""));"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,524,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,525,"tring SEP = System.getProperty(""line.separator"");"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,526,tringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,527,"ormatter.printHelp(new PrintWriter(out),80, ""foobar"", """", options, 2, 2, """", true);"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,528,ssertEquals(
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,529,"usage: foobar [-a] [-c] [--bbb]""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,530,"  -a,--aaa  aaaaaaa""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,531,"     --bbb  bbbbbbb""+SEP+"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,532,"  -c        ccccccc""+SEP"
False,src/test/org/apache/commons/cli/BugsTest.java,src/test/org/apache/commons/cli/BugsTest.java,533,out.toString());
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,22,ublic class BuildTest extends TestCase
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,25,ublic static Test suite() {
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,26,eturn new TestSuite(BuildTest.class);
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,29,ublic BuildTest(String name)
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,31,uper(name);
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,34,ublic void setUp()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,39,ublic void tearDown()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,44,ublic void testSimple()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,46,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,48,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,49,"alse,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,50,"toggle -a"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,52,"pts.addOption(""b"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,53,"rue,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,54,"toggle -b"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,57,ublic void testDuplicateSimple()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,59,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,60,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,61,"alse,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,62,"toggle -a"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,64,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,65,"rue,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,66,"toggle -a*"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,68,"ssertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription() );"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,71,ublic void testLong()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,73,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,75,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,76,"--a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,77,"alse,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,78,"toggle -a"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,80,"pts.addOption(""b"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,81,"--b"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,82,"rue,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,83,"set -b"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,87,ublic void testDuplicateLong()
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,89,ptions opts = new Options();
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,90,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,91,"--a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,92,"alse,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,93,"toggle -a"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,95,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,96,"--a"","
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,97,"alse,"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,98,"toggle -a*"");"
False,src/test/org/apache/commons/cli/BuildTest.java,src/test/org/apache/commons/cli/BuildTest.java,99,"ssertEquals( ""last one in wins"", ""toggle -a*"", opts.getOption(""a"").getDescription() );"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,2, Copyright 2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,18,mport org.apache.commons.cli2.Group;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,19,mport org.apache.commons.cli2.builder.PatternBuilder;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,20,mport org.apache.commons.cli2.option.GroupImpl;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,24,ublic class CLI2ConverterTest extends TestCase {
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,26,rivate Options aceOptions;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,27,rivate OptionGroup aceOptionGroup;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,28,rivate Options abcdeOptions;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,29,rivate Options pattern;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,31,rivate Option a;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,32,rivate Option bbb;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,33,rivate Option c;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,34,rivate Option ddd;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,35,rivate Option e;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,36,rivate Option f;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,37,rivate Option g;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,38,rivate Option h;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,39,rivate Option i;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,41,ublic void setUp(){
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,42," = OptionBuilder.withDescription(""A description"").create('a');"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,43,"bb = OptionBuilder.create(""bbb"");"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,44," = OptionBuilder.withLongOpt(""ccc"").create('c');"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,45,"dd = OptionBuilder.withLongOpt(""ddd"").create();"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,46," = OptionBuilder.isRequired(true).create(""e"");"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,47," = OptionBuilder.hasArg().withArgName(""argument"").create('f');"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,48, = OptionBuilder.hasArgs(5).create('g');
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,49, = OptionBuilder.hasOptionalArg().create('h');
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,50, = OptionBuilder.hasOptionalArgs(5).create('i');
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,52,ceOptions = new Options();
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,53,ceOptions.addOption(OptionBuilder.create('a'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,54,ceOptions.addOption(OptionBuilder.create('c'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,55,ceOptions.addOption(OptionBuilder.create('e'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,57,ceOptionGroup = new OptionGroup();
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,58,ceOptionGroup.addOption(OptionBuilder.create('a'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,59,ceOptionGroup.addOption(OptionBuilder.create('c'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,60,ceOptionGroup.addOption(OptionBuilder.create('e'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,62,bcdeOptions = new Options();
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,63,bcdeOptions.addOption(OptionBuilder.create('d'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,64,ptionGroup og = new OptionGroup();
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,65,g.addOption(OptionBuilder.create('a'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,66,g.addOption(OptionBuilder.create('c'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,67,g.addOption(OptionBuilder.create('e'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,68,bcdeOptions.addOptionGroup(og);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,69,bcdeOptions.addOption(OptionBuilder.create('b'));
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,71,"attern = PatternOptionBuilder.parsePattern(""a%ce:"");"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,75, Class to test for Option option(Option)
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,77,ublic void testOption() {
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,78,ssertTrue(e.isRequired());
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,80,"ssertEquals(""A description"",a.getDescription());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,81,"ssertEquals('a',a.getId());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,82,"ssertEquals(""[-a]"",CLI2Converter.option(a).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,83,"ssertEquals(""[-bbb]"",CLI2Converter.option(bbb).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,84,"ssertEquals(""[-c (--ccc)]"",CLI2Converter.option(c).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,85,"ssertEquals(""[--ddd]"",CLI2Converter.option(ddd).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,86,"ssertEquals(""-e"",CLI2Converter.option(e).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,87,"ssertEquals(""[-f <argument>]"",CLI2Converter.option(f).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,88,"ssertEquals(""[-g <arg1> <arg2> <arg3> <arg4> <arg5>]"",CLI2Converter.option(g).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,89,"ssertEquals(""[-h [<arg>]]"",CLI2Converter.option(h).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,90,"ssertEquals(""[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]"",CLI2Converter.option(i).toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,93, Class to test for Group group(OptionGroup)
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,95,ublic void testGroupOptionGroup() {
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,96,roupImpl group;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,98,roup = (GroupImpl)CLI2Converter.group(aceOptionGroup);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,99,"ssertEquals(""[-a|-c|-e]"",group.toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,100,"ssertEquals(0,group.getMinimum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,101,"ssertEquals(1,group.getMaximum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,103,ceOptionGroup.setRequired(true);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,104,roup = (GroupImpl)CLI2Converter.group(aceOptionGroup);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,105,"ssertEquals(""-a|-c|-e"",group.toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,106,"ssertEquals(1,group.getMinimum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,107,"ssertEquals(1,group.getMaximum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,110, Class to test for Group group(Options)
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,112,ublic void testGroupOptions() {
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,114,roupImpl group;
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,116,roup = (GroupImpl)CLI2Converter.group(aceOptions);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,117,"ssertEquals(""[-a|-c|-e]"",group.toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,118,"ssertEquals(0,group.getMinimum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,119,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,121,roup = (GroupImpl)CLI2Converter.group(abcdeOptions);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,123,"ssertEquals(""[-a|-c|-e|-d|-b]"",group.toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,124,"ssertEquals(0,group.getMinimum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,125,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,127,roup = (GroupImpl)CLI2Converter.group(pattern);
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,128,"ssertEquals(""[-a <arg>|-c|-e <arg>]"",group.toString());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,129,"ssertEquals(0,group.getMinimum());"
False,src/test/org/apache/commons/cli/CLI2ConverterTest.java,src/test/org/apache/commons/cli/CLI2ConverterTest.java,130,"ssertEquals(Integer.MAX_VALUE,group.getMaximum());"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,22,ublic class GnuParseTest extends TestCase
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,24,rivate Options _options = null;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,25,rivate CommandLineParser _parser = null;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,27,ublic static Test suite() {
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,28,eturn new TestSuite( GnuParseTest.class );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,31,ublic GnuParseTest( String name )
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,33,uper( name );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,36,ublic void setUp()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,38,options = new Options()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,39,"addOption(""a"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,40,"enable-a"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,41,"alse,"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,42,"turn [a] on or off"")"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,43,"addOption(""b"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,44,"bfile"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,45,"rue,"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,46,"set the value of [b]"")"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,47,"addOption(""c"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,48,"copt"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,49,"alse,"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,50,"turn [c] on or off"");"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,52,parser = new GnuParser( );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,55,ublic void tearDown()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,60,ublic void testSimpleShort()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,62,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,63,"-b"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,64,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,66,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,68,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,70,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,71,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,72,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,73,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,75,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,77,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,81,ublic void testSimpleLong()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,83,"tring[] args = new String[] { ""--enable-a"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,84,"--bfile"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,85,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,87,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,89,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,91,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,92,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,93,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,94,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,96,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,98,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,102,ublic void testExtraOption()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,104,"tring[] args = new String[] { ""-a"", ""-d"", ""-b"", ""toast"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,105,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,107,oolean caught = false;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,109,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,111,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,113,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,114,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,115,"ssertTrue( ""confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,116,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,118,atch (UnrecognizedOptionException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,120,aught = true;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,122,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,124,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,126,"ssertTrue( ""Confirm UnrecognizedOptionException caught"", caught );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,129,ublic void testMissingArg()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,132,"tring[] args = new String[] { ""-b"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,134,oolean caught = false;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,136,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,138,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,140,atch (MissingArgumentException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,142,aught = true;
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,144,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,146,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,149,"ssertTrue( ""Confirm MissingArgumentException caught"", caught );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,152,ublic void testStop()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,154,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,155,"foober"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,156,"-b"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,157,"toast"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,159,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,161,"ommandLine cl = _parser.parse(_options, args, true);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,162,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,163,"ssertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,165,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,167,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,171,ublic void testMultiple()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,173,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,174,"foobar"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,175,"-b"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,176,"toast"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,178,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,180,"ommandLine cl = _parser.parse(_options, args, true);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,181,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,182,"ssertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,184,"l = _parser.parse(_options, cl.getArgs() );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,186,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,187,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,188,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,189,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,190,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,192,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,194,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,198,ublic void testMultipleWithLong()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,200,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,201,"foobar"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,202,"--bfile"", ""toast"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,204,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,206,"ommandLine cl = _parser.parse(_options,args,"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,207,rue);
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,208,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,209,"ssertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,211,"l = _parser.parse(_options, cl.getArgs() );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,213,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,214,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,215,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,216,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,217,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,219,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,221,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,225,ublic void testDoubleDash()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,227,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,229,"-b"", ""toast"" };"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,231,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,233,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,235,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,236,"ssertTrue( ""Confirm -b is not set"", ! cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,237,"ssertTrue( ""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,240,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,242,ail( e.toString() );
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,246,ublic void testSingleDash()
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,248,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,249,"-b"", ""-"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,250,"-a"","
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,253,ry
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,255,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,257,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,258,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,259,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,260,"ssertTrue( ""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,261,"ssertTrue( ""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-"") );"
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,263,atch (ParseException e)
False,src/test/org/apache/commons/cli/GnuParseTest.java,src/test/org/apache/commons/cli/GnuParseTest.java,265,ail( e.toString() );
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,19, A sample program shpwing the use of Options and the HelpFormatter class
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,21, @author Slawek Zachcial
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,23,ublic class HelpFormatterExamples
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,25,/ --------------------------------------------------------------- Constants
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,27,/ ------------------------------------------------------------------ Static
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,29,ublic static void main( String[] args )
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,31,"ystem.out.println(""\n#\n# 'man' example\n#"");"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,32,anExample();
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,34,"ystem.out.println(""\n#\n# 'bzip2' example\n#"");"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,35,zip2Example();
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,36,"ystem.out.println(""\n#\n# 'ls' example\n#"");"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,37,sExample();
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,41,tatic void manExample()
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,43,tring cmdLine =
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,44,"man [-c|-f|-k|-w|-tZT device] [-adlhu7V] [-Mpath] [-Ppager] [-Slist] "" +"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,45,"[-msystem] [-pstring] [-Llocale] [-eextension] [section] page ..."";"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,46,ptions opts =
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,47,ew Options().
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,48,"ddOption(""a"", ""all"",            false, ""find all matching manual pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,49,"ddOption(""d"", ""debug"",          false, ""emit debugging messages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,50,"ddOption(""e"", ""extension"",      false, ""limit search to extension type 'extension'."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,51,"ddOption(""f"", ""whatis"",         false, ""equivalent to whatis."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,52,"ddOption(""k"", ""apropos"",        false, ""equivalent to apropos."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,53,"ddOption(""w"", ""location"",       false, ""print physical location of man page(s)."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,54,"ddOption(""l"", ""local-file"",     false, ""interpret 'page' argument(s) as local filename(s)"")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,55,"ddOption(""u"", ""update"",         false, ""force a cache consistency check."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,56,"/FIXME - should generate -r,--prompt string"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,57,"ddOption(""r"", ""prompt"",         true,  ""provide 'less' pager with prompt."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,58,"ddOption(""c"", ""catman"",         false, ""used by catman to reformat out of date cat pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,59,"ddOption(""7"", ""ascii"",          false, ""display ASCII translation or certain latin1 chars."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,60,"ddOption(""t"", ""troff"",          false, ""use troff format pages."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,61,"/FIXME - should generate -T,--troff-device device"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,62,"ddOption(""T"", ""troff-device"",   true,  ""use groff with selected device."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,63,"ddOption(""Z"", ""ditroff"",        false, ""use groff with selected device."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,64,"ddOption(""D"", ""default"",        false, ""reset all options to their default values."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,65,"/FIXME - should generate -M,--manpath path"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,66,"ddOption(""M"", ""manpath"",        true,  ""set search path for manual pages to 'path'."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,67,"/FIXME - should generate -P,--pager pager"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,68,"ddOption(""P"", ""pager"",          true,  ""use program 'pager' to display output."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,69,"/FIXME - should generate -S,--sections list"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,70,"ddOption(""S"", ""sections"",       true,  ""use colon separated section list."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,71,"/FIXME - should generate -m,--systems system"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,72,"ddOption(""m"", ""systems"",        true,  ""search for man pages from other unix system(s)."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,73,"/FIXME - should generate -L,--locale locale"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,74,"ddOption(""L"", ""locale"",         true,  ""defaine the locale for this particular man search."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,75,"/FIXME - should generate -p,--preprocessor string"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,76,"ddOption(""p"", ""preprocessor"",   true,  ""string indicates which preprocessor to run.\n"" +"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,77," e - [n]eqn  p - pic     t - tbl\n"" +"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,78," g - grap    r - refer   v - vgrind"")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,79,"ddOption(""V"", ""version"",        false, ""show version."")."
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,80,"ddOption(""h"", ""help"",           false, ""show this usage message."");"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,82,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,83,"/hf.printHelp(cmdLine, opts);"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,84,"f.printHelp(60, cmdLine, null, opts, null);"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,87,tatic void bzip2Example()
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,89,"ystem.out.println( ""Coming soon"" );"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,92,tatic void lsExample()
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,94,"ystem.out.println( ""Coming soon"" );"
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,98,/ -------------------------------------------------------------- Attributes
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,100,/ ------------------------------------------------------------ Constructors
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,102,/ ------------------------------------------------------------------ Public
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,104,/ --------------------------------------------------------------- Protected
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,106,/ ------------------------------------------------------- Package protected
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,108,/ ----------------------------------------------------------------- Private
False,src/test/org/apache/commons/cli/HelpFormatterExamples.java,src/test/org/apache/commons/cli/HelpFormatterExamples.java,110,/ ----------------------------------------------------------- Inner classes
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,24, <p>
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,25, This is a collection of tests that test real world
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,26, applications command lines focusing on options with
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,27, long and short names.
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,28, </p>
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,30,ublic class LongOptionWithShort extends TestCase {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,31,ublic LongOptionWithShort(String name) {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,32,uper(name);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,35,ublic static Test suite() {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,36,eturn new TestSuite(LongOptionWithShort.class);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,42,ublic void testLongOptionWithShort() {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,43,"ption help = new Option(""h"", ""help"", false, ""print this message"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,44,"ption version = new Option(""v"", ""version"", false,"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,45,"print version information"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,46,"ption newRun = new Option(""n"", ""new"", false,"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,47,"Create NLT cache entries only for new items"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,48,"ption trackerRun = new Option(""t"", ""tracker"", false,"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,49,"Create NLT cache entries only for tracker items"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,51,"ption timeLimit = OptionBuilder.withLongOpt(""limit"").hasArg()"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,52,withValueSeparator()
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,53,"withDescription(""Set time limit for execution, in mintues"")"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,54,"create(""l"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,56,"ption age = OptionBuilder.withLongOpt(""age"").hasArg()"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,57,withValueSeparator()
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,58,"withDescription(""Age (in days) of cache item before being recomputed"")"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,59,"create(""a"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,61,"ption server = OptionBuilder.withLongOpt(""server"").hasArg()"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,62,withValueSeparator()
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,63,"withDescription(""The NLT server address"")"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,64,"create(""s"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,66,"ption numResults = OptionBuilder.withLongOpt(""results"").hasArg()"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,67,withValueSeparator()
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,68,"withDescription(""Number of results per item"")"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,69,"create(""r"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,71,"ption configFile = OptionBuilder.withLongOpt(""file"").hasArg()"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,72,withValueSeparator()
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,73,"withDescription(""Use the specified configuration file"")"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,74,create();
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,76,ptions options = new Options();
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,77,ptions.addOption(help);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,78,ptions.addOption(version);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,79,ptions.addOption(newRun);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,80,ptions.addOption(trackerRun);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,81,ptions.addOption(timeLimit);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,82,ptions.addOption(age);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,83,ptions.addOption(server);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,84,ptions.addOption(numResults);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,85,ptions.addOption(configFile);
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,87,/ create the command line parser
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,88,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,90,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,91,"-v"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,92,"-l"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,93,"10"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,94,"-age"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,95,"5"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,96,"-file"","
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,97,"filename"""
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,100,ry {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,101,"ommandLine line = parser.parse(options, args);"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,102,"ssertTrue(line.hasOption(""v""));"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,103,"ssertEquals(line.getOptionValue(""l""), ""10"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,104,"ssertEquals(line.getOptionValue(""limit""), ""10"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,105,"ssertEquals(line.getOptionValue(""a""), ""5"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,106,"ssertEquals(line.getOptionValue(""age""), ""5"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,107,"ssertEquals(line.getOptionValue(""file""), ""filename"");"
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,109,atch (ParseException exp) {
False,src/test/org/apache/commons/cli/LongOptionWithShort.java,src/test/org/apache/commons/cli/LongOptionWithShort.java,110,"ail(""Unexpected exception:"" + exp.getMessage());"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,22,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,24,ublic class OptionBuilderTest extends TestCase {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,26,ublic OptionBuilderTest( String name ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,27,uper( name );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,30,ublic static Test suite() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,31,eturn new TestSuite( OptionBuilderTest.class );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,34,ublic static void main( String args[] ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,35,estRunner.run( suite() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,38,ublic void testCompleteOption( ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,39,"ption simple = OptionBuilder.withLongOpt( ""simple option"")"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,40,hasArg( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,41,isRequired( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,42,hasArgs( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,43,withType( new Float( 10 ) )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,44,"withDescription( ""this is a simple option"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,45,create( 's' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,47,"ssertEquals( ""s"", simple.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,48,"ssertEquals( ""simple option"", simple.getLongOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,49,"ssertEquals( ""this is a simple option"", simple.getDescription() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,50,"ssertEquals( simple.getType().getClass(), Float.class );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,51,ssertTrue( simple.hasArg() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,52,ssertTrue( simple.isRequired() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,53,ssertTrue( simple.hasArgs() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,56,ublic void testTwoCompleteOptions( ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,57,"ption simple = OptionBuilder.withLongOpt( ""simple option"")"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,58,hasArg( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,59,isRequired( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,60,hasArgs( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,61,withType( new Float( 10 ) )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,62,"withDescription( ""this is a simple option"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,63,create( 's' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,65,"ssertEquals( ""s"", simple.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,66,"ssertEquals( ""simple option"", simple.getLongOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,67,"ssertEquals( ""this is a simple option"", simple.getDescription() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,68,"ssertEquals( simple.getType().getClass(), Float.class );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,69,ssertTrue( simple.hasArg() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,70,ssertTrue( simple.isRequired() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,71,ssertTrue( simple.hasArgs() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,73,"imple = OptionBuilder.withLongOpt( ""dimple option"")"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,74,hasArg( )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,75,"withDescription( ""this is a dimple option"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,76,create( 'd' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,78,"ssertEquals( ""d"", simple.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,79,"ssertEquals( ""dimple option"", simple.getLongOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,80,"ssertEquals( ""this is a dimple option"", simple.getDescription() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,81,ssertNull( simple.getType() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,82,ssertTrue( simple.hasArg() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,83,ssertTrue( !simple.isRequired() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,84,ssertTrue( !simple.hasArgs() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,87,ublic void testBaseOptionCharOpt() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,88,"ption base = OptionBuilder.withDescription( ""option description"")"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,89,create( 'o' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,91,"ssertEquals( ""o"", base.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,92,"ssertEquals( ""option description"", base.getDescription() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,93,ssertTrue( !base.hasArg() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,96,ublic void testBaseOptionStringOpt() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,97,"ption base = OptionBuilder.withDescription( ""option description"")"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,98,"create( ""o"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,100,"ssertEquals( ""o"", base.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,101,"ssertEquals( ""option description"", base.getDescription() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,102,ssertTrue( !base.hasArg() );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,105,ublic void testSpecialOptChars() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,108,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,109,"ption opt = OptionBuilder.withDescription( ""help options"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,110,create( '?' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,111,"ssertEquals( ""?"", opt.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,113,atch( IllegalArgumentException arg ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,114,"ail( ""IllegalArgumentException caught"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,118,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,119,"ption opt = OptionBuilder.withDescription( ""read from stdin"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,120,create( '@' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,121,"ssertEquals( ""@"", opt.getOpt() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,123,atch( IllegalArgumentException arg ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,124,"ail( ""IllegalArgumentException caught"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,128,ublic void testOptionArgNumbers() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,129,"ption opt = OptionBuilder.withDescription( ""option description"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,130,hasArgs( 2 )
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,131,create( 'o' );
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,132,"ssertEquals( 2, opt.getArgs() );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,135,ublic void testIllegalOptions() {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,136,/ bad single character option
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,137,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,138,"ption opt = OptionBuilder.withDescription( ""option description"" )"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,139,"create( '""' );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,140,"ail( ""IllegalArgumentException not caught"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,142,atch( IllegalArgumentException exp ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,143,/ success
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,146,/ bad character in option string
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,147,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,148,"ption opt = OptionBuilder.create( ""opt`"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,149,"ail( ""IllegalArgumentException not caught"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,151,atch( IllegalArgumentException exp ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,152,/ success
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,155,/ valid option
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,156,ry {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,157,"ption opt = OptionBuilder.create( ""opt"" );"
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,158,/ success
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,160,atch( IllegalArgumentException exp ) {
False,src/test/org/apache/commons/cli/OptionBuilderTest.java,src/test/org/apache/commons/cli/OptionBuilderTest.java,161,"ail( ""IllegalArgumentException caught"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,23, @author John Keyes (john at integralsource.com)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,24, @version $Revision$
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,26,ublic class OptionGroupTest extends TestCase
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,29,rivate Options _options = null;
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,30,rivate CommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,33,ublic static Test suite()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,35,eturn new TestSuite ( OptionGroupTest.class );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,38,ublic OptionGroupTest( String name )
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,40,uper( name );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,43,ublic void setUp()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,45,"ption file = new Option( ""f"", ""file"", false, ""file to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,46,"ption dir = new Option( ""d"", ""directory"", false, ""directory to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,47,ptionGroup group = new OptionGroup();
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,48,roup.addOption( file );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,49,roup.addOption( dir );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,50,options = new Options().addOptionGroup( group );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,52,"ption section = new Option( ""s"", ""section"", false, ""section to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,53,"ption chapter = new Option( ""c"", ""chapter"", false, ""chapter to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,54,ptionGroup group2 = new OptionGroup();
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,55,roup2.addOption( section );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,56,roup2.addOption( chapter );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,58,options.addOptionGroup( group2 );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,60,"ption importOpt = new Option( null, ""import"", false, ""section to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,61,"ption exportOpt = new Option( null, ""export"", false, ""chapter to process"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,62,ptionGroup group3 = new OptionGroup();
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,63,roup3.addOption( importOpt );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,64,roup3.addOption( exportOpt );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,65,options.addOptionGroup( group3 );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,67,"options.addOption( ""r"", ""revision"", false, ""revision number"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,70,ublic void tearDown()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,74,ublic void testSingleOptionFromGroup()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,76,"tring[] args = new String[] { ""-f"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,78,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,80,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,82,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,83,"ssertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,84,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,85,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,86,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,87,"ssertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,89,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,91,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,95,ublic void testSingleOption()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,97,"tring[] args = new String[] { ""-r"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,99,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,101,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,103,"ssertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,104,"ssertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,105,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,106,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,107,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,108,"ssertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,110,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,112,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,116,ublic void testTwoValidOptions()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,118,"tring[] args = new String[] { ""-r"", ""-f"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,120,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,122,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,124,"ssertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,125,"ssertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,126,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,127,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,128,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,129,"ssertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,131,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,133,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,137,ublic void testSingleLongOption()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,139,"tring[] args = new String[] { ""--file"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,141,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,143,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,145,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,146,"ssertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,147,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,148,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,149,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,150,"ssertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,152,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,154,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,158,ublic void testTwoValidLongOptions()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,160,"tring[] args = new String[] { ""--revision"", ""--file"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,162,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,164,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,166,"ssertTrue( ""Confirm -r is set"", cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,167,"ssertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,168,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,169,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,170,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,171,"ssertTrue( ""Confirm no extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,173,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,175,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,179,ublic void testNoOptionsExtraArgs()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,181,"tring[] args = new String[] { ""arg1"", ""arg2"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,183,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,185,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,187,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,188,"ssertTrue( ""Confirm -f is NOT set"", !cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,189,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,190,"ssertTrue( ""Confirm -s is NOT set"", !cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,191,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,192,"ssertTrue( ""Confirm TWO extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,194,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,196,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,200,ublic void testTwoOptionsFromGroup()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,202,"tring[] args = new String[] { ""-f"", ""-d"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,204,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,206,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,207,"ail( ""two arguments from group not allowed"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,209,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,211,f( !( e instanceof AlreadySelectedException ) )
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,213,"ail( ""incorrect exception caught:"" + e.getMessage() );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,218,ublic void testTwoLongOptionsFromGroup()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,220,"tring[] args = new String[] { ""--file"", ""--directory"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,222,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,224,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,225,"ail( ""two arguments from group not allowed"" );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,227,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,229,f( !( e instanceof AlreadySelectedException ) )
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,231,"ail( ""incorrect exception caught:"" + e.getMessage() );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,236,ublic void testTwoOptionsFromDifferentGroup()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,238,"tring[] args = new String[] { ""-f"", ""-s"" };"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,240,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,242,"ommandLine cl = parser.parse( _options, args);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,243,"ssertTrue( ""Confirm -r is NOT set"", !cl.hasOption(""r"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,244,"ssertTrue( ""Confirm -f is set"", cl.hasOption(""f"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,245,"ssertTrue( ""Confirm -d is NOT set"", !cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,246,"ssertTrue( ""Confirm -s is set"", cl.hasOption(""s"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,247,"ssertTrue( ""Confirm -c is NOT set"", !cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,248,"ssertTrue( ""Confirm NO extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,250,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,252,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,256,ublic void testValidLongOnlyOptions()
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,258,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,260,"ommandLine cl = parser.parse( _options, new String[]{""--export""});"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,261,"ssertTrue( ""Confirm --export is set"", cl.hasOption(""export"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,263,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,265,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,268,ry
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,270,"ommandLine cl = parser.parse( _options, new String[]{""--import""});"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,271,"ssertTrue( ""Confirm --import is set"", cl.hasOption(""import"") );"
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,273,atch (ParseException e)
False,src/test/org/apache/commons/cli/OptionGroupTest.java,src/test/org/apache/commons/cli/OptionGroupTest.java,275,ail( e.toString() );
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,18,mport java.util.ArrayList;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,19,mport java.util.Collection;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,21,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,22,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,23,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,26, @author Rob Oxspring roxspring@apache.org
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,27, @version $Revision$
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,29,ublic class OptionsTest extends TestCase
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,32,ublic static Test suite()
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,34,eturn new TestSuite ( OptionsTest.class );
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,37,ublic OptionsTest( String name )
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,39,uper( name );
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,42,ublic void setUp()
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,46,ublic void tearDown()
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,50,ublic void testHelpOptions(){
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,52,ption longOnly1 = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,53,"withLongOpt(""long-only1"")"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,54,create();
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,56,ption longOnly2 = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,57,"withLongOpt(""long-only2"")"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,58,create();
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,60,ption shortOnly1 = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,61,"create(""1"");"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,63,ption shortOnly2 = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,64,"create(""2"");"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,66,ption bothA = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,67,"withLongOpt(""bothA"")"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,68,"create(""a"");"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,70,ption bothB = OptionBuilder
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,71,"withLongOpt(""bothB"")"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,72,"create(""b"");"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,74,ptions options = new Options();
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,75,ptions.addOption(longOnly1);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,76,ptions.addOption(longOnly2);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,77,ptions.addOption(shortOnly1);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,78,ptions.addOption(shortOnly2);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,79,ptions.addOption(bothA);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,80,ptions.addOption(bothB);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,82,ollection allOptions = new ArrayList();
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,83,llOptions.add(longOnly1);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,84,llOptions.add(longOnly2);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,85,llOptions.add(shortOnly1);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,86,llOptions.add(shortOnly2);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,87,llOptions.add(bothA);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,88,llOptions.add(bothB);
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,90,ollection helpOptions = options.helpOptions();
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,92,"ssertTrue(""Everything in all should be in help"",helpOptions.containsAll(allOptions));"
False,src/test/org/apache/commons/cli/OptionsTest.java,src/test/org/apache/commons/cli/OptionsTest.java,93,"ssertTrue(""Everything in help should be in all"",allOptions.containsAll(helpOptions));"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,23, @author John Keyes (john at integralsource.com)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,24, @version $Revision$
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,26,ublic class ParseRequiredTest extends TestCase
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,29,rivate Options _options = null;
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,30,rivate CommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,32,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,33,eturn new TestSuite(ParseRequiredTest.class);
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,36,ublic ParseRequiredTest(String name)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,38,uper(name);
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,41,ublic void setUp()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,43,options = new Options()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,44,"addOption(""a"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,45,"enable-a"","
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,46,"alse,"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,47,"turn [a] on or off"")"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,48,"addOption( OptionBuilder.withLongOpt( ""bfile"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,49,hasArg()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,50,isRequired()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,51,"withDescription( ""set the value of [b]"" )"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,52,create( 'b' ) );
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,55,ublic void tearDown()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,60,ublic void testWithRequiredOption()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,62,"tring[] args = new String[] {  ""-b"", ""file"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,64,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,66,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,68,"ssertTrue( ""Confirm -a is NOT set"", !cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,69,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,70,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,71,"ssertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,73,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,75,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,79,ublic void testOptionAndRequiredOption()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,81,"tring[] args = new String[] {  ""-a"", ""-b"", ""file"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,83,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,85,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,87,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,88,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,89,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""file"") );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,90,"ssertTrue( ""Confirm NO of extra args"", cl.getArgList().size() == 0);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,92,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,94,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,98,ublic void testMissingRequiredOption()
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,100,"tring[] args = new String[] { ""-a"" };"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,102,ry
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,104,"ommandLine cl = parser.parse(_options,args);"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,105,"ail( ""exception should have been thrown"" );"
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,107,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,109,f( !( e instanceof MissingOptionException ) )
False,src/test/org/apache/commons/cli/ParseRequiredTest.java,src/test/org/apache/commons/cli/ParseRequiredTest.java,111,"ail( ""expected to catch MissingOptionException"" );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,22,ublic class ParseTest extends TestCase
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,25,rivate Options _options = null;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,26,rivate CommandLineParser _parser = null;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,28,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,29,eturn new TestSuite(ParseTest.class);
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,32,ublic ParseTest(String name)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,34,uper(name);
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,37,ublic void setUp()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,39,options = new Options()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,40,"addOption(""a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,41,"enable-a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,42,"alse,"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,43,"turn [a] on or off"")"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,44,"addOption(""b"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,45,"bfile"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,46,"rue,"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,47,"set the value of [b]"")"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,48,"addOption(""c"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,49,"copt"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,50,"alse,"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,51,"turn [c] on or off"");"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,53,parser = new PosixParser();
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,56,ublic void tearDown()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,61,ublic void testSimpleShort()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,63,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,64,"-b"", ""toast"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,65,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,67,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,69,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,71,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,72,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,73,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,74,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,76,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,78,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,82,ublic void testSimpleLong()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,84,"tring[] args = new String[] { ""--enable-a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,85,"--bfile"", ""toast"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,86,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,88,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,90,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,92,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,93,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,94,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,95,"ssertTrue( ""Confirm arg of --bfile"", cl.getOptionValue( ""bfile"" ).equals( ""toast"" ) );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,96,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,98,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,100,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,104,ublic void testComplexShort()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,106,"tring[] args = new String[] { ""-acbtoast"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,107,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,109,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,111,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,113,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,114,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,115,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,116,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,117,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,119,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,121,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,125,ublic void testExtraOption()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,127,"tring[] args = new String[] { ""-adbtoast"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,128,"foo"", ""bar"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,130,oolean caught = false;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,132,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,134,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,136,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,137,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,138,"ssertTrue( ""confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,139,"ssertTrue( ""Confirm size of extra args"", cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,141,atch (UnrecognizedOptionException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,143,aught = true;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,145,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,147,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,149,"ssertTrue( ""Confirm UnrecognizedOptionException caught"", caught );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,152,ublic void testMissingArg()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,155,"tring[] args = new String[] { ""-acb"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,157,oolean caught = false;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,159,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,161,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,163,atch (MissingArgumentException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,165,aught = true;
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,167,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,169,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,172,"ssertTrue( ""Confirm MissingArgumentException caught"", caught );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,175,ublic void testStop()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,177,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,178,"foober"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,179,"-btoast"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,181,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,183,"ommandLine cl = _parser.parse(_options, args, true);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,184,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,185,"ssertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,187,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,189,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,193,ublic void testMultiple()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,195,"tring[] args = new String[] { ""-c"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,196,"foobar"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,197,"-btoast"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,199,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,201,"ommandLine cl = _parser.parse(_options, args, true);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,202,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,203,"ssertTrue( ""Confirm  2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,205,"l = _parser.parse(_options, cl.getArgs() );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,207,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,208,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,209,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,210,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,211,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,213,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,215,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,219,ublic void testMultipleWithLong()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,221,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,222,"foobar"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,223,"--bfile"", ""toast"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,225,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,227,"ommandLine cl = _parser.parse(_options,args,"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,228,rue);
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,229,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,230,"ssertTrue( ""Confirm  3 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 3);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,232,"l = _parser.parse(_options, cl.getArgs() );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,234,"ssertTrue( ""Confirm -c is not set"", ! cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,235,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,236,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""toast"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,237,"ssertTrue( ""Confirm  1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,238,"ssertTrue( ""Confirm  value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""foobar"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,240,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,242,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,246,ublic void testDoubleDash()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,248,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,250,"-b"", ""toast"" };"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,252,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,254,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,256,"ssertTrue( ""Confirm -c is set"", cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,257,"ssertTrue( ""Confirm -b is not set"", ! cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,258,"ssertTrue( ""Confirm 2 extra args: "" + cl.getArgList().size(), cl.getArgList().size() == 2);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,261,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,263,ail( e.toString() );
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,267,ublic void testSingleDash()
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,269,"tring[] args = new String[] { ""--copt"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,270,"-b"", ""-"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,271,"-a"","
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,274,ry
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,276,"ommandLine cl = _parser.parse(_options, args);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,278,"ssertTrue( ""Confirm -a is set"", cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,279,"ssertTrue( ""Confirm -b is set"", cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,280,"ssertTrue( ""Confirm arg of -b"", cl.getOptionValue(""b"").equals(""-"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,281,"ssertTrue( ""Confirm 1 extra arg: "" + cl.getArgList().size(), cl.getArgList().size() == 1);"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,282,"ssertTrue( ""Confirm value of extra arg: "" + cl.getArgList().get(0), cl.getArgList().get(0).equals(""-"") );"
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,284,atch (ParseException e)
False,src/test/org/apache/commons/cli/ParseTest.java,src/test/org/apache/commons/cli/ParseTest.java,286,ail( e.toString() );
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,18,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,19,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,22, Test case for the PatternOptionBuilder class
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,24, @author Henri Yandell
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,26,ublic class PatternOptionBuilderTest
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,27,xtends TestCase
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,29,ublic static void main( String[] args )
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,31,tring[] testName = { PatternOptionBuilderTest.class.getName() };
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,32,unit.textui.TestRunner.main(testName);
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,35,ublic static TestSuite suite()
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,37,eturn new TestSuite(PatternOptionBuilderTest.class);
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,40,ublic PatternOptionBuilderTest( String s )
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,42,uper( s );
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,45,ublic void testSimplePattern()
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,47,ry {
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,48,"ptions options = PatternOptionBuilder.parsePattern(""a:b@cde>f+n%t/"");"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,49,"tring[] args = new String[] { ""-c"", ""-a"", ""foo"", ""-b"", ""java.util.Vector"", ""-e"", ""build.xml"", ""-f"", ""java.util.Calendar"", ""-n"", ""4.5"", ""-t"", ""http://jakarta.apache.org/"" };"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,51,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,52,"ommandLine line = parser.parse(options,args);"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,54,/ tests the char methods of CommandLine that delegate to
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,55,/ the String methods
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,56,"ssertEquals(""flag a"", ""foo"", line.getOptionValue(""a""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,57,"ssertEquals(""flag a"", ""foo"", line.getOptionValue('a'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,58,"ssertEquals(""string flag a"", ""foo"", line.getOptionObject(""a""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,59,"ssertEquals(""string flag a"", ""foo"", line.getOptionObject('a'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,60,"ssertEquals(""object flag b"", new java.util.Vector(), line.getOptionObject(""b""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,61,"ssertEquals(""object flag b"", new java.util.Vector(), line.getOptionObject('b'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,62,"ssertEquals(""boolean true flag c"", true, line.hasOption(""c""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,63,"ssertEquals(""boolean true flag c"", true, line.hasOption('c'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,64,"ssertEquals(""boolean false flag d"", false, line.hasOption(""d""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,65,"ssertEquals(""boolean false flag d"", false, line.hasOption('d'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,66,"ssertEquals(""file flag e"", new java.io.File(""build.xml""), line.getOptionObject(""e""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,67,"ssertEquals(""file flag e"", new java.io.File(""build.xml""), line.getOptionObject('e'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,68,"ssertEquals(""class flag f"", java.util.Calendar.class, line.getOptionObject(""f""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,69,"ssertEquals(""class flag f"", java.util.Calendar.class, line.getOptionObject('f'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,70,"ssertEquals(""number flag n"", new Float(4.5), line.getOptionObject(""n""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,71,"ssertEquals(""number flag n"", new Float(4.5), line.getOptionObject('n'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,72,"ssertEquals(""url flag t"", new java.net.URL(""http://jakarta.apache.org/""), line.getOptionObject(""t""));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,73,"ssertEquals(""url flag t"", new java.net.URL(""http://jakarta.apache.org/""), line.getOptionObject('t'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,74,// DATES NOT SUPPORTED YET.
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,75,"/      assertEquals(""number flag t"", new java.util.Date(1023400137276L), line.getOptionObject('z'));"
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,76,"/     input is:  ""Thu Jun 06 17:48:57 EDT 2002"""
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,78,atch( ParseException exp ) {
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,79,ail( exp.getMessage() );
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,81,atch( java.net.MalformedURLException exp ) {
False,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,src/test/org/apache/commons/cli/PatternOptionBuilderTest.java,82,ail( exp.getMessage() );
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,18,mport java.io.ByteArrayOutputStream;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,19,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,22,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,25, Test case for the HelpFormatter class
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,27, @author Slawek Zachcial
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,28, @author John Keyes ( john at integralsource.com )
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,30,ublic class TestHelpFormatter extends TestCase
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,32,ublic static void main( String[] args )
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,34,tring[] testName = { TestHelpFormatter.class.getName() };
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,35,unit.textui.TestRunner.main(testName);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,38,ublic static TestSuite suite()
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,40,eturn new TestSuite(TestHelpFormatter.class);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,43,ublic TestHelpFormatter( String s )
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,45,uper( s );
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,48,ublic void testFindWrapPos()
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,49,hrows Exception
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,51,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,53,"tring text = ""This is a test."";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,54,/text width should be max 8; the wrap postition is 7
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,55,"ssertEquals(""wrap position"", 7, hf.findWrapPos(text, 8, 0));"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,56,/starting from 8 must give -1 - the wrap pos is after end
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,57,"ssertEquals(""wrap position 2"", -1, hf.findWrapPos(text, 8, 8));"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,58,/if there is no a good position before width to make a wrapping look for the next one
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,59,"ext = ""aaaa aa"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,60,"ssertEquals(""wrap position 3"", 4, hf.findWrapPos(text, 3, 0));"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,63,ublic void testPrintWrapped()
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,64,hrows Exception
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,66,tringBuffer sb = new StringBuffer();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,67,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,69,"tring text = ""This is a test."";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,70,tring expected;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,72,"xpected = ""This is a"" + hf.getNewLine() + ""test."";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,73,"f.renderWrappedText(sb, 12, 0, text);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,74,"ssertEquals(""single line text"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,76,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,77,"xpected = ""This is a"" + hf.getNewLine() + ""    test."";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,78,"f.renderWrappedText(sb, 12, 4, text);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,79,"ssertEquals(""single line padded text"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,81,ext =
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,82,"aaaa aaaa aaaa"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,83,"aaaaaa"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,84,"aaaaa"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,86,xpected = text;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,87,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,88,"f.renderWrappedText(sb, 16, 0, text);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,89,"ssertEquals(""multi line text"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,91,xpected =
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,92,"aaaa aaaa aaaa"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,93,"    aaaaaa"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,94,"    aaaaa"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,95,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,96,"f.renderWrappedText(sb, 16, 4, text);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,97,"ssertEquals(""multi-line padded text"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,100,ublic void testPrintOptions()
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,101,hrows Exception
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,103,tringBuffer sb = new StringBuffer();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,104,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,105,inal int leftPad = 1;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,106,inal int descPad = 3;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,107,inal String lpad = hf.createPadding(leftPad);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,108,inal String dpad = hf.createPadding(descPad);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,109,ptions options = null;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,110,tring expected = null;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,112,"ptions = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,113,"xpected = lpad + ""-a"" + dpad + ""aaaa aaaa aaaa aaaa aaaa"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,114,"f.renderOptions(sb, 60, options, leftPad, descPad);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,115,"ssertEquals(""simple non-wrapped option"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,117,"nt nextLineTabStop = leftPad+descPad+""-a"".length();"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,118,xpected =
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,119,"pad + ""-a"" + dpad + ""aaaa aaaa aaaa"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,120,"f.createPadding(nextLineTabStop) + ""aaaa aaaa"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,121,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,122,"f.renderOptions(sb, nextLineTabStop+17, options, leftPad, descPad);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,123,"ssertEquals(""simple wrapped option"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,126,"ptions = new Options().addOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,127,"xpected = lpad + ""-a,--aaa"" + dpad + ""dddd dddd dddd dddd"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,128,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,129,"f.renderOptions(sb, 60, options, leftPad, descPad);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,130,"ssertEquals(""long non-wrapped option"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,132,"extLineTabStop = leftPad+descPad+""-a,--aaa"".length();"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,133,xpected =
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,134,"pad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,135,"f.createPadding(nextLineTabStop) + ""dddd dddd"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,136,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,137,"f.renderOptions(sb, 25, options, leftPad, descPad);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,138,"ssertEquals(""long wrapped option"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,140,ptions = new Options().
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,141,"ddOption(""a"", ""aaa"", false, ""dddd dddd dddd dddd"")."
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,142,"ddOption(""b"", false, ""feeee eeee eeee eeee"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,143,xpected =
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,144,"pad + ""-a,--aaa"" + dpad + ""dddd dddd"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,145,"f.createPadding(nextLineTabStop) + ""dddd dddd"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,146,"pad + ""-b      "" + dpad + ""feeee eeee"" + hf.getNewLine() +"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,147,"f.createPadding(nextLineTabStop) + ""eeee eeee"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,148,b.setLength(0);
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,149,"f.renderOptions(sb, 25, options, leftPad, descPad);"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,150,"ssertEquals(""multiple wrapped options"", expected, sb.toString());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,153,ublic void testAutomaticUsage()
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,154,hrows Exception
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,156,elpFormatter hf = new HelpFormatter();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,157,ptions options = null;
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,158,"tring expected = ""usage: app [-a]"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,159,yteArrayOutputStream out = new ByteArrayOutputStream( );
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,160,rintWriter pw = new PrintWriter( out );
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,162,"ptions = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"");"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,163,"f.printUsage( pw, 60, ""app"", options );"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,164,w.flush();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,165,"ssertEquals(""simple auto usage"", expected, out.toString().trim());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,166,ut.reset();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,168,"xpected = ""usage: app [-a] [-b]"";"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,169,"ptions = new Options().addOption(""a"", false, ""aaaa aaaa aaaa aaaa aaaa"")"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,170,"addOption(""b"", false, ""bbb"" );"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,171,"f.printUsage( pw, 60, ""app"", options );"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,172,w.flush();
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,173,"ssertEquals(""simple auto usage"", expected, out.toString().trim());"
False,src/test/org/apache/commons/cli/TestHelpFormatter.java,src/test/org/apache/commons/cli/TestHelpFormatter.java,174,ut.reset();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,23,mport java.util.Properties;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,25,ublic class ValueTest extends TestCase
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,28,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,29,eturn new TestSuite(ValueTest.class);
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,32,rivate CommandLine _cl = null;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,33,rivate CommandLine _clOptional = null;
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,34,rivate Options opts = new Options();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,36,ublic ValueTest(String name)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,38,uper(name);
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,41,ublic void setUp()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,43,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,44,"alse,"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,45,"toggle -a"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,47,"pts.addOption(""b"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,48,"rue,"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,49,"set -b"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,51,"pts.addOption(""c"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,52,"c"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,53,"alse,"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,54,"toggle -c"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,56,"pts.addOption(""d"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,57,"d"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,58,"rue,"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,59,"set -d"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,61,pts.addOption( OptionBuilder.hasOptionalArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,62,create( 'e') );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,64,pts.addOption( OptionBuilder.hasOptionalArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,65,"withLongOpt( ""fish"" )"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,66,create( ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,68,pts.addOption( OptionBuilder.hasOptionalArgs()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,69,"withLongOpt( ""gravy"" )"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,70,create( ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,72,pts.addOption( OptionBuilder.hasOptionalArgs( 2 )
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,73,"withLongOpt( ""hide"" )"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,74,create( ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,76,pts.addOption( OptionBuilder.hasOptionalArgs( 2 )
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,77,create( 'i' ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,79,pts.addOption( OptionBuilder.hasOptionalArgs( )
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,80,create( 'j' ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,82,"pts.addOption( OptionBuilder.hasArgs( ).withValueSeparator( ',' )"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,83,create( 'k' ) );
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,85,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,86,"-b"", ""foo"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,87,"--c"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,88,"--d"", ""bar"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,91,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,93,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,94,"cl = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,96,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,98,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,102,ublic void tearDown()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,107,ublic void testShortNoArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,109,"ssertTrue( _cl.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,110,"ssertNull( _cl.getOptionValue(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,113,ublic void testShortWithArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,115,"ssertTrue( _cl.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,116,"ssertNotNull( _cl.getOptionValue(""b"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,117,"ssertEquals( _cl.getOptionValue(""b""), ""foo"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,120,ublic void testLongNoArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,122,"ssertTrue( _cl.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,123,"ssertNull( _cl.getOptionValue(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,126,ublic void testLongWithArg()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,128,"ssertTrue( _cl.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,129,"ssertNotNull( _cl.getOptionValue(""d"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,130,"ssertEquals( _cl.getOptionValue(""d""), ""bar"");"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,133,ublic void testShortOptionalArgNoValue()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,135,"tring[] args = new String[] { ""-e"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,137,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,139,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,140,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,141,"ssertTrue( cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,142,"ssertNull( cmd.getOptionValue(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,144,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,146,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,150,ublic void testShortOptionalArgValue()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,152,"tring[] args = new String[] { ""-e"", ""everything"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,154,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,156,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,157,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,158,"ssertTrue( cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,159,"ssertEquals( ""everything"", cmd.getOptionValue(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,161,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,163,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,167,ublic void testLongOptionalNoValue()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,169,"tring[] args = new String[] { ""--fish"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,171,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,173,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,174,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,175,"ssertTrue( cmd.hasOption(""fish"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,176,"ssertNull( cmd.getOptionValue(""fish"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,178,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,180,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,184,ublic void testLongOptionalArgValue()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,186,"tring[] args = new String[] { ""--fish"", ""face"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,188,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,190,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,191,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,192,"ssertTrue( cmd.hasOption(""fish"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,193,"ssertEquals( ""face"", cmd.getOptionValue(""fish"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,195,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,197,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,201,ublic void testShortOptionalArgValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,203,"tring[] args = new String[] { ""-j"", ""ink"", ""idea"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,205,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,207,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,208,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,209,"ssertTrue( cmd.hasOption(""j"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,210,"ssertEquals( ""ink"", cmd.getOptionValue(""j"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,211,"ssertEquals( ""ink"", cmd.getOptionValues(""j"")[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,212,"ssertEquals( ""idea"", cmd.getOptionValues(""j"")[1] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,213,"ssertEquals( cmd.getArgs().length, 0 );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,215,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,217,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,221,ublic void testLongOptionalArgValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,223,"tring[] args = new String[] { ""--gravy"", ""gold"", ""garden"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,225,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,227,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,228,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,229,"ssertTrue( cmd.hasOption(""gravy"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,230,"ssertEquals( ""gold"", cmd.getOptionValue(""gravy"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,231,"ssertEquals( ""gold"", cmd.getOptionValues(""gravy"")[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,232,"ssertEquals( ""garden"", cmd.getOptionValues(""gravy"")[1] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,233,"ssertEquals( cmd.getArgs().length, 0 );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,235,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,237,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,241,ublic void testShortOptionalNArgValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,243,"tring[] args = new String[] { ""-i"", ""ink"", ""idea"", ""isotope"", ""ice"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,245,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,247,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,248,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,249,"ssertTrue( cmd.hasOption(""i"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,250,"ssertEquals( ""ink"", cmd.getOptionValue(""i"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,251,"ssertEquals( ""ink"", cmd.getOptionValues(""i"")[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,252,"ssertEquals( ""idea"", cmd.getOptionValues(""i"")[1] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,253,"ssertEquals( cmd.getArgs().length, 2 );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,254,"ssertEquals( ""isotope"", cmd.getArgs()[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,255,"ssertEquals( ""ice"", cmd.getArgs()[1] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,257,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,259,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,263,ublic void testLongOptionalNArgValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,265,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,266,"--hide"", ""house"", ""hair"", ""head"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,269,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,271,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,273,"ommandLine cmd = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,274,"ssertTrue( cmd.hasOption(""hide"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,275,"ssertEquals( ""house"", cmd.getOptionValue(""hide"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,276,"ssertEquals( ""house"", cmd.getOptionValues(""hide"")[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,277,"ssertEquals( ""hair"", cmd.getOptionValues(""hide"")[1] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,278,"ssertEquals( cmd.getArgs().length, 1 );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,279,"ssertEquals( ""head"", cmd.getArgs()[0] );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,281,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,283,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,287,ublic void testPropertyOptionSingularValue()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,289,roperties properties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,290,"roperties.setProperty( ""hide"", ""seek"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,292,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,294,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,296,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,297,"ssertTrue( cmd.hasOption(""hide"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,298,"ssertEquals( ""seek"", cmd.getOptionValue(""hide"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,299,"ssertTrue( !cmd.hasOption(""fake"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,301,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,303,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,307,ublic void testPropertyOptionFlags()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,309,roperties properties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,310,"roperties.setProperty( ""a"", ""true"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,311,"roperties.setProperty( ""c"", ""yes"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,312,"roperties.setProperty( ""e"", ""1"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,314,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,316,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,318,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,319,"ssertTrue( cmd.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,320,"ssertTrue( cmd.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,321,"ssertTrue( cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,323,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,325,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,328,roperties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,329,"roperties.setProperty( ""a"", ""false"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,330,"roperties.setProperty( ""c"", ""no"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,331,"roperties.setProperty( ""e"", ""0"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,332,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,334,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,335,"ssertTrue( !cmd.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,336,"ssertTrue( !cmd.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,337,"ssertTrue( !cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,339,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,341,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,344,roperties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,345,"roperties.setProperty( ""a"", ""TRUE"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,346,"roperties.setProperty( ""c"", ""nO"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,347,"roperties.setProperty( ""e"", ""TrUe"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,348,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,350,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,351,"ssertTrue( cmd.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,352,"ssertTrue( !cmd.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,353,"ssertTrue( cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,355,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,357,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,360,roperties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,361,"roperties.setProperty( ""a"", ""just a string"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,362,"roperties.setProperty( ""e"", """" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,363,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,365,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,366,"ssertTrue( !cmd.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,367,"ssertTrue( !cmd.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,368,"ssertTrue( !cmd.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,370,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,372,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,377,ublic void testPropertyOptionMultipleValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,379,roperties properties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,380,"roperties.setProperty( ""k"", ""one,two"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,382,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,384,tring[] values = new String[] {
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,385,"one"", ""two"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,387,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,389,"ommandLine cmd = parser.parse(opts, null, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,390,"ssertTrue( cmd.hasOption(""k"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,391,"ssertTrue( Arrays.equals( values, cmd.getOptionValues('k') ) );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,393,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,395,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,399,ublic void testPropertyOverrideValues()
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,401,tring[] args = new String[] {
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,402,"-j"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,403,"found"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,404,"-i"","
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,405,"ink"""
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,408,roperties properties = new Properties();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,409,"roperties.setProperty( ""j"", ""seek"" );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,410,ry
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,412,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,413,"ommandLine cmd = parser.parse(opts, args, properties);"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,414,"ssertTrue( cmd.hasOption(""j"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,415,"ssertEquals( ""found"", cmd.getOptionValue(""j"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,416,"ssertTrue( cmd.hasOption(""i"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,417,"ssertEquals( ""ink"", cmd.getOptionValue(""i"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,418,"ssertTrue( !cmd.hasOption(""fake"") );"
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,420,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValueTest.java,src/test/org/apache/commons/cli/ValueTest.java,422,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,2, Copyright 2001-2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,16,ackage org.apache.commons.cli;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,18,mport java.util.Arrays;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,20,mport junit.framework.Test;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,21,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,22,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,24,ublic class ValuesTest extends TestCase
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,26,** CommandLine instance */
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,27,rivate CommandLine _cmdline = null;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,28,rivate Option _option = null;
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,30,ublic static Test suite() {
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,31,eturn new TestSuite( ValuesTest.class );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,34,ublic ValuesTest( String name )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,36,uper( name );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,39,ublic void setUp()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,41,ptions opts = new Options();
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,43,"pts.addOption(""a"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,44,"alse,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,45,"toggle -a"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,47,"pts.addOption(""b"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,48,"rue,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,49,"set -b"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,51,"pts.addOption(""c"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,52,"c"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,53,"alse,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,54,"toggle -c"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,56,"pts.addOption(""d"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,57,"d"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,58,"rue,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,59,"set -d"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,61,"pts.addOption( OptionBuilder.withLongOpt( ""e"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,62,hasArgs()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,63,"withDescription( ""set -e "")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,64,create( 'e' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,66,"pts.addOption(""f"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,67,"f"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,68,"alse,"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,69,"jk"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,71,"pts.addOption( OptionBuilder.withLongOpt( ""g"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,72,hasArgs( 2 )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,73,"withDescription( ""set -g"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,74,create( 'g' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,76,"pts.addOption( OptionBuilder.withLongOpt( ""h"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,77,hasArgs( 2 )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,78,"withDescription( ""set -h"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,79,create( 'h' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,81,"pts.addOption( OptionBuilder.withLongOpt( ""i"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,82,"withDescription( ""set -i"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,83,create( 'i' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,85,"pts.addOption( OptionBuilder.withLongOpt( ""j"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,86,hasArgs( )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,87,"withDescription( ""set -j"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,88,withValueSeparator( '=' )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,89,create( 'j' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,91,"pts.addOption( OptionBuilder.withLongOpt( ""k"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,92,hasArgs( )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,93,"withDescription( ""set -k"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,94,withValueSeparator( '=' )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,95,create( 'k' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,97,"option = OptionBuilder.withLongOpt( ""m"" )"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,98,hasArgs( )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,99,"withDescription( ""set -m"")"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,100,withValueSeparator( )
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,101,create( 'm' );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,103,pts.addOption( _option );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,105,"tring[] args = new String[] { ""-a"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,106,"-b"", ""foo"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,107,"--c"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,108,"--d"", ""bar"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,109,"-e"", ""one"", ""two"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,110,"-f"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,111,"arg1"", ""arg2"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,112,"-g"", ""val1"", ""val2"" , ""arg3"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,113,"-h"", ""val1"", ""-i"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,114,"-h"", ""val2"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,115,"-jkey=value"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,116,"-j"", ""key=value"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,117,"-kkey1=value1"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,118,"-kkey2=value2"","
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,119,"-mkey=value""};"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,121,ommandLineParser parser = new PosixParser();
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,123,ry
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,125,"cmdline = parser.parse(opts,args);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,127,atch (ParseException e)
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,129,"ail(""Cannot setUp() CommandLine: "" + e.toString());"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,133,ublic void tearDown()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,138,ublic void testShortArgs()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,140,"ssertTrue( _cmdline.hasOption(""a"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,141,"ssertTrue( _cmdline.hasOption(""c"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,143,"ssertNull( _cmdline.getOptionValues(""a"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,144,"ssertNull( _cmdline.getOptionValues(""c"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,147,ublic void testShortArgsWithValue()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,149,"ssertTrue( _cmdline.hasOption(""b"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,150,"ssertTrue( _cmdline.getOptionValue(""b"").equals(""foo""));"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,151,"ssertTrue( _cmdline.getOptionValues(""b"").length == 1);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,153,"ssertTrue( _cmdline.hasOption(""d"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,154,"ssertTrue( _cmdline.getOptionValue(""d"").equals(""bar""));"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,155,"ssertTrue( _cmdline.getOptionValues(""d"").length == 1);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,158,ublic void testMultipleArgValues()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,160,"tring[] result = _cmdline.getOptionValues(""e"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,161,"tring[] values = new String[] { ""one"", ""two"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,162,"ssertTrue( _cmdline.hasOption(""e"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,163,"ssertTrue( _cmdline.getOptionValues(""e"").length == 2);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,164,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues(""e"") ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,167,ublic void testTwoArgValues()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,169,"tring[] result = _cmdline.getOptionValues(""g"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,170,"tring[] values = new String[] { ""val1"", ""val2"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,171,"ssertTrue( _cmdline.hasOption(""g"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,172,"ssertTrue( _cmdline.getOptionValues(""g"").length == 2);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,173,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues(""g"") ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,176,ublic void testComplexValues()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,178,"tring[] result = _cmdline.getOptionValues(""h"");"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,179,"tring[] values = new String[] { ""val1"", ""val2"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,180,"ssertTrue( _cmdline.hasOption(""i"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,181,"ssertTrue( _cmdline.hasOption(""h"") );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,182,"ssertTrue( _cmdline.getOptionValues(""h"").length == 2);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,183,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues(""h"") ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,186,ublic void testExtraArgs()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,188,"tring[] args = new String[] { ""arg1"", ""arg2"", ""arg3"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,189,ssertTrue( _cmdline.getArgs().length == 3 );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,190,"ssertTrue( Arrays.equals( args, _cmdline.getArgs() ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,193,ublic void testCharSeparator()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,195,/ tests the char methods of CommandLine that delegate to
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,196,/ the String methods
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,197,"tring[] values = new String[] { ""key"", ""value"", ""key"", ""value"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,198,"ssertTrue( _cmdline.hasOption( ""j"" ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,199,ssertTrue( _cmdline.hasOption( 'j' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,200,"ssertEquals( 4, _cmdline.getOptionValues( ""j"" ).length );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,201,"ssertEquals( 4, _cmdline.getOptionValues( 'j' ).length );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,202,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""j"" ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,203,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'j' ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,205,"alues = new String[] { ""key1"", ""value1"", ""key2"", ""value2"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,206,"ssertTrue( _cmdline.hasOption( ""k"" ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,207,ssertTrue( _cmdline.hasOption( 'k' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,208,"ssertTrue( _cmdline.getOptionValues( ""k"" ).length == 4 );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,209,ssertTrue( _cmdline.getOptionValues( 'k' ).length == 4 );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,210,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""k"" ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,211,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'k' ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,213,"alues = new String[] { ""key"", ""value"" };"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,214,"ssertTrue( _cmdline.hasOption( ""m"" ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,215,ssertTrue( _cmdline.hasOption( 'm' ) );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,216,"ssertTrue( _cmdline.getOptionValues( ""m"" ).length == 2);"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,217,ssertTrue( _cmdline.getOptionValues( 'm' ).length == 2);
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,218,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( ""m"" ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,219,"ssertTrue( Arrays.equals( values, _cmdline.getOptionValues( 'm' ) ) );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,223, jkeyes - commented out this test as the new architecture
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,224, breaks this type of functionality.  I have left the test
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,225, here in case I get a brainwave on how to resolve this.
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,228,ublic void testGetValue()
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,230,/ the 'm' option
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,231,ssertTrue( _option.getValues().length == 2 );
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,232,"ssertEquals( _option.getValue(), ""key"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,233,"ssertEquals( _option.getValue( 0 ), ""key"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,234,"ssertEquals( _option.getValue( 1 ), ""value"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,236,ry {
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,237,"ssertEquals( _option.getValue( 2 ), ""key"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,238,"ail( ""IndexOutOfBounds not caught"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,240,atch( IndexOutOfBoundsException exp ) {
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,244,ry {
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,245,"ssertEquals( _option.getValue( -1 ), ""key"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,246,"ail( ""IndexOutOfBounds not caught"" );"
False,src/test/org/apache/commons/cli/ValuesTest.java,src/test/org/apache/commons/cli/ValuesTest.java,248,atch( IndexOutOfBoundsException exp ) {
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,2, Copyright 2004 The Apache Software Foundation
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,14, limitations under the License.
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,16,ackage org.apache.commons.cli.bug;
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,18,mport org.apache.commons.cli.*;
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,20,mport java.io.PrintWriter;
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,21,mport java.io.StringWriter;
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,23,mport junit.framework.TestCase;
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,26, http://issues.apache.org/jira/browse/CLI-18
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,28,ublic class BugCLI18Test extends TestCase {
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,30,ublic void testCLI18() {
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,31,ptions options = new Options();
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,32,"ptions.addOption(new Option(""a"",""aaa"",false,""aaaaaaa""));"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,33,"ptions.addOption(new Option(null,""bbb"",false,""bbbbbbb dksh fkshd fkhs dkfhsdk fhskd hksdks dhfowehfsdhfkjshf skfhkshf sf jkshfk sfh skfh skf f""));"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,34,"ptions.addOption(new Option(""c"",null,false,""ccccccc""));"
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,36,elpFormatter formatter = new HelpFormatter();
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,37,tringWriter out = new StringWriter();
False,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,src/test/org/apache/commons/cli/bug/BugCLI18Test.java,39,"ormatter.printHelp(new PrintWriter(out),80, ""foobar"", ""dsfkfsh kdh hsd hsdh fkshdf ksdh fskdh fsdh fkshfk sfdkjhskjh fkjh fkjsh khsdkj hfskdhf skjdfh ksf khf s"", options, 2, 2, ""blort j jgj j jg jhghjghjgjhgjhg jgjhgj jhg jhg hjg jgjhghjg jhg hjg jhgjg jgjhghjg jg jgjhgjgjg jhg jhgjh"" + '\r' + '\n' + ""rarrr"", true);"
