is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,19,mport java.util.HashMap;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,23,mport java.util.Map;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,22,import java.util.Set;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,23,import java.util.HashSet;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,46,rivate Map options = new HashMap();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,48,** the option name map */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,49,rivate Map names = new HashMap();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,46,private Set options = new HashSet();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,52,rivate Map hashcodeMap = new HashMap();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,54,** the processed options */
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,55,rivate Option[] optionsArray;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,49,//    private Set allOptions = new HashSet();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,73,eturn options.containsKey(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,67,return options.contains( resolveOption(opt));
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,97,f (!options.containsKey(opt))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,91,Option option = resolveOption(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,92,if (option == null)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,102,bject type = ((Option) options.get(opt)).getType();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,97,Object type = option.getType();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,153,pt = Util.stripLeadingHyphens(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,tring key = opt;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,148,Option key = resolveOption( opt );
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,157,f (names.containsKey(opt))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,150,if (options.contains(key))
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,159,ey = (String) names.get(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,152,return key.getValues();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,162,f (options.containsKey(key))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,155,return null;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,159,* <p>Retrieves the option object given the long or short option as a String</p>
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,160,* @param opt short or long name of the option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,161,* @return Canonicalized option
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,163,private Option resolveOption( String opt )
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,165,opt = Util.stripLeadingHyphens(opt);
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,166,for ( Iterator it = options.iterator(); it.hasNext(); )
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,164,eturn ((Option) options.get(key)).getValues();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,168,Option option = (Option) it.next();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,169,if (opt.equals(option.getOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,171,return option;
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,173,if (opt.equals( option.getLongOpt()))
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,175,return option;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,276,"ashcodeMap.put(new Integer(opt.hashCode()), opt);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,278,tring key = opt.getKey();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,280,f (key == null)
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,282,ey = opt.getLongOpt();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,284,lse
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,286,"ames.put(opt.getLongOpt(), key);"
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,289,"ptions.put(key, opt);"
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,288,options.add(opt);
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,300,eturn hashcodeMap.values().iterator();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,299,return options.iterator();
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,310,ollection processed = options.values();
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,309,Collection processed = options;
False,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,314,ptionsArray = new Option[processed.size()];
True,src/java/org/apache/commons/cli/CommandLine.java,src/java/org/apache/commons/cli/CommandLine.java,312,Option[] optionsArray = new Option[processed.size()];
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,600,public boolean equals( Object o )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,602,if ( this == o )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,604,return true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,606,if ( o == null || getClass() != o.getClass() )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,608,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,611,Option option = (Option) o;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,614,if ( opt != null ? !opt.equals( option.opt ) : option.opt != null )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,616,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,618,if ( longOpt != null ? !longOpt.equals( option.longOpt ) : option.longOpt != null )
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,620,return false;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,623,return true;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,626,public int hashCode()
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,628,int result;
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,629,result = ( opt != null ? opt.hashCode() : 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,630,result = 31 * result + ( longOpt != null ? longOpt.hashCode() : 0 );
True,src/java/org/apache/commons/cli/Option.java,src/java/org/apache/commons/cli/Option.java,631,return result;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,17,package org.apache.commons.cli.bug;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,20,import org.apache.commons.cli.CommandLine;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,21,import org.apache.commons.cli.Option;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,22,import org.apache.commons.cli.OptionBuilder;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,23,import org.apache.commons.cli.Options;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,24,import org.apache.commons.cli.ParseException;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,25,import org.apache.commons.cli.PosixParser;
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,28,* @author brianegge
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,30,public class BugCLI13Test
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,31,extends TestCase
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,33,public void testCLI13()
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,34,throws ParseException
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,36,"final String debugOpt = ""debug"";"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,37,Option debug = OptionBuilder
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,38,.withArgName( debugOpt )
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,39,".withDescription( ""turn on debugging"" )"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,40,.withLongOpt( debugOpt )
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,41,.hasArg()
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,42,.create( 'd' );
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,43,Options options = new Options();
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,44,options.addOption( debug );
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,45,"CommandLine commandLine = new PosixParser().parse( options, new String[]{""-d"", ""true""} );"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,47,"assertEquals(""true"", commandLine.getOptionValue( debugOpt ));"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,48,"assertEquals(""true"", commandLine.getOptionValue( 'd' ));"
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,49,assertTrue(commandLine.hasOption( 'd'));
True,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,src/test/org/apache/commons/cli/bug/BugCLI13Test.java,50,assertTrue(commandLine.hasOption( debugOpt));
