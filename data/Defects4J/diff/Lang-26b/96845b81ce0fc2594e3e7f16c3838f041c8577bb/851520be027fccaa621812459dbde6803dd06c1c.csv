is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,77,his(32);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,77,this(CAPACITY);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,215, Clears the string builder (convenience Collections API style method).
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,215,* Checks is the string builder is empty (convenience Collections API style method).
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,217, This method is the same as {@link #setLength(int)} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,217,* This method is the same as checking {@link #length()} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,219,* @return <code>true</code> if the size is <code>0</code>.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,220,ublic void clear() {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,221,ize = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,221,public boolean isEmpty() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,222,return size == 0;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,225, Checks is the string builder is empty (convenience Collections API style method).
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,226,* Clears the string builder (convenience Collections API style method).
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,227, This method is the same as checking {@link #length()} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,228,* This method does not reduce the size of the internal character buffer.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,229,"* To do that, call <code>clear()</code> followed by {@link #minimizeCapacity()}."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,230,* <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,231,* This method is the same as {@link #setLength(int)} and is provided to match the
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,229, @return <code>true</code> if the size is <code>0</code>.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,231,ublic boolean isEmpty() {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,232,eturn size == 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,234,public void clear() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,235,size = 0;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,463,if (startIndex < 0 || startIndex > chars.length) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,464,"throw new StringIndexOutOfBoundsException(""startIndex must be valid"");"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,551," Appends an array placing separators between each pair of values, but"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,552, not after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,557,"* Appends an array placing separators between each value, but"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,558,* not before the first or after the last.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,573," Appends a collection placing separators between each pair of values, but"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,574, not after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,579,"* Appends a collection placing separators between each value, but"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,580,* not before the first or after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,602,"* Appends an iterator placing separators between each value, but"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,603,* not before the first or after the last.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,604,* Appending a null iterator will have no effect.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,605,* Each object is appended using {@link #append(Object)}.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,607,* @param it  the iterator to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,608,"* @param separator  the separator to use, null means no separator"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,609,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,611,"public StrBuilder appendWithSeparators(Iterator it, String separator) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,612,if (it != null) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,613,"separator = (separator == null ? """" : separator);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,614,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,615,while (it.hasNext()) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,616,append(separator);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,617,append(it.next());
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,620,return this;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,614, Appends an object to the builder padding on the left to a fixed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,643,* Appends an object to the builder padding on the left to a fixed width.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,644,* The <code>toString</code> of the object is used.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,618, @param obj  the object to append
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,619, @param length  the fixed field width
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,648,"* @param obj  the object to append, null uses null text"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,649,"* @param width  the fixed field width, zero or negative has no effect"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,623,"ublic StrBuilder appendFixedLengthPadLeft(Object obj, int length, char padChar) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,624,f (length > 0) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,625,nsureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,653,"public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,654,if (width > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,655,ensureCapacity(size + width);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,628,f (strLen >= length) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,629,"tr.getChars(strLen - length, strLen, buf, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,658,if (strLen >= width) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,659,"str.getChars(strLen - width, strLen, buf, size);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,631,nt padLen = length - strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,661,int padLen = width - strLen;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,637,ize += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,667,size += width;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,673,* Appends an object to the builder padding on the left to a fixed width.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,674,* The <code>String.valueOf</code> of the object is used.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,675,"* If the formatted value is larger than the length, the left hand side is lost."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,677,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,678,"* @param width  the fixed field width, zero or negative has no effect"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,679,* @param padChar  the pad character to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,680,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,682,"public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,683,"return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,688,* The <code>toString</code> of the object is used.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,647, @param obj  the object to append
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,648, @param length  the fixed field width
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,692,"* @param obj  the object to append, null uses null text"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,693,"* @param width  the fixed field width, zero or negative has no effect"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,652,"ublic StrBuilder appendFixedLengthPadRight(Object obj, int length, char padChar) {"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,653,f (length > 0) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,654,nsureCapacity(size + length);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,697,"public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,698,if (width > 0) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,699,ensureCapacity(size + width);
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,657,f (strLen >= length) {
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,658,"tr.getChars(strLen - length, strLen, buf, size);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,702,if (strLen >= width) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,703,"str.getChars(0, strLen, buf, size);"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,660,nt padLen = length - strLen;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,705,int padLen = width - strLen;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,666,ize += length;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,711,size += width;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,717,* Appends an object to the builder padding on the right to a fixed length.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,718,* The <code>String.valueOf</code> of the object is used.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,719,"* If the object is larger than the length, the right hand side is lost."
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,721,* @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,722,"* @param width  the fixed field width, zero or negative has no effect"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,723,* @param padChar  the pad character to use
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,724,"* @return this, to enable chaining"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,726,"public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar) {"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,727,"return appendFixedWidthPadRight(String.valueOf(value), width, padChar);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1463,//     * Gets a String version of the string builder by calling the internal
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1464,//     * constructor of String by reflection.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1465,//     * <p>
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1466,//     * WARNING: You must not use the StrBuilder after calling this method
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1467,"//     * as the buffer is now shared with the String object. To ensure this,"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1468,"//     * the internal character array is set to null, so you will get"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1469,//     * NullPointerExceptions on all method calls.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1471,//     * @return the builder as a String
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1473,//    public String toSharedString() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1474,//        try {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1475,//            Constructor con = String.class.getDeclaredConstructor(
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1476,"//                new Class[] {int.class, int.class, char[].class});"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1477,//            con.setAccessible(true);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1478,//            char[] buffer = buf;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1479,//            buf = null;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1480,//            size = -1;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1481,//            nullText = null;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1482,//            return (String) con.newInstance(
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1483,"//                new Object[] {new Integer(0), new Integer(size), buffer});"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1485,//        } catch (Exception ex) {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1486,//            ex.printStackTrace();
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1487,"//            throw new UnsupportedOperationException(""StrBuilder.toSharedString is unsupported: "" + ex.getMessage());"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1505,"* Gets a StringBuffer version of the string builder, creating a"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1506,* new instance each time the method is called.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1508,* @return the builder as a StringBuffer
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1510,public StringBuffer toStringBuffer() {
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1511,"return new StringBuffer(size).append(buf, 0, size);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,2,* Copyright 2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,22,import java.util.Iterator;
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,37,"/** Test subclass of Object, with a toString method. */"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,43, Main.
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,45,* Main method.
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,45, @param args
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,46,"            command line arguments, ignored"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,47,"* @param args  command line arguments, ignored"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,73,ublic void testAppend() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,75,public void testConstructors() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,76,StrBuilder sb0 = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,77,"assertEquals(32, sb0.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,78,"assertEquals(0, sb0.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,79,"assertEquals(0, sb0.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,81,StrBuilder sb1 = new StrBuilder(32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,82,"assertEquals(32, sb1.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,83,"assertEquals(0, sb1.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,84,"assertEquals(0, sb1.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,86,StrBuilder sb2 = new StrBuilder(0);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,87,"assertEquals(32, sb2.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,88,"assertEquals(0, sb2.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,89,"assertEquals(0, sb2.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,91,StrBuilder sb3 = new StrBuilder(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,92,"assertEquals(32, sb3.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,93,"assertEquals(0, sb3.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,94,"assertEquals(0, sb3.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,96,StrBuilder sb4 = new StrBuilder(1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,97,"assertEquals(1, sb4.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,98,"assertEquals(0, sb4.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,99,"assertEquals(0, sb4.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,101,StrBuilder sb5 = new StrBuilder((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,102,"assertEquals(32, sb5.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,103,"assertEquals(0, sb5.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,104,"assertEquals(0, sb5.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,106,"StrBuilder sb6 = new StrBuilder("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,107,"assertEquals(32, sb6.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,108,"assertEquals(0, sb6.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,109,"assertEquals(0, sb6.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,111,"StrBuilder sb7 = new StrBuilder(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,112,"assertEquals(35, sb7.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,113,"assertEquals(3, sb7.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,114,"assertEquals(3, sb7.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,118,public void testCapacityAndLength() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,120,"assertEquals(32, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,121,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,122,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,123,assertTrue(sb.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,125,sb.minimizeCapacity();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,126,"assertEquals(0, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,127,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,128,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,129,assertTrue(sb.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,131,sb.ensureCapacity(32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,132,assertTrue(sb.capacity() >= 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,133,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,134,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,135,assertTrue(sb.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,137,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,138,assertTrue(sb.capacity() >= 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,139,"assertEquals(3, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,140,"assertEquals(3, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,141,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,143,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,144,assertTrue(sb.capacity() >= 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,145,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,146,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,147,assertTrue(sb.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,149,"sb.append(""123456789012345678901234567890123"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,150,assertTrue(sb.capacity() > 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,151,"assertEquals(33, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,152,"assertEquals(33, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,153,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,155,sb.ensureCapacity(16);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,156,assertTrue(sb.capacity() > 16);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,157,"assertEquals(33, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,158,"assertEquals(33, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,159,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,161,sb.minimizeCapacity();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,162,"assertEquals(33, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,163,"assertEquals(33, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,164,"assertEquals(33, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,165,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,167,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,168,sb.setLength(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,169,"fail(""setLength(-1) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,170,} catch (StringIndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,171,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,174,sb.setLength(33);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,175,"assertEquals(33, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,176,"assertEquals(33, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,177,"assertEquals(33, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,178,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,180,sb.setLength(16);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,181,assertTrue(sb.capacity() >= 16);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,182,"assertEquals(16, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,183,"assertEquals(16, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,184,"assertEquals(""1234567890123456"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,185,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,187,sb.setLength(32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,188,assertTrue(sb.capacity() >= 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,189,"assertEquals(32, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,190,"assertEquals(32, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,191,"assertEquals(""1234567890123456\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,192,assertTrue(sb.isEmpty() == false);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,194,sb.setLength(0);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,195,assertTrue(sb.capacity() >= 32);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,196,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,197,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,198,assertTrue(sb.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,202,public void testLength() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,203,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,204,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,206,"sb.append(""Hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,207,"assertEquals(5, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,210,public void testSetLength() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,211,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,212,"sb.append(""Hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,213,sb.setLength(2);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,214,"assertEquals(""He"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,216,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,217,sb.setLength(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,218,"fail(""setLength(-1) expected StringIndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,219,} catch (StringIndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,220,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,225,public void testCapacity() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,226,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,227,"assertEquals(sb.buf.length, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,229,"sb.append(""HelloWorldHelloWorldHelloWorldHelloWorld"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,230,"assertEquals(sb.buf.length, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,233,public void testEnsureCapacity() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,234,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,235,sb.ensureCapacity(2);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,236,"assertEquals(true, sb.capacity() >= 2);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,238,sb.ensureCapacity(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,239,"assertEquals(true, sb.capacity() >= 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,241,"sb.append(""HelloWorld"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,242,sb.ensureCapacity(40);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,243,"assertEquals(true, sb.capacity() >= 40);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,246,public void testMinimizeCapacity() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,247,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,248,sb.minimizeCapacity();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,249,"assertEquals(0, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,251,"sb.append(""HelloWorld"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,252,sb.minimizeCapacity();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,253,"assertEquals(10, sb.capacity());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,257,public void testSize() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,258,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,259,"assertEquals(0, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,261,"sb.append(""Hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,262,"assertEquals(5, sb.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,265,public void testIsEmpty() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,266,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,267,"assertEquals(true, sb.isEmpty());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,269,"sb.append(""Hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,270,"assertEquals(false, sb.isEmpty());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,272,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,273,"assertEquals(true, sb.isEmpty());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,276,public void testClear() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,277,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,278,"sb.append(""Hello"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,279,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,280,"assertEquals(0, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,281,"assertEquals(true, sb.buf.length >= 5);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,285,public void testCharAt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,286,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,287,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,288,sb.charAt(0);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,289,"fail(""charAt(0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,290,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,291,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,293,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,294,sb.charAt(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,295,"fail(""charAt(-1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,296,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,297,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,299,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,300,"assertEquals('f', sb.charAt(0));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,301,"assertEquals('o', sb.charAt(1));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,302,"assertEquals('o', sb.charAt(2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,303,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,304,sb.charAt(-1);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,305,"fail(""charAt(-1) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,306,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,307,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,309,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,310,sb.charAt(3);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,311,"fail(""charAt(3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,312,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,313,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,317,public void testSetCharAt() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,318,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,319,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,320,"sb.setCharAt(0, 'f');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,321,"fail(""setCharAt(0,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,322,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,323,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,325,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,326,"sb.setCharAt(-1, 'f');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,327,"fail(""setCharAt(-1,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,328,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,329,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,331,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,332,"sb.setCharAt(0, 'b');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,333,"sb.setCharAt(1, 'a');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,334,"sb.setCharAt(2, 'r');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,335,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,336,"sb.setCharAt(3, '!');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,337,"fail(""setCharAt(3,) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,338,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,339,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,341,"assertEquals(""bar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,345,public void testNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,346,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,347,"assertEquals(null, sb.getNullText());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,349,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,350,"assertEquals(""null"", sb.getNullText());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,352,"sb.setNullText("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,353,"assertEquals(null, sb.getNullText());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,355,"sb.setNullText(""NULL"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,356,"assertEquals(""NULL"", sb.getNullText());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,358,sb.setNullText((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,359,"assertEquals(null, sb.getNullText());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,363,public void testAppendWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,364,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,365,"sb.setNullText(""NULL"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,368,sb.appendNull();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,369,"assertEquals(""NULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,371,sb.append((Object) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,372,"assertEquals(""NULLNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,374,sb.append(FOO);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,375,"assertEquals(""NULLNULLfoo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,377,sb.append((String) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,378,"assertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,380,"sb.append("""");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,381,"assertEquals(""NULLNULLfooNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,383,"sb.append(""bar"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,384,"assertEquals(""NULLNULLfooNULLbar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,386,sb.append((StringBuffer) null);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,387,"assertEquals(""NULLNULLfooNULLbarNULL"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,389,"sb.append(new StringBuffer(""baz""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,390,"assertEquals(""NULLNULLfooNULLbarNULLbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,394,public void testAppend_Object() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,395,StrBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,102,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,103,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,420,"sb.append(new StrBuilder(""yes""));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,421,"assertEquals(""foobarbazyes"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,424,public void testAppend_CharArray() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,425,StrBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,145,/ These next two cases slip by the error condition checks but are silent modifications
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,146,"b.append(new char[]{'b', 'a', 'r'}, -1, 0);"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,147,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,467,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,468,"sb.append(new char[]{'b', 'a', 'r'}, -1, 3);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,469,"fail(""append(char[], -1, 3) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,470,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,471,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,474,try {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,475,"sb.append(new char[]{'b', 'a', 'r'}, 4, 0);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,476,"fail(""append(char[], 4, 0) expected IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,477,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,478,// expected
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,488,public void testAppend_Primitive() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,489,StrBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,156,"ssertEquals(""foobartrue"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,491,"assertEquals(""true"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,159,"ssertEquals(""foobartruefalse"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,494,"assertEquals(""truefalse"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,162,"ssertEquals(""foobartruefalse!"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,164,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,165,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,497,"assertEquals(""truefalse!"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,500,public void testAppend_PrimitiveNumber() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,501,StrBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,173,b.append(2.3F);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,508,sb.append(2.3f);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,176,b.append(4.5D);
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,511,sb.append(4.5d);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,180,ublic void testAppendFixedLength() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,516,public void testAppendPadding() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,183,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,518,"sb.append(""foo"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,519,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,521,"sb.appendPadding(-1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,522,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,524,"sb.appendPadding(0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,525,"assertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,527,"sb.appendPadding(1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,528,"assertEquals(""foo-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,185,"b.appendFixedLengthPadLeft(""foo"", -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,530,"sb.appendPadding(16, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,531,"assertEquals(20, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,532,//            12345678901234567890
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,533,"assertEquals(""foo-----------------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,537,public void testAppendFixedWidthPadLeft() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,538,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,539,"sb.appendFixedWidthPadLeft(""foo"", -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,188,"b.appendFixedLengthPadLeft(""foo"", 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,542,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,543,"sb.appendFixedWidthPadLeft(""foo"", 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,191,"b.appendFixedLengthPadLeft(""foo"", 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,546,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,547,"sb.appendFixedWidthPadLeft(""foo"", 1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,195,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,197,"b.appendFixedLengthPadLeft(""foo"", 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,551,"sb.appendFixedWidthPadLeft(""foo"", 2, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,201,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,203,"b.appendFixedLengthPadLeft(""foo"", 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,555,"sb.appendFixedWidthPadLeft(""foo"", 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,207,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,209,"b.appendFixedLengthPadLeft(""foo"", 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,559,"sb.appendFixedWidthPadLeft(""foo"", 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,213,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,215,"b.appendFixedLengthPadLeft(""foo"", 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,563,"sb.appendFixedWidthPadLeft(""foo"", 10, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,217,/ 1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,565,//            1234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,221,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,569,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,570,"sb.appendFixedWidthPadRight(null, 5, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,571,"assertEquals(""-null"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,223,"b.appendFixedLengthPadRight(""foo"", -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,574,public void testAppendFixedWidthPadLeft_int() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,575,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,576,"sb.appendFixedWidthPadLeft(123, -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,226,"b.appendFixedLengthPadRight(""foo"", 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,579,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,580,"sb.appendFixedWidthPadLeft(123, 0, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,231, TODO: appears the implementation for appendFixedLengthPadRight is broken?
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,233," sb.appendFixedLengthPadRight(""foo"", 1, '-'); assertEquals(""f"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,235," sb.clear(); assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,237," sb.appendFixedLengthPadRight(""foo"", 2, '-'); assertEquals(""fo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,239," sb.clear(); assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,241," sb.appendFixedLengthPadRight(""foo"", 3, '-'); assertEquals(""foo"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,243," sb.clear(); assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,245," sb.appendFixedLengthPadRight(""foo"", 4, '-'); assertEquals(""foo-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,247," sb.clear(); assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,249," sb.appendFixedLengthPadRight(""foo"", 10, '-'); assertEquals(10, sb.length()); // 1234567890"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,250," assertEquals(""foo-------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,583,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,584,"sb.appendFixedWidthPadLeft(123, 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,585,"assertEquals(""3"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,255,ublic void testAppendPadding() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,587,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,588,"sb.appendFixedWidthPadLeft(123, 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,589,"assertEquals(""23"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,591,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,592,"sb.appendFixedWidthPadLeft(123, 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,593,"assertEquals(""123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,595,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,596,"sb.appendFixedWidthPadLeft(123, 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,597,"assertEquals(""-123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,599,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,600,"sb.appendFixedWidthPadLeft(123, 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,601,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,602,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,603,"assertEquals(""-------123"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,607,public void testAppendFixedWidthPadRight() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,258,"b.append(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,259,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,609,"sb.appendFixedWidthPadRight(""foo"", -1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,610,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,261,"b.appendPadding(-1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,262,"ssertEquals(""foo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,612,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,613,"sb.appendFixedWidthPadRight(""foo"", 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,614,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,264,"b.appendPadding(0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,616,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,617,"sb.appendFixedWidthPadRight(""foo"", 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,618,"assertEquals(""f"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,620,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,621,"sb.appendFixedWidthPadRight(""foo"", 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,622,"assertEquals(""fo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,624,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,625,"sb.appendFixedWidthPadRight(""foo"", 3, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,267,"b.appendPadding(1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,628,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,629,"sb.appendFixedWidthPadRight(""foo"", 4, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,270,"b.appendPadding(16, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,271,"ssertEquals(20, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,272,/ 12345678901234567890
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,273,"ssertEquals(""foo-----------------"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,632,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,633,"sb.appendFixedWidthPadRight(""foo"", 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,634,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,635,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,636,"assertEquals(""foo-------"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,276,ublic void testAppendWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,638,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,639,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,640,"sb.appendFixedWidthPadRight(null, 5, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,641,"assertEquals(""null-"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,644,public void testAppendFixedWidthPadRight_int() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,279,"b.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,646,"sb.appendFixedWidthPadRight(123, -1, '-');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,282,b.appendNull();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,283,"ssertEquals(""null"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,285,b.append((Object) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,286,"ssertEquals(""nullnull"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,288,b.append(FOO);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,289,"ssertEquals(""nullnullfoo"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,649,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,650,"sb.appendFixedWidthPadRight(123, 0, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,651,"assertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,291,b.append((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,292,"ssertEquals(""nullnullfoonull"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,653,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,654,"sb.appendFixedWidthPadRight(123, 1, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,655,"assertEquals(""1"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,294,"b.append("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,295,"ssertEquals(""nullnullfoonull"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,657,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,658,"sb.appendFixedWidthPadRight(123, 2, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,659,"assertEquals(""12"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,297,"b.append(""bar"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,298,"ssertEquals(""nullnullfoonullbar"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,661,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,662,"sb.appendFixedWidthPadRight(123, 3, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,663,"assertEquals(""123"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,300,b.append((StringBuffer) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,301,"ssertEquals(""nullnullfoonullbarnull"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,665,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,666,"sb.appendFixedWidthPadRight(123, 4, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,667,"assertEquals(""123-"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,303,"b.append(new StringBuffer(""baz""));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,304,"ssertEquals(""nullnullfoonullbarnullbaz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,669,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,670,"sb.appendFixedWidthPadRight(123, 10, '-');"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,671,"assertEquals(10, sb.length());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,672,//            1234567890
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,673,"assertEquals(""123-------"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,307,ublic void testAppendWithSeparators() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,677,public void testAppendWithSeparators_Array() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,310,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,682,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,686,sb.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,322,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,328,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,333,b.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,334,"ssertEquals("""", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,699,public void testAppendWithSeparators_Collection() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,700,StrBuilder sb = new StrBuilder();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,704,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,708,sb.clear();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,346,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,352,"ssertEquals("""", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,358,ublic void testAppendWithSeparatorsWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,721,public void testAppendWithSeparators_Iterator() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,361,"b.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,723,"sb.appendWithSeparators((Iterator) null, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,364,"b.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,365,"ssertEquals(""foo,null,baz"", sb.toString());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,727,"sb.appendWithSeparators(Collections.EMPTY_LIST.iterator(), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,370,"b.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,371,"ssertEquals(""foo,null,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,374,ublic void testCapacityAndLength() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,376,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,377,"ssertEquals(32, sb.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,378,"ssertEquals(0, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,379,"ssertEquals(0, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,380,ssertTrue(sb.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,382,b.minimizeCapacity();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,383,"ssertEquals(0, sb.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,384,"ssertEquals(0, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,385,"ssertEquals(0, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,386,ssertTrue(sb.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,388,b.ensureCapacity(32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,389,ssertTrue(sb.capacity() >= 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,390,"ssertEquals(0, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,391,"ssertEquals(0, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,392,ssertTrue(sb.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,394,"b.append(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,395,ssertTrue(sb.capacity() >= 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,396,"ssertEquals(3, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,397,"ssertEquals(3, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,398,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,401,ssertTrue(sb.capacity() >= 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,402,"ssertEquals(0, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,403,"ssertEquals(0, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,404,ssertTrue(sb.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,406,"b.append(""123456789012345678901234567890123"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,407,ssertTrue(sb.capacity() > 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,408,"ssertEquals(33, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,409,"ssertEquals(33, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,410,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,412,b.ensureCapacity(16);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,413,ssertTrue(sb.capacity() > 16);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,414,"ssertEquals(33, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,415,"ssertEquals(33, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,416,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,418,b.minimizeCapacity();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,419,"ssertEquals(33, sb.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,420,"ssertEquals(33, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,421,"ssertEquals(33, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,422,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,424,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,425,b.setLength(-1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,426,"ail(""setLength(-1) expected StringIndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,427, catch (StringIndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,428,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,431,b.setLength(33);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,432,"ssertEquals(33, sb.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,433,"ssertEquals(33, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,434,"ssertEquals(33, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,435,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,437,b.setLength(16);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,438,ssertTrue(sb.capacity() >= 16);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,439,"ssertEquals(16, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,440,"ssertEquals(16, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,441,"ssertEquals(""1234567890123456"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,442,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,444,b.setLength(32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,445,ssertTrue(sb.capacity() >= 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,446,"ssertEquals(32, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,447,"ssertEquals(32, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,448,"ssertEquals(""1234567890123456\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,449,ssertTrue(sb.isEmpty() == false);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,451,b.setLength(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,452,ssertTrue(sb.capacity() >= 32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,453,"ssertEquals(0, sb.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,454,"ssertEquals(0, sb.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,455,ssertTrue(sb.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,458,ublic void testCharArray() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,459,/ TODO
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,731,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,732,"assertEquals(""foo,bar,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,462,ublic void testConstructor() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,734,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,735,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", ""bar"", ""baz""}).iterator(), null);"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,736,"assertEquals(""foobarbaz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,464,trBuilder sb0 = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,465,ssertTrue(sb0.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,466,trBuilder sb1 = new StrBuilder(32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,467,ssertTrue(sb1.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,468,trBuilder sb2 = new StrBuilder(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,469,ssertTrue(sb2.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,470,trBuilder sb3 = new StrBuilder(-1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,471,ssertTrue(sb3.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,472,trBuilder sb4 = new StrBuilder(1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,473,ssertTrue(sb4.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,474,trBuilder sb5 = new StrBuilder((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,475,ssertTrue(sb5.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,476,"trBuilder sb6 = new StrBuilder("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,477,ssertTrue(sb6.isEmpty());
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,478,"trBuilder sb7 = new StrBuilder(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,479,ssertFalse(sb7.isEmpty());
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,738,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,739,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}).iterator(), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,740,"assertEquals(""foo,,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,482,ublic void testGetSetChar() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,743,public void testAppendWithSeparatorsWithNullText() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,745,"sb.setNullText(""null"");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,746,"sb.appendWithSeparators(new Object[]{""foo"", null, ""baz""}, "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,747,"assertEquals(""foo,null,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,486,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,487,b.charAt(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,488,"ail(""charAt(0) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,489, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,490,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,493,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,494,b.charAt(-1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,495,"ail(""charAt(-1) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,496, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,497,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,500,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,501,"b.setCharAt(0, 'f');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,502,"ail(""setCharAt(0,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,503, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,504,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,507,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,508,"b.setCharAt(-1, 'f');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,509,"ail(""setCharAt(-1,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,510, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,511,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,514,"b.append(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,515,"ssertEquals('f', sb.charAt(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,516,"ssertEquals('o', sb.charAt(1));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,517,"ssertEquals('o', sb.charAt(2));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,519,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,520,b.charAt(3);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,521,"ail(""charAt(3) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,522, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,523,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,526,"b.setCharAt(0, 'b');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,527,"b.setCharAt(1, 'a');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,528,"b.setCharAt(2, 'r');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,530,ry {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,531,"b.setCharAt(3, '!');"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,532,"ail(""setCharAt(3,) expected IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,533, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,534,/ expected
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,537,"ssertEquals('b', sb.charAt(0));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,538,"ssertEquals('a', sb.charAt(1));"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,539,"ssertEquals('r', sb.charAt(2));"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,749,sb.clear();
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,750,"sb.appendWithSeparators(Arrays.asList(new Object[]{""foo"", null, ""baz""}), "","");"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,751,"assertEquals(""foo,null,baz"", sb.toString());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,542,ublic void testInitialCapacityAndLength() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,544,trBuilder sb0 = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,545,"ssertEquals(32, sb0.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,546,"ssertEquals(0, sb0.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,547,"ssertEquals(0, sb0.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,549,trBuilder sb1 = new StrBuilder(32);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,550,"ssertEquals(32, sb1.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,551,"ssertEquals(0, sb1.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,552,"ssertEquals(0, sb1.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,554,trBuilder sb2 = new StrBuilder(0);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,555,"ssertEquals(32, sb2.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,556,"ssertEquals(0, sb2.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,557,"ssertEquals(0, sb2.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,559,trBuilder sb3 = new StrBuilder(-1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,560,"ssertEquals(32, sb3.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,561,"ssertEquals(0, sb3.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,562,"ssertEquals(0, sb3.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,564,trBuilder sb4 = new StrBuilder(1);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,565,"ssertEquals(1, sb4.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,566,"ssertEquals(0, sb4.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,567,"ssertEquals(0, sb4.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,569,trBuilder sb5 = new StrBuilder((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,570,"ssertEquals(32, sb5.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,571,"ssertEquals(0, sb5.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,572,"ssertEquals(0, sb5.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,574,"trBuilder sb6 = new StrBuilder("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,575,"ssertEquals(32, sb6.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,576,"ssertEquals(0, sb6.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,577,"ssertEquals(0, sb6.size());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,579,"trBuilder sb7 = new StrBuilder(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,580,"ssertEquals(35, sb7.capacity());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,581,"ssertEquals(3, sb7.length());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,582,"ssertEquals(3, sb7.size());"
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,755,public void testCharArray() {
True,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,756,// TODO
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,902,ublic void testNullText() {
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,904,trBuilder sb = new StrBuilder();
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,905,"ssertEquals(null, sb.getNullText());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,907,"b.setNullText(""null"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,908,"ssertEquals(""null"", sb.getNullText());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,910,"b.setNullText("""");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,911,"ssertEquals(null, sb.getNullText());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,913,"b.setNullText(""foo"");"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,914,"ssertEquals(""foo"", sb.getNullText());"
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,916,b.setNullText((String) null);
False,src/test/org/apache/commons/lang/text/StrBuilderTest.java,src/test/org/apache/commons/lang/text/StrBuilderTest.java,917,"ssertEquals(null, sb.getNullText());"
