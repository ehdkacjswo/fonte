is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,43,rivate static final List cAvailableLocaleList;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,43,private static final List<Locale> cAvailableLocaleList;
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,46,rivate static Set cAvailableLocaleSet; // lazily created by availableLocaleSet()
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,46,private static Set<Locale> cAvailableLocaleSet; // lazily created by availableLocaleSet()
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,48,rivate static final Map cLanguagesByCountry = Collections.synchronizedMap(new HashMap());
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,48,"private static final Map<String, List<Locale>> cLanguagesByCountry = Collections.synchronizedMap(new HashMap<String, List<Locale>>());"
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,50,rivate static final Map cCountriesByLanguage = Collections.synchronizedMap(new HashMap());
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,50,"private static final Map<String, List<Locale>> cCountriesByLanguage = Collections.synchronizedMap(new HashMap<String, List<Locale>>());"
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,52,ist list = Arrays.asList(Locale.getAvailableLocales());
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,52,List<Locale> list = Arrays.asList(Locale.getAvailableLocales());
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,146,ublic static List localeLookupList(Locale locale) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,146,public static List<Locale> localeLookupList(Locale locale) {
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,168,"ublic static List localeLookupList(Locale locale, Locale defaultLocale) {"
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,169,ist list = new ArrayList(4);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,168,"public static List<Locale> localeLookupList(Locale locale, Locale defaultLocale) {"
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,169,List<Locale> list = new ArrayList<Locale>(4);
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,195,ublic static List availableLocaleList() {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,195,public static List<Locale> availableLocaleList() {
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,209,ublic static synchronized Set availableLocaleSet() {
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,210,et set = cAvailableLocaleSet;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,209,public static synchronized Set<Locale> availableLocaleSet() {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,210,Set<Locale> set = cAvailableLocaleSet;
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,212,et = new HashSet(availableLocaleList());
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,212,set = new HashSet<Locale>(availableLocaleList());
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,240,ublic static List languagesByCountry(String countryCode) {
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,241,ist langs = (List) cLanguagesByCountry.get(countryCode);  //syncd
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,240,public static List<Locale> languagesByCountry(String countryCode) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,241,List<Locale> langs = cLanguagesByCountry.get(countryCode);  //syncd
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,244,angs = new ArrayList();
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,245,ist locales = availableLocaleList();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,244,langs = new ArrayList<Locale>();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,245,List<Locale> locales = availableLocaleList();
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,247,ocale locale = (Locale) locales.get(i);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,247,Locale locale = locales.get(i);
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,255,angs = Collections.EMPTY_LIST;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,255,langs = Collections.emptyList();
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,272,ublic static List countriesByLanguage(String languageCode) {
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,273,ist countries = (List) cCountriesByLanguage.get(languageCode);  //syncd
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,272,public static List<Locale> countriesByLanguage(String languageCode) {
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,273,List<Locale> countries = cCountriesByLanguage.get(languageCode);  //syncd
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,276,ountries = new ArrayList();
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,277,ist locales = availableLocaleList();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,276,countries = new ArrayList<Locale>();
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,277,List<Locale> locales = availableLocaleList();
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,279,ocale locale = (Locale) locales.get(i);
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,279,Locale locale = locales.get(i);
False,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,288,ountries = Collections.EMPTY_LIST;
True,src/java/org/apache/commons/lang/LocaleUtils.java,src/java/org/apache/commons/lang/LocaleUtils.java,288,countries = Collections.emptyList();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,92,onstructor[] cons = LocaleUtils.class.getDeclaredConstructors();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,92,Constructor<?>[] cons = LocaleUtils.class.getDeclaredConstructors();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,263,ist localeList = defaultLocale == null ?
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,263,List<Locale> localeList = defaultLocale == null ?
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,350,ist list = LocaleUtils.availableLocaleList();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,351,ist list2 = LocaleUtils.availableLocaleList();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,350,List<Locale> list = LocaleUtils.availableLocaleList();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,351,List<Locale> list2 = LocaleUtils.availableLocaleList();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,357,ist jdkLocaleList = Arrays.asList(jdkLocaleArray);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,357,List<Locale> jdkLocaleList = Arrays.asList(jdkLocaleArray);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,366,et set = LocaleUtils.availableLocaleSet();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,367,et set2 = LocaleUtils.availableLocaleSet();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,366,Set<Locale> set = LocaleUtils.availableLocaleSet();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,367,Set<Locale> set2 = LocaleUtils.availableLocaleSet();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,373,ist jdkLocaleList = Arrays.asList(jdkLocaleArray);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,374,et jdkLocaleSet = new HashSet(jdkLocaleList);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,373,List<Locale> jdkLocaleList = Arrays.asList(jdkLocaleArray);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,374,Set<Locale> jdkLocaleSet = new HashSet<Locale>(jdkLocaleList);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,383,et set = LocaleUtils.availableLocaleSet();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,383,Set<Locale> set = LocaleUtils.availableLocaleSet();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,404,ist list = LocaleUtils.languagesByCountry(country);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,405,ist list2 = LocaleUtils.languagesByCountry(country);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,404,List<Locale> list = LocaleUtils.languagesByCountry(country);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,405,List<Locale> list2 = LocaleUtils.languagesByCountry(country);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,410,terator iterator = list.iterator();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,410,Iterator<Locale> iterator = list.iterator();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,414,ocale locale = (Locale) iterator.next();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,414,Locale locale = iterator.next();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,454,ist list = LocaleUtils.countriesByLanguage(language);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,455,ist list2 = LocaleUtils.countriesByLanguage(language);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,454,List<Locale> list = LocaleUtils.countriesByLanguage(language);
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,455,List<Locale> list2 = LocaleUtils.countriesByLanguage(language);
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,460,terator iterator = list.iterator();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,460,Iterator<Locale> iterator = list.iterator();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,464,ocale locale = (Locale) iterator.next();
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,464,Locale locale = iterator.next();
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,495,rivate static void assertUnmodifiableCollection(Collection coll) {
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,495,private static void assertUnmodifiableCollection(Collection<?> coll) {
False,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,497,"oll.add(""Unmodifiable"");"
True,src/test/org/apache/commons/lang/LocaleUtilsTest.java,src/test/org/apache/commons/lang/LocaleUtilsTest.java,497,coll.add(null);
