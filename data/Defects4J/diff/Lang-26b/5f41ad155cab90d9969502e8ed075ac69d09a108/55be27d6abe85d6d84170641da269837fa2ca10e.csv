is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,553,/ allElementsOfType collection
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,557," <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,558, if the argument collection  is <code>null</code> or has elements that
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,559, are not of type <code>clazz</code> or a subclass.</p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,561, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,562," Validate.allElementsOfType(collection, String.class, ""Collection has invalid elements"");"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,563, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,565," @param collection  the collection to check, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,566," @param clazz  the <code>Class</code> which the collection's elements are expected to be, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,567, @param message  the exception message if the <code>Collection</code> has elements not of type <code>clazz</code>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,568, @since 2.1
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,570,"ublic static void allElementsOfType(Collection<?> collection, Class<?> clazz, String message) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,571,alidate.notNull(collection);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,572,alidate.notNull(clazz);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,573,or (Iterator<?> it = collection.iterator(); it.hasNext(); ) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,574,f (clazz.isInstance(it.next()) == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,575,hrow new IllegalArgumentException(message);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,581, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,582," Validate an argument, throwing <code>IllegalArgumentException</code> if the argument collection is"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,583, <code>null</code> or has elements that are not of type <code>clazz</code> or a subclass.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,584, </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,586, <pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,587," Validate.allElementsOfType(collection, String.class);"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,588, </pre>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,590, <p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,591, The message in the exception is 'The validated collection contains an element not of type clazz at index: '.
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,592, </p>
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,594," @param collection  the collection to check, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,595," @param clazz  the <code>Class</code> which the collection's elements are expected to be, not null"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,596, @since 2.1
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,598,"ublic static void allElementsOfType(Collection<?> collection, Class<?> clazz) {"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,599,alidate.notNull(collection);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,600,alidate.notNull(clazz);
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,601,nt i = 0;
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,602,or (Iterator<?> it = collection.iterator(); it.hasNext(); i++) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,603,f (clazz.isInstance(it.next()) == false) {
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,604,"hrow new IllegalArgumentException(""The validated collection contains an element not of type """
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,605," clazz.getName() + "" at index: "" + i);"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,629,ublic void testAllElementsOfType() {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,630,ist<Object> coll = new ArrayList<Object>();
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,631,"oll.add(""a"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,632,"oll.add(""b"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,633,"alidate.allElementsOfType(coll, String.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,634,"alidate.allElementsOfType(coll, String.class);"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,635,ry {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,636,"alidate.allElementsOfType(coll, Integer.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,637,"ail(""Expecting IllegalArgumentException"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,638, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,639,"ssertEquals(""MSG"", ex.getMessage());"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,641,"oll.set(1, Boolean.FALSE);"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,642,ry {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,643,"alidate.allElementsOfType(coll, String.class);"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,644,"ail(""Expecting IllegalArgumentException"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,645, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,646,"ssertEquals(""The validated collection contains an element not of type java.lang.String at index: 1"", ex.getMessage());"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,649,oll = new ArrayList<Object>();
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,650,oll.add(new Integer(5));
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,651,oll.add(new Double(2.0d));
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,652,"alidate.allElementsOfType(coll, Number.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,653,ry {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,654,"alidate.allElementsOfType(coll, Integer.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,655,"ail(""Expecting IllegalArgumentException"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,656, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,657,"ssertEquals(""MSG"", ex.getMessage());"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,659,ry {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,660,"alidate.allElementsOfType(coll, Double.class, ""MSG"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,661,"ail(""Expecting IllegalArgumentException"");"
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,662, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/ValidateTest.java,src/test/org/apache/commons/lang/ValidateTest.java,663,"ssertEquals(""MSG"", ex.getMessage());"
