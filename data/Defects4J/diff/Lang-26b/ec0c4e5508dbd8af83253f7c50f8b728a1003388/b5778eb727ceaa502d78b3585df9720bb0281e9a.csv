is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,29,/ TODO: Make class final and use fields instead of getters?
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,30,ublic class Range<T> implements Serializable {
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,29,public final class Range<T> implements Serializable {
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,177,"eturn (comparator.compare(element, getMinimum()) > -1) && (comparator.compare(element, getMaximum()) < 1);"
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,176,"return (comparator.compare(element, this.minimum) > -1) && (comparator.compare(element, this.maximum) < 1);"
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,193,"eturn this.comparator.compare(element, getMinimum()) < 0;"
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,192,"return this.comparator.compare(element, this.minimum) < 0;"
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,209,"eturn this.comparator.compare(element, getMaximum()) > 0;"
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,208,"return this.comparator.compare(element, this.maximum) > 0;"
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,271,eturn range.contains(getMinimum())
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,272,| range.contains(getMaximum())
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,270,return range.contains(this.minimum)
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,271,|| range.contains(this.maximum)
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,310,esult = 37 * result + getMinimum().hashCode();
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,311,esult = 37 * result + getMaximum().hashCode();
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,309,result = 37 * result + this.minimum.hashCode();
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,310,result = 37 * result + this.maximum.hashCode();
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,326,uf.append(getMinimum());
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,325,buf.append(this.minimum);
False,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,328,uf.append(getMaximum());
True,src/java/org/apache/commons/lang3/Range.java,src/java/org/apache/commons/lang3/Range.java,327,buf.append(this.maximum);
