is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,34,"private static final String KEY_TARGET = ""target"";"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,35,"private static final String KEY_ANIMAL = ""animal"";"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,37,"static final String REPLACE_TEMPLATE_NO_ESCAPE = ""The {animal} jumps over the {target}."";"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,38,"static final String REPLACE_TEMPLATE_NO_PREFIX = ""The $animal} jumps over the $target}."";"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,39,"static final String REPLACE_TEMPLATE_NO_SUFFIX = ""The ${animal jumps over the ${target."";"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,62,"ap.put(""animal"", ""quick brown fox"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,63,"ap.put(""target"", ""lazy dog"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,68,"map.put(KEY_ANIMAL, ""quick brown fox"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,69,"map.put(KEY_TARGET, ""lazy dog"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,81,"aluesMap.put(""animal"", ""${critter}"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,82,"aluesMap.put(""target"", ""${pet}"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,87,"valuesMap.put(KEY_ANIMAL, ""${critter}"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,88,"valuesMap.put(KEY_TARGET, ""${pet}"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,163,"alues.put(""animal"", ""cow"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,164,"alues.put(""target"", ""moon"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,169,"values.put(KEY_ANIMAL, ""cow"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,170,"values.put(KEY_TARGET, ""moon"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,189,"aluesMap.put(""animal"", ""${critter}"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,190,"aluesMap.put(""target"", ""${pet}"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,195,"valuesMap.put(KEY_ANIMAL, ""${critter}"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,196,"valuesMap.put(KEY_TARGET, ""${pet}"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,207,"ap.put(""animal"", ""cow"");"
False,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,208,"ap.put(""target"", ""moon"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,213,"map.put(KEY_ANIMAL, ""cow"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,214,"map.put(KEY_TARGET, ""moon"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,221,* Tests a replace template with missing escape strings.
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,223,public void testReplaceNoEscape() {
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,224,testReplaceNoElement(REPLACE_TEMPLATE_NO_ESCAPE);
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,228,* Tests a replace template with missing prefix strings.
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,230,public void testReplaceNoPrefix() {
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,231,testReplaceNoElement(REPLACE_TEMPLATE_NO_PREFIX);
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,235,* Tests a replace template with missing postfix strings.
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,237,public void testReplaceNoSuffix() {
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,238,testReplaceNoElement(REPLACE_TEMPLATE_NO_SUFFIX);
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,241,void testReplaceNoElement(String badReplaceTemplate) {
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,242,"assertEquals(badReplaceTemplate, this.getFormat().replaceObject(badReplaceTemplate));"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,243,Map map = this.getValueMap();
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,244,"map.put(KEY_ANIMAL, ""cow"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,245,"map.put(KEY_TARGET, ""moon"");"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,246,"assertEquals(""The cow jumps over the moon."", this.getFormat().replace(REPLACE_TEMPLATE));"
True,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,src/test/org/apache/commons/lang/text/VariableFormatterTest.java,247,"assertEquals(badReplaceTemplate, this.getFormat().replaceObject(badReplaceTemplate));"
