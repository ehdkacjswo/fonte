is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,290,reconcileOptionsWithGuards();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,292,// Initialize the warnings guard.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,293,List<WarningsGuard> guards = Lists.newArrayList();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,294,guards.add(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,295,new SuppressDocWarningsGuard(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,296,getDiagnosticGroups().getRegisteredGroups()));
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,297,guards.add(options.getWarningsGuard());
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,299,this.warningsGuard = new ComposeWarningsGuard(guards);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,303,"* When the CompilerOptions and its WarningsGuard overlap, reconcile"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,304,* any discrepencies.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,306,protected void reconcileOptionsWithGuards() {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,318,/ Initialize the warnings guard.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,319,ist<WarningsGuard> guards = Lists.newArrayList();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,320,uards.add(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,321,ew SuppressDocWarningsGuard(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,322,etDiagnosticGroups().getRegisteredGroups()));
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,323,uards.add(options.getWarningsGuard());
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,325,omposeWarningsGuard composedGuards = new ComposeWarningsGuard(guards);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,333,composedGuards.enables(DiagnosticGroups.CHECK_VARIABLES)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,334,omposedGuards.addGuard(new DiagnosticGroupWarningsGuard(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,335,"iagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,341,!options.enables(DiagnosticGroups.CHECK_VARIABLES)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,342,options.setWarningLevel(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,343,"DiagnosticGroups.CHECK_VARIABLES, CheckLevel.OFF);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,338,his.warningsGuard = composedGuards;
