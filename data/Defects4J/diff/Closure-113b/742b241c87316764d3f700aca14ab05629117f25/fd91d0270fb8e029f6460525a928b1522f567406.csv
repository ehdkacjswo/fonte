is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,554,Nullable JSDocInfo info) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,554,"@Nullable JSDocInfo info, JSType ownerType) {"
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,564,ypeRegistry.setTemplateTypeNames(templateTypeNames);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,565,ImmutableList<TemplateType> keys = templateTypeNames;
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,566,if (ownerType != null) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,567,ImmutableList<TemplateType> ownerTypeKeys =
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,568,ownerType.getTemplateTypeMap().getTemplateKeys();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,569,if (!ownerTypeKeys.isEmpty()) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,570,ImmutableList.Builder<TemplateType> builder = ImmutableList.builder();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,571,builder.addAll(templateTypeNames);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,572,builder.addAll(ownerTypeKeys);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,573,keys = builder.build();
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,577,if (!keys.isEmpty()) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,578,typeRegistry.setTemplateTypeNames(keys);
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,647,"nName, contents.getSourceNode());"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,662,"fnName, contents.getSourceNode(), classTypeParameterNames);"
False,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,22,mport com.google.javascript.rhino.ScriptRuntime;
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,22,import com.google.javascript.rhino.SimpleErrorReporter;
False,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,95,"put(replacePlaceHolders(ScriptRuntime.getMessage0(""msg.bad.jsdoc.tag"")),"
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,95,.put(replacePlaceHolders(
True,src/com/google/javascript/jscomp/RhinoErrorReporter.java,src/com/google/javascript/jscomp/RhinoErrorReporter.java,96,"SimpleErrorReporter.getMessage0(""msg.bad.jsdoc.tag"")),"
False,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,122,"rivate static Node fuseExpressionIntoExpression(Node exp1, Node exp2) {"
True,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,122,"protected static Node fuseExpressionIntoExpression(Node exp1, Node exp2) {"
False,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,144,"rivate static void fuseExpresssonIntoFirstChild(Node exp, Node stmt) {"
True,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,144,"protected static void fuseExpresssonIntoFirstChild(Node exp, Node stmt) {"
False,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,150,"rivate static void fuseExpresssonIntoSecondChild(Node exp, Node stmt) {"
True,src/com/google/javascript/jscomp/StatementFusion.java,src/com/google/javascript/jscomp/StatementFusion.java,150,"protected static void fuseExpresssonIntoSecondChild(Node exp, Node stmt) {"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,483,"nsureTyped(t, n, getJSType(expr));"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,485,"/ If the cast, tightens the type apply it, so it is available post"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,486,/ normalization.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,487,SType castType = getJSType(n);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,489,f (castType.isSubtype(exprType)) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,484,JSType castType = getJSType(n);
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,486,// TODO(johnlenz): determine if we can limit object literals in some
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,487,// way.
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,488,if (!expr.isObjectLit()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,489,"validator.expectCanCast(t, n, castType, exprType);"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,491,"ensureTyped(t, n, castType);"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,493,if (castType.isSubtype(exprType) || expr.isObjectLit()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1995,"// TODO(johnlenz): this seems like a strange place to check ""@implicitCast"""
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1993,f (info.hasType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1994,/ TODO(johnlenz): Change this so that we only look for casts on CAST
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1995,/ nodes one the misplaced type annotation warning is on by default and
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1996,"/ people have been given a chance to fix them.  As is, this is here"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1997,/ simply for legacy casts.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1998,"SType infoType = info.getType().evaluate(t.getScope(), typeRegistry);"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1999,"alidator.expectCanCast(t, n, infoType, type);"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,2000,ype = infoType;
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,450,reak;
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,453,/ TODO(johnlenz): remove this after the CAST node change has shaken out.
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,454,f (!n.isFunction()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,455,SDocInfo info = n.getJSDocInfo();
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,456,f (info != null && info.hasType()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,457,"SType castType = info.getType().evaluate(syntacticScope, registry);"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,459,/ A stubbed type declaration on a qualified name should take
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,460,"/ effect for all subsequent accesses of that name,"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,461,/ so treat it the same as an assign to that name.
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,462,f (n.isQualifiedName() &&
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,463,.getParent().isExprResult()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,464,"pdateScopeForTypeChange(scope, n, n.getJSType(), castType);"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,450,JSDocInfo info = n.getJSDocInfo();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,451,if (info != null && info.hasType()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,452,"n.setJSType(info.getType().evaluate(syntacticScope, registry));"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,467,.setJSType(castType);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,454,break;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1161,private static class TemplateTypeMapReplacer extends ModificationVisitor {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1162,private final TemplateTypeMap replacements;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1163,boolean madeChanges = false;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1165,TemplateTypeMapReplacer(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1166,"JSTypeRegistry registry, TemplateTypeMap replacements) {"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1167,super(registry);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1168,this.replacements = replacements;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1171,@Override
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1172,public JSType caseTemplateType(TemplateType type) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1173,if (replacements.hasTemplateKey(type)) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1174,madeChanges = true;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1175,JSType replacement = replacements.getTemplateType(type);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1176,return replacements.getTemplateType(type);
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1177,} else {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1178,return type;
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1344,if (propertyType != null && objType != null) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1345,JSType restrictedObjType = objType.restrictByNotNullOrUndefined();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1346,if (restrictedObjType.isTemplatizedType()
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1347,&& propertyType.hasAnyTemplateTypes()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1348,TemplateTypeMap typeMap = restrictedObjType.getTemplateTypeMap();
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1349,TemplateTypeMapReplacer replacer = new TemplateTypeMapReplacer(
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1350,"registry, typeMap);"
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1351,propertyType = propertyType.visit(replacer);
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,76,/ TODO(johnlenz): reenable this after after the next release.
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,78,"iagnosticType.disabled(""JSC_INVALID_CAST"","
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,77,"DiagnosticType.warning(""JSC_INVALID_CAST"","
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,76,import com.google.javascript.rhino.jstype.TemplateType;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,709,ImmutableList<TemplateType> ownerTypeKeys = ImmutableList.of();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,710,Node ownerNode = NodeUtil.getBestLValueOwner(node);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,711,String ownerName = NodeUtil.getBestLValueName(ownerNode);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,712,ObjectType ownerType = null;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,713,if (ownerName != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,714,Var ownerVar = scope.getVar(ownerName);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,715,if (ownerVar != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,716,ownerType = getPrototypeOwnerType(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,717,ObjectType.cast(ownerVar.getType()));
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,718,if (ownerType != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,719,ownerTypeKeys =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,720,ownerType.getTemplateTypeMap().getTemplateKeys();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,725,if (!ownerTypeKeys.isEmpty()) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,726,typeRegistry.setTemplateTypeNames(ownerTypeKeys);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,731,if (!ownerTypeKeys.isEmpty()) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,732,typeRegistry.clearTemplateTypeNames();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,935,ObjectType prototypeOwner = getPrototypeOwnerType(ownerType);
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,914,inferTemplateTypeName(info)
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,942,".inferTemplateTypeName(info, prototypeOwner)"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,980,private ObjectType getPrototypeOwnerType(ObjectType ownerType) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,981,if (ownerType != null && ownerType.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,982,return ownerType.getOwnerFunction();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,984,return null;
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1794,// TODO: We are evaluating these values in the wrong scope:
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1795,// https://code.google.com/p/closure-compiler/issues/detail?id=926
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1796,JSType thisObjectType = thisType.toObjectType();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1797,if (thisObjectType != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1798,ImmutableList<TemplateType> keys =
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1799,thisObjectType.getTemplateTypeMap().getTemplateKeys();
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1800,typeRegistry.setTemplateTypeNames(keys);
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1805,if (thisObjectType != null) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1806,typeRegistry.clearTemplateTypeNames();
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,366,& info.hasType()
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,367,"/ TODO(johnlenz): for now, attach object literal type directly."
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,368,& !irNode.isObjectLit()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,366,&& info.hasType()) {
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,31,mport com.google.javascript.rhino.ScriptRuntime;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,31,import com.google.javascript.rhino.SimpleErrorReporter;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,64,"rrorReporter.warning(ScriptRuntime.getMessage1(messageId, messageArg),"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,64,errorReporter.warning(
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,65,"SimpleErrorReporter.getMessage1(messageId, messageArg),"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,69,"rrorReporter.warning(ScriptRuntime.getMessage0(messageId),"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,70,"errorReporter.warning(SimpleErrorReporter.getMessage0(messageId),"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,77,"criptRuntime.getMessage1(messageId, messageArg),"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,78,"SimpleErrorReporter.getMessage1(messageId, messageArg),"
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,84,"criptRuntime.getMessage0(messageId),"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,85,"SimpleErrorReporter.getMessage0(messageId),"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,3, ***** BEGIN LICENSE BLOCK *****
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,4, Version: MPL 1.1/GPL 2.0
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,6, The contents of this file are subject to the Mozilla Public License Version
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,8, the License. You may obtain a copy of the License at
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,9, http://www.mozilla.org/MPL/
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,13, for the specific language governing rights and limitations under the
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,14, License.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,16," The Original Code is Rhino code, released"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,17," May 6, 1999."
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,19, The Initial Developer of the Original Code is
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,20, Netscape Communications Corporation.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,21, Portions created by the Initial Developer are Copyright (C) 1997-2000
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,22, the Initial Developer. All Rights Reserved.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,24, Contributor(s):
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,25,   Patrick Beard
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,26,   Norris Boyd
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,27,   Igor Bukanov
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,28,   Ethan Hugg
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,29,   Roger Lawrence
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,30,   Terry Lucas
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,31,   Frank Mitchell
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,32,   Milen Nankov
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,33,   Andrew Wason
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,35," Alternatively, the contents of this file may be used under the terms of"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,36," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,37, case the provisions of the GPL are applicable instead of those above. If
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,38, you wish to allow use of your version of this file only under the terms of
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,39, the GPL and not to allow others to use your version of this file under the
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,40," MPL, indicate your decision by deleting the provisions above and replacing"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,41, them with the notice and other provisions required by the GPL. If you do
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,42," not delete the provisions above, a recipient may use your version of this"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,43, file under either the MPL or the GPL.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,45, ***** END LICENSE BLOCK ***** */
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,47,ackage com.google.javascript.rhino;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,49,mport java.text.MessageFormat;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,50,mport java.util.Locale;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,51,mport java.util.ResourceBundle;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,54, This is the class that implements the run-time.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,58,ublic class ScriptRuntime {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,61, No instances should be created.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,63,rotected ScriptRuntime() {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,66,/ It is public so NativeRegExp can access it .
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,67,ublic static boolean isJSLineTerminator(int c) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,68,/ Optimization for faster check for EOL character:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,69,/ they do not have 0xDFD0 bits set
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,70,f ((c & 0xDFD0) != 0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,71,eturn false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,73,eturn c == '\n' || c == '\r' || c == 0x2028 || c == 0x2029;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,76,"/ Can not use Double.NaN defined as 0.0d / 0.0 as under the Microsoft VM,"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,77,"/ versions 2.01 and 3.0P1, that causes some uses (returns at least) of"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,78,/ Double.NaN to be converted to 1.0.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,79,/ So we use ScriptRuntime.NaN instead of Double.NaN.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,80,ublic static final double
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,81,aN = Double.longBitsToDouble(0x7ff8000000000000L);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,83,/ A similar problem exists for negative zero.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,84,ublic static final double
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,85,egativeZero = Double.longBitsToDouble(0x8000000000000000L);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,88," Helper function for toNumber, parseInt, and TokenStream.getToken."
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,90,"SuppressWarnings(""fallthrough"")"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,91,"tatic double stringToNumber(String s, int start, int radix) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,92,har digitMax = '9';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,93,har lowerCaseBound = 'a';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,94,har upperCaseBound = 'A';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,95,nt len = s.length();
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,96,f (radix < 10) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,97,igitMax = (char) ('0' + radix - 1);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,99,f (radix > 10) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,100,owerCaseBound = (char) ('a' + radix - 10);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,101,pperCaseBound = (char) ('A' + radix - 10);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,103,nt end;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,104,ouble sum = 0.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,105,or (end=start; end < len; end++) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,106,har c = s.charAt(end);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,107,nt newDigit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,108,f ('0' <= c && c <= digitMax)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,109,ewDigit = c - '0';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,110,lse if ('a' <= c && c < lowerCaseBound)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,111,ewDigit = c - 'a' + 10;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,112,lse if ('A' <= c && c < upperCaseBound)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,113,ewDigit = c - 'A' + 10;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,114,lse
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,115,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,116,um = sum*radix + newDigit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,118,f (start == end) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,119,eturn NaN;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,121,f (sum >= 9007199254740992.0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,122,f (radix == 10) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,123,* If we're accumulating a decimal number and the number
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,124," is >= 2^53, then the result from the repeated multiply-add"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,125, above may be inaccurate.  Call Java to get the correct
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,126, answer.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,128,ry {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,129,"eturn Double.valueOf(s.substring(start, end)).doubleValue();"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,130, catch (NumberFormatException nfe) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,131,eturn NaN;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,133, else if (radix == 2 || radix == 4 || radix == 8 ||
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,134,adix == 16 || radix == 32) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,135,* The number may also be inaccurate for one of these bases.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,136, This happens if the addition in value*radix + digit causes
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,137, a round-down to an even least significant mantissa bit
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,138, when the first dropped bit is a one.  If any of the
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,139, following digits in the number (which haven't been added
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,140, in yet) are nonzero then the correct action would have
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,141, been to round up instead of down.  An example of this
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,142," occurs when reading the number 0x1000000000000081, which"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,143, rounds to 0x1000000000000000 instead of 0x1000000000000100.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,145,nt bitShiftInChar = 1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,146,nt digit = 0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,148,inal int SKIP_LEADING_ZEROS = 0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,149,inal int FIRST_EXACT_53_BITS = 1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,150,inal int AFTER_BIT_53         = 2;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,151,inal int ZEROS_AFTER_54 = 3;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,152,inal int MIXED_AFTER_54 = 4;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,154,nt state = SKIP_LEADING_ZEROS;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,155,nt exactBitsLimit = 53;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,156,ouble factor = 0.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,157,oolean bit53 = false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,158,/ bit54 is the 54th bit (the first dropped from the mantissa)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,159,oolean bit54 = false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,161,or (;;) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,162,f (bitShiftInChar == 1) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,163,f (start == end)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,164,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,165,igit = s.charAt(start++);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,166,f ('0' <= digit && digit <= '9')
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,167,igit -= '0';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,168,lse if ('a' <= digit && digit <= 'z')
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,169,igit -= 'a' - 10;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,170,lse
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,171,igit -= 'A' - 10;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,172,itShiftInChar = radix;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,174,itShiftInChar >>= 1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,175,oolean bit = (digit & bitShiftInChar) != 0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,177,witch (state) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,178,ase SKIP_LEADING_ZEROS:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,179,f (bit) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,180,-exactBitsLimit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,181,um = 1.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,182,tate = FIRST_EXACT_53_BITS;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,184,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,185,ase FIRST_EXACT_53_BITS:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,186,um *= 2.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,187,f (bit)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,188,um += 1.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,189,-exactBitsLimit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,190,f (exactBitsLimit == 0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,191,it53 = bit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,192,tate = AFTER_BIT_53;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,194,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,195,ase AFTER_BIT_53:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,196,it54 = bit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,197,actor = 2.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,198,tate = ZEROS_AFTER_54;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,199,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,200,ase ZEROS_AFTER_54:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,201,f (bit) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,202,tate = MIXED_AFTER_54;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,204,/ fallthrough
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,205,ase MIXED_AFTER_54:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,206,actor *= 2;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,207,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,210,witch (state) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,211,ase SKIP_LEADING_ZEROS:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,212,um = 0.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,213,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,214,ase FIRST_EXACT_53_BITS:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,215,ase AFTER_BIT_53:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,216,/ do nothing
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,217,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,218,ase ZEROS_AFTER_54:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,219,/ x1.1 -> x1 + 1 (round up)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,220,/ x0.1 -> x0 (round down)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,221,f (bit54 & bit53)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,222,um += 1.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,223,um *= factor;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,224,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,225,ase MIXED_AFTER_54:
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,226,/ x.100...1.. -> x + 1 (round up)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,227,/ x.0anything -> x (round down)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,228,f (bit54)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,229,um += 1.0;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,230,um *= factor;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,231,reak;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,234,* We don't worry about inaccurate numbers for any other base. */
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,236,eturn sum;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,239,ublic static String escapeString(String s) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,240,"eturn escapeString(s, '""');"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,244, For escaping strings printed by object and array literals; not quite
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,245, the same as 'escape.'
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,247,"ublic static String escapeString(String s, char escapeQuote) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,248,"f (!(escapeQuote == '""' || escapeQuote == '\'')) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,249,"hrow new IllegalStateException(""unexpected quote char:"" + escapeQuote);"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,251,tringBuffer sb = null;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,253,"or(int i = 0, L = s.length(); i != L; ++i) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,254,nt c = s.charAt(i);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,256,f (' ' <= c && c <= '~' && c != escapeQuote && c != '\\') {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,257,"/ an ordinary print character (like C isprint()) and not """
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,258,/ or \ .
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,259,f (sb != null) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,260,b.append((char)c);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,262,ontinue;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,264,f (sb == null) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,265,b = new StringBuffer(L + 3);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,266,b.append(s);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,267,b.setLength(i);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,270,nt escape = -1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,271,witch (c) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,272,ase '\b':  escape = 'b';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,273,ase '\f':  escape = 'f';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,274,ase '\n':  escape = 'n';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,275,ase '\r':  escape = 'r';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,276,ase '\t':  escape = 't';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,277,ase 0xb:   escape = 'v';  break; // Java lacks \v.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,278,ase ' ':   escape = ' ';  break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,279,ase '\\':  escape = '\\'; break;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,281,f (escape >= 0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,282,/ an \escaped sort of character
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,283,b.append('\\');
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,284,b.append((char)escape);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,285, else if (c == escapeQuote) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,286,b.append('\\');
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,287,b.append(escapeQuote);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,288, else {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,289,nt hexSize;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,290,f (c < 256) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,291,/ 2-digit hex
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,292,"b.append(""\\x"");"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,293,exSize = 2;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,294, else {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,295,/ Unicode.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,296,"b.append(""\\u"");"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,297,exSize = 4;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,299,/ append hexadecimal form of c left-padded with 0
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,300,or (int shift = (hexSize - 1) * 4; shift >= 0; shift -= 4) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,301,nt digit = 0xf & (c >> shift);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,302,nt hc = (digit < 10) ? '0' + digit : 'a' - 10 + digit;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,303,b.append((char)hc);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,307,eturn (sb == null) ? s : sb.toString();
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,310,tatic boolean isValidIdentifierName(String s) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,311,nt L = s.length();
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,312,f (L == 0)
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,313,eturn false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,314,f (!Character.isJavaIdentifierStart(s.charAt(0)))
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,315,eturn false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,316,or (int i = 1; i != L; ++i) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,317,f (!Character.isJavaIdentifierPart(s.charAt(i)))
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,318,eturn false;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,320,eturn !TokenStream.isKeyword(s);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,324," If str is a decimal presentation of Uint32 value, return it as long."
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,325," Otherwise, return -1L;"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,327,ublic static long testUint32String(String str) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,328,/ The length of the decimal string representation of
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,329,"/  UINT32_MAX_VALUE, 4294967296"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,330,inal int MAX_VALUE_LENGTH = 10;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,332,nt len = str.length();
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,333,f (1 <= len && len <= MAX_VALUE_LENGTH) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,334,nt c = str.charAt(0);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,335, -= '0';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,336,f (c == 0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,337,"/ Note that 00,01 etc. are not valid Uint32 presentations"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,338,eturn (len == 1) ? 0L : -1L;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,340,f (1 <= c && c <= 9) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,341,ong v = c;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,342,or (int i = 1; i != len; ++i) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,343, = str.charAt(i) - '0';
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,344,f (!(0 <= c && c <= 9)) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,345,eturn -1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,347, = 10 * v + c;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,349,/ Check for overflow
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,350,f ((v >>> 32) == 0) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,351,eturn v;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,355,eturn -1;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,358,tatic boolean isSpecialProperty(String s) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,359,"eturn s.equals(""__proto__"") || s.equals(""__parent__"");"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,363,/ Statements
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,366,ublic static String getMessage0(String messageId) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,367,"eturn getMessage(messageId, null);"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,370,"ublic static String getMessage1(String messageId, Object arg1) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,371,bject[] arguments = {arg1};
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,372,"eturn getMessage(messageId, arguments);"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,375,* OPT there's a noticeable delay for the first error!  Maybe it'd
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,376, make sense to use a ListResourceBundle instead of a properties
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,377, file to avoid (synchronized) text parsing.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,379,"ublic static String getMessage(String messageId, Object[] arguments) {"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,380,inal String defaultResource
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,381," ""rhino_ast.java.com.google.javascript.rhino.Messages"";"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,383,ocale locale = Locale.getDefault();
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,385,/ ResourceBundle does caching.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,386,"esourceBundle rb = ResourceBundle.getBundle(defaultResource, locale);"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,388,tring formatString;
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,389,ry {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,390,ormatString = rb.getString(messageId);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,391, catch (java.util.MissingResourceException mre) {
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,392,hrow new RuntimeException
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,393,"""no message resource found for message property ""+ messageId);"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,397," It's OK to format the string, even if 'arguments' is null;"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,398," we need to format it anyway, to make double ''s collapse to"
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,399, single 's.
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,401,/ TODO: MessageFormat is not available on pJava
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,402,essageFormat formatter = new MessageFormat(formatString);
False,src/com/google/javascript/rhino/ScriptRuntime.java,src/com/google/javascript/rhino/ScriptRuntime.java,403,eturn formatter.format(arguments);
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,42,import java.text.MessageFormat;
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,45,import java.util.Locale;
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,46,import java.util.ResourceBundle;
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,108,public static String getMessage0(String messageId) {
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,109,"return getMessage(messageId, null);"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,112,"public static String getMessage1(String messageId, Object arg1) {"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,113,Object[] arguments = {arg1};
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,114,"return getMessage(messageId, arguments);"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,117,"static String getMessage(String messageId, Object[] arguments) {"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,118,final String defaultResource
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,119,"= ""rhino_ast.java.com.google.javascript.rhino.Messages"";"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,121,Locale locale = Locale.getDefault();
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,123,// ResourceBundle does caching.
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,124,"ResourceBundle rb = ResourceBundle.getBundle(defaultResource, locale);"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,126,String formatString;
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,127,try {
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,128,formatString = rb.getString(messageId);
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,129,} catch (java.util.MissingResourceException mre) {
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,130,throw new RuntimeException
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,131,"(""no message resource found for message property "" + messageId);"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,135,"* It's OK to format the string, even if 'arguments' is null;"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,136,"* we need to format it anyway, to make double ''s collapse to"
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,137,* single 's.
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,139,MessageFormat formatter = new MessageFormat(formatString);
True,src/com/google/javascript/rhino/SimpleErrorReporter.java,src/com/google/javascript/rhino/SimpleErrorReporter.java,140,return formatter.format(arguments);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,162,"rivate FunctionType(JSTypeRegistry registry, String name, Node source) {"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,162,"private FunctionType(JSTypeRegistry registry, String name, Node source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,163,TemplateTypeMap typeParameters) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,164,egistry.getNativeObjectType(JSTypeNative.FUNCTION_INSTANCE_TYPE));
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,165,"registry.getNativeObjectType(JSTypeNative.FUNCTION_INSTANCE_TYPE),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,166,"false, typeParameters);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,178,"STypeRegistry registry, String name, Node source) {"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,179,"eturn new FunctionType(registry, name, source);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,180,"JSTypeRegistry registry, String name, Node source,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,181,TemplateTypeMap typeParameters) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,182,"return new FunctionType(registry, name, source, typeParameters);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,59,mport com.google.javascript.rhino.ScriptRuntime;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,59,import com.google.javascript.rhino.SimpleErrorReporter;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,964,SType type = getType(jsTypeName);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,964,// Resolve template type names
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,965,JSType type = null;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,966,JSType thisType = null;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,967,if (scope != null && scope.getTypeOfThis() != null) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,968,thisType = scope.getTypeOfThis().toObjectType();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,970,if (thisType != null) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,971,type = thisType.getTemplateTypeMap().getTemplateTypeKeyByName(jsTypeName);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,972,if (type != null) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,973,"Preconditions.checkState(type.isTemplateType(), ""expected:"" + type);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,974,return type;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,978,type = getType(jsTypeName);
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1499,"ublic FunctionType createInterfaceType(String name, Node source) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1500,"eturn FunctionType.forInterface(this, name, source);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1513,"public FunctionType createInterfaceType(String name, Node source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1514,ImmutableList<String> typeParameters) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1515,"return createInterfaceTypeInternal(name, source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1516,createTemplateMapKeys(typeParameters));
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1519,"private FunctionType createInterfaceTypeInternal(String name, Node source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1520,ImmutableList<TemplateType> typeParameters) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1521,"return FunctionType.forInterface(this, name, source,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1522,"createTemplateTypeMap(typeParameters, null));"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1721,criptRuntime.getMessage0(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1743,SimpleErrorReporter.getMessage0(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1753,"criptRuntime.getMessage0(""msg.jsdoc.function.varargs""),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1775,SimpleErrorReporter.getMessage0(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1776,"""msg.jsdoc.function.varargs""),"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2435,nt numAdds = 4750;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2435,int numAdds = 4500;
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7687,"assignment to property foo of Object\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7687,"""assignment to property foo of {foo: string}\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7707,ublic void testCast18() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7708,/ Mostly verifying that legacy annotations are applied
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7709,/ despite the parser warning.
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7710,"estTypes(""/** @constructor */ function Foo() {} \n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7711,"/** @type {Foo} */ var x = (/** @type {Foo} */ {})"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7712,"Type annotations are not allowed here. "" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7713,"Are you missing parentheses?"");"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7715,/ Not really encourage because of possible ambiguity but it works.
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7716,"estTypes(""/** @constructor */ function Foo() {} \n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7717,"/** @type {Foo} */ var x = /** @type {Foo} */ {}"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7718,"Type annotations are not allowed here. "" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7719,"Are you missing parentheses?"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10720,public void testTemplateType9() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10721,// verify interface type parameters are recognised.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10722,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10723,"""/** @interface \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10724,""" * @classTemplate S,T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10725,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10726,"""function Bar() {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10728,""" * @param {Bar.<T>} bar \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10729,""" * @return {T} \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10730,""" * @template T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10731,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10732,"""function fn(bar) {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10733,"""/** @param {Bar.<number>} bar */ function g(bar) {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10734,"""  /** @type {!Object} */ var x = fn(bar);"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10736,"""initializing variable\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10737,"""found   : number\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10738,"""required: Object"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1221,public void testClassTemplateType1() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1222,// Verify that template types used in method signature are resolved.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1223,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1224,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1225,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1226,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1227,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1228,"""function C() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1230,"""/** @return {T} */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1231,"""C.prototype.method = function() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1233,"""/** @type {C.<string>} */ var x = new C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1234,"""var result = x.method();\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1235,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1238,public void testClassTemplateType2() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1239,// Verify that template types used in method signature on namespaced
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1240,// objects are resolved.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1241,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1242,"""/** @const */ var ns = {};"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1243,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1244,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1245,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1246,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1247,"""ns.C = function() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1249,"""/** @return {T} */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1250,"""ns.C.prototype.method = function() {}\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1252,"""/** @type {ns.C.<string>} */ var x = new ns.C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1253,"""var result = x.method();\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1254,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1257,public void testClassTemplateType3() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1258,// Verify that template types used for instance properties are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1259,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1260,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1261,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1262,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1263,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1264,"""function C() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1265,"""  /** @type {T} */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1266,"""  this.foo;"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1267,"""};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1269,"""/** @type {C.<string>} */ var x = new C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1270,"""var result = x.foo;\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1271,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1274,public void testClassTemplateType4() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1275,// Verify that template types used for instance properties are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1276,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1277,"""/** @const */ var ns = {};"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1278,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1279,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1280,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1281,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1282,"""ns.C = function() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1283,"""  /** @type {T} */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1284,"""  this.foo;"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1285,"""};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1287,"""/** @type {ns.C.<string>} */ var x = new ns.C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1288,"""var result = x.foo;\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1289,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1292,public void testClassTemplateType5() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1293,// Verify that template types used for prototype properties in stub
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1294,// declarations are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1295,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1296,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1297,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1298,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1299,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1300,"""function C() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1301,"""};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1303,"""/** @type {T} */"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1304,"""C.prototype.foo;\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1306,"""/** @type {C.<string>} */ var x = new C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1307,"""var result = x.foo;\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1308,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1311,public void testClassTemplateType6() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1312,// Verify that template types used for prototype properties in assignment
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1313,// expressions are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1314,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1315,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1316,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1317,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1318,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1319,"""function C() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1320,"""};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1322,"""/** @type {T} */"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1323,"""C.prototype.foo = 1;\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1325,"""/** @type {C.<string>} */ var x = new C();\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1326,"""var result = x.foo;\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1327,"assertEquals(""string"", findNameType(""result"", globalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1330,public void testClassTemplateType7() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1331,// Verify that template types used in prototype methods are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1332,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1333,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1334,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1335,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1336,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1337,"""function C() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1339,"""C.prototype.method = function() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1340,"""  /** @type {T} */ var local;"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1341,"""}\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1342,"assertEquals(""T"", findNameType(""local"", lastLocalScope).toString());"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1345,public void testClassTemplateType8() {
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1346,// Verify that template types used in casts are recognized.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1347,testSame(
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1348,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1349,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1350,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1351,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1352,"""function C() {};\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1354,"""C.prototype.method = function() {\n"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1355,"""  var local = /** @type {T} */ (x);"" +"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1356,"""}\n"");"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,1357,"assertEquals(""T"", findNameType(""local"", lastLocalScope).toString());"
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,46,om.google.javascript.rhino.ScriptRuntime.getMessage0(
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,46,com.google.javascript.rhino.SimpleErrorReporter.getMessage0(
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,157,"unctionType iface = registry.createInterfaceType(""I"", null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,157,"FunctionType iface = registry.createInterfaceType(""I"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,158,ImmutableList.<String>of());
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,199,"unctionType iface = registry.createInterfaceType(""I"", null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,200,"FunctionType iface = registry.createInterfaceType(""I"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,201,ImmutableList.<String>of());
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,209,"unctionType iface = registry.createInterfaceType(""I"", null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,211,"FunctionType iface = registry.createInterfaceType(""I"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,212,ImmutableList.<String>of());
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,213,"unctionType subIface = registry.createInterfaceType(""SubI"", null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,216,"FunctionType subIface = registry.createInterfaceType(""SubI"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,217,ImmutableList.<String>of());
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,352,"unctionType iface = registry.createInterfaceType(""I"", null);"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,353,"unctionType subIface = registry.createInterfaceType(""SubI"", null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,356,"FunctionType iface = registry.createInterfaceType(""I"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,357,ImmutableList.<String>of());
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,358,"FunctionType subIface = registry.createInterfaceType(""SubI"", null,"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,359,ImmutableList.<String>of());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,126,"nterfaceType = FunctionType.forInterface(registry, ""Interface"", null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,126,"interfaceType = FunctionType.forInterface(registry, ""Interface"", null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,127,"registry.createTemplateTypeMap(null, null));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,130,"egistry, ""SubInterface"", null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,131,"registry, ""SubInterface"", null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,132,"registry.createTemplateTypeMap(null, null));"
