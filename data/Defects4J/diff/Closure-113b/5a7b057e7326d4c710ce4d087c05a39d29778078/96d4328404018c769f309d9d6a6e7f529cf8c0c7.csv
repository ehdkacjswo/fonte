is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,25,import com.google.common.base.Strings;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,979,f (Strings.isEmpty(options.sourceMapOutputPath)) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,980,if (Strings.isNullOrEmpty(options.sourceMapOutputPath)) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1062,f (Strings.isEmpty(options.sourceMapOutputPath)) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1063,if (Strings.isNullOrEmpty(options.sourceMapOutputPath)) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,21,import com.google.common.base.Strings;
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,178,f (!Strings.isEmpty(unaliasableGlobals) &&
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,179,Strings.isEmpty(aliasableGlobals)) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,179,if (!Strings.isNullOrEmpty(unaliasableGlobals) &&
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,180,!Strings.isNullOrEmpty(aliasableGlobals)) {
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,185,f (!Strings.isEmpty(unaliasableGlobals)) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,186,if (!Strings.isNullOrEmpty(unaliasableGlobals)) {
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,190,f (!Strings.isEmpty(aliasableGlobals)) {
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,191,if (!Strings.isNullOrEmpty(aliasableGlobals)) {
True,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,src/com/google/javascript/jscomp/LightweightMessageFormatter.java,21,import com.google.common.base.Strings;
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,19,mport javax.annotation.Nullable;
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,32, Returns {@code true} if the given string is either null or the empty string
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,35, @param string the string reference to check
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,36, @return {@code true} if {@code string} is either null or the empty string
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,38,tatic boolean isEmpty(@Nullable String string) {
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,39,eturn string == null || string.isEmpty();
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,43, Returns the given string if it is non-null; the empty string otherwise.
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,45, @param string the string to test and possibly return
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,46," @return {@code string} itself if it is non-null; {@code """"} if it is null"
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,48,tatic String makeSafe(@Nullable String string) {
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,49,"eturn (string == null) ? """" : string;"
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,53, Returns a string consisting of the input string concatenated a given number
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,54," of times. For example, {@code repeat(""hey"", 3)} returns the string {@code"
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,55," ""heyheyhey""}."
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,57, @param string any non-null string
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,58, @param count the number of times to repeat it; a nonnegative integer
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,59, @return a string containing {@code string} repeated {@code count} times
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,60,     (the empty string if {@code count} is zero)
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,61, @throws IllegalArgumentException if {@code count} is negative
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,63,"tatic String repeat(String string, int count) {"
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,64,"/ If this multiplication overflows, a NegativeArraySizeException or"
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,65,/ OutOfMemoryError is not far behind
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,66,tringBuilder builder = new StringBuilder(string.length() * count);
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,67,or (int i = 0; i < count; i++) {
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,68,uilder.append(string);
False,src/com/google/javascript/jscomp/Strings.java,src/com/google/javascript/jscomp/Strings.java,70,eturn builder.toString();
True,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,18,import com.google.common.base.Strings;
False,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,50,"Strings.isEmpty(sourceName) ? ""(unknown source)"" : sourceName),"
True,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,src/com/google/javascript/jscomp/VerboseMessageFormatter.java,52,"(Strings.isNullOrEmpty(sourceName) ? ""(unknown source)"" : sourceName),"
