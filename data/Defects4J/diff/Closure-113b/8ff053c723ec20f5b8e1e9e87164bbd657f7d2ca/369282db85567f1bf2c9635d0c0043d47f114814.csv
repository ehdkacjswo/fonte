is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,20,import com.google.common.collect.ArrayListMultimap;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,21,import com.google.common.collect.HashMultimap;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,22,import com.google.common.collect.HashMultiset;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,25,import com.google.common.collect.Multimap;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,26,import com.google.common.collect.Multimaps;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,27,import com.google.common.collect.Multiset;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,32,import java.util.Collections;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,33,import java.util.Comparator;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,37,import java.util.PriorityQueue;
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,196,/ Collect all symbols provided in these files.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,205,// Collect all symbols provided in these files.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,204,/ Put the files into topologically sorted order by their requires.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,205,/ NOTE: This will leave the list unchanged if the files are already
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,206,/       topologically sorted.  This is important to apps whose dependencies
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,207,/       are incomplete.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,208,ist<CompilerInput> list = Lists.newArrayList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,209,et<CompilerInput> set = Sets.newHashSet();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,212,// Get the direct dependencies.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,213,"final Multimap<CompilerInput, CompilerInput> deps ="
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,214,HashMultimap.create();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,211,"ddInputAndDeps(input, provides, compiler, list, set,"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,212,ets.<CompilerInput>newHashSet());
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,216,for (String req : input.getRequires(compiler)) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,217,CompilerInput dep = provides.get(req);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,218,if (dep != null) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,219,"deps.put(input, dep);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,215,/ Update the JSModule to this order.
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,216,reconditions.checkState(inputs.size() == list.size());
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,224,// Sort the JSModule in this order.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,225,List<CompilerInput> sortedList = topologicalStableSort(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,226,"inputs, deps);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,218,nputs.addAll(list);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,228,inputs.addAll(sortedList);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,230,ist<JSModule> list = Lists.newArrayList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,231,et<JSModule> set = Sets.newHashSet();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,240,"final Multimap<JSModule, JSModule> deps = HashMultimap.create();"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,233,"ddModuleAndDeps(module, list, set, Sets.<JSModule>newHashSet());"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,235,eturn list.toArray(new JSModule[list.size()]);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,239," Adds the given input and its deps to the given list and set, if they are"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,240," not already added, placing dependencies before dependants."
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,242,rivate static void addInputAndDeps(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,243,"ompilerInput input, Map<String, CompilerInput> provides,"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,244,"ompiler compiler, List<CompilerInput> list, Set<CompilerInput> set,"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,245,et<CompilerInput> inProgress) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,246,f (!set.contains(input)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,247,f (inProgress.contains(input)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,248,hrow new IllegalArgumentException(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,249,"Circular dependency involving input: "" + input.getName());"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,242,for (JSModule dep : module.getDependencies()) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,243,"deps.put(module, dep);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,251,nProgress.add(input);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,253,or (String require : input.getRequires(compiler)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,254,f (provides.containsKey(require)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,255,"ddInputAndDeps(provides.get(require), provides, compiler, list, set,"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,256,nProgress);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,247,// Sort the JSModule in this order.
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,248,List<JSModule> sortedList = topologicalStableSort(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,249,"Lists.newArrayList(modules), deps);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,250,return sortedList.toArray(new JSModule[sortedList.size()]);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,260,ist.add(input);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,261,et.add(input);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,253,private static <T> List<T> topologicalStableSort(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,254,"List<T> items, Multimap<T, T> deps) {"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,255,"final Map<T, Integer> originalIndex = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,256,for (int i = 0; i < items.size(); i++) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,257,"originalIndex.put(items.get(i), i);"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,266," Adds the given module and its deps to the given list and set, if they are"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,267," not already added, placing dependencies before dependants."
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,269,rivate static void addModuleAndDeps(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,270,"SModule module, List<JSModule> list, Set<JSModule> set,"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,271,et<JSModule> inProgress) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,272,f (!set.contains(module)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,273,f (inProgress.contains(module)) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,274,hrow new IllegalArgumentException(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,275,"Circular dependency involving module: "" + module.getName());"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,260,"PriorityQueue<T> inDegreeZero = new PriorityQueue<T>(items.size(),"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,261,new Comparator<T>() {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,262,@Override
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,263,"public int compare(T a, T b) {"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,264,return originalIndex.get(a).intValue() -
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,265,originalIndex.get(b).intValue();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,277,nProgress.add(module);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,279,or (JSModule dep : module.getDependencies()) {
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,280,"ddModuleAndDeps(dep, list, set, inProgress);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,268,List<T> result = Lists.newArrayList();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,270,Multiset<T> inDegree = HashMultiset.create();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,271,"Multimap<T, T> reverseDeps = ArrayListMultimap.create();"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,272,"Multimaps.invertFrom(deps, reverseDeps);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,274,"// First, add all the inputs with in-degree 0."
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,275,for (T item : items) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,276,Collection<T> itemDeps = deps.get(item);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,277,"inDegree.add(item, itemDeps.size());"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,278,if (itemDeps.isEmpty()) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,279,inDegreeZero.add(item);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,283,ist.add(module);
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,284,et.add(module);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,283,"// Then, iterate to a fixed point over the reverse dependency graph."
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,284,while (!inDegreeZero.isEmpty()) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,285,T item = inDegreeZero.remove();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,286,result.add(item);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,287,for (T inWaiting : reverseDeps.get(item)) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,288,"inDegree.remove(inWaiting, 1);"
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,289,if (inDegree.count(inWaiting) == 0) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,290,inDegreeZero.add(inWaiting);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,295,return result;
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,78,CompilerInput a = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,79,"JSSourceFile.fromCode(""a.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,80,"""goog.require('b');goog.require('c')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,81,CompilerInput b = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,82,"JSSourceFile.fromCode(""b.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,83,"""goog.provide('b');goog.require('d')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,84,CompilerInput c = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,85,"JSSourceFile.fromCode(""c.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,86,"""goog.provide('c');goog.require('d')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,87,CompilerInput d = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,88,"JSSourceFile.fromCode(""d.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,89,"""goog.provide('d')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,91,// Independent modules.
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,92,CompilerInput e = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,93,"JSSourceFile.fromCode(""e.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,94,"""goog.provide('e')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,95,CompilerInput f = new CompilerInput(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,96,"JSSourceFile.fromCode(""f.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,97,"""goog.provide('f')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,99,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,100,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,101,"ImmutableList.of(a, b, c, d));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,102,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,103,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,104,"ImmutableList.of(d, b, c, a));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,105,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,106,"ImmutableList.of(d, c, b, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,107,"ImmutableList.of(d, c, b, a));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,108,assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,109,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,110,"ImmutableList.of(d, a, b, c));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,113,private void assertSortedInputs(
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,114,"List<CompilerInput> expected, List<CompilerInput> shuffled) {"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,79,"od.add(JSSourceFile.fromCode(""a.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,80,"goog.require('b');goog.require('c')""));"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,81,"od.add(JSSourceFile.fromCode(""b.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,82,"goog.provide('b');goog.require('d')""));"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,83,"od.add(JSSourceFile.fromCode(""c.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,84,"goog.provide('c');goog.require('d')""));"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,85,"od.add(JSSourceFile.fromCode(""d.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,86,"goog.provide('d')""));"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,116,for (CompilerInput input : shuffled) {
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,117,input.setModule(null);
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,118,mod.add(input);
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,91,"ssertEquals(4, mod.getInputs().size());"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,92,"ssertEquals(""d.js"", mod.getInputs().get(0).getSourceFile().getName());"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,93,"ssertEquals(""b.js"", mod.getInputs().get(1).getSourceFile().getName());"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,94,"ssertEquals(""c.js"", mod.getInputs().get(2).getSourceFile().getName());"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,95,"ssertEquals(""a.js"", mod.getInputs().get(3).getSourceFile().getName());"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,124,"assertEquals(expected, mod.getInputs());"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,108,"ssertEquals(ImmutableList.of(mod1, mod2, mod3, mod4),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,137,"assertEquals(ImmutableList.of(mod1, mod3, mod2, mod4),"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,116,"ssertEquals(ImmutableList.of(mod1, mod2, mod3, mod4),"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,145,"assertEquals(ImmutableList.of(mod1, mod3, mod2, mod4),"
