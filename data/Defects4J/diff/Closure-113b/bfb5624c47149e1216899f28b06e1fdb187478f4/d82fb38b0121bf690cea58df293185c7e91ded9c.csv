is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1253,/ templatized types.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1254,f (thisType.isTemplatizedType()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1255,"eturn !areIncompatibleArrays(thisType, thatType) &&"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1256,hisType.toMaybeTemplatizedType().getReferencedType().isSubtype(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1257,hatType);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1259,f (thatType.isTemplatizedType()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1260,f (!isExemptFromTemplateTypeInvariance(thatType) &&
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1261,thisType.getTemplateTypeMap().checkEquivalenceHelper(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1262,"hatType.getTemplateTypeMap(), EquivalenceMethod.IDENTITY)) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1253,if (thisType.isTemplatizedType() && thatType.isTemplatizedType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1254,JSType rawThisType = thisType.toMaybeTemplatizedType().getReferencedType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1255,JSType rawThatType = thatType.toMaybeTemplatizedType().getReferencedType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1256,if (!rawThisType.isSubtype(rawThatType)) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1257,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1260,TemplateTypeMap thisTypeParams = thisType.getTemplateTypeMap();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1261,TemplateTypeMap thatTypeParams = thatType.getTemplateTypeMap();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1263,if (thisTypeParams.checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1264,"thatTypeParams, EquivalenceMethod.INVARIANT)) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1265,return true;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1266,} else if (isExemptFromTemplateTypeInvariance(thatType)) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1267,// Only array and object qualify and they are compatible if their
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1268,// elmenet types are related.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1269,TemplateType key = thisType.registry.getObjectElementKey();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1270,JSType thisElement = thisTypeParams.getTemplateType(key);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1271,JSType thatElement = thatTypeParams.getTemplateType(key);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1273,return thisElement.isSubtype(thatElement)
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1274,|| thatElement.isSubtype(thisElement);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1275,} else {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1280,if (thisType.isTemplatizedType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1281,return thisType.toMaybeTemplatizedType().getReferencedType().isSubtype(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1282,thatType);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1276," Determines if two types are incompatible Arrays, meaning that their element"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1277, template types are not subtypes of one another.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1279,"rivate static boolean areIncompatibleArrays(JSType type1, JSType type2) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1280,bjectType type1Obj = type1.toObjectType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1281,bjectType type2Obj = type2.toObjectType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1282,f (type1Obj == null || type2Obj == null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1283,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1286,"f (!""Array"".equals(type1Obj.getReferenceName()) ||"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1287,"""Array"".equals(type2Obj.getReferenceName())) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1288,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1291,emplateType templateKey = type1.registry.getObjectElementKey();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1292,SType elemType1 = type1.getTemplateTypeMap().getTemplateType(templateKey);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1293,SType elemType2 = type2.getTemplateTypeMap().getTemplateType(templateKey);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,1294,eturn !elemType1.isSubtype(elemType2) && !elemType2.isSubtype(elemType1);
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10721,/ verify interface type parameters are recognised.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10721,// verify interface type parameters are recognized.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10741,public void testTemplateType10() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10742,// verify a type parameterized with unknown can be assigned to
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10743,// the same type with any other type parameter.
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10744,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10745,"""/** @constructor \n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10746,""" * @classTemplate T\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10747,""" */\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10748,"""function Bar() {}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10749,"""\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10751,"""/** @type {!Bar.<?>} */ var x;"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10752,"""/** @type {!Bar.<number>} */ var y;"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,10753,"""y = x;"");"
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,135,ssertFalse(baseType.isSubtype(templatizedType1));
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,136,ssertFalse(baseType.isSubtype(templatizedType2));
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,137,ssertFalse(baseType.isSubtype(templatizedType3));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,135,assertTrue(baseType.isSubtype(templatizedType1));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,136,assertTrue(baseType.isSubtype(templatizedType2));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,137,assertTrue(baseType.isSubtype(templatizedType3));
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,143,ssertFalse(templatizedType2.isSubtype(templatizedType3));
False,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,144,ssertFalse(templatizedType3.isSubtype(templatizedType2));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,143,assertTrue(templatizedType2.isSubtype(templatizedType3));
True,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,test/com/google/javascript/rhino/jstype/TemplatizedTypeTest.java,144,assertTrue(templatizedType3.isSubtype(templatizedType2));
