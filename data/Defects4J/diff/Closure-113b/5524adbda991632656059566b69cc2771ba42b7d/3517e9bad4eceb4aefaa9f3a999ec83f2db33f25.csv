is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,217,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/AliasStrings.java,src/com/google/javascript/jscomp/AliasStrings.java,217,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,105,"ew Node(Token.LP), new Node(Token.BLOCK));"
True,src/com/google/javascript/jscomp/AstParallelizer.java,src/com/google/javascript/jscomp/AstParallelizer.java,105,"new Node(Token.PARAM_LIST), new Node(Token.BLOCK));"
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,367,"alidateNodeType(Token.LP, n);"
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,367,"validateNodeType(Token.PARAM_LIST, n);"
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,551,f (c.isDefault()) {
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,551,if (c.isDefaultCase()) {
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,566,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,566,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,576,"alidateNodeType(Token.DEFAULT, n);"
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,576,"validateNodeType(Token.DEFAULT_CASE, n);"
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,676,ase Token.GET:
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,676,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,679,ase Token.SET:
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,679,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,692,"alidateNodeType(Token.GET, n);"
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,692,"validateNodeType(Token.GETTER_DEF, n);"
False,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,708,"alidateNodeType(Token.SET, n);"
True,src/com/google/javascript/jscomp/AstValidator.java,src/com/google/javascript/jscomp/AstValidator.java,708,"validateNodeType(Token.SETTER_DEF, n);"
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,256,f (v1.getParentNode().isLP() &&
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,257,2.getParentNode().isLP()) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,256,if (v1.getParentNode().isParamList() &&
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,257,v2.getParentNode().isParamList()) {
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,422,f (parent.isLP()) {
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,422,if (parent.isParamList()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,213,ase Token.LP:
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,213,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,307,ase Token.GET:
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,308,ase Token.SET:
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,307,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,308,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,315,f (type == Token.GET) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,315,if (type == Token.GETTER_DEF) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,644,f (c.isGet() || c.isSet()) {
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,644,if (c.isGetterDef() || c.isSetterDef()) {
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,694,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,694,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,839,f (key.isGet() || key.isSet()) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,839,if (key.isGetterDef() || key.isSetterDef()) {
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,315,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,315,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,461,"arent.getFirstChild().getNext(), Token.DEFAULT);"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,461,"parent.getFirstChild().getNext(), Token.DEFAULT_CASE);"
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,510,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,510,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,714,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,714,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,720, else if (parent.getNext().isDefault()) {
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,720,} else if (parent.getNext().isDefaultCase()) {
False,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,46,ase Token.GET:
False,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,47,ase Token.SET:
True,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,46,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,src/com/google/javascript/jscomp/ConvertToDottedProperties.java,47,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,145,f (valueParent.isGet()
False,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,146,| valueParent.isSet()) {
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,145,if (valueParent.isGetterDef()
True,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,src/com/google/javascript/jscomp/CrossModuleMethodMotion.java,146,|| valueParent.isSetterDef()) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,59, else if (parent.isLP()) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,59,} else if (parent.isParamList()) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,88, else if (parent.isLP()) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,88,} else if (parent.isParamList()) {
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,349,ase Token.SET:
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,350,ase Token.GET:
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,349,case Token.SETTER_DEF:
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,350,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,662,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,662,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,191,"ew Node(Token.LP, Node.newString(Token.NAME, prototypeAlias)),"
True,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,src/com/google/javascript/jscomp/ExtractPrototypeMemberDeclarations.java,191,"new Node(Token.PARAM_LIST, Node.newString(Token.NAME, prototypeAlias)),"
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,197,arent.isDec() || parent.isLP() ||
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,197,parent.isDec() || parent.isParamList() ||
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,406,ode lp = new Node(Token.LP);
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,406,Node lp = new Node(Token.PARAM_LIST);
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,319,ase Token.GET:
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,320,ase Token.SET:
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,319,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,320,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,333,ase Token.GET:
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,333,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,336,ase Token.SET:
True,src/com/google/javascript/jscomp/GlobalNamespace.java,src/com/google/javascript/jscomp/GlobalNamespace.java,336,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,200,f (child.isGet() ||
False,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,201,hild.isSet()) {
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,200,if (child.isGetterDef() ||
True,src/com/google/javascript/jscomp/InlineObjectLiterals.java,src/com/google/javascript/jscomp/InlineObjectLiterals.java,201,child.isSetterDef()) {
False,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,504,ase Token.LP:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,504,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,126,ase Token.LP: {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,126,case Token.PARAM_LIST: {
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,181,ase Token.LP:
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,181,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,215,ase Token.SET:
False,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,216,ase Token.GET:
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,215,case Token.SETTER_DEF:
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,216,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,382,eturn v.getParentNode().isLP();
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,382,return v.getParentNode().isParamList();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,469,ase Token.SET:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,470,ase Token.GET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,469,case Token.SETTER_DEF:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,470,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,794,ase Token.LP:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,794,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1631,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1631,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1660,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1660,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1725,eturn n.isCase() || n.isDefault();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1725,return n.isCase() || n.isDefaultCase();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2034,| parent.isLP()
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2034,|| parent.isParamList()
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2049,ase Token.GET:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2050,ase Token.SET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2049,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2050,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2064,ase Token.GET:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2065,ase Token.SET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2064,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2065,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2078,ase Token.GET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2078,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2087,ase Token.SET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2087,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2111,ase Token.GET:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2112,ase Token.SET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2111,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2112,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2270,"ode parameterParen = new Node(Token.LP, lineno, charno);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2270,"Node parameterParen = new Node(Token.PARAM_LIST, lineno, charno);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3104,* @returns false iff the result of the expression is not consumed.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3106,static boolean isExpressionResultUsed(Node expr) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3107,// TODO(johnlenz): consider sharing some code with trySimpleUnusedResult.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3108,Node parent = expr.getParent();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3109,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3110,case Token.EXPR_RESULT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3111,return false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3112,case Token.HOOK:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3113,case Token.AND:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3114,case Token.OR:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3115,return (expr == parent.getFirstChild())
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3116,? true : isExpressionResultUsed(parent);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3117,case Token.COMMA:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3118,return (expr == parent.getFirstChild())
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3119,? false : isExpressionResultUsed(parent);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3120,case Token.FOR:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3121,if (!NodeUtil.isForIn(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3122,// Only an expression whose result is in the condition part of the
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3123,// expression is used.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3124,return (parent.getChildAtIndex(1) == expr);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3126,break;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3128,return true;
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,337,ase Token.GET:
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,338,ase Token.SET:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,337,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,338,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,353,| n.isGet()
False,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,354,| n.isSet());
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,353,|| n.isGetterDef()
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,354,|| n.isSetterDef());
False,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,181,reconditions.checkState(parametersList.isLP());
True,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,src/com/google/javascript/jscomp/OptimizeArgumentsArray.java,181,Preconditions.checkState(parametersList.isParamList());
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1486,ase Token.SET:
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1486,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1488,ase Token.GET:
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1488,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1519,f (key.isGet()){
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,1519,if (key.isGetterDef()){
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,329,f (c.isDefault()) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,329,if (c.isDefaultCase()) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,390,reconditions.checkState(executingCase.isDefault()
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,390,Preconditions.checkState(executingCase.isDefaultCase()
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,396,| executingCase.getType() != Token.DEFAULT);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,396,|| !executingCase.isDefaultCase());
False,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,560,arent.isLP() &&
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,560,parent.isParamList() &&
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,805,oRemove.isLP() &&
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,805,toRemove.isParamList() &&
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,809,f (toRemove.isLP() &&
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,809,if (toRemove.isParamList() &&
False,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,151,"heckNode(argListNode, Token.LP);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,151,"checkNode(argListNode, Token.PARAM_LIST);"
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,161,f (inExterns && node.isName() && parent.isLP()) {
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,161,if (inExterns && node.isName() && parent.isParamList()) {
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,123,ase Token.LP:
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,123,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,186,f (key.getType() != Token.SET) {
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,186,if (key.getType() != Token.SETTER_DEF) {
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,194,f (key.getType() != Token.GET) {
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,194,if (key.getType() != Token.GETTER_DEF) {
False,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,105,reconditions.checkState(args.isLP());
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,105,Preconditions.checkState(args.isParamList());
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,473,ase Token.LP:
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,473,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,514,ase Token.GET:
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,515,ase Token.SET:
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,514,case Token.GETTER_DEF:
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,515,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,752,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,752,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1223,arentNodeType == Token.LP ||
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1223,parentNodeType == Token.PARAM_LIST ||
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,335,ase Token.LP:
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,335,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1036,arent.isLP() ||
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1036,parent.isParamList() ||
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1768,f (n.isLP() && parent == scope.getRootNode()) {
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1768,if (n.isParamList() && parent == scope.getRootNode()) {
False,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,249,ase Token.LP:
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,249,case Token.PARAM_LIST:
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,81,    Token.LP (for a function formal parameter)
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,81,*    Token.PARAM_LIST (for a function formal parameter)
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,101,| parent.isLP());
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,101,|| parent.isParamList());
False,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,148,eturn variableParent != null && variableParent.isLP();
True,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,src/com/google/javascript/jscomp/VariableVisibilityAnalysis.java,148,return variableParent != null && variableParent.isParamList();
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,713,"ransformProp(Token.GET, element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,713,"transformProp(Token.GETTER_DEF, element, parent);"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,722,"ransformProp(Token.SET, element, parent);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,722,"transformProp(Token.SETTER_DEF, element, parent);"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,750,"ode node = createNode(Token.DEFAULT, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,750,"Node node = createNode(Token.DEFAULT_CASE, element);"
False,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1038,"ode node = createNode(Token.LP, element);"
True,src/com/google/javascript/jscomp/jsonml/Reader.java,src/com/google/javascript/jscomp/jsonml/Reader.java,1038,"Node node = createNode(Token.PARAM_LIST, element);"
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,256,ase Token.DEFAULT:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,256,case Token.DEFAULT_CASE:
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,650,ase Token.GET:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,650,case Token.GETTER_DEF:
False,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,654,ase Token.SET:
True,src/com/google/javascript/jscomp/jsonml/Writer.java,src/com/google/javascript/jscomp/jsonml/Writer.java,654,case Token.SETTER_DEF:
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,631,ode lp = newNode(Token.LP);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,631,Node lp = newNode(Token.PARAM_LIST);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,774,ey.setType(Token.GET);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,774,key.setType(Token.GETTER_DEF);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,780,ey.setType(Token.SET);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,780,key.setType(Token.SETTER_DEF);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,864,ode = newNode(Token.DEFAULT);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,864,node = newNode(Token.DEFAULT_CASE);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1162,eturn Token.LP;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1162,return Token.PARAM_LIST;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1208,eturn Token.DEFAULT;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1208,return Token.DEFAULT_CASE;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1239,eturn Token.GET;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1239,return Token.GETTER_DEF;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1241,eturn Token.SET;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,1241,return Token.SETTER_DEF;
False,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1873,ode paramsType = newNode(Token.LP);
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,1873,Node paramsType = newNode(Token.PARAM_LIST);
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1505,"ase Token.LP:              return ""lp"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1505,"case Token.PARAM_LIST:      return ""lp"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1528,"ase Token.DEFAULT:         return ""default"";"
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,1528,"case Token.DEFAULT_CASE:    return ""default"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2253,ublic boolean isDefault() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2254,eturn this.getType() == Token.DEFAULT;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2253,public boolean isDefaultCase() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2254,return this.getType() == Token.DEFAULT_CASE;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2281,ublic boolean isGet() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2282,eturn this.getType() == Token.GET;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2281,public boolean isGetterDef() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2282,return this.getType() == Token.GETTER_DEF;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2313,ublic boolean isLP() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2314,eturn this.getType() == Token.LP;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2341,public boolean isParamList() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2342,return this.getType() == Token.PARAM_LIST;
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2357,ublic boolean isSet() {
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2358,eturn this.getType() == Token.SET;
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2357,public boolean isSetterDef() {
True,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,2358,return this.getType() == Token.SETTER_DEF;
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,106,"P             = 83,  // left and right parentheses"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,106,"PARAM_LIST     = 83,"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,122,"OOK           = 98, // conditional (?:)"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,122,"HOOK           = 98,  // conditional (?:)"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,125,"NC            = 102, // increment/decrement (++ --)"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,126,"EC            = 103,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,125,"INC            = 102, // increment (++)"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,126,"DEC            = 103, // decrement (--)"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,131,"EFAULT        = 112, // default keyword"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,131,"DEFAULT_CASE   = 112, // default keyword"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,149,"ET            = 147,  // JS 1.5 get pseudo keyword"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,150,"ET            = 148,  // JS 1.5 set pseudo keyword"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,149,"GETTER_DEF     = 147,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,150,"SETTER_DEF     = 148,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,171,// Transitional definitions
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,172,// TODO(johnlenz): remove these
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,173,public final static int
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,174,"DEFAULT        = DEFAULT_CASE,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,175,"GET            = GETTER_DEF,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,176,"LP             = PARAM_LIST,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,177,SET            = SETTER_DEF;
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,219,"ase LP:              return ""LP"";"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,227,"case PARAM_LIST:      return ""PARAM_LIST"";"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,243,"ase DEFAULT:         return ""DEFAULT"";"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,251,"case DEFAULT_CASE:    return ""DEFAULT_CASE"";"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,257,"ase GET:             return ""GET"";"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,258,"ase SET:             return ""SET"";"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,265,"case GETTER_DEF:      return ""GETTER_DEF"";"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,266,"case SETTER_DEF:      return ""SETTER_DEF"";"
False,src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java,src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java,52,rivate final Node root = new Node(Token.LP);
True,src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java,src/com/google/javascript/rhino/jstype/FunctionParamBuilder.java,52,private final Node root = new Node(Token.PARAM_LIST);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,165,"his.call = new ArrowType(registry, new Node(Token.LP), null);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,165,"this.call = new ArrowType(registry, new Node(Token.PARAM_LIST), null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1563,f (current.getType() == Token.LP) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1563,if (current.getType() == Token.PARAM_LIST) {
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,35,"ode args = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,35,"Node args = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,38,"ode optArgs = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,38,"Node optArgs = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,209,"ew Node(Token.LP), null);"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,209,"new Node(Token.PARAM_LIST), null);"
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,213,"ew Node(Token.LP), null);"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,213,"new Node(Token.PARAM_LIST), null);"
False,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,204,ode args = new Node(Token.LP);
True,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,204,Node args = new Node(Token.PARAM_LIST);
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,339,"ssertCrossEdge(cfg, Token.CASE, Token.DEFAULT, Branch.ON_FALSE);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,339,"assertCrossEdge(cfg, Token.CASE, Token.DEFAULT_CASE, Branch.ON_FALSE);"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,358,"ssertCrossEdge(cfg, Token.CASE, Token.DEFAULT, Branch.ON_FALSE);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,358,"assertCrossEdge(cfg, Token.CASE, Token.DEFAULT_CASE, Branch.ON_FALSE);"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,368,"ssertCrossEdge(cfg, Token.CASE, Token.DEFAULT, Branch.ON_FALSE);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,368,"assertCrossEdge(cfg, Token.CASE, Token.DEFAULT_CASE, Branch.ON_FALSE);"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,730,"  node3 [label=\""LP\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,730,"""  node3 [label=\""PARAM_LIST\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,766,"  node3 [label=\""LP\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,766,"""  node3 [label=\""PARAM_LIST\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,897," ""  node5 [label=\""LP\""];\n"""
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,897,"+ ""  node5 [label=\""PARAM_LIST\""];\n"""
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1177,"  node6 [label=\""LP\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1177,"""  node6 [label=\""PARAM_LIST\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1207,"  node6 [label=\""LP\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1207,"""  node6 [label=\""PARAM_LIST\""];\n"" +"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1328,"  node6 [label=\""LP\""];\n"" +"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1328,"""  node6 [label=\""PARAM_LIST\""];\n"" +"
False,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,31,"ode args = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,31,"Node args = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,34,"ode optArgs = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,34,"Node optArgs = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,32,"ode args = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,32,"Node args = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,35,"ode optArgs = new Node(Token.LP,"
True,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,test/com/google/javascript/jscomp/GoogleCodingConventionTest.java,35,"Node optArgs = new Node(Token.PARAM_LIST,"
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,98,"mmutableSet.of(""DEF GET null -> FUNCTION"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,98,"ImmutableSet.of(""DEF GETTER_DEF null -> FUNCTION"","
False,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,107,"DEF SET null -> FUNCTION"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,107,"""DEF SETTER_DEF null -> FUNCTION"","
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,128,"ssertEquals(Token.LP, refs.get(0).getNode().getParent().getType());"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,128,"assertEquals(Token.PARAM_LIST, refs.get(0).getNode().getParent().getType());"
False,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,170,f (n.getParent().isLP()
True,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,test/com/google/javascript/jscomp/VariableVisibilityAnalysisTest.java,170,if (n.getParent().isParamList()
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,109,"            GET 1 1 [quoted: 1] [source_file: FileName.js] [length: 1]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,109,"""            GETTER_DEF 1 1 [quoted: 1] [source_file: FileName.js] [length: 1]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,112,"                    LP 1 [source_file: FileName.js]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,112,"""                    PARAM_LIST 1 [source_file: FileName.js]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,123,"            SET 1 1 [quoted: 1] [source_file: FileName.js] [length: 1]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,123,"""            SETTER_DEF 1 1 [quoted: 1] [source_file: FileName.js] [length: 1]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,126,"                    LP 1 [source_file: FileName.js]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,126,"""                    PARAM_LIST 1 [source_file: FileName.js]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,203,"            GET a 1 [source_file: FileName.js] [length: 1]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,203,"""            GETTER_DEF a 1 [source_file: FileName.js] [length: 1]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,206,"                    LP 1 [source_file: FileName.js]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,206,"""                    PARAM_LIST 1 [source_file: FileName.js]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,216,"            SET a 1 [source_file: FileName.js] [length: 1]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,216,"""            SETTER_DEF a 1 [source_file: FileName.js] [length: 1]\n"" +"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,219,"                    LP 1 [source_file: FileName.js]\n"" +"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,219,"""                    PARAM_LIST 1 [source_file: FileName.js]\n"" +"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,113,withParamsNode(new Node(Token.LP))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,113,.withParamsNode(new Node(Token.PARAM_LIST))
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4685,withParamsNode(new Node(Token.LP))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4685,.withParamsNode(new Node(Token.PARAM_LIST))
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4690,withParamsNode(new Node(Token.LP))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4690,.withParamsNode(new Node(Token.PARAM_LIST))
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4697,withParamsNode(new Node(Token.LP))
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4697,.withParamsNode(new Node(Token.PARAM_LIST))
