is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,645,withTemplateNames(templateTypeNames)
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,645,.withTemplateKeys(templateTypeNames)
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,684,"nName, contents.getSourceNode(), parametersNode, returnType);"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,684,"fnName, contents.getSourceNode(), parametersNode, returnType, null);"
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1019,f (fnType.getTemplateTypeNames().isEmpty()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1019,if (fnType.getTemplateKeys().isEmpty()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1156,f (fnType.getTemplateTypeNames().isEmpty()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1156,if (fnType.getTemplateKeys().isEmpty()) {
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1462,"ull, null, null);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1462,"null, null, null, null);"
False,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,290,ublic boolean hasAnyTemplateInternal() {
False,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,291,eturn returnType.hasAnyTemplate()
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,290,public boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,291,return returnType.hasAnyTemplateTypes()
False,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,300,f (type != null && type.hasAnyTemplate()) {
True,src/com/google/javascript/rhino/jstype/ArrowType.java,src/com/google/javascript/rhino/jstype/ArrowType.java,300,if (type != null && type.hasAnyTemplateTypes()) {
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,rivate ImmutableList<String> templateTypeNames = ImmutableList.of();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,private ImmutableList<String> templateKeys = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,ublic FunctionBuilder withTemplateNames(
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,mmutableList<String> templateTypeNames) {
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,124,his.templateTypeNames = templateTypeNames;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,public FunctionBuilder withTemplateKeys(
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,ImmutableList<String> templateKeys) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,124,this.templateKeys = templateKeys;
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,153,his.templateTypeNames = otherType.getTemplateTypeNames();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,153,this.templateKeys = otherType.getTemplateKeys();
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,163,"ypeOfThis, templateTypeNames, isConstructor, isNativeType);"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,163,"typeOfThis, templateKeys, isConstructor, isNativeType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,134, The template type name. May be {@code null}.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,rivate final ImmutableList<String> templateTypeNames;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,141,"mmutableList<String> templateTypeNames,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,"ImmutableList<String> templateKeys,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,145,ativeType);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,140,"nativeType, templateKeys, null);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,156,"ypeOfThis : new InstanceObjectType(registry, this, nativeType);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,151,"typeOfThis : new InstanceObjectType(registry, this, nativeType, null);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,164,his.templateTypeNames = templateTypeNames != null
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,165, templateTypeNames : ImmutableList.<String>of();
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,181,his.templateTypeNames = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,387,"sNativeObjectType()),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,379,"isNativeObjectType(), null, null),"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,907,eturn typeOfThis.checkEquivalenceHelper(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,908,"hat.typeOfThis, eqMethod) &&"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,899,"return typeOfThis.checkEquivalenceHelper(that.typeOfThis, eqMethod) &&"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1161, Gets the template type name.
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1163,ublic ImmutableList<String> getTemplateTypeNames() {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1164,eturn templateTypeNames;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1270,ublic boolean hasAnyTemplateInternal() {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1271,eturn !getTemplateTypeNames().isEmpty()
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1272,| typeOfThis.hasAnyTemplate()
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1273,| call.hasAnyTemplate();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1254,public boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1255,return !getTemplateKeys().isEmpty()
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1256,|| typeOfThis.hasAnyTemplateTypes()
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1257,|| call.hasAnyTemplateTypes();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,43,import com.google.common.base.Joiner;
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,45,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,55,"his(registry, constructor, false);"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,57,"this(registry, constructor, false, null);"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,59,oolean isNativeType) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,60,"uper(registry, null, null, isNativeType);"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,61,"boolean isNativeType,"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,62,ImmutableList<JSType> templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,63,"super(registry, null, null, isNativeType, constructor.getTemplateKeys(),"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,64,templatizedTypes);
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,98,eturn constructor.getReferenceName();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,102,String typeString = constructor.getReferenceName();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,104,ImmutableList<JSType> templatizedTypes = getTemplatizedTypes();
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,105,if (!templatizedTypes.isEmpty()) {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,106,"typeString += "".<"" + Joiner.on("","").join(templatizedTypes) + "">"";"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,109,return typeString;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,45,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,73,private final ImmutableList<String> templateKeys;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,74,private final ImmutableList<JSType> templatizedTypes;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,109,"this(registry, null, null);"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,112,"JSType(JSTypeRegistry registry, ImmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,113,ImmutableList<JSType> templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,116,// Do sanity checking on the specified keys and templatized types.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,117,int keysLength = templateKeys == null ? 0 : templateKeys.size();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,118,int typesLength = templatizedTypes == null ? 0 : templatizedTypes.size();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,119,if (typesLength > keysLength) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,120,throw new IllegalArgumentException(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,121,"""Cannot have more templatized types than template keys"");"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,122,} else if (typesLength < keysLength) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,123,"// If there are fewer templatized types than keys, extend the templatized"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,124,"// types list to match the number of keys, using UNKNOWN_TYPE for the"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,125,// unspecified types.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,126,ImmutableList.Builder<JSType> builder = ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,127,if (typesLength > 0) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,128,builder.addAll(templatizedTypes);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,130,for (int i = 0; i < keysLength - typesLength; i++) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,131,builder.add(registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,133,templatizedTypes = builder.build();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,134,} else if (keysLength == 0 && typesLength == 0) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,135,// Ensure that both lists are non-null.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,136,templateKeys = ImmutableList.of();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,137,templatizedTypes = ImmutableList.of();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,140,this.templateKeys = templateKeys;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,141,this.templatizedTypes = templatizedTypes;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,405,ublic boolean hasAnyTemplate() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,440,public boolean hasAnyTemplateTypes() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,408,oolean result = hasAnyTemplateInternal();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,443,boolean result = hasAnyTemplateTypesInternal();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,417,oolean hasAnyTemplateInternal() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,452,boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,453,if (isTemplatized()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,454,for (JSType templatizedType : templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,455,if (templatizedType.hasAnyTemplateTypes()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,456,return true;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,464,* Returns true if this type is templatized; false otherwise.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,466,public boolean isTemplatized() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,467,return !templateKeys.isEmpty();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,471,* Returns the template keys associated with this type.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,473,public ImmutableList<String> getTemplateKeys() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,474,return templateKeys;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,477,public ImmutableList<JSType> getTemplatizedTypes() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,478,return templatizedTypes;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,482,* Returns true if this type is templatized for the specified key; false
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,483,* otherwise.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,485,public boolean hasTemplatizedType(String key) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,486,return templateKeys.contains(key);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,490,* Returns the type associated with a given template key. Will return
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,491,* the UNKNOWN_TYPE if there is no template type associated with that
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,492,* template key.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,494,public JSType getTemplatizedType(String key) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,495,int index = templateKeys.indexOf(key);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,496,if (index < 0) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,497,return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,499,return templatizedTypes.get(index);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,503,"* Determines if the two specified JSTypes have equivalent, invariant"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,504,* templatized types.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,506,static boolean hasEquivalentTemplateTypes(
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,507,"JSType type1, JSType type2, EquivalenceMethod eqMethod) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,508,ImmutableList<JSType> templatizedTypes1 = type1.getTemplatizedTypes();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,509,ImmutableList<JSType> templatizedTypes2 = type2.getTemplatizedTypes();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,510,int nTemplatizedTypes1 = templatizedTypes1.size();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,511,int nTemplatizedTypes2 = templatizedTypes2.size();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,513,if (nTemplatizedTypes1 != nTemplatizedTypes2) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,514,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,517,for (int i = 0; i < nTemplatizedTypes1; i++) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,518,JSType templatizedType1 = templatizedTypes1.get(i);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,519,JSType templatizedType2 = templatizedTypes2.get(i);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,520,"if (templatizedType1.checkEquivalenceHelper(templatizedType2, eqMethod)) {"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,521,return false;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,525,return true;
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,274,"ew PrototypeObjectType(this, null, null, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,274,"new PrototypeObjectType(this, null, null, true, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,595,Preconditions.checkArgument(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,596,"!name.contains(""<""), ""Type names cannot contain template annotations."");"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1131,"ull, null, createParameters(parameterTypes), returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1134,"null, null, createParameters(parameterTypes), returnType, null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1144,"ull, null, createParametersWithVarArgs(parameterTypes), returnType);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1147,"null, null, createParametersWithVarArgs(parameterTypes), returnType,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1148,null);
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1400,"ew PrototypeObjectType(this, null, null, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1404,"new PrototypeObjectType(this, null, null, true, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1419,* @param templateKeys the templatized type keys for the class.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1417,"ode parameters, JSType returnType) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1422,"Node parameters, JSType returnType, ImmutableList<String> templateKeys) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1420,"ull, true, false);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1425,"templateKeys, true, false);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1447,* Creates a templatized instance of the specified type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1448,* @param baseType the type to be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1449,* @param templatizedTypes a list of the template JSTypes. Will be matched by
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1450,*     list order to the template keys specified in the constructor function.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1452,public JSType createTemplatizedType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1453,"JSType baseType, ImmutableList<JSType> templatizedTypes) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1454,// Only instance object types can currently be templatized; extend this
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1455,// logic when more types can be templatized.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1456,if (baseType instanceof InstanceObjectType) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1457,ObjectType baseObjType = baseType.toObjectType();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1458,return new InstanceObjectType(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1459,"this, baseObjType.getConstructor(), baseObjType.isNativeObjectType(),"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1460,templatizedTypes);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1461,} else {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1462,throw new IllegalArgumentException(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1463,"""Only instance object types can be templatized"");"
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,43,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,148,eturn objType;
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,149,if (objType.isTemplatized()) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,150,ImmutableList.Builder<JSType> builder = ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,151,for (JSType templatizedType : objType.getTemplatizedTypes()) {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,152,builder.add(templatizedType.visit(this));
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,154,"return registry.createTemplatizedType(objType, builder.build());"
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,155,} else {
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,156,return objType;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,45,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,93,"ObjectType(JSTypeRegistry registry, ImmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,94,ImmutableList<JSType> templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,95,"super(registry, templateKeys, templatizedTypes);"
False,src/com/google/javascript/rhino/jstype/ParameterizedType.java,src/com/google/javascript/rhino/jstype/ParameterizedType.java,83,ublic boolean hasAnyTemplateInternal() {
False,src/com/google/javascript/rhino/jstype/ParameterizedType.java,src/com/google/javascript/rhino/jstype/ParameterizedType.java,84,eturn super.hasAnyTemplate() || parameterType.hasAnyTemplate();
True,src/com/google/javascript/rhino/jstype/ParameterizedType.java,src/com/google/javascript/rhino/jstype/ParameterizedType.java,83,public boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/ParameterizedType.java,src/com/google/javascript/rhino/jstype/ParameterizedType.java,84,return super.hasAnyTemplateTypes() || parameterType.hasAnyTemplateTypes();
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,106,"his(registry, className, implicitPrototype, false);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,106,"this(registry, className, implicitPrototype, false, null, null);"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,110," Creates an object type, allowing specification of the implicit prototype"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,111, when creating native objects.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,110,"* Creates an object type, allowing specification of the implicit prototype,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,111,"* whether the object is native, and any templatized types."
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,114,"bjectType implicitPrototype, boolean nativeType) {"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,115,uper(registry);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,114,"ObjectType implicitPrototype, boolean nativeType,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,115,"ImmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,116,ImmutableList<JSType> templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,117,"super(registry, templateKeys, templatizedTypes);"
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,441,ublic boolean hasAnyTemplateInternal() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,442,eturn referencedType.hasAnyTemplate();
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,441,public boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,442,return referencedType.hasAnyTemplateTypes();
False,src/com/google/javascript/rhino/jstype/TemplateType.java,src/com/google/javascript/rhino/jstype/TemplateType.java,74,ublic boolean hasAnyTemplateInternal() {
True,src/com/google/javascript/rhino/jstype/TemplateType.java,src/com/google/javascript/rhino/jstype/TemplateType.java,74,public boolean hasAnyTemplateTypesInternal() {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,621,ublic boolean hasAnyTemplateInternal() {
True,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,621,public boolean hasAnyTemplateTypesInternal() {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,623,f (alternate.hasAnyTemplate()) {
True,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,623,if (alternate.hasAnyTemplateTypes()) {
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,176,lternate.hasAnyTemplate() ||
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,177,urrent.hasAnyTemplate()) {
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,176,alternate.hasAnyTemplateTypes() ||
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,177,current.hasAnyTemplateTypes()) {
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,42,import com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,63,rotected JSType ARRAY_FUNCTION_TYPE;
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,64,protected FunctionType ARRAY_FUNCTION_TYPE;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,132,egistry.getNativeType(JSTypeNative.ARRAY_FUNCTION_TYPE);
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,133,registry.getNativeFunctionType(JSTypeNative.ARRAY_FUNCTION_TYPE);
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,412,protected JSType createTemplatizedType(
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,413,"JSType baseType, ImmutableList<JSType> templatizedTypes) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,414,"return registry.createTemplatizedType(baseType, templatizedTypes);"
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,209,"ew Node(Token.PARAM_LIST), null);"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,209,"new Node(Token.PARAM_LIST), null, null);"
False,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,213,"ew Node(Token.PARAM_LIST), null);"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,213,"new Node(Token.PARAM_LIST), null, null);"
False,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,216,ecl.setJSType(
False,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,217,"ypeRegistry.createConstructorType(name, decl, args, unknownType));"
True,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,216,decl.setJSType(typeRegistry.createConstructorType(
True,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,217,"name, decl, args, unknownType, null));"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,178,"Foo"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,178,"""Foo"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,57,mport com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,58,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,136,"oogBar = registry.createConstructorType(""goog.Bar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,136,googBar = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,137,"""goog.Bar"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,144,"googSubBar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,145,"""googSubBar"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,149,"googSubSubBar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,150,"""googSubSubBar"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,361,ssertTrue( U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,362,assertTrue(U2U_CONSTRUCTOR_TYPE.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3126,"egistry.createConstructorType(""Foo"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3127,"registry.createConstructorType(""Foo"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4778,"typeA"", null, null, null).getInstanceType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4779,"""typeA"", null, null, null, null).getInstanceType();"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5064,"barArg"", null, registry.createParameters(googBar), null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5065,"""barArg"", null, registry.createParameters(googBar), null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5066,"subBarArg"", null, registry.createParameters(googSubBar), null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5067,"""subBarArg"", null, registry.createParameters(googSubBar), null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5092,"egistry.createConstructorType(""goog.TempType"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5093,"registry.createConstructorType(""goog.TempType"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5385,"unctionType fun = registry.createConstructorType(""fun"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5386,FunctionType fun = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5387,"""fun"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5391,"unctionType fun = registry.createConstructorType(""fun"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5393,FunctionType fun = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5394,"""fun"", null, null, null, null);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5798,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5801,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5801,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5804,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5806,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5809,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5810,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5813,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5816,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5819,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5821,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5824,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5826,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5829,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5831,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5834,.hasAnyTemplateTypes());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5835,hasAnyTemplate());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5838,.hasAnyTemplateTypes());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5841,public void testTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5842,FunctionType templatizedCtor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5843,"""TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5844,JSType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5845,"templatizedCtor.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5846,"ImmutableList.of(NUMBER_TYPE, STRING_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5848,assertTrue(templatizedInstance.isTemplatized());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5849,"assertTrue(templatizedInstance.hasTemplatizedType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5850,"assertTrue(templatizedInstance.hasTemplatizedType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5851,"assertFalse(templatizedInstance.hasTemplatizedType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5853,"assertEquals(NUMBER_TYPE, templatizedInstance.getTemplatizedType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5854,"assertEquals(STRING_TYPE, templatizedInstance.getTemplatizedType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5855,"assertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5857,"assertEquals(""TestingType.<number,string>"", templatizedInstance.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5860,public void testPartiallyTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5861,FunctionType templatizedCtor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5862,"""TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5863,JSType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5864,"templatizedCtor.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5865,ImmutableList.of(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5867,assertTrue(templatizedInstance.isTemplatized());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5868,"assertTrue(templatizedInstance.hasTemplatizedType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5869,"assertTrue(templatizedInstance.hasTemplatizedType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5870,"assertFalse(templatizedInstance.hasTemplatizedType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5872,"assertEquals(NUMBER_TYPE, templatizedInstance.getTemplatizedType(""A""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5873,"assertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5874,"assertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""C""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5876,"assertEquals(""TestingType.<number,?>"", templatizedInstance.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5879,public void testInvalidTemplatizedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5880,FunctionType templatizedCtor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5881,"""TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5883,boolean exceptionThrown = false;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5884,try {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5885,JSType templatizedInstance = registry.createTemplatizedType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5886,"templatizedCtor.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5887,"ImmutableList.of(NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5888,} catch (IllegalArgumentException e) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5889,exceptionThrown = true;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5891,assertTrue(exceptionThrown);
False,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,52,"TypeA"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,52,"""TypeA"", null, null, null, null);"
