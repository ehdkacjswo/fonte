is_addition,old_file_path,new_file_path,line_num,content
False,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,699,nNode.addParam(createNameNode());
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,699,Name paramNameNode = createNameNode();
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,700,Comment jsdocNodeForName = getAndResetJsDoc();
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,701,if (jsdocNodeForName != null) {
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,702,paramNameNode.setJsDocNode(jsdocNodeForName);
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,704,fnNode.addParam(paramNameNode);
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,1387,Comment jsdocNodeForName = getAndResetJsDoc();
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,1388,if (jsdocNodeForName != null) {
True,lib/rhino/src/org/mozilla/javascript/Parser.java,lib/rhino/src/org/mozilla/javascript/Parser.java,1389,varName.setJsDocNode(jsdocNodeForName);
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1040,public void testJSDocAttachment17() {
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1041,AstRoot root = parse(
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1042,"""try { throw 'a'; } catch (/** @type {string} */ e) {\n"" +"
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1043,"""}\n"");"
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1044,assertNotNull(root.getComments());
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1045,"assertEquals(1, root.getComments().size());"
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1047,TryStatement tryNode = (TryStatement) root.getFirstChild();
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1048,CatchClause catchNode = tryNode.getCatchClauses().get(0);
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1049,assertNotNull(catchNode.getVarName().getJsDoc());
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1052,public void testJSDocAttachment18() {
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1053,AstRoot root = parse(
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1054,"""function f(/** @type {string} */ e) {}\n"");"
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1055,assertNotNull(root.getComments());
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1056,"assertEquals(1, root.getComments().size());"
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1058,FunctionNode function = (FunctionNode) root.getFirstChild();
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1059,AstNode param = function.getParams().get(0);
True,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,lib/rhino/testsrc/org/mozilla/javascript/tests/ParserTest.java,1060,assertNotNull(param.getJsDoc());
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,307,// Object literal properties and catch declarations are valid.
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,308,case com.google.javascript.rhino.head.Token.NAME:
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,309,valid = node.getParent() instanceof ObjectProperty
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,310,|| node.getParent() instanceof CatchClause
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,311,|| node.getParent() instanceof FunctionNode;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,312,break;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,310,ase com.google.javascript.rhino.head.Token.NAME:
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1020,ublic void testMisplacedTypeAnnotation7() {
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1021,/ TODO(johnlenz): handle this case
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1022,"arse(""function f(/** @type {string} */ a) {}"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1037,public void testValidTypeAnnotation3() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1038,// These two we don't currently support in the type checker but
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1039,// we would like to.
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1040,"parse(""try {} catch (/** @type {Error} */ e) {}"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,1041,"parse(""function f(/** @type {string} */ a) {}"");"
