is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,197,iagnosticGroups.setWarningLevels(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,198,"ptions, config.jscompError, CheckLevel.ERROR);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,199,iagnosticGroups.setWarningLevels(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,200,"ptions, config.jscompWarning, CheckLevel.WARNING);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,201,iagnosticGroups.setWarningLevels(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,202,"ptions, config.jscompOff, CheckLevel.OFF);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,197,if (config.warningGuards != null) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,198,for (WarningGuardSpec.Entry entry : config.warningGuards.entries) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,199,"diagnosticGroups.setWarningLevel(options, entry.groupName, entry.level);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1497,rivate final List<String> jscompError = Lists.newArrayList();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1496,private WarningGuardSpec warningGuards = null;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1500, Make the named class of warnings an error.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1499,* Add warning guards.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1502,ommandLineConfig setJscompError(List<String> jscompError) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1503,his.jscompError.clear();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1504,his.jscompError.addAll(jscompError);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1505,eturn this;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1508,rivate final List<String> jscompWarning = Lists.newArrayList();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1511, Make the named class of warnings a normal warning.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1513,ommandLineConfig setJscompWarning(List<String> jscompWarning) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1514,his.jscompWarning.clear();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1515,his.jscompWarning.addAll(jscompWarning);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1516,eturn this;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1519,rivate final List<String> jscompOff = Lists.newArrayList();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1522, Turn off the named class of warnings.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1524,ommandLineConfig setJscompOff(List<String> jscompOff) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1525,his.jscompOff.clear();
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1526,his.jscompOff.addAll(jscompOff);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1501,CommandLineConfig setWarningGuardSpec(WarningGuardSpec spec) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1502,this.warningGuards = spec;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1611,* A little helper class to make it easier to collect warning types
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1612,"* from --jscomp_error, --jscomp_warning, and --jscomp_off."
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1614,protected static class WarningGuardSpec {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1615,private static class Entry {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1616,private final CheckLevel level;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1617,private final String groupName;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1619,"private Entry(CheckLevel level, String groupName) {"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1620,this.level = level;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1621,this.groupName = groupName;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1625,"// The entries, in the order that they were added."
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1626,private final List<Entry> entries = Lists.newArrayList();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1628,"protected void add(CheckLevel level, String groupName) {"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1629,"entries.add(new Entry(level, groupName));"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1632,protected void clear() {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1633,entries.clear();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,26,import com.google.javascript.jscomp.AbstractCommandLineRunner.WarningGuardSpec;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,35,import org.kohsuke.args4j.spi.StringOptionHandler;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,41,import java.nio.charset.Charset;
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,50,mport java.nio.charset.Charset;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,86,* This class is totally not thread-safe.
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,92,// I don't really care about unchecked warnings in this class.
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,93,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,95,private static final WarningGuardSpec warningGuardSpec =
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,96,new WarningGuardSpec();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,234,"handler = WarningGuardErrorOptionHandler.class,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,240,"handler = WarningGuardWarningOptionHandler.class,"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,233,rivate List<String> jscomp_warning =  Lists.newArrayList();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,243,private List<String> jscomp_warning = Lists.newArrayList();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,246,"handler = WarningGuardOffOptionHandler.class,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,393,// Our own parser for warning guards that preserves the original order
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,394,// of the flags.
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,395,public static class WarningGuardErrorOptionHandler
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,396,extends StringOptionHandler {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,397,public WarningGuardErrorOptionHandler(
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,398,"CmdLineParser parser, OptionDef option,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,399,Setter<? super String> setter) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,400,"super(parser, option, new WarningGuardSetter(setter, CheckLevel.ERROR));"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,404,public static class WarningGuardWarningOptionHandler
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,405,extends StringOptionHandler {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,406,public WarningGuardWarningOptionHandler(
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,407,"CmdLineParser parser, OptionDef option,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,408,Setter<? super String> setter) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,409,"super(parser, option,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,410,"new WarningGuardSetter(setter, CheckLevel.WARNING));"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,414,public static class WarningGuardOffOptionHandler
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,415,extends StringOptionHandler {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,416,public WarningGuardOffOptionHandler(
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,417,"CmdLineParser parser, OptionDef option,"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,418,Setter<? super String> setter) {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,419,"super(parser, option, new WarningGuardSetter(setter, CheckLevel.OFF));"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,423,private static class WarningGuardSetter implements Setter {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,424,private final Setter proxy;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,425,private final CheckLevel level;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,427,"private WarningGuardSetter(Setter proxy, CheckLevel level) {"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,428,this.proxy = proxy;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,429,this.level = level;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,432,@Override public boolean isMultiValued() { return proxy.isMultiValued(); }
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,434,@Override public Class getType() { return proxy.getType(); }
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,436,@Override public void addValue(Object value) throws CmdLineException {
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,437,proxy.addValue((String) value);
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,438,"warningGuardSpec.add(level, (String) value);"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,530,Flags.warningGuardSpec.clear();
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,546,Flags.warningGuardSpec.clear();
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,537,setJscompError(flags.jscomp_error)
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,538,setJscompWarning(flags.jscomp_warning)
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,539,setJscompOff(flags.jscomp_off)
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,599,.setWarningGuardSpec(Flags.warningGuardSpec)
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,23,mport java.util.List;
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,186,"oid setWarningLevels(CompilerOptions options,"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,187,"ist<String> diagnosticGroups, CheckLevel level) {"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,188,or (String name : diagnosticGroups) {
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,189,iagnosticGroup group = forName(name);
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,190,"reconditions.checkNotNull(group, ""No warning class for name: "" + name);"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,191,"ptions.setWarningLevel(group, level);"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,185,"void setWarningLevel(CompilerOptions options,"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,186,"String name, CheckLevel level) {"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,187,DiagnosticGroup group = forName(name);
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,188,"Preconditions.checkNotNull(group, ""No warning class for name: "" + name);"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,189,"options.setWarningLevel(group, level);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,117,public void testWarningGuardOrdering1() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,118,"args.add(""--jscomp_error=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,119,"args.add(""--jscomp_off=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,120,"testSame(""function f() { this.a = 3; }"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,123,public void testWarningGuardOrdering2() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,124,"args.add(""--jscomp_off=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,125,"args.add(""--jscomp_error=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,126,"test(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,129,public void testWarningGuardOrdering3() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,130,"args.add(""--jscomp_warning=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,131,"args.add(""--jscomp_off=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,132,"testSame(""function f() { this.a = 3; }"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,135,public void testWarningGuardOrdering4() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,136,"args.add(""--jscomp_off=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,137,"args.add(""--jscomp_warning=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,138,"test(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
