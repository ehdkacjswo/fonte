is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,27,mport com.google.javascript.jscomp.graph.FixedPointGraphTraversal.EdgeCallback;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,28,import com.google.javascript.jscomp.graph.FixedPointGraphTraversal.EdgeCallback;
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,90,rivate final NameInfo globalNode = new NameInfo(null);
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,90,"private final NameInfo globalNode = new NameInfo(""[global]"");"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,93,rivate final NameInfo externNode = new NameInfo(null);
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,93,"private final NameInfo externNode = new NameInfo(""[extern]"");"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,95,// A dummy node for representing all anonymous functions with no names.
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,96,"private final NameInfo anonymousNode = new NameInfo(""[anonymous]"");"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,187,rivate class ProcessProperties implements NodeTraversal.Callback {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,188,rivate Stack<NameInfo> symbolStack = new Stack<NameInfo>();
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,190,private class ProcessProperties implements NodeTraversal.ScopedCallback {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,191,private Stack<NameContext> symbolStack = new Stack<NameContext>();
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,193,private ProcessProperties() {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,194,symbolStack.push(new NameContext(globalNode));
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,197,@Override
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,198,public void enterScope(NodeTraversal t) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,199,symbolStack.peek().scope = t.getScope();
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,202,@Override
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,203,public void exitScope(NodeTraversal t) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,192,ymbolStack.push(getNameInfoForName(
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,193,".getFirstChild().getLastChild().getString(), PROPERTY));"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,194," else if (isGlobalFunctionDeclaration(t, n, parent)) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,209,symbolStack.push(new NameContext(getNameInfoForName(
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,210,"n.getFirstChild().getLastChild().getString(), PROPERTY)));"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,211,"} else if (isGlobalFunctionDeclaration(t, n)) {"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,198,"ymbolStack.push(getNameInfoForName(name, VAR));"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,215,"symbolStack.push(new NameContext(getNameInfoForName(name, VAR)));"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,216,} else if (NodeUtil.isFunction(n)) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,217,symbolStack.push(new NameContext(anonymousNode));
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,252, else {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,253,nt level = 0;
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,254,or (Scope s = t.getScope(); s != var.getScope();
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,255, = s.getParent()) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,256,evel++;
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,258,or (level = symbolStack.size() < level ?
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,259,ymbolStack.size() : level; level != 0; level--) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,260,ymbolStack.get(symbolStack.size() - level)
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,261,readClosureVariables = true;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,271,} else if (var.getScope() != t.getScope()){
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,272,for (int i = symbolStack.size() - 1; i >= 0; i--) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,273,NameContext context = symbolStack.get(i);
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,274,context.name.readClosureVariables = true;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,275,if (context.scope == var.getScope()) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,276,break;
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,268,"sGlobalFunctionDeclaration(t, n, parent)) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,284,"isGlobalFunctionDeclaration(t, n) ||"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,285,NodeUtil.isFunction(n)) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,274,f (symbolStack.empty()) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,275,"ddGlobalUseOfSymbol(name, module, type);"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,276, else {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,277,"ameInfo info = getNameInfoForName(name, type);"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,278,f (!symbolStack.peek().equals(info)) {
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,279,"ymbolGraph.connect(symbolStack.peek(), module, info);"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,291,"NameInfo info = getNameInfoForName(name, type);"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,292,NameInfo def = null;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,293,// Skip all anonymous nodes. We care only about symbols with names.
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,294,for (int i = symbolStack.size() - 1; i >= 0; i--) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,295,def = symbolStack.get(i).name;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,296,if (def != anonymousNode) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,297,break;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,300,if (!def.equals(info)) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,301,"symbolGraph.connect(def, module, info);"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,288,"rivate boolean isGlobalFunctionDeclaration(NodeTraversal t,"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,289,"ode n, Node parent) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,309,"private boolean isGlobalFunctionDeclaration(NodeTraversal t, Node n) {"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,292,.getType() == Token.FUNCTION && parent.getType() == Token.NAME);
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,312,n.getType() == Token.FUNCTION &&
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,313,n.getParent().getType() == Token.NAME);
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,325,"sGlobalFunctionDeclaration(t, parent, gramps) ||"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,346,"isGlobalFunctionDeclaration(t, parent) ||"
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,328,"sGlobalFunctionDeclaration(t, firstChild, nameNode)) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,349,"isGlobalFunctionDeclaration(t, firstChild)) {"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,607,* The context of the current name. This includes the NameInfo and the scope
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,608,* if it is a scope defining name (function).
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,610,private class NameContext {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,611,final NameInfo name;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,612,Scope scope;
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,613,NameContext(NameInfo name) {
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,614,this.name = name;
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,389,// An anonymous inner function reading a closure variable is fine.
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,390,public void testInnerFunctionClosureVariableReads() {
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,391,test(createModuleChain(
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,392,"""function Foo() {}"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,393,"""Foo.prototype.baz = function(){var x = 1;"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,394,"""  return function(){x}};"","
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,395,// Module 2
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,396,"""var y = new Foo(); y.baz();""),"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,397,new String[] {
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,398,STUB_DECLARATIONS +
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,399,"""function Foo() {}"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,400,"""Foo.prototype.baz = JSCompiler_stubMethod(0);"","
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,401,// Module 2
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,402,"""Foo.prototype.baz = JSCompiler_unstubMethod("" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,403,"""    0, function(){var x = 1; return function(){x}});"" +"
True,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,test/com/google/javascript/jscomp/CrossModuleMethodMotionTest.java,404,"""var y = new Foo(); y.baz();"""
