is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,352,Bind result = super.describeFunctionBind(n);
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,353,if (result != null) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,354,return result;
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,362,"f (name.equals(""goog.bind"") || name.equals(""goog$bind"")) {"
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,367,"if (name.equals(""goog.bind"")"
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,368,"|| name.equals(""goog$bind"")) {"
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,371,if (fn == null) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,372,return null;
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,382,if (fn == null) {
True,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,383,return null;
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,379,f (callTarget.getType() == Token.GETPROP
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,380,"& callTarget.getLastChild().getString().equals(""bind"")"
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,381,& callTarget.getFirstChild().getType() == Token.FUNCTION) {
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,382,"/ (function(){}).bind(self, args...);"
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,383,ode fn = callTarget.getFirstChild();
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,384,ode thisValue = callTarget.getNext();
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,385,ode parameters = safeNext(thisValue);
False,src/com/google/javascript/jscomp/ClosureCodingConvention.java,src/com/google/javascript/jscomp/ClosureCodingConvention.java,386,"eturn new Bind(fn, thisValue, parameters);"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,19,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,187,// It would be nice to be able to identify a fn.bind call
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,188,"// but that requires knowing the type of ""fn""."
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,190,if (n.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,191,return null;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,194,Node callTarget = n.getFirstChild();
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,195,String name = callTarget.getQualifiedName();
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,196,if (name != null) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,197,"if (name.equals(""Function.prototype.bind.call"")) {"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,198,"// goog.bind(fn, self, args...);"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,199,Node fn = callTarget.getNext();
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,200,if (fn == null) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,201,return null;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,203,Node thisValue = safeNext(fn);
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,204,Node parameters = safeNext(thisValue);
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,205,"return new Bind(fn, thisValue, parameters);"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,209,if (callTarget.getType() == Token.GETPROP
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,210,"&& callTarget.getLastChild().getString().equals(""bind"")"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,211,&& callTarget.getFirstChild().getType() == Token.FUNCTION) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,212,"// (function(){}).bind(self, args...);"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,213,Node fn = callTarget.getFirstChild();
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,214,Node thisValue = callTarget.getNext();
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,215,Node parameters = safeNext(thisValue);
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,216,"return new Bind(fn, thisValue, parameters);"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,219,return null;
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,222,private Node safeNext(Node n) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,223,if (n != null) {
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,224,return n.getNext();
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,164,public void testFunctionBind() {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,165,"assertNotFunctionBind(""goog.bind()"");  // invalid bind"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,166,"assertFunctionBind(""goog.bind(f)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,167,"assertFunctionBind(""goog.bind(f, obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,168,"assertFunctionBind(""goog.bind(f, obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,170,"assertNotFunctionBind(""goog$bind()"");  // invalid bind"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,171,"assertFunctionBind(""goog$bind(f)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,172,"assertFunctionBind(""goog$bind(f, obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,173,"assertFunctionBind(""goog$bind(f, obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,175,"assertNotFunctionBind(""goog.partial()"");  // invalid bind"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,176,"assertFunctionBind(""goog.partial(f)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,177,"assertFunctionBind(""goog.partial(f, obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,178,"assertFunctionBind(""goog.partial(f, obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,180,"assertNotFunctionBind(""goog$partial()"");  // invalid bind"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,181,"assertFunctionBind(""goog$partial(f)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,182,"assertFunctionBind(""goog$partial(f, obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,183,"assertFunctionBind(""goog$partial(f, obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,185,"assertFunctionBind(""(function(){}).bind()"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,186,"assertFunctionBind(""(function(){}).bind(obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,187,"assertFunctionBind(""(function(){}).bind(obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,189,"assertNotFunctionBind(""Function.prototype.bind.call()"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,190,"assertFunctionBind(""Function.prototype.bind.call(obj)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,191,"assertFunctionBind(""Function.prototype.bind.call(obj, p1)"");"
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,194,private void assertFunctionBind(String code) {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,195,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,196,assertNotNull(conv.describeFunctionBind(n.getFirstChild()));
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,199,private void assertNotFunctionBind(String code) {
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,200,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,test/com/google/javascript/jscomp/ClosureCodingConventionTest.java,201,assertNull(conv.describeFunctionBind(n.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,138,public void testFunctionBind() {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,139,"assertNotFunctionBind(""goog.bind(f)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,140,"assertNotFunctionBind(""goog$bind(f)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,141,"assertNotFunctionBind(""goog.partial(f)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,142,"assertNotFunctionBind(""goog$partial(f)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,144,"assertFunctionBind(""(function(){}).bind()"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,145,"assertFunctionBind(""(function(){}).bind(obj)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,146,"assertFunctionBind(""(function(){}).bind(obj, p1)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,148,"assertNotFunctionBind(""Function.prototype.bind.call()"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,149,"assertFunctionBind(""Function.prototype.bind.call(obj)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,150,"assertFunctionBind(""Function.prototype.bind.call(obj, p1)"");"
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,153,private void assertFunctionBind(String code) {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,154,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,155,assertNotNull(conv.describeFunctionBind(n.getFirstChild()));
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,158,private void assertNotFunctionBind(String code) {
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,159,Node n = parseTestCode(code);
True,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,test/com/google/javascript/jscomp/DefaultCodingConventionTest.java,160,assertNull(conv.describeFunctionBind(n.getFirstChild()));
