is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,266,"* Returns the infimum of a enum element type and another type, or null"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,267,* if the infimum is empty.
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,269,"* This can be a little bit weird. For example, suppose you have an enum"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,270,"* of {(string|number)}, and you want the greatest subtype of the enum"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,271,* and a {number}.
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,273,"* The infimum is non-empty. But at the same time, we don't really have"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,274,"* a name for this infimum. It's equivalent to ""elements of this enum that"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,275,"* are numbers""."
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,277,* The best we can do is make up a new type. This is similar to what
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,278,"* we do in UnionType#meet, which kind-of-sort-of makes sense, because"
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,279,* an EnumElementType is a union of instances of a type.
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,281,JSType meet(JSType that) {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,282,JSType meetPrimitive = primitiveType.getGreatestSubtype(that);
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,283,if (meetPrimitive.isEmptyType()) {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,284,return null;
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,285,} else {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,286,"return new EnumElementType(registry, meetPrimitive, name);"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,640, else if (thisType.isObject() && thatType.isObject()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,642,if (thisType instanceof EnumElementType) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,643,JSType inf = ((EnumElementType) thisType).meet(thatType);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,644,if (inf != null) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,645,return inf;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,647,} else if (thatType instanceof EnumElementType) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,648,JSType inf = ((EnumElementType) thatType).meet(thisType);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,649,if (inf != null) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,650,return inf;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,654,if (thisType.isObject() && thatType.isObject()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,471,f (that != null) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,472,f (isUnknownType() || implicitPrototypeChainIsUnknown()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,473,"/ If unsure, say 'yes', to avoid spurious warnings."
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,474,"/ TODO(user): resolve the prototype chain completely in all cases,"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,475,/ to avoid guessing.
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,476,eturn true;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,478,eturn this.isImplicitPrototype(thatObj);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,471,if (isUnknownType() || implicitPrototypeChainIsUnknown()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,472,"// If unsure, say 'yes', to avoid spurious warnings."
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,473,"// TODO(user): resolve the prototype chain completely in all cases,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,474,// to avoid guessing.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,475,return true;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,481,eturn false;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,477,return this.isImplicitPrototype(thatObj);
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2819,public void testEnum42() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2820,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2821,"""/** @param {number} x */ function f(x) {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2822,"""/** @enum {Object} */ var MyEnum = {FOO: {newProperty: 1, b: 2}};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2823,"""f(MyEnum.FOO.newProperty);"");"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,41,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,45,* Tests for EnumElementTypes.
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,46,* @author nicksantos@google.com (Nick Santos)
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,48,public class EnumElementTypeTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,49,public void testSubtypeRelation() throws Exception {
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,50,EnumElementType typeA = registry.createEnumType(
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,51,"""typeA"", NUMBER_TYPE).getElementsType();"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,52,EnumElementType typeB = registry.createEnumType(
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,53,"""typeB"", NUMBER_TYPE).getElementsType();"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,55,assertFalse(typeA.isSubtype(typeB));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,56,assertFalse(typeB.isSubtype(typeA));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,58,assertFalse(NUMBER_TYPE.isSubtype(typeB));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,59,assertFalse(NUMBER_TYPE.isSubtype(typeA));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,61,assertTrue(typeA.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,62,assertTrue(typeB.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,65,public void testMeet() throws Exception {
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,66,EnumElementType typeA = registry.createEnumType(
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,67,"""typeA"", createUnionType(NUMBER_TYPE, STRING_TYPE)).getElementsType();"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,69,JSType stringsOfA = typeA.getGreatestSubtype(STRING_TYPE);
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,70,assertFalse(stringsOfA.isEmptyType());
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,71,"assertEquals(""typeA.<string>"", stringsOfA.toString());"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,72,assertTrue(stringsOfA.isSubtype(typeA));
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,74,JSType numbersOfA = NUMBER_TYPE.getGreatestSubtype(typeA);
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,75,assertFalse(numbersOfA.isEmptyType());
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,76,"assertEquals(""typeA.<number>"", numbersOfA.toString());"
True,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,77,assertTrue(numbersOfA.isSubtype(typeA));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4979,public void testAnonymousObjectChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4980,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4981,"ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4982,"createNullableType(OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4983,"OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4984,"registry.createAnonymousObjectType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4985,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4986,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4987,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4990,public void testAnonymousEnumElementChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4991,ObjectType enumElemType = registry.createEnumType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4992,"""typeB"", registry.createAnonymousObjectType()).getElementsType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4993,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4994,"ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4995,"createNullableType(OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4996,"OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4997,"enumElemType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4998,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4999,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5000,verifySubtypeChain(typeChain);
