is_addition,old_file_path,new_file_path,line_num,content
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,20,import com.google.common.collect.Lists;
False,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,122,SSourceFile[] files = new JSSourceFile[input.length];
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,124,List<SourceFile> files = Lists.newArrayList();
False,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,124,or (int i = 0; i < files.length; i ++) {
False,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,125,"iles[i] = JSSourceFile.fromCode(""file"" + i, input[i]);"
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,126,for (int i = 0; i < input.length; i ++) {
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,127,"files.add(SourceFile.fromCode(""file"" + i, input[i]));"
False,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,129,"ew JSSourceFile[0], files, new CompilerOptions());"
True,test/com/google/javascript/jscomp/AstParallelizerTest.java,test/com/google/javascript/jscomp/AstParallelizerTest.java,131,"ImmutableList.<SourceFile>of(), files, new CompilerOptions());"
True,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,21,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,203,"SSourceFile input = JSSourceFile.fromCode(""foo.js"", js);"
True,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,204,"SourceFile input = SourceFile.fromCode(""foo.js"", js);"
False,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,209,"esult result = compiler.compile(new JSSourceFile[] {},"
False,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,210,"ew JSSourceFile[] {input}, opts);"
True,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,210,"Result result = compiler.compile(ImmutableList.<SourceFile>of(),"
True,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,test/com/google/javascript/jscomp/CheckRequiresForConstructorsTest.java,211,"ImmutableList.of(input), opts);"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1058,"nputs.add(JSSourceFile.fromCode(getFilename(i), original[i]));"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1058,"inputs.add(SourceFile.fromCode(getFilename(i), original[i]));"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1093,ist<JSSourceFile> inputs = Lists.newArrayList();
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1093,List<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1095,"nputs.add(JSSourceFile.fromCode(getFilename(i), original[i]));"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,1095,"inputs.add(SourceFile.fromCode(getFilename(i), original[i]));"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,19,mport java.util.List;
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,27,import java.util.List;
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,74,SSourceFile[] inputs = {
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,75,SSourceFile.fromCode(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,75,List<SourceFile> inputs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,76,SourceFile.fromCode(
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,77,"SSourceFile.fromCode(""tonic"","
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,78,"SourceFile.fromCode(""tonic"","
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,79,SSourceFile.fromCode(
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,80,"mix"", ""goog.require('gin'); goog.require('tonic');"")};"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,80,SourceFile.fromCode(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,81,"""mix"", ""goog.require('gin'); goog.require('tonic');""));"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,85,"ompiler.init(new JSSourceFile[0], inputs, options);"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,86,"compiler.init(ImmutableList.<SourceFile>of(), inputs, options);"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,108,"SSourceFile externs = JSSourceFile.fromCode(""externs.js"", """");"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,109,"SSourceFile input = JSSourceFile.fromCode(""input.js"","
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,109,"SourceFile externs = SourceFile.fromCode(""externs.js"", """");"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,110,"SourceFile input = SourceFile.fromCode(""input.js"","
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,116,SSourceFile[] inputs = {
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,117,"SSourceFile.fromCode(""gin.js"", ""require('tonic')""),"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,118,"SSourceFile.fromCode(""tonic.js"", """"),"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,119,"SSourceFile.fromCode(""mix.js"", ""require('gin'); require('tonic');"")};"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,117,List<SourceFile> inputs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,118,"SourceFile.fromCode(""gin.js"", ""require('tonic')""),"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,119,"SourceFile.fromCode(""tonic.js"", """"),"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,120,"SourceFile.fromCode(""mix.js"", ""require('gin'); require('tonic');""));"
False,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,127,"ompiler.init(new JSSourceFile[0], inputs, options);"
True,test/com/google/javascript/jscomp/CompilerTest.java,test/com/google/javascript/jscomp/CompilerTest.java,128,"compiler.init(Lists.<SourceFile>newArrayList(), inputs, options);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,22,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,46,rivate final JSSourceFile[] externsInputs;
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,47,private final List<SourceFile> externsInputs;
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,121,his.externsInputs = new JSSourceFile[] {
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,122,"SSourceFile.fromCode(""externs"", externs)"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,122,this.externsInputs = ImmutableList.of(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,123,"SourceFile.fromCode(""externs"", externs));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,394,SSourceFile[] externsInputs = new JSSourceFile[]{
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,395,"SSourceFile.fromCode(""externs"", externs)"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,394,List<SourceFile> externsInputs = ImmutableList.of(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,395,"SourceFile.fromCode(""externs"", externs));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,414,"ublic void test(JSSourceFile[] externs, String js, String expected,"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,413,"public void test(List<SourceFile> externs, String js, String expected,"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,428,"ompiler.init(externs, new JSSourceFile[] {"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,429,"SSourceFile.fromCode(filename, js) }, options);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,427,"compiler.init(externs, ImmutableList.of("
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,428,"SourceFile.fromCode(filename, js)), options);"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,491,SSourceFile[] inputs = new JSSourceFile[js.length];
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,490,List<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,493,"nputs[i] = JSSourceFile.fromCode(""input"" + i, js[i]);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,492,"inputs.add(SourceFile.fromCode(""input"" + i, js[i]));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,537,"ompiler.init(externsInputs, modules, getOptions());"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,536,compiler.initModules(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,537,"externsInputs, Lists.newArrayList(modules), getOptions());"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,620,SSourceFile[] externsInputs = new JSSourceFile[]{
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,621,"SSourceFile.fromCode(""externs"", externs)"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,620,List<SourceFile> externsInputs = ImmutableList.of(
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,621,"SourceFile.fromCode(""externs"", externs));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,939,SSourceFile[] inputs = new JSSourceFile[expected.length];
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,938,List<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,941,"nputs[i] = JSSourceFile.fromCode(""expected"" + i, expected[i]);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,940,"inputs.add(SourceFile.fromCode(""expected"" + i, expected[i]));"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1020,"odule.add(JSSourceFile.fromCode(""i"" + i, inputs[i]));"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,1019,"module.add(SourceFile.fromCode(""i"" + i, inputs[i]));"
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,759,"1.add(JSSourceFile.fromCode(""m1"", ""function x() {}""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,759,"m1.add(SourceFile.fromCode(""m1"", ""function x() {}""));"
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,765,"2.add(JSSourceFile.fromCode(""m2"", ""x()""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,765,"m2.add(SourceFile.fromCode(""m2"", ""x()""));"
False,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,769,"3.add(JSSourceFile.fromCode(""m3"", ""x()""));"
True,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,test/com/google/javascript/jscomp/CrossModuleCodeMotionTest.java,769,"m3.add(SourceFile.fromCode(""m3"", ""x()""));"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,19,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1280,"ompiler.init(new JSSourceFile[]{JSSourceFile.fromCode(""externs"", """")},"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1281,ew JSSourceFile[]{
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1282,"SSourceFile.fromCode(""testcode"", js)}, options);"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1281,"compiler.init(ImmutableList.of(SourceFile.fromCode(""externs"", """")),"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1282,"ImmutableList.of(SourceFile.fromCode(""testcode"", js)),"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1283,options);
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1339,"ompiler.init(new JSSourceFile[]{JSSourceFile.fromCode(""externs"", """")},"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1340,ew JSSourceFile[]{
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1341,"SSourceFile.fromCode(""testcode"", js)}, options);"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1340,compiler.init(
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1341,"ImmutableList.of(SourceFile.fromCode(""externs"", """")),"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1342,"ImmutableList.of(SourceFile.fromCode(""testcode"", js)),"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,1343,options);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,21,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,25,import java.util.List;
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,466,SSourceFile[] inputs = {
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,467,"SSourceFile.fromCode(""testcode"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,468,List<SourceFile> inputs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,469,"SourceFile.fromCode(""testcode"","
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,471,s)
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,473,js));
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,474,SSourceFile[] externFiles = {
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,475,"SSourceFile.fromCode(""externs"", externs)"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,475,List<SourceFile> externFiles = Lists.newArrayList(
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,476,"SourceFile.fromCode(""externs"", externs));"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,19,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,30,import java.util.List;
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1419,SSourceFile[] externsInputs = new JSSourceFile[] {
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1420,"SSourceFile.fromCode(""externs"", """")"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1421,List<SourceFile> externsInputs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1422,"SourceFile.fromCode(""externs"", """"));"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1425,"ompiler.init(externsInputs, new JSSourceFile[] {"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1426,"SSourceFile.fromCode(""code"", code) }, options);"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1426,"compiler.init(externsInputs, Lists.newArrayList("
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1427,"SourceFile.fromCode(""code"", code)), options);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,42,"ew CompilerInput(JSSourceFile.fromCode(""input1"", """"), false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,42,"new CompilerInput(SourceFile.fromCode(""input1"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,44,"ew CompilerInput(JSSourceFile.fromCode(""input2"", """"), false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,44,"new CompilerInput(SourceFile.fromCode(""input2"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,46,"ew CompilerInput(JSSourceFile.fromCode(""input3"", """"), false);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,46,"new CompilerInput(SourceFile.fromCode(""input3"", """"), false);"
False,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,48,"ew CompilerInput(JSSourceFile.fromCode(""extern1"", """"), true);"
True,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,test/com/google/javascript/jscomp/GlobalVarReferenceMapTest.java,48,"new CompilerInput(SourceFile.fromCode(""extern1"", """"), true);"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,21,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,23,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,31,import java.util.List;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,37,rivate final JSSourceFile[] DEFAULT_EXTERNS = new JSSourceFile[] {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,38,"SSourceFile.fromCode(""externs"","
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,41,private final List<SourceFile> DEFAULT_EXTERNS = ImmutableList.of(
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,42,"SourceFile.fromCode(""externs"","
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,47," ""/** @return {string} */ var widgetToken = function() {};\n"")"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,51,"+ ""/** @return {string} */ var widgetToken = function() {};\n""));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,50,rivate JSSourceFile[] externs = DEFAULT_EXTERNS;
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,53,private List<SourceFile> externs = DEFAULT_EXTERNS;
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1552,xterns = new JSSourceFile[] {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1553,"SSourceFile.fromCode(""externs"", ""extern.foo"")"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1555,externs = ImmutableList.of(
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1556,"SourceFile.fromCode(""externs"", ""extern.foo""));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1567,xterns = new JSSourceFile[] {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1568,"SSourceFile.fromCode(""externs"","
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1569,"var externs = {}; /** @suppress {duplicate} */ var externs = {};"")"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1569,externs = ImmutableList.of(
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1570,"SourceFile.fromCode(""externs"","
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,1571,"""var externs = {}; /** @suppress {duplicate} */ var externs = {};""));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2098,SSourceFile[] inputs = new JSSourceFile[original.length];
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2099,List<SourceFile> inputs = Lists.newArrayList();
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2100,"nputs[i] = JSSourceFile.fromCode(""input"" + i, original[i]);"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2101,"inputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2102,ompiler.compile(
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2103,"xterns, CompilerTestCase.createModuleChain(original), options);"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2103,compiler.compileModules(
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2104,"externs, Lists.newArrayList(CompilerTestCase.createModuleChain(original)),"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2105,options);
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2109,SSourceFile[] inputs = new JSSourceFile[original.length];
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2110,or (int i = 0; i < inputs.length; i++) {
False,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2111,"nputs[i] = JSSourceFile.fromCode(""input"" + i, original[i]);"
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2111,List<SourceFile> inputs = Lists.newArrayList();
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2112,for (int i = 0; i < original.length; i++) {
True,test/com/google/javascript/jscomp/IntegrationTest.java,test/com/google/javascript/jscomp/IntegrationTest.java,2113,"inputs.add(SourceFile.fromCode(""input"" + i, original[i]));"
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,19,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,28,"SSourceFile foo = JSSourceFile.fromCode(""foo"","
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,30,"SourceFile foo = SourceFile.fromCode(""foo"","
False,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,30,"SSourceFile bar = JSSourceFile.fromCode(""bar"","
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,32,"SourceFile bar = SourceFile.fromCode(""bar"","
False,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,32,"SSourceFile foo2 = JSSourceFile.fromCode(""foo2"","
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,34,"SourceFile foo2 = SourceFile.fromCode(""foo2"","
False,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,37,"ew JSSourceFile[] {}, new JSSourceFile[] {foo, bar, foo2}, options);"
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,39,"ImmutableList.<SourceFile>of(),"
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,40,"ImmutableList.of(foo, bar, foo2),"
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,41,options);
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,126,".add(JSSourceFile.fromCode(""a.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,126,"A.add(SourceFile.fromCode(""a.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,128,".add(JSSourceFile.fromCode(""a.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,129,".add(JSSourceFile.fromCode(""b.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,128,"B.add(SourceFile.fromCode(""a.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,129,"B.add(SourceFile.fromCode(""b.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,131,".add(JSSourceFile.fromCode(""b.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,132,".add(JSSourceFile.fromCode(""c.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,131,"C.add(SourceFile.fromCode(""b.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,132,"C.add(SourceFile.fromCode(""c.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,134,".add(JSSourceFile.fromCode(""c.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,135,".add(JSSourceFile.fromCode(""d.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,134,"E.add(SourceFile.fromCode(""c.js"", """"));"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,135,"E.add(SourceFile.fromCode(""d.js"", """"));"
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,281,rivate JSSourceFile code(
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,281,private SourceFile code(
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,290,"eturn JSSourceFile.fromCode(sourceName, text);"
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,290,"return SourceFile.fromCode(sourceName, text);"
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,78,"SSourceFile.fromCode(""a.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,78,"SourceFile.fromCode(""a.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,81,"SSourceFile.fromCode(""b.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,81,"SourceFile.fromCode(""b.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,84,"SSourceFile.fromCode(""c.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,84,"SourceFile.fromCode(""c.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,87,"SSourceFile.fromCode(""d.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,87,"SourceFile.fromCode(""d.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,92,"SSourceFile.fromCode(""e.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,92,"SourceFile.fromCode(""e.js"","
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,95,"SSourceFile.fromCode(""f.js"","
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,95,"SourceFile.fromCode(""f.js"","
False,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,41,"extractMessages(JSSourceFile.fromCode(""testcode"", sourceCode));"
True,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,test/com/google/javascript/jscomp/JsMessageExtractorTest.java,41,".extractMessages(SourceFile.fromCode(""testcode"", sourceCode));"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7059,"ists.newArrayList(JSSourceFile.fromCode(""[externs]"", externs)),"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7060,"ists.newArrayList(JSSourceFile.fromCode(""[testcode]"", js)),"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7059,"Lists.newArrayList(SourceFile.fromCode(""[externs]"", externs)),"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,7060,"Lists.newArrayList(SourceFile.fromCode(""[testcode]"", js)),"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,398,"ists.<JSSourceFile>newArrayList(),"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,399,"ists.<JSSourceFile>newArrayList(), new CompilerOptions());"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,398,"Lists.<SourceFile>newArrayList(),"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,399,"Lists.<SourceFile>newArrayList(), new CompilerOptions());"
False,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,1276,"ew JSSourceFile[] {},"
False,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,1277,"ew JSSourceFile[] { JSSourceFile.fromCode(""testcode"", js) },"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,1276,"ImmutableList.<SourceFile>of(),"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,1277,"ImmutableList.of(SourceFile.fromCode(""testcode"", js)),"
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,69,SSourceFile file =
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,70,"SSourceFile.fromCode(""additionalcode"", additionalCode);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,69,SourceFile file =
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,70,"SourceFile.fromCode(""additionalcode"", additionalCode);"
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,86,SSourceFile file =
False,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,87,"SSourceFile.fromCode(""additionalendcode"", additionalEndCode);"
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,86,SourceFile file =
True,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,test/com/google/javascript/jscomp/ProcessClosurePrimitivesTest.java,87,"SourceFile.fromCode(""additionalendcode"", additionalEndCode);"
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,20,import com.google.common.collect.Lists;
False,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,165,"ompiler.init(new JSSourceFile[] { JSSourceFile.fromCode(""externs"", """") },"
False,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,166,"ew JSSourceFile[] { JSSourceFile.fromCode(""testcode"", js) },"
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,166,"compiler.init(ImmutableList.of(SourceFile.fromCode(""externs"", """")),"
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,167,"ImmutableList.of(SourceFile.fromCode(""testcode"", js)),"
False,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,194,"ompiler.init(new JSSourceFile[] { JSSourceFile.fromCode(""externs"", """") },"
False,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,195,"odules,"
False,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,196,ew CompilerOptions());
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,195,compiler.initModules(
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,196,"ImmutableList.of(SourceFile.fromCode(""externs"", """")),"
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,197,"Lists.newArrayList(modules),"
True,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,test/com/google/javascript/jscomp/RecordFunctionInformationTest.java,198,new CompilerOptions());
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,20,import com.google.common.collect.Lists;
False,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,221,"odule1.add(JSSourceFile.fromCode(""input1"", module1Js));"
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,223,"module1.add(SourceFile.fromCode(""input1"", module1Js));"
False,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,224,"odule2.add(JSSourceFile.fromCode(""input2"", module2Js));"
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,226,"module2.add(SourceFile.fromCode(""input2"", module2Js));"
False,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,227,"odule3.add(JSSourceFile.fromCode(""input3"", module3Js));"
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,229,"module3.add(SourceFile.fromCode(""input3"", module3Js));"
False,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,397,"SSourceFile externsInput = JSSourceFile.fromCode(""externs"", externs);"
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,399,"SourceFile externsInput = SourceFile.fromCode(""externs"", externs);"
False,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,403,"ompiler.compile(externsInput, modules, options);"
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,405,compiler.compileModules(
True,test/com/google/javascript/jscomp/RenamePropertiesTest.java,test/com/google/javascript/jscomp/RenamePropertiesTest.java,406,"ImmutableList.of(externsInput), Lists.newArrayList(modules), options);"
True,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,26,import java.util.List;
False,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,60,SSourceFile[] externs = new JSSourceFile[] {};
False,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,61,SSourceFile[] inputs =  new JSSourceFile[] {
False,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,62,"SSourceFile.fromCode(""input"", code)"
True,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,63,List<SourceFile> externs = ImmutableList.of();
True,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,64,List<SourceFile> inputs = ImmutableList.of(
True,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,test/com/google/javascript/jscomp/RhinoErrorReporterTest.java,65,"SourceFile.fromCode(""input"", code));"
False,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,243,"ompiler.init(Lists.<JSSourceFile>newArrayList(),"
False,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,244,"ists.<JSSourceFile>newArrayList(),"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,243,"compiler.init(Lists.<SourceFile>newArrayList(),"
True,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,test/com/google/javascript/jscomp/RuntimeTypeCheckTest.java,244,"Lists.<SourceFile>newArrayList(),"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,925,ist<JSSourceFile> inputs = Lists.newArrayList(
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,926,"SSourceFile.fromCode(""in1"", input));"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,927,ist<JSSourceFile> externs = Lists.newArrayList(
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,928,"SSourceFile.fromCode(""externs1"", EXTERNS));"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,925,List<SourceFile> inputs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,926,"SourceFile.fromCode(""in1"", input));"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,927,List<SourceFile> externs = Lists.newArrayList(
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,928,"SourceFile.fromCode(""externs1"", EXTERNS));"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9720,"ists.newArrayList(JSSourceFile.fromCode(""[externs]"", externs)),"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9721,"ists.newArrayList(JSSourceFile.fromCode(""[testcode]"", js)),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9720,"Lists.newArrayList(SourceFile.fromCode(""[externs]"", externs)),"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,9721,"Lists.newArrayList(SourceFile.fromCode(""[testcode]"", js)),"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,19,import com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,271,"1.add(JSSourceFile.fromCode(""input1"", code1));"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,271,"m1.add(SourceFile.fromCode(""input1"", code1));"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,273,"2.add(JSSourceFile.fromCode(""input2"", code2));"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,273,"m2.add(SourceFile.fromCode(""input2"", code2));"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,374,"ew JSSourceFile[] { JSSourceFile.fromCode(""extern"", extern) },"
False,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,375,"ew JSSourceFile[] { JSSourceFile.fromCode(""input"", input) },"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,374,"ImmutableList.of(SourceFile.fromCode(""extern"", extern)),"
True,test/com/google/javascript/jscomp/VarCheckTest.java,test/com/google/javascript/jscomp/VarCheckTest.java,375,"ImmutableList.of(SourceFile.fromCode(""input"", input)),"
False,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,27,mport com.google.javascript.jscomp.JSSourceFile;
True,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,27,import com.google.javascript.jscomp.SourceFile;
False,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,32,rivate static final JSSourceFile extern =
False,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,33,"SSourceFile.fromCode(""externs.js"", """");"
True,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,32,private static final SourceFile extern =
True,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,33,"SourceFile.fromCode(""externs.js"", """");"
False,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,98,"SSourceFile input = JSSourceFile.fromCode(""""+num, program);"
True,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,test/com/google/javascript/jscomp/regtests/CompileEachLineOfProgramOutput.java,98,"SourceFile input = SourceFile.fromCode(""""+num, program);"
