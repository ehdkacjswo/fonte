is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,578, else {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,578,} else if (!(parent.isCall() && parent.getFirstChild() == n)) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,579,"// The rhs of the assignment is the caller, so it's used by the"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,580,// context. Don't associate it w/ the lhs.
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,581,// FYI: this fixes only the specific case where the assignment is the
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,582,"// caller expression, but it could be nested deeper in the caller and"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,583,// we would still get a bug.
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,584,// See testAssignWithCall2 for an example of this.
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,848,f (!(n.isName() ||
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,849,odeUtil.isGet(n) && !parent.isGetProp())) {
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,854,if (!(n.isName() || (NodeUtil.isGet(n) && !parent.isGetProp()))) {
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,917,"/ Here we add a alias to the general ""global"" object"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,922,"// Here we add an alias to the general ""global"" object"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1235,public void testAssignWithCall() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1236,"test(""var fun, x; (fun = function(){ x; })();"","
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1237,"""var x; (function(){ x; })();"");"
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1240,// Currently this crashes the compiler because it erroneoursly removes var x
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1241,// and later a sanity check fails.
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1242,public void testAssignWithCall2() {
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1243,"test(""var fun, x; (123, fun = function(){ x; })();"","
True,test/com/google/javascript/jscomp/NameAnalyzerTest.java,test/com/google/javascript/jscomp/NameAnalyzerTest.java,1244,"""(123, function(){ x; })();"");"
