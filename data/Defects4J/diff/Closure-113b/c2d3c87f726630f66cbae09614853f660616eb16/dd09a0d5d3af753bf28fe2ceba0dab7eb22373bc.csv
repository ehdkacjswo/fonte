is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,26,import com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1057,nputs =
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1058,moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1059,manageDependencies(inputs);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1058,try {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1059,inputs =
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1060,(moduleGraph == null ? new JSModuleGraph(modules) : moduleGraph)
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1061,.manageDependencies(inputs);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,} catch (CircularDependencyException e) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1063,report(JSError.make(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1064,"JSModule.CIRCULAR_DEPENDENCY_ERROR, e.getMessage()));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1065,return null;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,25,import com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,45,static final DiagnosticType CIRCULAR_DEPENDENCY_ERROR =
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,46,"DiagnosticType.error(""JSC_CIRCULAR_DEP"","
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,47,"""Circular dependency detected: {0}"");"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,232,ist<CompilerInput> sortedList =
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,233,new SortedDependencies<CompilerInput>(
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,234,ollections.<CompilerInput>unmodifiableList(inputs)))
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,235,getSortedList();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,236,nputs.clear();
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,237,nputs.addAll(sortedList);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,237,try {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,238,List<CompilerInput> sortedList =
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,239,(new SortedDependencies<CompilerInput>(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,240,Collections.<CompilerInput>unmodifiableList(inputs)))
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,241,.getSortedList();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,242,inputs.clear();
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,243,inputs.addAll(sortedList);
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,244,} catch (CircularDependencyException e) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,245,compiler.report(
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,246,"JSError.make(CIRCULAR_DEPENDENCY_ERROR, e.getMessage()));"
False,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,248,ublic static JSModule[] sortJsModules(Collection<JSModule> modules) {
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,258,public static JSModule[] sortJsModules(Collection<JSModule> modules)
True,src/com/google/javascript/jscomp/JSModule.java,src/com/google/javascript/jscomp/JSModule.java,259,throws CircularDependencyException {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,28,import com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;
False,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,296,ist<CompilerInput> manageDependencies(List<CompilerInput> inputs) {
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,297,List<CompilerInput> manageDependencies(List<CompilerInput> inputs)
True,src/com/google/javascript/jscomp/JSModuleGraph.java,src/com/google/javascript/jscomp/JSModuleGraph.java,298,throws CircularDependencyException {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,2,* Copyright 2006 Google Inc.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,19,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,20,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,21,import com.google.common.base.Hash;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,22,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,24,import java.util.Collections;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,25,import java.util.List;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,26,import java.util.Set;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,27,import java.util.regex.Matcher;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,28,import java.util.regex.Pattern;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,31,* A representation of a translatable message in JavaScript source code.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,33,"* <p>Instances are created using a {@link JsMessage.Builder},"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,34,* like this:
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,35,* <pre>
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,36,* JsMessage m = new JsMessage.Builder(key)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,37,"*     .appendPart(""Hi "")"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,38,"*     .appendPlaceholderReference(""firstName"")"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,39,"*     .appendPart(""!"")"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,40,"*     .setDesc(""A welcome message"")"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,41,*     .build();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,42,* </pre>
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,45,* @author anatol@google.com (Anatol Pomazau)
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,47,public class JsMessage {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,50,* Message style that could be used for JS code parsing.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,51,* The enum order is from most relaxed to most restricted.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,53,public enum Style {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,54,"LEGACY, // All legacy code is completely OK"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,55,"RELAX,  // You allowed to use legacy code but it would be reported as warn"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,56,CLOSURE; // Any legacy code is prohibited
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,59,* Calculates current messages {@link Style} based on the given arguments.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,61,"* @param useClosure if true then use closure style, otherwise not"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,62,* @param allowLegacyMessages if true then allow legacy messages otherwise
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,63,*        not
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,64,* @return the message style based on the given arguments
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,66,"static Style getFromParams(boolean useClosure,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,67,boolean allowLegacyMessages) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,68,if (useClosure) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,69,return allowLegacyMessages ? RELAX : CLOSURE;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,70,} else {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,71,return LEGACY;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,76,"private static final String MESSAGE_REPRESENTATION_FORMAT = ""{$%s}"";"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,78,private final String key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,79,private final String id;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,80,private final List<CharSequence> parts;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,81,private final Set<String> placeholders;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,82,private final String desc;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,83,private final boolean hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,85,private final String sourceName;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,86,private final boolean isAnonymous;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,87,private final boolean isExternal;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,90,* Creates an instance. Client code should use a {@link JsMessage.Builder}.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,92,* @param key a key that should identify this message in sources; typically
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,93,"*     it is the message's name (e.g. {@code ""MSG_HELLO""})."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,94,* @param id an id that *uniquely* identifies the message in the bundle.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,95,*     It could be either the message name or id generated from the message
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,96,*     content.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,98,"private JsMessage(String sourceName, String key,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,99,"boolean isAnonymous, boolean isExternal,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,100,"String id, List<CharSequence> parts, Set<String> placeholders,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,101,"String desc, boolean hidden) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,103,Preconditions.checkState(key != null);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,104,Preconditions.checkState(id != null);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,106,this.key = key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,107,this.id = id;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,108,this.parts = Collections.unmodifiableList(parts);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,109,this.placeholders = Collections.unmodifiableSet(placeholders);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,110,this.desc = desc;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,111,this.hidden = hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,113,this.sourceName = sourceName;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,114,this.isAnonymous = isAnonymous;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,115,this.isExternal = isExternal;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,119,* Gets the message's sourceName.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,121,public String getSourceName() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,122,return sourceName;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,126,"* Gets the message's key, or name (e.g. {@code ""MSG_HELLO""})."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,128,public String getKey() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,129,return key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,132,public boolean isAnonymous() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,133,return isAnonymous;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,136,public boolean isExternal() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,137,return isExternal;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,141,"* Gets the message's id, or name (e.g. {@code ""92430284230902938293""})."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,143,public String getId() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,144,return id;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,148,"* Gets the description associated with this message, intended to help"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,149,"* translators, or null if this message has no description."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,151,public String getDesc() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,152,return desc;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,156,* Gets whether this message should be hidden from volunteer translators (to
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,157,* reduce the chances of a new feature leak).
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,159,public boolean isHidden() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,160,return hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,164,* Gets a read-only list of the parts of this message. Each part is either a
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,165,* {@link String} or a {@link PlaceholderReference}.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,167,public List<CharSequence> parts() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,168,return parts;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,171,/** Gets a read-only set of the registered placeholders in this message. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,172,public Set<String> placeholders() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,173,return placeholders;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,176,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,177,public String toString() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,178,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,179,for (CharSequence p : parts) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,180,sb.append(p.toString());
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,182,return sb.toString();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,185,/** @return false iff the message is represented by empty string. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,186,public boolean isEmpty() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,187,for (CharSequence part : parts) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,188,if (part.length() > 0) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,189,return false;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,193,return true;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,196,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,197,public boolean equals(Object o) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,198,if (o == this) return true;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,199,if (!(o instanceof JsMessage)) return false;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,201,JsMessage m = (JsMessage) o;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,202,return id.equals(m.id) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,203,key.equals(m.key) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,204,isAnonymous == m.isAnonymous &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,205,parts.equals(m.parts) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,206,placeholders.equals(m.placeholders) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,207,(desc == null ? m.desc == null : desc.equals(m.desc)) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,208,(sourceName == null
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,209,? m.sourceName == null
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,210,: sourceName.equals(m.sourceName)) &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,211,hidden == m.hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,214,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,215,public int hashCode() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,216,int hash = key.hashCode();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,217,hash = 31 * hash + (isAnonymous ? 1 : 0);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,218,hash = 31 * hash + id.hashCode();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,219,hash = 31 * hash + parts.hashCode();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,220,hash = 31 * hash + (desc != null ? desc.hashCode() : 0);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,221,hash = 31 * hash + (hidden ? 1 : 0);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,222,hash = 31 * hash + (sourceName != null ? sourceName.hashCode() : 0);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,223,return hash;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,226,/** A reference to a placeholder in a translatable message. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,227,public static class PlaceholderReference implements CharSequence {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,229,private final String name;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,231,PlaceholderReference(String name) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,232,this.name = name;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,235,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,236,public int length() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,237,return name.length();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,240,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,241,public char charAt(int index) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,242,return name.charAt(index);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,245,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,246,"public CharSequence subSequence(int start, int end) {"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,247,"return name.subSequence(start, end);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,250,public String getName() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,251,return name;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,254,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,255,public String toString() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,256,"return String.format(MESSAGE_REPRESENTATION_FORMAT, name);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,259,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,260,public boolean equals(Object o) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,261,return o == this ||
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,262,o instanceof PlaceholderReference &&
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,263,name.equals(((PlaceholderReference) o).name);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,266,@Override
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,267,public int hashCode() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,268,return 31 * name.hashCode();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,273,* Contains functionality for creating js messages. Generates authoritative
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,274,* keys and fingerprints for a message that must stay constant over time.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,276,* This implementation correctly processes unnamed messages and creates a key
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,277,* for them that looks like MSG_<fingerprint value>.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,279,public static class Builder {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,281,private static final Pattern MSG_EXTERNAL_PATTERN =
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,282,"Pattern.compile(""MSG_EXTERNAL_(\\d+)"");"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,285,* @return an external message id or null if this is not an
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,286,* external message identifier
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,288,private static String getExternalMessageId(String identifier) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,289,Matcher m = MSG_EXTERNAL_PATTERN.matcher(identifier);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,290,return m.matches() ? m.group(1) : null;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,293,private String key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,294,private String desc;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,295,private boolean hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,297,private List<CharSequence> parts = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,298,private Set<String> placeholders = Sets.newHashSet();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,300,private String sourceName;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,302,public Builder() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,303,this(null);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,306,/** Creates an instance. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,307,public Builder(String key) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,308,this.key = key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,311,"/** Gets the message's key (e.g. {@code ""MSG_HELLO""}). */"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,312,public String getKey() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,313,return key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,317,* @param key a key that should uniquely identify this message; typically
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,318,"*     it is the message's name (e.g. {@code ""MSG_HELLO""})."
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,320,public Builder setKey(String key) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,321,this.key = key;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,322,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,326,* @param sourceName The message's sourceName.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,328,public Builder setSourceName(String sourceName) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,329,this.sourceName = sourceName;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,330,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,334,* Appends a placeholder reference to the message
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,336,public Builder appendPlaceholderReference(String name) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,337,"Preconditions.checkNotNull(name, ""Placeholder name could not be null"");"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,338,parts.add(new PlaceholderReference(name));
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,339,placeholders.add(name);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,340,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,343,/** Appends a translatable string literal to the message. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,344,public Builder appendStringPart(String part) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,345,"Preconditions.checkNotNull(part,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,346,"""String part of the message could not be null"");"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,347,parts.add(part);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,348,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,351,/** Returns the message registred placeholders */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,352,public Set<String> getPlaceholders() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,353,return placeholders;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,356,"/** Sets the description of the message, which helps translators. */"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,357,public Builder setDesc(String desc) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,358,this.desc = desc;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,359,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,362,/** Sets whether the message should be hidden from volunteer translators. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,363,public Builder setIsHidden(boolean hidden) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,364,this.hidden = hidden;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,365,return this;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,368,/** Gets whether at least one part has been appended. */
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,369,public boolean hasParts() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,370,return !parts.isEmpty();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,373,public List<CharSequence> getParts() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,374,return parts;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,377,public JsMessage build() {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,378,return build(null);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,381,public JsMessage build(IdGenerator idGenerator) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,382,boolean isAnonymous = false;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,383,boolean isExternal = false;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,384,String id = null;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,386,if (getKey() == null) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,387,// Before constructing a message we need to change unnamed messages name
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,388,// to the unique one.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,389,key = JsMessageVisitor.MSG_PREFIX + fingerprint(getParts());
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,390,isAnonymous = true;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,393,if (!isAnonymous) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,394,String externalId = getExternalMessageId(key);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,395,if (externalId != null) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,396,isExternal = true;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,397,id = externalId;
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,401,if (!isExternal) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,402,"id = idGenerator == null ? key : idGenerator.generateId(key, parts);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,405,"return new JsMessage(sourceName, key, isAnonymous, isExternal, id, parts,"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,406,"placeholders, desc, hidden);"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,410,* Generates a compact uppercase alphanumeric text representation of a
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,411,* 63-bit fingerprint of the content parts of a message.
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,413,private static String fingerprint(List<CharSequence> messageParts) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,414,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,415,for (CharSequence part : messageParts) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,416,if (part instanceof JsMessage.PlaceholderReference) {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,417,sb.append(part.toString());
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,418,} else {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,419,sb.append(part);
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,422,long nonnegativeHash = Long.MAX_VALUE & Hash.hash64(sb.toString());
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,423,"return Long.toString(nonnegativeHash, 36).toUpperCase();"
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,426,public interface IdGenerator {
True,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,428,"String generateId(String key, List<CharSequence> messageParts);"
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,2,* Copyright 2008 Google Inc.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,19,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,22,* Container class that holds information about jsmessage source.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,24,* This class is specific to our JsMessage syntax. Allows you to use the
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,25,* new-style or the old-style messages.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,27,* Old-style:
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,28,* <code>
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,29,* var MSG_LEOPARD = 'Leopard';
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,30,* var MSG_LEOPARD_HELP = 'The Leopard operating system';
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,31,* </code>
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,33,* New-style:
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,34,* <code>
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,35,* /** @desc The leopard operating system * /
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,36,* var MSG_LEOPARD = goog.getMsg('Leopard');
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,37,* </code>
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,39,* @author anatol@google.com (Anatol Pomazau)
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,41,class JsMessageDefinition {
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,43,private final Node messageNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,44,private final Node messageParentNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,45,private final Node visitingNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,48,* Constructs js message definition.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,50,* @param visitingNode Node that is visited by
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,51,*     {@link JsMessageVisitor}. Take into
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,52,*     account that visiting node could differ from the node the message
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,53,*     was found.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,54,* @param messageNode A node that contains the message. It could be node with
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,55,*     goog.getMsg() call or string/function for old-style messages.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,56,* @param messageParentNode The parent of the message node.
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,58,"JsMessageDefinition(Node visitingNode, Node messageNode,"
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,59,Node messageParentNode) {
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,61,this.messageNode = messageNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,62,this.visitingNode = visitingNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,63,this.messageParentNode = messageParentNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,66,Node getMessageNode() {
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,67,return messageNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,70,Node getVisitingNode() {
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,71,return visitingNode;
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,74,Node getMessageParentNode() {
True,src/com/google/javascript/jscomp/JsMessageDefinition.java,src/com/google/javascript/jscomp/JsMessageDefinition.java,75,return messageParentNode;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,2,* Copyright 2008 Google Inc.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,19,import com.google.common.base.CaseFormat;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,20,import com.google.common.collect.Maps;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,21,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,22,import com.google.javascript.jscomp.JsMessage.Builder;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,23,import static com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,24,import com.google.javascript.rhino.JSDocInfo;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,25,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,26,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,28,import java.util.*;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,29,import java.util.regex.*;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,31,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,34,* Traverses across parsed tree and finds I18N messages. Then it passes it to
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,35,"* {@link JsMessageVisitor#processJsMessage(JsMessage, JsMessageDefinition)}."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,37,* @author anatol@google.com (Anatol Pomazau)
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,39,abstract class JsMessageVisitor extends AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,40,implements CompilerPass {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,42,"private static final String MSG_FUNCTION_NAME = ""goog.getMsg"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,44,static final DiagnosticType MESSAGE_HAS_NO_DESCRIPTION =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,45,"DiagnosticType.warning(""JSC_MSG_HAS_NO_DESCRIPTION"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,46,"""Message {0} has no description. Add @desc JsDoc tag."");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,48,static final DiagnosticType MESSAGE_HAS_NO_TEXT =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,49,"DiagnosticType.warning(""JSC_MSG_HAS_NO_TEXT"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,50,"""Message value of {0} is just an empty string. """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,51,"+ ""Empty messages are forbidden."" );"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,53,static final DiagnosticType MESSAGE_TREE_MALFORMED =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,54,"DiagnosticType.error(""JSC_MSG_TREE_MALFORMED"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,55,"""Message parse tree malformed. {0}"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,57,static final DiagnosticType MESSAGE_HAS_NO_VALUE =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,58,"DiagnosticType.error(""JSC_MSG_HAS_NO_VALUE"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,59,"""message node {0} has no value"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,61,static final DiagnosticType MESSAGE_DUPLICATE_KEY =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,62,"DiagnosticType.error(""JSC_MSG_KEY_DUPLICATED"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,63,"""duplicate message variable name found for {0}, "" +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,64,"""initial definition {1}:{2}"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,66,static final DiagnosticType MESSAGE_NODE_IS_ORPHANED =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,67,"DiagnosticType.warning(""JSC_MSG_ORPHANED_NODE"", MSG_FUNCTION_NAME +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,68,"""() function could be used only with MSG_* property or variable"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,70,static final DiagnosticType MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,71,"DiagnosticType.error(""JSC_MSG_NOT_INITIALIZED_USING_NEW_SYNTAX"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,72,"""message not initialized using "" + MSG_FUNCTION_NAME);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,74,"private static final String PH_JS_PREFIX = ""{$"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,75,"private static final String PH_JS_SUFFIX = ""}"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,77,"static final String MSG_PREFIX = ""MSG_"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,80,private static final Pattern MSG_UNNAMED_PATTERN =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,81,"Pattern.compile(""MSG_UNNAMED_\\d+"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,83,private static final Pattern CAMELCASE_PATTERN =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,84,"Pattern.compile(""[a-z][a-zA-Z\\d]*[_\\d]*"");"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,86,"static final String HIDDEN_DESC_PREFIX = ""@hidden"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,88,// For old-style js messages
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,89,"private static final String DESC_SUFFIX = ""_HELP"";"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,91,private final boolean needToCheckDuplications;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,92,private final JsMessage.Style style;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,93,private final JsMessage.IdGenerator idGenerator;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,94,final AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,97,* The names encountered associated with their defining node and source. We
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,98,* use it for tracking duplicated message ids in the source code.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,100,"private final Map<String, MessageLocation> messageNames ="
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,101,Maps.newHashMap();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,104,* List of found goog.getMsg call nodes.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,106,* When we visit goog.getMsg() node we add a pair node:sourcename and later
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,107,* when we visit its parent we remove this pair. All nodes that are left at
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,108,* the end of traversing are orphaned nodes. It means have no corresponding
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,109,* var or property node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,111,"private final Map<Node, String> googMsgNodes = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,113,private final CheckLevel checkLevel;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,116,* Creates js message visitor.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,118,* @param compiler the compiler instance
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,119,* @param needToCheckDuplications whether to check duplicated messages in
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,120,*        traversed
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,121,* @param style style that should be used during parsing
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,122,* @param idGenerator generator that used for creating unique ID for the
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,123,*        message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,125,"JsMessageVisitor(AbstractCompiler compiler,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,126,"boolean needToCheckDuplications,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,127,"JsMessage.Style style, JsMessage.IdGenerator idGenerator) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,129,this.compiler = compiler;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,130,this.needToCheckDuplications = needToCheckDuplications;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,131,this.style = style;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,132,this.idGenerator = idGenerator;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,134,checkLevel = (style == JsMessage.Style.CLOSURE)
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,135,? CheckLevel.ERROR : CheckLevel.WARNING;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,137,// TODO(anatol): add flag that decides whether to process UNNAMED messages.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,138,// Some projects would not want such functionality (unnamed) as they dont
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,142,@Override
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,143,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,144,"NodeTraversal.traverse(compiler, root, this);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,146,"for (Map.Entry<Node, String> msgNode : googMsgNodes.entrySet()) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,147,"compiler.report(JSError.make(msgNode.getValue(), msgNode.getKey(),"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,148,"checkLevel, MESSAGE_NODE_IS_ORPHANED));"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,152,@Override
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,153,"public void visit(NodeTraversal traversal, Node node, Node parent) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,154,String messageKey;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,155,boolean isVar;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,156,"Node msgNode, msgNodeParent;"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,158,switch (node.getType()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,159,case Token.NAME:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,160,// var MSG_HELLO = 'Message'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,161,if ((parent != null) && (parent.getType() == Token.VAR)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,162,messageKey = node.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,163,isVar = true;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,164,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,165,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,168,msgNode = node.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,169,msgNodeParent = node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,170,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,171,case Token.ASSIGN:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,172,// somenamespace.someclass.MSG_HELLO = 'Message'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,173,isVar = false;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,175,Node getProp = node.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,176,if (getProp.getType() != Token.GETPROP) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,177,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,180,Node propNode = getProp.getLastChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,182,messageKey = propNode.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,183,msgNode = node.getLastChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,184,msgNodeParent = node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,185,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,186,case Token.CALL:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,187,// goog.getMsg()
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,188,if (MSG_FUNCTION_NAME.equals(node.getFirstChild().getQualifiedName())) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,189,"googMsgNodes.put(node, traversal.getSourceName());"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,191,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,192,default:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,193,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,196,// Is this a message name?
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,197,boolean isNewStyleMessage =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,198,msgNode != null && msgNode.getType() == Token.CALL;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,199,"if (!isMessageName(messageKey, isNewStyleMessage)) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,200,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,203,if (msgNode == null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,204,compiler.report(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,205,"traversal.makeError(node, MESSAGE_HAS_NO_VALUE, messageKey));"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,206,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,209,// Just report a warning if a qualified messageKey that looks like a message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,210,"// (e.g. ""a.b.MSG_X"") doesn't use goog.getMsg()."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,211,if (isNewStyleMessage) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,212,googMsgNodes.remove(msgNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,213,} else if (style != JsMessage.Style.LEGACY) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,214,"compiler.report(traversal.makeError(node, checkLevel,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,215,MESSAGE_NOT_INITIALIZED_USING_NEW_SYNTAX));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,218,boolean isUnnamedMsg = isUnnamedMessageName(messageKey);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,220,if (!isUnnamedMsg && needToCheckDuplications) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,221,"checkIfMessageDuplicated(traversal.getSourceName(), messageKey, msgNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,224,Builder builder = new Builder(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,225,isUnnamedMsg ? null : messageKey);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,226,builder.setSourceName(traversal.getSourceName());
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,228,try {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,229,if (isVar) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,230,"extractMessageFromVariable(builder, node, parent, parent.getParent());"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,231,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,232,"extractMessageFromProperty(builder, node.getFirstChild(), node);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,234,} catch (MalformedException ex) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,235,"compiler.report(traversal.makeError(ex.getNode(),"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,236,"MESSAGE_TREE_MALFORMED, ex.getMessage()));"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,237,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,240,JsMessage extractedMessage = builder.build(idGenerator);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,242,if (extractedMessage.isEmpty()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,243,// value of the message is an empty string. Translators do not like it.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,244,"compiler.report(traversal.makeError(node, MESSAGE_HAS_NO_TEXT,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,245,messageKey));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,248,// New-style messages must have descriptions. We don't emit a warning
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,249,"// for legacy-style messages, because there are thousands of"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,250,"// them in legacy code that are not worth the effort to fix, since they've"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,251,// already been translated anyway.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,252,String desc = extractedMessage.getDesc();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,253,if (isNewStyleMessage
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,254,&& (desc == null || desc.trim().isEmpty())
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,255,&& !extractedMessage.isExternal()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,256,"compiler.report(traversal.makeError(node, MESSAGE_HAS_NO_DESCRIPTION,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,257,messageKey));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,260,JsMessageDefinition msgDefinition = new JsMessageDefinition(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,261,"node, msgNode, msgNodeParent);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,262,"processJsMessage(extractedMessage, msgDefinition);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,266,* Checks if message already processed. If so - it generates 'message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,267,* duplicated' compiler error.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,269,* @param sourceName the source file name
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,270,* @param msgName the name of the message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,271,* @param msgNode the node that represents js message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,273,"private void checkIfMessageDuplicated(String sourceName, String msgName,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,274,Node msgNode) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,275,if (messageNames.containsKey(msgName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,276,MessageLocation location = messageNames.get(msgName);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,277,"compiler.report(JSError.make(sourceName, msgNode, MESSAGE_DUPLICATE_KEY,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,278,"msgName, location.sourceName, Integer.toString(location.lineNo)));"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,279,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,280,MessageLocation location =
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,281,"new MessageLocation(sourceName, msgNode.getLineno());"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,282,"messageNames.put(msgName, location);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,287,* Creates a {@link JsMessage} for a js message defined using a js variable
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,288,* declaration (e.g <code>var MSG_X = ...;</code>).
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,290,* @param builder the message builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,291,* @param nameNode a NAME node for a js message variable
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,292,"* @param parentNode a VAR node, parent of {@code nameNode}"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,293,* @param grandParentNode the grandparent of {@code nameNode}. This node is
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,294,*        only used to get meta data about the message that might be
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,295,*        surrounding it (e.g. a message description). This argument may be
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,296,*        null if the meta data is not needed.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,297,* @throws MalformedException if {@code varNode} does not
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,298,*         correspond to a valid js message VAR node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,300,private void extractMessageFromVariable(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,301,"Builder builder, Node nameNode, Node parentNode,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,302,@Nullable Node grandParentNode) throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,304,// Determine the message's value
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,305,Node valueNode = nameNode.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,306,switch (valueNode.getType()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,307,case Token.STRING:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,308,case Token.ADD:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,309,"maybeInitMetaDataFromJsDocOrHelpVar(builder, parentNode,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,310,grandParentNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,311,builder.appendStringPart(extractStringFromStringExprNode(valueNode));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,312,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,313,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,314,"maybeInitMetaDataFromJsDocOrHelpVar(builder, parentNode,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,315,grandParentNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,316,"extractFromFunctionNode(builder, valueNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,317,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,318,case Token.CALL:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,319,"maybeInitMetaDataFromJsDoc(builder, parentNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,320,"extractFromCallNode(builder, valueNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,321,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,322,default:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,323,"throw new MalformedException(""Cannot parse value of message """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,324,"+ builder.getKey(), valueNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,329,* Creates a {@link JsMessage} for a js message defined using an assignment to
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,330,* a qualified name (e.g <code>a.b.MSG_X = goog.getMsg(...);</code>).
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,332,* @param builder the message builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,333,* @param getPropNode a GETPROP node in a js message assignment
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,334,"* @param assignNode an ASSIGN node, parent of {@code getPropNode}."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,335,* @throws MalformedException if {@code getPropNode} does not
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,336,*         correspond to a valid js message node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,338,private void extractMessageFromProperty(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,339,"Builder builder, Node getPropNode, Node assignNode)"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,340,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,341,Node callNode = getPropNode.getNext();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,342,"maybeInitMetaDataFromJsDoc(builder, assignNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,343,"extractFromCallNode(builder, callNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,347,* Initializes the meta data in a JsMessage by examining the nodes just before
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,348,* and after a message VAR node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,350,* @param builder the message builder whose meta data will be initialized
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,351,* @param varNode the message VAR node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,352,* @param parentOfVarNode {@code varNode}'s parent node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,354,private void maybeInitMetaDataFromJsDocOrHelpVar(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,355,"Builder builder, Node varNode, @Nullable Node parentOfVarNode)"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,356,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,358,// First check description in @desc
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,359,"if (maybeInitMetaDataFromJsDoc(builder, varNode)) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,360,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,363,// Check the preceding node for meta data
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,364,if ((parentOfVarNode != null) &&
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,365,"maybeInitMetaDataFromHelpVar(builder,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,366,parentOfVarNode.getChildBefore(varNode))) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,367,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,370,// Check the subsequent node for meta data
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,371,"maybeInitMetaDataFromHelpVar(builder, varNode.getNext());"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,375,* Initializes the meta data in a JsMessage by examining a node just before or
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,376,* after a message VAR node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,378,* @param builder the message builder whose meta data will be initialized
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,379,* @param sibling a node adjacent to the message VAR node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,380,* @return true iff message has corresponding description variable
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,382,"private boolean maybeInitMetaDataFromHelpVar(Builder builder,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,383,@Nullable Node sibling) throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,384,if ((sibling != null) && (sibling.getType() == Token.VAR)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,385,Node nameNode = sibling.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,386,String name = nameNode.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,387,if (name.equals(builder.getKey() + DESC_SUFFIX)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,388,Node valueNode = nameNode.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,389,String desc = extractStringFromStringExprNode(valueNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,390,if (desc.startsWith(HIDDEN_DESC_PREFIX)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,391,builder.setDesc(desc.substring(HIDDEN_DESC_PREFIX.length()).trim());
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,392,builder.setIsHidden(true);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,393,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,394,builder.setDesc(desc);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,396,return true;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,399,return false;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,403,* Initializes the meta data in a message builder given a node that may
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,404,* contain JsDoc properties.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,406,* @param builder the message builder whose meta data will be initialized
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,407,* @param node the node with the message's JSDoc properties
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,408,* @return true if message has JsDoc with valid description in @desc
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,409,*         annotation
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,411,"private boolean maybeInitMetaDataFromJsDoc(Builder builder, Node node) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,412,boolean messageHasDesc = false;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,413,JSDocInfo info = node.getJSDocInfo();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,414,if (info != null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,415,String desc = info.getDescription();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,416,if (desc != null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,417,builder.setDesc(desc);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,418,messageHasDesc = true;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,420,if (info.isHidden()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,421,builder.setIsHidden(true);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,425,return messageHasDesc;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,429,* Returns the string value associated with a node representing a js string or
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,430,* several js strings added together (e.g. {@code 'str'} or {@code 's' + 't' +
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,431,* 'r'}).
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,433,* @param node the node from where we extract the string
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,434,* @return String representation of the node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,435,* @throws MalformedException if the parsed message is invalid
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,437,private static String extractStringFromStringExprNode(Node node)
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,438,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,439,switch (node.getType()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,440,case Token.STRING:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,441,return node.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,442,case Token.ADD:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,443,StringBuilder sb = new StringBuilder();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,444,for (Node child : node.children()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,445,sb.append(extractStringFromStringExprNode(child));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,447,return sb.toString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,448,default:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,449,"throw new MalformedException(""STRING or ADD node expected; found: "" +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,450,"getReadableTokenName(node), node);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,455,* Initializes a message builder from a FUNCTION node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,456,* <p>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,457,* <pre>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,458,* The tree should look something like:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,460,* function
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,461,*  |-- name
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,462,*  |-- lp
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,463,*  |   |-- name <arg1>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,464,*  |    -- name <arg2>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,465,*   -- block
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,467,*       --return
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,469,*            --add
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,470,*               |-- string foo
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,471,*                -- name <arg1>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,472,* </pre>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,474,* @param builder the message builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,475,* @param node the function node that contains a message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,476,* @throws MalformedException if the parsed message is invalid
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,478,"private void extractFromFunctionNode(Builder builder, Node node)"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,479,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,480,Set<String> phNames = Sets.newHashSet();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,482,for (Node fnChild : node.children()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,483,switch (fnChild.getType()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,484,case Token.NAME:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,485,"// This is okay. The function has a name, but it is empty."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,486,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,487,case Token.LP:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,488,// Parse the placeholder names from the function argument list.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,489,for (Node argumentNode : fnChild.children()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,490,if (argumentNode.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,491,String phName = argumentNode.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,492,if (phNames.contains(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,493,"throw new MalformedException(""Duplicate placeholder name: """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,494,"+ phName, argumentNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,495,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,496,phNames.add(phName);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,500,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,501,case Token.BLOCK:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,502,// Build the message's value by examining the return statement
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,503,Node returnNode = fnChild.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,504,if (returnNode.getType() != Token.RETURN) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,505,"throw new MalformedException(""RETURN node expected; found: """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,506,"+ getReadableTokenName(returnNode), returnNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,508,for (Node child : returnNode.children()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,509,"extractFromReturnDescendant(builder, child);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,512,// Check that all placeholders from the message text have appropriate
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,513,// object literal keys
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,514,for (String phName : builder.getPlaceholders()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,515,if(!phNames.contains(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,516,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,517,"""Unrecognized message placeholder referenced: "" + phName,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,518,returnNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,521,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,522,default:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,523,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,524,"""NAME, LP, or BLOCK node expected; found: """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,525,"+ getReadableTokenName(node), fnChild);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,531,* Appends value parts to the message builder by traversing the descendants
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,532,* of the given RETURN node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,534,* @param builder the message builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,535,* @param node the node from where we extract a message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,536,* @throws MalformedException if the parsed message is invalid
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,538,"private void extractFromReturnDescendant(Builder builder, Node node)"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,539,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,541,switch (node.getType()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,542,case Token.STRING:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,543,builder.appendStringPart(node.getString());
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,544,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,545,case Token.NAME:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,546,builder.appendPlaceholderReference(node.getString());
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,547,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,548,case Token.ADD:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,549,for (Node child : node.children()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,550,"extractFromReturnDescendant(builder, child);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,552,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,553,default:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,554,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,555,"""STRING, NAME, or ADD node expected; found: """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,556,"+ getReadableTokenName(node), node);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,561,* Initializes a message builder from a CALL node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,562,* <p>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,563,* The tree should look something like:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,565,* <pre>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,566,* call
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,567,*  |-- getprop
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,568,*  |   |-- name 'goog'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,569,*  |   +-- string 'getMsg'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,571,*  |-- string 'Hi {$userName}! Welcome to {$product}.'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,572,*  +-- objlit
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,573,*      |-- string 'userName'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,574,*      |-- name 'someUserName'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,575,*      |-- string 'product'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,576,*      +-- call
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,577,*          +-- name 'getProductName'
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,578,* </pre>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,580,* @param builder the message builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,581,* @param node the call node from where we extract the message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,582,* @throws MalformedException if the parsed message is invalid
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,584,"private void extractFromCallNode(Builder builder,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,585,Node node) throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,586,// Check the function being called
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,587,if (node.getType() != Token.CALL) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,588,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,589,"""Message must be initialized using "" + MSG_FUNCTION_NAME +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,590,""" function."", node);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,593,Node fnNameNode = node.getFirstChild();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,594,if (!MSG_FUNCTION_NAME.equals(fnNameNode.getQualifiedName())) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,595,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,596,"""Message initialized using unrecognized function. "" +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,597,"""Please use "" + MSG_FUNCTION_NAME + ""() instead."", fnNameNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,600,// Get the message string
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,601,Node stringLiteralNode = fnNameNode.getNext();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,602,if (stringLiteralNode == null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,603,"throw new MalformedException(""Message string literal expected"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,604,stringLiteralNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,606,// Parse the message string and append parts to the builder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,607,"parseMessageTextNode(builder, stringLiteralNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,609,Node objLitNode = stringLiteralNode.getNext();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,610,Set<String> phNames = Sets.newHashSet();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,611,if (objLitNode != null) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,612,// Register the placeholder names
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,613,if (objLitNode.getType() != Token.OBJECTLIT) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,614,"throw new MalformedException(""OBJLIT node expected"", objLitNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,616,for (Node aNode = objLitNode.getFirstChild(); aNode != null;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,617,aNode = aNode.getNext().getNext()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,618,if (aNode.getType() != Token.STRING) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,619,"throw new MalformedException(""STRING node expected as OBJLIT key"","
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,620,aNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,622,String phName = aNode.getString();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,623,if (!isLowerCamelCaseWithNumericSuffixes(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,624,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,625,"""Placeholder name not in lowerCamelCase: "" + phName, aNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,628,if (phNames.contains(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,629,"throw new MalformedException(""Duplicate placeholder name: """
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,630,"+ phName, aNode);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,633,phNames.add(phName);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,637,// Check that all placeholders from the message text have appropriate objlit
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,638,// values
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,639,Set<String> usedPlaceholders = builder.getPlaceholders();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,640,for (String phName : usedPlaceholders) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,641,if(!phNames.contains(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,642,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,643,"""Unrecognized message placeholder referenced: "" + phName,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,644,objLitNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,648,// Check that objLiteral have only names that are present in the
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,649,// message text
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,650,for (String phName : phNames) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,651,if(!usedPlaceholders.contains(phName)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,652,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,653,"""Unused message placeholder: "" + phName,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,654,objLitNode);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,660,* Appends the message parts in a JS message value extracted from the given
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,661,* text node.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,663,* @param builder the js message builder to append parts to
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,664,* @param node the node with string literal that contains the message text
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,665,* @throws MalformedException if {@code value} contains a reference to
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,666,*         an unregistered placeholder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,668,"private void parseMessageTextNode(Builder builder, Node node)"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,669,throws MalformedException {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,670,String value = extractStringFromStringExprNode(node);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,672,while(true) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,673,int phBegin = value.indexOf(PH_JS_PREFIX);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,674,if (phBegin < 0) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,675,// Just a string literal
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,676,builder.appendStringPart(value);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,677,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,678,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,679,if (phBegin > 0) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,680,// A string literal followed by a placeholder
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,681,"builder.appendStringPart(value.substring(0, phBegin));"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,684,// A placeholder. Find where it ends
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,685,"int phEnd = value.indexOf(PH_JS_SUFFIX, phBegin);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,686,if (phEnd < 0) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,687,throw new MalformedException(
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,688,"""Placeholder incorrectly formatted in: "" + builder.getKey(),"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,689,node);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,692,"String phName = value.substring(phBegin + PH_JS_PREFIX.length(),"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,693,phEnd);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,694,builder.appendPlaceholderReference(phName);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,695,int nextPos = phEnd + PH_JS_SUFFIX.length();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,696,if (nextPos < value.length()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,697,// Iterate on the rest of the message value
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,698,value = value.substring(nextPos);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,699,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,700,// The message is parsed
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,701,return;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,709,"* Processes found js message. Several examples of ""standard"" processing"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,710,* routines are:
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,711,* <ol>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,712,* <li>extract all js messages
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,713,* <li>replace js messages with localized versions for some specific language
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,714,* <li>check that messages have correct syntax and present in localization
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,715,*     bundle
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,716,* </ol>
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,718,* @param message the found message
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,719,* @param definition the definition of the object and usually contains all
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,720,*        additional message information like message node/parent's node
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,722,"abstract void processJsMessage(JsMessage message,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,723,JsMessageDefinition definition);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,726,* Returns whether the given js identifier is a valid js message name.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,728,"boolean isMessageName(String identifier, boolean isNewStyleMessage) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,729,return identifier.startsWith(MSG_PREFIX) &&
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,730,(style == JsMessage.Style.CLOSURE || isNewStyleMessage ||
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,731,!identifier.endsWith(DESC_SUFFIX));
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,735,* Returns whether the given message name is in the unnamed namespace.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,737,private static boolean isUnnamedMessageName(String identifier) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,738,return MSG_UNNAMED_PATTERN.matcher(identifier).matches();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,742,"* Returns whether a string is nonempty, begins with a lowercase letter, and"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,743,* contains only digits and underscores after the first underscore.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,745,static boolean isLowerCamelCaseWithNumericSuffixes(String input) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,746,return CAMELCASE_PATTERN.matcher(input).matches();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,750,* Returns human-readable name of the given node's type.
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,752,private static String getReadableTokenName(Node node) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,753,return Node.tokenToName(node.getType()).toUpperCase();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,757,"* Converts the given string from upper-underscore case to lower-camel case,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,758,"* preserving numeric suffixes. For example: ""NAME"" -> ""name"" ""A4_LETTER"" ->"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,759,"* ""a4Letter"" ""START_SPAN_1_23"" -> ""startSpan_1_23""."
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,761,static String toLowerCamelCaseWithNumericSuffixes(String input) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,762,// Determine where the numeric suffixes begin
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,763,int suffixStart = input.length();
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,764,while (suffixStart > 0) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,765,char ch = '\0';
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,766,int numberStart = suffixStart;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,767,while (numberStart > 0) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,768,ch = input.charAt(numberStart - 1);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,769,if (Character.isDigit(ch)) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,770,numberStart--;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,771,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,772,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,775,if ((numberStart > 0) && (numberStart < suffixStart) && (ch == '_')) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,776,suffixStart = numberStart - 1;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,777,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,778,break;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,782,if (suffixStart == input.length()) {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,783,"return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, input);"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,784,} else {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,785,"return CaseFormat.UPPER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL,"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,786,"input.substring(0, suffixStart)) +"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,787,input.substring(suffixStart);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,791,static class MalformedException extends Exception {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,792,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,794,private final Node node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,796,"MalformedException(String message, Node node) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,797,super(message);
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,798,this.node = node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,801,Node getNode() {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,802,return node;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,806,private static class MessageLocation {
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,807,private final String sourceName;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,808,private final int lineNo;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,810,"private MessageLocation(String sourceName, int lineNo) {"
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,811,this.sourceName = sourceName;
True,src/com/google/javascript/jscomp/JsMessageVisitor.java,src/com/google/javascript/jscomp/JsMessageVisitor.java,812,this.lineNo = lineNo;
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,2,* Copyright 2004 Google Inc.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,19,import java.util.Locale;
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,22,* An interface for providing alterative values for user-visible messages in
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,23,* javascript code.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,28,public interface MessageBundle {
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,31,* Gets the message ID generator to use to compute message IDs for this
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,32,* type of bundle.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,33,* @return idGenerator instance or null if we do not want to use any custom
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,34,*     id generation. In case if idGenerator is null caller should decide how
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,35,*     to create id by itself. In the most cases using the message key is
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,36,*     enough.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,38,public JsMessage.IdGenerator idGenerator();
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,41,* Gets a message replacement.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,43,* @param id the id of the message being replaced; the key is message ID
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,44,*     generated by {@link JsMessage.IdGenerator}
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,45,"* @return the message replacement, which may be null."
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,47,public JsMessage getMessage(String id);
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,50,* Returns an iterable over the keys that this object has replacements for.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,51,* @return all messages from this bundle.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,53,public Iterable<JsMessage> getAllMessages();
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,56,* Returns bundle locale.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,57,* @return locale for bundle's messages.
True,src/com/google/javascript/jscomp/MessageBundle.java,src/com/google/javascript/jscomp/MessageBundle.java,59,public Locale getLocale();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,2,* Copyright 2004 Google Inc.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,19,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,20,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,21,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,23,import java.util.Iterator;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,26,* ReplaceMessages replaces user-visible messages with alternatives.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,27,* It uses Google specific JsMessageVisitor implementation.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,31,* @author anatol@google.com (Anatol Pomazau)
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,33,class ReplaceMessages extends JsMessageVisitor {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,34,private final MessageBundle bundle;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,35,private final boolean strictReplacement;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,37,static final DiagnosticType BUNDLE_DOES_NOT_HAVE_THE_MESSAGE =
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,38,"DiagnosticType.error(""JSC_BUNDLE_DOES_NOT_HAVE_THE_MESSAGE"","
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,39,"""Message with id = {0} cound not be found in replacement bundle"");"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,41,"ReplaceMessages(AbstractCompiler compiler, MessageBundle bundle,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,42,"boolean checkDuplicatedMessages, JsMessage.Style style,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,43,boolean strictReplacement) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,45,"super(compiler, checkDuplicatedMessages, style, bundle.idGenerator());"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,47,this.bundle = bundle;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,48,this.strictReplacement = strictReplacement;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,51,@Override
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,52,"protected void processJsMessage(JsMessage message,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,53,JsMessageDefinition definition) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,55,// Get the replacement.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,56,JsMessage replacement = bundle.getMessage(message.getId());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,57,if (replacement == null) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,58,if (strictReplacement) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,59,"compiler.report(JSError.make(message.getSourceName(),"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,60,"definition.getMessageNode(), BUNDLE_DOES_NOT_HAVE_THE_MESSAGE,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,61,message.getId()));
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,62,// Fallback to the default message
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,63,return;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,64,} else {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,65,// In case if it is not a strict replacement we could leave original
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,66,// message.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,67,replacement = message;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,71,// Replace the message.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,72,Node newValue;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,73,Node msgNode = definition.getMessageNode();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,74,try {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,75,"newValue = getNewValueNode(replacement, msgNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,76,} catch (MalformedException e) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,77,"compiler.report(JSError.make(message.getSourceName(),"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,78,"e.getNode(), MESSAGE_TREE_MALFORMED, e.getMessage()));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,79,newValue = msgNode;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,82,if (newValue != msgNode) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,83,"definition.getMessageParentNode().replaceChild(msgNode, newValue);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,88,"* Constructs a node representing a message's value, or, if possible, just"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,89,* modifies {@code origValueNode} so that it accurately represents the
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,90,* message's value.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,92,* @param message  a message
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,93,* @param origValueNode  the message's original value node
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,94,* @return a Node that can replace {@code origValueNode}
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,96,* @throws MalformedException if the passed node's subtree structure is
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,97,*   not as expected
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,99,"private Node getNewValueNode(JsMessage message, Node origValueNode)"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,100,throws MalformedException {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,101,switch (origValueNode.getType()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,102,case Token.FUNCTION:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,103,// The message is a function. Modify the function node.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,104,"updateFunctionNode(message, origValueNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,105,return origValueNode;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,106,case Token.STRING:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,107,// The message is a simple string. Modify the string node.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,108,origValueNode.setString(message.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,109,return origValueNode;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,110,case Token.ADD:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,111,// The message is a simple string. Create a string node.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,112,return Node.newString(message.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,113,case Token.CALL:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,114,// The message is a function call. Replace it with a string expression.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,115,"return replaceCallNode(message, origValueNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,116,default:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,117,throw new MalformedException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,118,"""Expected FUNCTION, STRING, or ADD node; found: "" +"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,119,"origValueNode.getType(), origValueNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,124,* Updates the descendants of a FUNCTION node to represent a message's value.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,125,* <p>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,126,* The tree looks something like:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,127,* <pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,128,* function
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,129,*  |-- name
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,130,*  |-- lp
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,131,*  |   |-- name <arg1>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,132,*  |    -- name <arg2>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,133,*   -- block
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,135,*       --return
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,137,*            --add
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,138,*               |-- string foo
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,139,*                -- name <arg1>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,140,* </pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,142,* @param message  a message
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,143,* @param functionNode  the message's original FUNCTION value node
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,145,* @throws MalformedException if the passed node's subtree structure is
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,146,*         not as expected
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,148,"private void updateFunctionNode(JsMessage message, Node functionNode)"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,149,throws MalformedException {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,150,"checkNode(functionNode, Token.FUNCTION);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,151,Node nameNode = functionNode.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,152,"checkNode(nameNode, Token.NAME);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,153,Node argListNode = nameNode.getNext();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,154,"checkNode(argListNode, Token.LP);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,155,Node oldBlockNode = argListNode.getNext();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,156,"checkNode(oldBlockNode, Token.BLOCK);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,158,Iterator<CharSequence> iterator = message.parts().iterator();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,159,Node valueNode = iterator.hasNext()
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,160,"? constructAddOrStringNode(iterator, argListNode)"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,161,": Node.newString("""");"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,162,"Node newBlockNode = new Node(Token.BLOCK,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,163,"new Node(Token.RETURN, valueNode));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,165,"functionNode.replaceChild(oldBlockNode, newBlockNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,169,* Creates a parse tree corresponding to the remaining message parts in
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,170,"* an iteration. The result will contain only STRING nodes, NAME nodes"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,171,"* (corresponding to placeholder references), and/or ADD nodes used to"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,172,* combine the other two types.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,174,* @param partsIterator  an iterator over message parts
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,175,* @param argListNode  an LP node whose children are valid placeholder names
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,176,* @return the root of the constructed parse tree
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,178,* @throws MalformedException if {@code partsIterator} contains a
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,179,*   placeholder reference that does not correspond to a valid argument in
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,180,*   the arg list
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,182,"private Node constructAddOrStringNode(Iterator<CharSequence> partsIterator,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,183,Node argListNode)
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,184,throws MalformedException {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,185,CharSequence part = partsIterator.next();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,186,Node partNode = null;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,187,if (part instanceof JsMessage.PlaceholderReference) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,188,JsMessage.PlaceholderReference phRef =
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,189,(JsMessage.PlaceholderReference) part;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,191,for (Node node : argListNode.children()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,192,if (node.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,193,String arg = node.getString();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,195,// We ignore the case here because the transconsole only supports
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,196,"// uppercase placeholder names, but function arguments in javascript"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,197,// code can have mixed case.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,198,if (arg.equalsIgnoreCase(phRef.getName())) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,199,"partNode = Node.newString(Token.NAME, arg);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,204,if (partNode == null) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,205,throw new MalformedException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,206,"""Unrecognized message placeholder referenced: "" + phRef.getName(),"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,207,argListNode);
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,209,} else {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,210,// The part is just a string literal.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,211,partNode = Node.newString(part.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,214,if (partsIterator.hasNext()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,215,"return new Node(Token.ADD, partNode,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,216,"constructAddOrStringNode(partsIterator, argListNode));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,217,} else {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,218,return partNode;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,223,* Replaces a CALL node with an inlined message value.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,224,*  <p>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,225,* The call tree looks something like:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,226,* <pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,227,* call
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,228,*  |-- getprop
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,229,*  |   |-- name 'goog'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,230,*  |   +-- string 'getMsg'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,232,*  |-- string 'Hi {$userName}! Welcome to {$product}.'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,233,*  +-- objlit
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,234,*      |-- string 'userName'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,235,*      |-- name 'someUserName'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,236,*      |-- string 'product'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,237,*      +-- call
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,238,*          +-- name 'getProductName'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,239,* <pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,240,* <p>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,241,"* For that example, we'd return:"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,242,* <pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,243,* add
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,244,*  |-- string 'Hi '
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,245,*  +-- add
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,246,*      |-- name someUserName
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,247,*      +-- add
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,248,*          |-- string '! Welcome to '
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,249,*          +-- add
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,250,*              |-- call
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,251,*              |   +-- name 'getProductName'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,252,*              +-- string '.'
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,253,* </pre>
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,254,* @param message  a message
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,255,* @param callNode  the message's original CALL value node
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,256,"* @return a STRING node, or an ADD node that does string concatenation, if"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,257,*   the message has one or more placeholders
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,259,* @throws MalformedException if the passed node's subtree structure is
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,260,*   not as expected
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,262,"private Node replaceCallNode(JsMessage message, Node callNode)"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,263,throws MalformedException {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,264,"checkNode(callNode, Token.CALL);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,265,Node getPropNode = callNode.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,266,"checkNode(getPropNode, Token.GETPROP);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,267,Node stringExprNode = getPropNode.getNext();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,268,checkStringExprNode(stringExprNode);
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,269,Node objLitNode = stringExprNode.getNext();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,271,// Build the replacement tree.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,272,"return constructStringExprNode(message.parts().iterator(), objLitNode);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,276,* Creates a parse tree corresponding to the remaining message parts in an
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,277,"* iteration. The result consists of one or more STRING nodes, placeholder"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,278,"* replacement value nodes (which can be arbitrary expressions), and ADD"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,279,* nodes.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,281,* @param parts  an iterator over message parts
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,282,* @param objLitNode  an OBJLIT node mapping placeholder names to values
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,283,* @return the root of the constructed parse tree
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,285,* @throws MalformedException if {@code parts} contains a placeholder
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,286,*   reference that does not correspond to a valid placeholder name
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,288,"private Node constructStringExprNode(Iterator<CharSequence> parts,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,289,Node objLitNode) throws MalformedException {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,291,CharSequence part = parts.next();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,292,Node partNode = null;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,293,if (part instanceof JsMessage.PlaceholderReference) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,294,JsMessage.PlaceholderReference phRef =
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,295,(JsMessage.PlaceholderReference) part;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,297,for (Node n = objLitNode.getFirstChild(); n != null;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,298,n = n.getNext().getNext()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,299,if (n.getString().equals(phRef.getName())) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,300,Node valueNode = n.getNext();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,301,partNode = valueNode.cloneTree();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,305,if (partNode == null) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,306,throw new MalformedException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,307,"""Unrecognized message placeholder referenced: "" + phRef.getName(),"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,308,objLitNode);
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,310,} else {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,311,// The part is just a string literal.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,312,partNode = Node.newString(part.toString());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,315,if (parts.hasNext()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,316,"return new Node(Token.ADD, partNode,"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,317,"constructStringExprNode(parts, objLitNode));"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,318,} else {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,319,return partNode;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,324,* Checks a node's type.
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,326,* @throws MalformedException if the node is null or the wrong type
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,328,"private void checkNode(@Nullable Node node, int type) throws MalformedException {"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,329,if (node == null) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,330,throw new MalformedException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,331,"""Expected node type "" + type + ""; found: null"", node);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,333,if (node.getType() != type) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,334,throw new MalformedException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,335,"""Expected node type "" + type + ""; found: "" + node.getType(), node);"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,340,* Checks that a node is a valid string expression (either a string literal
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,341,* or a concatenation of string literals).
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,343,* @throws IllegalArgumentException if the node is null or the wrong type
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,345,private void checkStringExprNode(@Nullable Node node) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,346,if (node == null) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,347,"throw new IllegalArgumentException(""Expected a string; found: null"");"
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,349,switch (node.getType()) {
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,350,case Token.STRING:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,351,break;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,352,case Token.ADD:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,353,Node c = node.getFirstChild();
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,354,checkStringExprNode(c);
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,355,checkStringExprNode(c.getNext());
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,356,break;
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,357,default:
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,358,throw new IllegalArgumentException(
True,src/com/google/javascript/jscomp/ReplaceMessages.java,src/com/google/javascript/jscomp/ReplaceMessages.java,359,"""Expected a string; found: "" + node.getType());"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,19,import com.google.common.base.Joiner;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,41,import java.util.SortedSet;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,42,import java.util.TreeSet;
False,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,63,ublic SortedDependencies(List<INPUT> inputs) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,66,public SortedDependencies(List<INPUT> inputs)
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,67,throws CircularDependencyException {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,97,// The dependency graph of inputs has a cycle iff sortedList is a proper
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,98,"// subset of inputs. Also, it has a cycle iff the subgraph"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,99,// (inputs - sortedList) has a cycle. It's fairly easy to prove this
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,100,// by the lemma that a graph has a cycle iff it has a subgraph where
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,101,// no nodes have out-degree 0. I'll leave the proof of this as an exercise
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,102,// to the reader.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,103,if (sortedList.size() < inputs.size()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,104,List<INPUT> subGraph = Lists.newArrayList(inputs);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,105,subGraph.removeAll(sortedList);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,107,throw new CircularDependencyException(
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,108,"cycleToString(findCycle(subGraph, deps)));"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,113,* Returns the first circular dependency found. Expressed as a list of
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,114,* items in reverse dependency order (the second element depends on the
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,115,"* first, etc.)."
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,117,private List<INPUT> findCycle(
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,118,"List<INPUT> subGraph, Multimap<INPUT, INPUT> deps) {"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,119,"return findCycle(subGraph.get(0), Sets.<INPUT>newHashSet(subGraph),"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,120,"deps, Sets.<INPUT>newHashSet());"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,123,private List<INPUT> findCycle(
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,124,"INPUT current, Set<INPUT> subGraph, Multimap<INPUT, INPUT> deps,"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,125,Set<INPUT> covered) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,126,if (covered.add(current)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,127,List<INPUT> cycle = findCycle(
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,128,"findRequireInSubGraphOrFail(current, subGraph),"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,129,"subGraph, deps, covered);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,131,// Don't add the input to the list if the cycle has closed already.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,132,if (cycle.get(0) != cycle.get(cycle.size() - 1)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,133,cycle.add(current);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,136,return cycle;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,137,} else {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,138,"// Explicitly use the add() method, to prevent a generics constructor"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,139,// warning that is dumb. The condition it's protecting is
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,140,"// obscure, and I think people have proposed that it be removed."
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,141,List<INPUT> cycle = Lists.<INPUT>newArrayList();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,142,cycle.add(current);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,143,return cycle;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,147,"private INPUT findRequireInSubGraphOrFail(INPUT input, Set<INPUT> subGraph) {"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,148,for (String symbol : input.getRequires()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,149,INPUT candidate = provideMap.get(symbol);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,150,if (subGraph.contains(candidate)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,151,return candidate;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,154,"throw new IllegalStateException(""no require found in subgraph"");"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,158,* @param cycle A cycle in reverse-dependency order.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,160,private String cycleToString(List<INPUT> cycle) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,161,List<String> symbols = Lists.newArrayList();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,162,for (int i = cycle.size() - 1; i >= 0; i--) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,163,symbols.add(cycle.get(i).getProvides().iterator().next());
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,165,symbols.add(symbols.get(0));
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,166,"return Joiner.on("" -> "").join(symbols);"
False,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,120,mmutableList.Builder builder = ImmutableList.builder();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,195,ImmutableList.Builder<INPUT> builder = ImmutableList.builder();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,253,public static class CircularDependencyException extends Exception {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,254,CircularDependencyException(String message) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,255,super(message);
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,287,public void testSourceSortingCircularDeps1() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,288,"args.add(""--manage_closure_dependencies=true"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,289,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,290,"""goog.provide('gin'); goog.require('tonic'); var gin = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,291,"""goog.provide('tonic'); goog.require('gin'); var tonic = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,292,"""goog.require('gin'); goog.require('tonic');"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,294,JSModule.CIRCULAR_DEPENDENCY_ERROR);
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,297,public void testSourceSortingCircularDeps2() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,298,"args.add(""--manage_closure_dependencies=true"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,299,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,300,"""goog.provide('roses.lime.juice');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,301,"""goog.provide('gin'); goog.require('tonic'); var gin = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,302,"""goog.provide('tonic'); goog.require('gin'); var tonic = {};"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,303,"""goog.require('gin'); goog.require('tonic');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,304,"""goog.provide('gimlet');"" +"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,305,"""     goog.require('gin'); goog.require('roses.lime.juice');"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,307,JSModule.CIRCULAR_DEPENDENCY_ERROR);
False,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,149,ublic void testManageDependencies() {
True,test/com/google/javascript/jscomp/JSModuleGraphTest.java,test/com/google/javascript/jscomp/JSModuleGraphTest.java,149,public void testManageDependencies() throws Exception {
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,77,ublic void testSortInputs() {
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,77,public void testSortInputs() throws Exception {
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,114,"ist<CompilerInput> expected, List<CompilerInput> shuffled) {"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,114,"List<CompilerInput> expected, List<CompilerInput> shuffled)"
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,115,throws Exception {
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,127,ublic void testSortJsModules() {
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,128,public void testSortJsModules() throws Exception {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,21,import com.google.javascript.jscomp.deps.SortedDependencies.CircularDependencyException;
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,32,ublic void testSort() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,33,public void testSort() throws Exception {
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,34,"a"", ""a"", symbols(), symbols(""b"", ""c""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,35,"""a"", ""a"", provides(), requires(""b"", ""c""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,36,"b"", ""b"", symbols(""b""), symbols(""d""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,37,"""b"", ""b"", provides(""b""), requires(""d""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,38,"c"", ""c"", symbols(""c""), symbols(""d""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,39,"""c"", ""c"", provides(""c""), requires(""d""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,40,"d"", ""d"", symbols(""d""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,41,"""d"", ""d"", provides(""d""), requires());"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,42,"e"", ""e"", symbols(""e""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,43,"""e"", ""e"", provides(""e""), requires());"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,44,"f"", ""f"", symbols(""f""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,45,"""f"", ""f"", provides(""f""), requires());"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,81,ublic void testSort2() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,82,public void testSort2() throws Exception {
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,83,"ab"", ""ab"", symbols(""a"", ""b""), symbols(""d"", ""f""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,84,"""ab"", ""ab"", provides(""a"", ""b""), requires(""d"", ""f""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,85,"c"", ""c"", symbols(""c""), symbols(""h""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,86,"""c"", ""c"", provides(""c""), requires(""h""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,87,"d"", ""d"", symbols(""d""), symbols(""e"", ""f""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,88,"""d"", ""d"", provides(""d""), requires(""e"", ""f""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,89,"ef"", ""ef"", symbols(""e"", ""f""), symbols(""g"", ""c""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,90,"""ef"", ""ef"", provides(""e"", ""f""), requires(""g"", ""c""));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,91,"g"", ""g"", symbols(""g""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,92,"""g"", ""g"", provides(""g""), requires());"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,93,"hi"", ""hi"", symbols(""h"", ""i""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,94,"""hi"", ""hi"", provides(""h"", ""i""), requires());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,110,public void testSort3() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,111,SimpleDependencyInfo a = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,112,"""a"", ""a"", provides(""a""), requires(""c""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,113,SimpleDependencyInfo b = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,114,"""b"", ""b"", provides(""b""), requires(""a""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,115,SimpleDependencyInfo c = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,116,"""c"", ""c"", provides(""c""), requires(""b""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,118,try {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,119,new SortedDependencies<SimpleDependencyInfo>(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,120,"Lists.newArrayList(a, b, c));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,121,"fail(""expected exception"");"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,122,} catch (CircularDependencyException e) {}
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,125,public void testSort4() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,126,SimpleDependencyInfo a = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,127,"""a"", ""a"", provides(""a""), requires(""a""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,129,try {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,130,new SortedDependencies<SimpleDependencyInfo>(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,131,Lists.newArrayList(a));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,132,"fail(""expected exception"");"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,133,} catch (CircularDependencyException e){
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,134,"assertEquals(""a -> a"", e.getMessage());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,138,public void testSort5() throws Exception {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,139,SimpleDependencyInfo a = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,140,"""a"", ""a"", provides(""a""), requires());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,141,SimpleDependencyInfo b = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,142,"""b"", ""b"", provides(""b""), requires());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,143,SimpleDependencyInfo c = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,144,"""c"", ""c"", provides(""c""), requires());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,146,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,147,"ImmutableList.of(a, b, c),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,148,"ImmutableList.of(a, b, c));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,149,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,150,"ImmutableList.of(c, b, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,151,"ImmutableList.of(c, b, a));"
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,111,ist<SimpleDependencyInfo> shuffled) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,156,List<SimpleDependencyInfo> shuffled) throws Exception {
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,120,ist<SimpleDependencyInfo> roots) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,165,List<SimpleDependencyInfo> roots) throws Exception {
False,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,126,rivate List<String> symbols(String ... strings) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,171,private List<String> requires(String ... strings) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,172,return Lists.newArrayList(strings);
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,175,private List<String> provides(String ... strings) {
