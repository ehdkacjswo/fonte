is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,82,int startErrorCount = compiler.getErrorManager().getErrorCount();
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,83,"ogger_.fine(""Parsing: "" + sourceFile.getName());"
False,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,95,f (root == null || compiler.hasHaltingErrors()) {
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,96,if (root == null ||
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,97,"// Most passes try to report as many errors as possible,"
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,98,// so there may already be errors. We only care if there were
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,99,// errors in the code we just parsed.
True,src/com/google/javascript/jscomp/JsAst.java,src/com/google/javascript/jscomp/JsAst.java,100,(compiler.getErrorManager().getErrorCount() > startErrorCount && !compiler.isIdeMode())) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2367, else {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2367,} else if (value != null) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2370,} else {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2371,result = IR.exprResult(nameNode);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,2372,result.getFirstChild().setJSDocInfo(info);
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,356,oolean isVarAssign = parent.isVar() && n.hasChildren();
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,357,f (isVarAssign && n.getFirstChild().isQualifiedName()) {
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,356,boolean isVar = parent.isVar();
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,357,if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,365, else if (isVarAssign) {
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,366,ode value = v.getInitialValue().detachFromParent();
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,365,} else if (isVar) {
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,366,Node value = n.hasChildren() ?
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,367,v.getInitialValue().detachFromParent() :
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,368,null;
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,377,ode newDecl = NodeUtil.newQualifiedNameNodeDeclaration(
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,378,"ompiler.getCodingConvention(),"
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,379,"lobalName,"
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,380,"alue,"
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,381,.getJSDocInfo())
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,382,useSourceInfoIfMissingFromForTree(n);
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,383,odeUtil.setDebugInformation(
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,384,"ewDecl.getFirstChild().getFirstChild(), n, name);"
False,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,385,"arent.getParent().addChildBefore(newDecl, parent);"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,379,if (value != null || v.getJSDocInfo() != null) {
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,380,Node newDecl = NodeUtil.newQualifiedNameNodeDeclaration(
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,381,"compiler.getCodingConvention(),"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,382,"globalName,"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,383,"value,"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,384,v.getJSDocInfo())
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,385,.useSourceInfoIfMissingFromForTree(n);
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,386,NodeUtil.setDebugInformation(
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,387,"newDecl.getFirstChild().getFirstChild(), n, name);"
True,src/com/google/javascript/jscomp/ScopedAliases.java,src/com/google/javascript/jscomp/ScopedAliases.java,388,"parent.getParent().addChildBefore(newDecl, parent);"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,525,public void testIssue1103a() {
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,526,"test(""goog.scope(function () {"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,527,"""  var a;"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,528,"""  foo.bar = function () { a = 1; };"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,530,"SCOPE_NAMESPACE + ""foo.bar = function () { $jscomp.scope.a = 1; }"");"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,533,public void testIssue1103b() {
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,534,"test(""goog.scope(function () {"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,535,"""  var a = foo, b, c = 1;"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,537,"SCOPE_NAMESPACE + ""$jscomp.scope.c=1"");"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,540,public void testIssue1103c() {
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,541,"test(""goog.scope(function () {"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,542,"""  /** @type {number} */ var a;"" +"
True,test/com/google/javascript/jscomp/ScopedAliasesTest.java,test/com/google/javascript/jscomp/ScopedAliasesTest.java,544,"SCOPE_NAMESPACE + ""/** @type {number} */ $jscomp.scope.a;"");"
