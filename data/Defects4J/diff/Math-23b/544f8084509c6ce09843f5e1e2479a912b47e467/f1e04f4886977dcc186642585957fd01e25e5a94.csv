is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,193,ublic void testGetSummary() throws DimensionMismatchException {
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,194,"ultivariateSummaryStatistics u = new MultivariateSummaryStatistics(2, true);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,195,tatisticalMultivariateSummary summary = u.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,196,"erifySummary(u, summary);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,197,".addValue(new double[] { 1, 2 });"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,198,ummary = u.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,199,"erifySummary(u, summary);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,200,".addValue(new double[] { 2, 5 });"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,201,ummary = u.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,202,"erifySummary(u, summary);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,203,".addValue(new double[] { 2, 2 });"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,204,ummary = u.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,205,"erifySummary(u, summary);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,213,tatisticalMultivariateSummary summary = s.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,214,"erifySummary(u, summary);"
True,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,198,"assertEquals(u, s);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,226,ummary = s.getSummary();
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,227,"erifySummary(u, summary);"
True,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,210,"assertEquals(u, s);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,272,"rivate void verifySummary(MultivariateSummaryStatistics u, StatisticalMultivariateSummary s) {"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,273,"ssertEquals(s.getN(), u.getN());"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,274,or (int i = 0; i < u.getDimension(); ++i) {
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,275,"heckValue(s.getSum()[i], u.getSum()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,276,"heckValue(s.getStandardDeviation()[i], u.getStandardDeviation()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,277,"heckValue(s.getMean()[i], u.getMean()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,278,"heckValue(s.getMin()[i], u.getMin()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,279,"heckValue(s.getMax()[i], u.getMax()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,280,"heckValue(s.getSumSq()[i], u.getSumSq()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,281,"heckValue(s.getSumLog()[i], u.getSumLog()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,282,"heckValue(s.getMax()[i], u.getMax()[i], 1.0e-10);"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,286,"rivate void checkValue(double expected, double actual, double tolerance) {"
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,287,f (Double.isNaN(expected)) {
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,288,ssertTrue(Double.isNaN(actual));
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,289, else {
False,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java,290,"ssertEquals(expected, actual, tolerance);"
