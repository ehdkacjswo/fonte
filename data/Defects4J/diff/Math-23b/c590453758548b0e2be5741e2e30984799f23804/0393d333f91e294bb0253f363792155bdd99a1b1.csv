is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,30, Implementation of RealMatrix using a double[][] array to store entries and
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,31," <a href=""http://www.math.gatech.edu/~bourbaki/math2601/Web-notes/2num.pdf"">"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,32, LU decomposition</a> to support linear system
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,33, solution and inverse.
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,34, <p>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,35," The LU decomposition is performed as needed, to support the following operations: <ul>"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,36, <li>solve</li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,37, <li>isSingular</li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,38, <li>getDeterminant</li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,39, <li>inverse</li> </ul></p>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,40, <p>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,41, <strong>Usage notes</strong>:<br>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,42, <ul><li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,43, The LU decomposition is cached and reused on subsequent calls.
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,44, If data are modified via references to the underlying array obtained using
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,45," <code>getDataRef()</code>, then the stored LU decomposition will not be"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,46," discarded.  In this case, you need to explicitly invoke"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,47, <code>LUDecompose()</code> to recompute the decomposition
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,48, before using any of the methods above.</li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,49, <li>
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,50," As specified in the {@link RealMatrix} interface, matrix element indexing"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,51," is 0-based -- e.g., <code>getEntry(0, 0)</code>"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,52," returns the element in the first row, first column of the matrix.</li></ul>"
False,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,53, </p>
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,30,* Implementation of {@link RealMatrix} using a {@code double[][]} array to
True,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java,31,* store entries.
