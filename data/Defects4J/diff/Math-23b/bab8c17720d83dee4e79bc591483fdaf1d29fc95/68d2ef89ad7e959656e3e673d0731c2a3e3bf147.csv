is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,136,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,137,Override
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,138,ublic double inverseCumulativeProbability(double p)  {
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,139,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,140,eturn 0;
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,141, else if (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,142,eturn 1;
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,143, else {
False,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,src/main/java/org/apache/commons/math/distribution/BetaDistribution.java,144,eturn super.inverseCumulativeProbability(p);
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,95, {@inheritDoc}
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,97, Returns {@code 0} when {@code p == 0} and
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,98, {@code Double.POSITIVE_INFINITY} when {@code p == 1}.
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,100,Override
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,101,ublic double inverseCumulativeProbability(final double p) {
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,102,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,103,eturn 0d;
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,105,f (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,106,eturn Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java,108,eturn super.inverseCumulativeProbability(p);
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,21,mport org.apache.commons.math.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,159, {@inheritDoc}
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,161, Returns {@code 0} when {@code p == 0} and
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,162, {@code Double.POSITIVE_INFINITY} when {@code p == 1}.
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,164,Override
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,165,ublic double inverseCumulativeProbability(final double p) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,166,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,167,eturn 0;
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,169,f (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,170,eturn Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/FDistribution.java,src/main/java/org/apache/commons/math/distribution/FDistribution.java,172,eturn super.inverseCumulativeProbability(p);
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,148, {@inheritDoc}
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,150, Returns {@code 0} when {@code p == 0} and
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,151, {@code Double.POSITIVE_INFINITY} when {@code p == 1}.
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,153,Override
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,154,ublic double inverseCumulativeProbability(final double p) {
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,155,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,156,eturn 0;
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,158,f (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,159,eturn Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math/distribution/GammaDistribution.java,161,eturn super.inverseCumulativeProbability(p);
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,159, {@inheritDoc}
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,161, Returns {@code Double.NEGATIVE_INFINITY} when {@code p == 0}
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,162, and {@code Double.POSITIVE_INFINITY} for {@code p == 1}.
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,164,Override
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,165,ublic double inverseCumulativeProbability(final double p) {
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,166,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,167,eturn Double.NEGATIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,169,f (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,170,eturn Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,src/main/java/org/apache/commons/math/distribution/NormalDistribution.java,172,eturn super.inverseCumulativeProbability(p);
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,130, {@inheritDoc}
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,132, Returns {@code Double.NEGATIVE_INFINITY} when {@code p = 0}
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,133, and {@code Double.POSITIVE_INFINITY} when {@code p = 1}.
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,135,Override
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,136,ublic double inverseCumulativeProbability(final double p) {
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,137,f (p == 0) {
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,138,eturn Double.NEGATIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,140,f (p == 1) {
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,141,eturn Double.POSITIVE_INFINITY;
False,src/main/java/org/apache/commons/math/distribution/TDistribution.java,src/main/java/org/apache/commons/math/distribution/TDistribution.java,143,eturn super.inverseCumulativeProbability(p);
