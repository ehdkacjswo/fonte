is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,23,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,24,import org.junit.Test;
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,24,mport junit.framework.Test;
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,25,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,26,mport junit.framework.TestSuite;
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,28,ublic class BiDiagonalTransformerTest extends TestCase {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,26,public class BiDiagonalTransformerTest {
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,42,ublic BiDiagonalTransformerTest(String name) {
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,43,uper(name);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,40,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,56,"ssertEquals(m, transformer.getU().getRowDimension());"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,57,"ssertEquals(m, transformer.getU().getColumnDimension());"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,58,"ssertEquals(m, transformer.getB().getRowDimension());"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,59,"ssertEquals(n, transformer.getB().getColumnDimension());"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,60,"ssertEquals(n, transformer.getV().getRowDimension());"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,61,"ssertEquals(n, transformer.getV().getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,51,"Assert.assertEquals(m, transformer.getU().getRowDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,52,"Assert.assertEquals(m, transformer.getU().getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,53,"Assert.assertEquals(m, transformer.getB().getRowDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,54,"Assert.assertEquals(n, transformer.getB().getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,55,"Assert.assertEquals(n, transformer.getV().getRowDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,56,"Assert.assertEquals(n, transformer.getV().getColumnDimension());"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,60,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,77,"ssertEquals(0, norm, 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,73,"Assert.assertEquals(0, norm, 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,76,@Test
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,83,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,95,"ssertEquals(0, mTm.subtract(id).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,93,"Assert.assertEquals(0, mTm.subtract(id).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,96,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,111,"ssertEquals(0, m.getEntry(i, j), 1.0e-16);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,110,"Assert.assertEquals(0, m.getEntry(i, j), 1.0e-16);"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,115,"ssertEquals(0, m.getEntry(i, j), 1.0e-16);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,114,"Assert.assertEquals(0, m.getEntry(i, j), 1.0e-16);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,121,@Test
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,122,public void testSingularMatrix() {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,123,BiDiagonalTransformer transformer =
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,124,new BiDiagonalTransformer(MatrixUtils.createRealMatrix(new double[][] {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,125,"{ 1.0, 2.0, 3.0 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,126,"{ 2.0, 3.0, 4.0 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,127,"{ 3.0, 5.0, 7.0 }"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,129,final double s3  = Math.sqrt(3.0);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,130,final double s14 = Math.sqrt(14.0);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,131,final double s42 = Math.sqrt(42.0);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,132,final double s1553 = Math.sqrt(1553.0);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,133,RealMatrix uRef = MatrixUtils.createRealMatrix(new double[][] {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,134,"{  -1.0 / s14,  5.0 / s42,  1.0 / s3 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,135,"{  -2.0 / s14, -4.0 / s42,  1.0 / s3 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,136,"{  -3.0 / s14,  1.0 / s42, -1.0 / s3 }"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,138,RealMatrix bRef = MatrixUtils.createRealMatrix(new double[][] {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,139,"{ -s14, s1553 / s14,   0.0 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,140,"{  0.0, -87 * s3 / (s14 * s1553), -s3 * s14 / s1553 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,141,"{  0.0, 0.0, 0.0 }"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,143,RealMatrix vRef = MatrixUtils.createRealMatrix(new double[][] {
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,144,"{ 1.0,   0.0,         0.0        },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,145,"{ 0.0,  -23 / s1553,  32 / s1553 },"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,146,"{ 0.0,  -32 / s1553, -23 / s1553 }"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,149,// check values against known references
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,150,RealMatrix u = transformer.getU();
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,151,"Assert.assertEquals(0, u.subtract(uRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,152,RealMatrix b = transformer.getB();
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,153,"Assert.assertEquals(0, b.subtract(bRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,154,RealMatrix v = transformer.getV();
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,155,"Assert.assertEquals(0, v.subtract(vRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,157,// check the same cached instance is returned the second time
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,158,Assert.assertTrue(u == transformer.getU());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,159,Assert.assertTrue(b == transformer.getB());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,160,Assert.assertTrue(v == transformer.getV());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,164,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,141,"ssertEquals(0, u.subtract(uRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,184,"Assert.assertEquals(0, u.subtract(uRef).getNorm(), 1.0e-14);"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,143,"ssertEquals(0, b.subtract(bRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,186,"Assert.assertEquals(0, b.subtract(bRef).getNorm(), 1.0e-14);"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,145,"ssertEquals(0, v.subtract(vRef).getNorm(), 1.0e-14);"
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,188,"Assert.assertEquals(0, v.subtract(vRef).getNorm(), 1.0e-14);"
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,148,ssertTrue(u == transformer.getU());
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,149,ssertTrue(b == transformer.getB());
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,150,ssertTrue(v == transformer.getV());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,191,Assert.assertTrue(u == transformer.getU());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,192,Assert.assertTrue(b == transformer.getB());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,193,Assert.assertTrue(v == transformer.getV());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,197,@Test
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,155,ssertTrue(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testSquare)).isUpperBiDiagonal());
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,156,ssertTrue(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testNonSquare)).isUpperBiDiagonal());
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,157,ssertFalse(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testNonSquare).transpose()).isUpperBiDiagonal());
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,160,ublic static Test suite() {
False,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,161,eturn new TestSuite(BiDiagonalTransformerTest.class);
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,199,Assert.assertTrue(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testSquare)).isUpperBiDiagonal());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,200,Assert.assertTrue(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testNonSquare)).isUpperBiDiagonal());
True,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,src/test/java/org/apache/commons/math/linear/BiDiagonalTransformerTest.java,201,Assert.assertFalse(new BiDiagonalTransformer(MatrixUtils.createRealMatrix(testNonSquare).transpose()).isUpperBiDiagonal());
