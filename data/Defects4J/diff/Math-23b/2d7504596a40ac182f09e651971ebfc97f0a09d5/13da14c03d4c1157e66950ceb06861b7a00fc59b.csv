is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,37,** Whether the pair contents can be assumed to be immutable. */
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,38,rivate final boolean isImmutable;
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,39,** Cached has code. */
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,40,rivate final int cachedHashCode;
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,45," If the pair can be assumed to be immutable, the hash code will be"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,46, cached.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,50, @param assumeImmutable Whether the pair contents can be assumed to
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,51, be immutable.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,53,"ublic Pair(K k, V v, boolean assumeImmutable) {"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,45,"public Pair(K k, V v) {"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,56,sImmutable = assumeImmutable;
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,57,achedHashCode = computeHashCode();
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,61, Create an entry representing a mapping from the specified key to the
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,62, specified value.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,64, @param k Key.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,65, @param v Value.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,67,"ublic Pair(K k, V v) {"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,68,"his(k, v, false);"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,72, Create an entry representing the same mapping as the specified entry.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,73," If the pair can be assumed to be immutable, the hash code will be"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,74, cached.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,76, @param entry Entry to copy.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,77, @param assumeImmutable Whether the pair contents can be assumed to
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,78, be immutable.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,80,"ublic Pair(Pair<? extends K, ? extends V> entry, boolean assumeImmutable) {"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,81,"his(entry.getKey(), entry.getValue(), assumeImmutable);"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,90,"his(entry, false);"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,56,"this(entry.getKey(), entry.getValue());"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,128,P.getKey() == null :
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,129,ey.equals(oP.getKey())) &&
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,94,oP.key == null :
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,95,key.equals(oP.key)) &&
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,131,P.getValue() == null :
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,132,alue.equals(oP.getValue()));
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,97,oP.value == null :
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,98,value.equals(oP.value));
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,143,eturn isImmutable ? cachedHashCode : computeHashCode();
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,147, Compute a hash code.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,149, @return the hash code value.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,151,rivate final int computeHashCode() {
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,64,/ Test cache.
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,66,inal MyInteger m3 = new MyInteger(1);
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,67,"inal Pair<MyInteger, MyInteger> p3 = new Pair<MyInteger, MyInteger>(m3, m3, true);"
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,68,inal int hC3 = p3.hashCode();
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,69,/ Contents change will not affect the hash code because it is cached.
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,70,3.set(3);
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,71,ssert.assertTrue(hC3 == p3.hashCode());
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,73,"inal Pair<MyInteger, MyInteger> p4 = new Pair<MyInteger, MyInteger>(p3, false);"
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,74,/ p3 and p4 do not have the same hash code because p4 was contructed after m3
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,75,/ was changed.
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,76,ssert.assertFalse(p4.hashCode() == p3.hashCode());
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,77,inal int hC4 = p4.hashCode();
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,78,/ Contents change will affect the hash code because it is not cached.
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,79,3.set(4);
False,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,80,ssert.assertFalse(hC4 == p4.hashCode());
