is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,25,import org.apache.commons.math3.exception.MathInternalError;
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,569,f (isNaN) {
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,570,eturn NaN;
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,570,try {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,571,if (isNaN) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,572,return NaN;
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,573,eturn this.add(this.sqrt1z().multiply(I)).log()
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,574,multiply(I.negate());
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,575,return this.add(this.sqrt1z().multiply(I)).log()
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,576,.multiply(I.negate());
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,577,} catch (NullArgumentException e) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,578,// this should never happen as intermediat results are not null
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,579,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,594,f (isNaN) {
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,595,eturn NaN;
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,600,try {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,601,if (isNaN) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,602,return NaN;
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,598,eturn sqrt1z().add(this.multiply(I)).log()
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,599,multiply(I.negate());
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,605,return sqrt1z().add(this.multiply(I)).log()
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,606,.multiply(I.negate());
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,607,} catch (NullArgumentException e) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,608,// this should never happen as intermediat results are not null
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,609,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,619,f (isNaN) {
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,620,eturn NaN;
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,630,try {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,631,if (isNaN) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,632,return NaN;
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,623,eturn this.add(I).divide(I.subtract(this)).log()
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,624,"multiply(I.divide(createComplex(2.0, 0.0)));"
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,635,return this.add(I).divide(I.subtract(this)).log()
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,636,".multiply(I.divide(createComplex(2.0, 0.0)));"
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,637,} catch (NullArgumentException e) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,638,// this should never happen as intermediat results are not null
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,639,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,982,"eturn createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();"
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,998,try {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,999,"return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt();"
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,1000,} catch (NullArgumentException e) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,1001,// this should never happen as intermediat results are not null
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,1002,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,1131,ublic List<Complex> nthRoot(int n) {
True,src/main/java/org/apache/commons/math3/complex/Complex.java,src/main/java/org/apache/commons/math3/complex/Complex.java,1152,public List<Complex> nthRoot(int n) throws NotPositiveException {
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,25,mport org.apache.commons.math3.util.CompositeFormat;
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,26,mport org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,27,mport org.apache.commons.math3.exception.MathParseException;
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,30,mport org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,27,import org.apache.commons.math3.exception.MathParseException;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,29,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,30,import org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,31,import org.apache.commons.math3.util.CompositeFormat;
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,56,"his(DEFAULT_IMAGINARY_CHARACTER, CompositeFormat.getDefaultNumberFormat());"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,56,this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,57,this.imaginaryFormat = CompositeFormat.getDefaultNumberFormat();
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,58,this.realFormat = imaginaryFormat;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,65,* @throws NullArgumentException if {@code realFormat} is {@code null}.
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,64,ublic ComplexFormat(NumberFormat format) {
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,65,"his(DEFAULT_IMAGINARY_CHARACTER, format);"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,67,public ComplexFormat(NumberFormat format) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,68,if (format == null) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,69,throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,71,this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,72,this.imaginaryFormat = format;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,73,this.realFormat = format;
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,74,"ublic ComplexFormat(NumberFormat realFormat, NumberFormat imaginaryFormat) {"
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,75,"his(DEFAULT_IMAGINARY_CHARACTER, realFormat, imaginaryFormat);"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,81,* @throws NullArgumentException if {@code imaginaryFormat} is {@code null}.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,82,* @throws NullArgumentException if {@code realFormat} is {@code null}.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,84,"public ComplexFormat(NumberFormat realFormat, NumberFormat imaginaryFormat)"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,85,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,86,if (imaginaryFormat == null) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,87,throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,89,if (realFormat == null) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,90,throw new NullArgumentException(LocalizedFormats.REAL_FORMAT);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,93,this.imaginaryCharacter = DEFAULT_IMAGINARY_CHARACTER;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,94,this.imaginaryFormat = imaginaryFormat;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,95,this.realFormat = realFormat;
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,102,* @throws NullArgumentException if {@code imaginaryCharacter} is
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,103,* {@code null}.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,104,* @throws NoDataException if {@code imaginaryCharacter} is an
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,105,* empty string.
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,83,ublic ComplexFormat(String imaginaryCharacter) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,107,public ComplexFormat(String imaginaryCharacter)
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,108,"throws NullArgumentException, NoDataException {"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,117,* @throws NullArgumentException if {@code imaginaryCharacter} is
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,118,* {@code null}.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,119,* @throws NoDataException if {@code imaginaryCharacter} is an
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,120,* empty string.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,121,* @throws NullArgumentException if {@code format} is {@code null}.
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,93,"ublic ComplexFormat(String imaginaryCharacter, NumberFormat format) {"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,123,"public ComplexFormat(String imaginaryCharacter, NumberFormat format)"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,124,"throws NullArgumentException, NoDataException {"
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,114,umberFormat imaginaryFormat) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,145,NumberFormat imaginaryFormat)
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,146,"throws NullArgumentException, NoDataException {"
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,238, @throws IllegalArgumentException is {@code obj} is not a valid type.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,270,* @throws MathIllegalArgumentException is {@code obj} is not a valid type.
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,241,ieldPosition pos) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,273,FieldPosition pos)
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,274,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,288,umberFormat f = CompositeFormat.getDefaultNumberFormat(locale);
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,289,eturn new ComplexFormat(f);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,321,try {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,322,NumberFormat f = CompositeFormat.getDefaultNumberFormat(locale);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,323,return new ComplexFormat(f);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,324,} catch (NullArgumentException nae) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,325,// this should never happen
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,326,throw new MathInternalError(nae);
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,335,* @throws NullArgumentException if {@code imaginaryCharacter} is
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,336,* {@code null}.
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,337,* @throws NoDataException if {@code imaginaryCharacter} is an
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,338,* empty string.
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,298,"ublic static ComplexFormat getInstance(String imaginaryCharacter,"
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,299,ocale locale) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,340,"public static ComplexFormat getInstance(String imaginaryCharacter, Locale locale)"
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,341,"throws NullArgumentException, NoDataException {"
False,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,320,ublic Complex parse(String source) {
True,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,src/main/java/org/apache/commons/math3/complex/ComplexFormat.java,362,public Complex parse(String source) throws MathParseException {
False,src/main/java/org/apache/commons/math3/complex/ComplexUtils.java,src/main/java/org/apache/commons/math3/complex/ComplexUtils.java,62,"ublic static Complex polar2Complex(double r, double theta) {"
True,src/main/java/org/apache/commons/math3/complex/ComplexUtils.java,src/main/java/org/apache/commons/math3/complex/ComplexUtils.java,62,"public static Complex polar2Complex(double r, double theta) throws MathIllegalArgumentException {"
