is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,29,import java.util.TreeSet;
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,336,ist<Integer> columnsToDrop = new ArrayList<Integer>();
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,337,Set<Integer> columnsToDrop = new TreeSet<Integer>();
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,349,nt col = i + getArtificialVariableOffset();
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,350,f (getBasicRow(col) == null) {
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,351,olumnsToDrop.add(col);
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,350,int col = i + getArtificialVariableOffset();
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,351,if (getBasicRow(col) == null) {
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,352,columnsToDrop.add(col);
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,357,nt col = 0;
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,358,or (int j = 0; j < getWidth(); j++) {
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,359,f (!columnsToDrop.contains(j)) {
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,360,"atrix[i - 1][col++] = tableau.getEntry(i, j);"
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,358,int col = 0;
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,359,for (int j = 0; j < getWidth(); j++) {
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,360,if (!columnsToDrop.contains(j)) {
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,361,"matrix[i - 1][col++] = tableau.getEntry(i, j);"
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,365,or (int i = columnsToDrop.size() - 1; i >= 0; i--) {
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,366,olumnLabels.remove((int) columnsToDrop.get(i));
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,366,// remove the columns in reverse order so the indices are correct
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,367,Integer[] drop = columnsToDrop.toArray(new Integer[columnsToDrop.size()]);
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,368,for (int i = drop.length - 1; i >= 0; i--) {
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java,369,columnLabels.remove((int) drop[i]);
