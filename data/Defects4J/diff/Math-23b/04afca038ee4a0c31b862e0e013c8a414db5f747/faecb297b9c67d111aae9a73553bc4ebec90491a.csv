is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/ArgumentOutsideDomainExceptionTest.java,src/test/org/apache/commons/math/ArgumentOutsideDomainExceptionTest.java,34,"ssertEquals(Math.PI, ex.getArgument(), 0);"
True,src/test/org/apache/commons/math/ArgumentOutsideDomainExceptionTest.java,src/test/org/apache/commons/math/ArgumentOutsideDomainExceptionTest.java,34,"assertEquals(Math.PI, ex.getArgument()[0], 0);"
False,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,34,"ssertEquals(0.0, ex.getArgument(), 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,34,"assertEquals(0.0, ex.getArgument()[0], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,37,public void testConstructorArray(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,38,FunctionEvaluationException ex =
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,39,"new FunctionEvaluationException(new double[] { 0, 1, 2 });"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,40,assertNull(ex.getCause());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,41,assertNotNull(ex.getMessage());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,42,"assertTrue(ex.getMessage().indexOf(""0"") > 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,43,"assertEquals(0.0, ex.getArgument()[0], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,44,"assertEquals(1.0, ex.getArgument()[1], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,45,"assertEquals(2.0, ex.getArgument()[2], 0);"
False,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,38,"tring pattern = ""Evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,49,"String pattern = ""evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,62,public void testConstructorArrayPatternArguments(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,63,"String pattern = ""evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,64,Object[] arguments = { Double.valueOf(0.0) };
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,65,FunctionEvaluationException ex =
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,66,"new FunctionEvaluationException(new double[] { 0, 1, 2 }, pattern, arguments);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,67,assertNull(ex.getCause());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,68,"assertEquals(pattern, ex.getPattern());"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,69,"assertEquals(arguments.length, ex.getArguments().length);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,70,for (int i = 0; i < arguments.length; ++i) {
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,71,"assertEquals(arguments[i], ex.getArguments()[i]);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,73,assertFalse(pattern.equals(ex.getMessage()));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,74,assertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,75,"assertEquals(0.0, ex.getArgument()[0], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,76,"assertEquals(1.0, ex.getArgument()[1], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,77,"assertEquals(2.0, ex.getArgument()[2], 0);"
False,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,52,"tring pattern = ""Evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,81,"String pattern = ""evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,96,public void testConstructorArrayPatternArgumentsCause(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,97,"String pattern = ""evaluation failed for argument = {0}"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,98,Object[] arguments = { Double.valueOf(0.0) };
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,99,"String inMsg = ""inner message"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,100,Exception cause = new Exception(inMsg);
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,101,FunctionEvaluationException ex =
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,102,"new FunctionEvaluationException(cause, new double[] { 0, 1, 2 }, pattern, arguments);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,103,"assertEquals(cause, ex.getCause());"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,104,"assertEquals(pattern, ex.getPattern());"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,105,"assertEquals(arguments.length, ex.getArguments().length);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,106,for (int i = 0; i < arguments.length; ++i) {
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,107,"assertEquals(arguments[i], ex.getArguments()[i]);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,109,assertFalse(pattern.equals(ex.getMessage()));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,110,assertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,111,"assertEquals(0.0, ex.getArgument()[0], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,112,"assertEquals(1.0, ex.getArgument()[1], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,113,"assertEquals(2.0, ex.getArgument()[2], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,124,public void testConstructorArrayArgumentCause(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,125,"String inMsg = ""inner message"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,126,Exception cause = new Exception(inMsg);
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,127,FunctionEvaluationException ex =
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,128,"new FunctionEvaluationException(cause, new double[] { 0, 1, 2 });"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,129,"assertEquals(cause, ex.getCause());"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,130,assertTrue(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,131,"assertEquals(0.0, ex.getArgument()[0], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,132,"assertEquals(1.0, ex.getArgument()[1], 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,133,"assertEquals(2.0, ex.getArgument()[2], 0);"
