is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,173, @param maxIterations Maximum number of iterations.
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,174, @param delta &delta; parameter for the default stopping criterion.
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,173,* @param maxIterations the maximum number of iterations
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,174,* @param delta the &delta; parameter for the default stopping criterion
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,176, preconditioner should be checked.
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,176,* preconditioner should be checked
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,189, @param manager Custom iteration manager.
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,190, @param delta &delta; parameter for the default stopping criterion.
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,189,* @param manager the custom iteration manager
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,190,* @param delta the &delta; parameter for the default stopping criterion
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,192, preconditioner should be checked.
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,192,* preconditioner should be checked
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,205, @return {@code true} if the tests are to be performed.
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,205,* @return {@code true} if the tests are to be performed
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,214,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,215,"inal RealVector b, final RealVector x0)"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,214,"final RealLinearOperator minv, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,218,"heckParameters(a, m, b, x0);"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,217,"checkParameters(a, minv, b, x0);"
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,236,f (m == null) {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,235,if (minv == null) {
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,253,f (m != null) {
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,254, = m.solve(r);
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,252,if (minv != null) {
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,253,z = minv.operate(r);
False,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,261,"ontext.setValue(OPERATOR, m);"
True,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,src/main/java/org/apache/commons/math/linear/ConjugateGradient.java,260,"context.setValue(OPERATOR, minv);"
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,18,ackage org.apache.commons.math.linear;
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,22, This interface defines a {@link RealLinearOperator} which can be inverted.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,23, Preconditioners typically fall into this category.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,25, @version $Id$
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,26, @since 3.0
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,28,ublic abstract class InvertibleRealLinearOperator extends RealLinearOperator {
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,31, Computes the matrix-vector product of the inverse of this instance
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,32, with {@code b} and returns the result.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,34, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,35, @return the left-hand side vector.
False,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,src/main/java/org/apache/commons/math/linear/InvertibleRealLinearOperator.java,37,ublic abstract RealVector solve(final RealVector b);
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,42, @param maxIterations Maximum number of iterations.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,42,* @param maxIterations the maximum number of iterations
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,51, @param manager Custom iteration manager.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,52, @throws NullArgumentException if {@code manager} is {@code null}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,51,* @param manager the custom iteration manager
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,52,* @throws NullArgumentException if {@code manager} is {@code null}
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,66, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,67, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,68, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,69, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,70, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,66,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,67,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,68,* @param x0 the initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,69,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,70,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,72, dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,72,* dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,75,"inal RealVector b,"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,76,inal RealVector x0)
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,77,"hrows NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,75,"final RealVector b, final RealVector x0) throws"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,76,"NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,97, Returns the {@link IterationManager} attached to this solver.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,96,* Returns the iteration manager attached to this solver.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,99, @return the manager.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,98,* @return the manager
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,109, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,110, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,111, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,112, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,113, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,108,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,109,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,110,* @return a new vector containing the solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,111,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,112,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,115, inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,114,* inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,117, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,118, construction.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,116,* unless a custom
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,117,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,118,* has been set at construction
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,120,"ublic RealVector solve(RealLinearOperator a, RealVector b)"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,120,"public RealVector solve(final RealLinearOperator a, final RealVector b)"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,133, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,134, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,135, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,136, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,137, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,138, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,133,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,134,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,135,* @param x0 the initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,136,* @return a new vector containing the solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,137,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,138,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,140, dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,140,* dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,142, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,143, construction.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,142,* unless a custom
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,143,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,144,* has been set at construction
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,156, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,157, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,158, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,159, @return A reference to {@code x0} (shallow copy) updated with the
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,160, solution.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,161, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,162, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,157,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,158,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,159,* @param x0 initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,160,* @return a reference to {@code x0} (shallow copy) updated with the
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,161,* solution
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,162,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,163,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,164, dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,165,* dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,166, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,167, construction.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,167,* unless a custom
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,168,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,169,* has been set at construction
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,170,ealVector x0)
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,171,"hrows NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java,172,"RealVector x0) throws NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,49," actual right-hand side, in order not to compromise subsequent iterations"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,50, of the source {@link IterativeLinearSolver}.
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,49,"* actual right-hand side vector, in order not to compromise subsequent"
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,50,* iterations of the source {@link IterativeLinearSolver}.
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,52," @return The right-hand side vector, b."
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,52,"* @return the right-hand side vector, b"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,69, @return an estimate of the norm of the residual
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,69,"* @return the norm of the residual, ||r||"
False,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,79," @return The solution, x."
True,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,src/main/java/org/apache/commons/math/linear/IterativeLinearSolverEvent.java,79,"* @return the solution, x"
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,20, This class implements the standard Jacobi (diagonal) preconditioner.
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,20,* This class implements the standard Jacobi (diagonal) preconditioner. For a
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,21,"* matrix A<sub>ij</sub>, this preconditioner is"
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,22,"* M = diag(A<sub>11</sub>, A<sub>22</sub>, &hellip;)."
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,23,* {@link #create(RealLinearOperator)} returns the <em>inverse</em> of this
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,24,"* preconditioner,"
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,25,"* M<sup>-1</sup> = diag(1 / A<sub>11</sub>, 1 / A<sub>22</sub>, &hellip;)"
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,25,ublic class JacobiPreconditioner
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,26,xtends InvertibleRealLinearOperator {
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,30,public class JacobiPreconditioner extends RealLinearOperator {
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,34, @param diag Diagonal coefficients of the preconditioner.
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,38,* @param diag the diagonal coefficients of the linear operator to be
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,39,* preconditioned
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,36,        performed.
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,41,* performed
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,50, @param a Linear operator for which the preconditioner should be built.
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,51, @return Preconditioner made of the diagonal coefficients of the specified
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,52,         linear operator.
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,53, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,55,* @param a the linear operator for which the preconditioner should be built
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,56,* @return the inverse of the preconditioner made of the inverse of the
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,57,* diagonal coefficients of the specified linear operator
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,58,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,94,eturn x.ebeMultiply(diag);
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,97,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,98,Override
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,99,ublic RealVector solve(final RealVector b) {
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,100,/ Dimension check is carried out by ebeDivide
False,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,101,eturn b.ebeDivide(diag);
True,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java,99,return x.ebeDivide(diag);
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,26,* <p>
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,33,* </p>
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,34,* <p>
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,35,* Concrete implementations of this abstract class must be provided with
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,36,"* M<sup>-1</sup>, the inverse of the preconditioner, as a"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,37,* {@link RealLinearOperator}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,38,* </p>
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,42, @param maxIterations Maximum number of iterations.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,49,* @param maxIterations the maximum number of iterations
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,51, @param manager Custom iteration manager.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,52, @throws NullArgumentException if {@code manager} is {@code null}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,58,* @param manager the custom iteration manager
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,59,* @throws NullArgumentException if {@code manager} is {@code null}
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,63, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,64, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,65, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,66, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,67, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,68, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,69, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,70, square.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,71," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x0}"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,72, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,70,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,71,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,72,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,73,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,74,* @param x0 the initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,75,* @return a new vector containing the solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,76,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,77,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,78,* square
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,79,"* @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,80,* {@code x0} have dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,74, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,75, construction.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,82,* unless a custom
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,83,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,84,* has been set at construction
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,78,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,79,"inal RealVector b, final RealVector x0)"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,87,"final RealLinearOperator minv, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,83,"eturn solveInPlace(a, m, b, x0.copy());"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,91,"return solveInPlace(a, minv, b, x0.copy());"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,109," {@link #solve(RealLinearOperator, InvertibleRealLinearOperator, RealVector, RealVector) solve}"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,117,"* {@link #solve(RealLinearOperator, RealLinearOperator, RealVector, RealVector) solve}"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,111," {@link #solveInPlace(RealLinearOperator, InvertibleRealLinearOperator, RealVector, RealVector) solveInPlace}"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,112," , and throws an exception if one of the checks fails."
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,119,"* {@link #solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector) solveInPlace},"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,120,* and throws an exception if one of the checks fails.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,114, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,115, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,116, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,117, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,118, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,119, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,120, square.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,121," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x0}"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,122, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,122,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,123,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,124,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,125,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,126,* @param x0 the initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,127,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,128,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,129,* square
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,130,"* @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,131,* {@code x0} have dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,125,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,126,"inal RealVector b,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,127,inal RealVector x0)
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,134,"final RealLinearOperator minv, final RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,131,f (m != null) {
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,132,f (m.getColumnDimension() != m.getRowDimension()) {
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,133,"hrow new NonSquareOperatorException(m.getColumnDimension(),"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,134,.getRowDimension());
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,138,if (minv != null) {
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,139,if (minv.getColumnDimension() != minv.getRowDimension()) {
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,140,"throw new NonSquareOperatorException(minv.getColumnDimension(),"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,141,minv.getRowDimension());
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,136,f (m.getRowDimension() != a.getRowDimension()) {
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,137,"hrow new DimensionMismatchException(m.getRowDimension(),"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,143,if (minv.getRowDimension() != a.getRowDimension()) {
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,144,"throw new DimensionMismatchException(minv.getRowDimension(),"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,147, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,148, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,149, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,150, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,151, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,152, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,153, square.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,154, @throws DimensionMismatchException if {@code m} or {@code b} have
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,155, dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,154,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,155,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,156,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,157,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,158,* @return a new vector containing the solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,159,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,160,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,161,* square
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,162,* @throws DimensionMismatchException if {@code minv} or {@code b} have
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,163,* dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,157, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,158, construction.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,165,* unless a custom
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,166,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,167,* has been set at construction
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,160,"ublic RealVector solve(RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,161,"nvertibleRealLinearOperator m, RealVector b)"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,162,"hrows NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,169,"public RealVector solve(RealLinearOperator a, RealLinearOperator minv,"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,170,"RealVector b) throws NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,166,"eturn solveInPlace(a, m, b, x);"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,174,"return solveInPlace(a, minv, b, x);"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,173, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,174, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,175, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,176, @param x0 Initial guess of the solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,177, @return A reference to {@code x0} (shallow copy) updated with the
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,178, solution.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,179, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,180, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,181, square.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,182," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x0}"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,183, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,181,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,182,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,183,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,184,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,185,* @param x0 the initial guess of the solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,186,* @return a reference to {@code x0} (shallow copy) updated with the
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,187,* solution
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,188,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,189,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,190,* square
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,191,"* @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,192,* {@code x0} have dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,185, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,186, construction.
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,194,* unless a custom
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,195,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,196,* has been set at construction.
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,189,"nvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,190,"ealVector b, RealVector x0)"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,191,"hrows NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,199,"RealLinearOperator minv, RealVector b, RealVector x0) throws"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,200,"NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,197,"inal RealVector b, final RealVector x0)"
False,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,198,"hrows NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,206,"final RealVector b, final RealVector x0) throws"
True,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java,207,"NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/ProvidesResidual.java,src/main/java/org/apache/commons/math/linear/ProvidesResidual.java,33, @return the current value of the residual.
True,src/main/java/org/apache/commons/math/linear/ProvidesResidual.java,src/main/java/org/apache/commons/math/linear/ProvidesResidual.java,33,* @return the current value of the residual
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,57, @return the number of rows of the underlying matrix.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,57,* @return the number of rows of the underlying matrix
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,64, @return the number of columns of the underlying matrix.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,64,* @return the number of columns of the underlying matrix
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,71, @param x Vector to operate on.
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,72, @return the product of {@code this} instance with {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,71,* @param x the vector to operate on
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,72,* @return the product of {@code this} instance with {@code x}
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,74, if the column dimension does not match the size of {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,74,* if the column dimension does not match the size of {@code x}
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,84, @param x Vector to operate on.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,84,* @param x the vector to operate on
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,86, {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,86,* {@code x}
False,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,88, if the row dimension does not match the size of {@code x}.
True,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,src/main/java/org/apache/commons/math/linear/RealLinearOperator.java,88,* if the row dimension does not match the size of {@code x}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,92," <li>{@link #solve(RealLinearOperator, InvertibleRealLinearOperator, RealVector, RealVector)}},</li>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,92,"* <li>{@link #solve(RealLinearOperator, RealLinearOperator, RealVector, RealVector)}},</li>"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,94," <li>{@link #solveInPlace(RealLinearOperator, InvertibleRealLinearOperator, RealVector, RealVector)},</li>"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,95," <li>{@link #solveInPlace(RealLinearOperator, InvertibleRealLinearOperator, RealVector, RealVector, boolean, double)},</li>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,94,"* <li>{@link #solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector)},</li>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,95,"* <li>{@link #solveInPlace(RealLinearOperator, RealLinearOperator, RealVector, RealVector, boolean, double)},</li>"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,275,** Reference to the preconditioner. */
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,276,rivate final InvertibleRealLinearOperator m;
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,275,"/** Reference to the inverse of the preconditioner, M<sup>-1</sup>. */"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,276,private final RealLinearOperator minv;
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,285,rivate final RealVector mSolveB;
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,285,private final RealVector minvb;
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,331, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,332, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,333, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,334, @param x Vector to be updated with the solution. {@code x} should not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,335," be considered as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,336," @param goodb Usually {@code false}, except if {@code x} is expected"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,337, to contain a large multiple of {@code b}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,338, @param shift The amount to be subtracted to all diagonal elements of
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,339, A.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,331,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,332,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,333,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,334,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,335,* @param x the vector to be updated with the solution; {@code x} should
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,336,"* not be considered as an initial guess (<a href=""#initguess"">more</a>)"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,337,"* @param goodb usually {@code false}, except if {@code x} is expected"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,338,* to contain a large multiple of {@code b}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,339,* @param shift the amount to be subtracted to all diagonal elements of
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,340,* A
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,341,"ublic State(final RealLinearOperator a,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,342,"inal InvertibleRealLinearOperator m, final RealVector b,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,343,"inal RealVector x, final boolean goodb, final double shift) {"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,342,"public State(final RealLinearOperator a, final RealLinearOperator minv,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,343,"final RealVector b, final RealVector x, final boolean goodb,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,344,final double shift) {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,345,his.m = m;
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,346,this.minv = minv;
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,350,his.mSolveB = m == null ? b : m.solve(b);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,351,this.minvb = minv == null ? b : minv.operate(b);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,360, @param xRefined Vector to be updated with the refined value of x.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,361,* @param xRefined the vector to be updated with the refined value of x
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,370,inal double bi = mSolveB.getEntry(i);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,371,final double bi = minvb.getEntry(i);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,391,inal double bi = mSolveB.getEntry(i);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,392,final double bi = minvb.getEntry(i);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,410,his.y = this.m == null ? this.b.copy() : this.m.solve(this.r1);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,411,f ((this.m != null) && check) {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,412,"heckSymmetry(this.m, this.r1, this.y, this.m.solve(this.y));"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,411,this.y = this.minv == null ? this.b.copy() : this.minv.operate(this.r1);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,412,if ((this.minv != null) && check) {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,413,"checkSymmetry(this.minv, this.r1, this.y, this.minv.operate(this.y));"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,417,"hrowNPDLOException(this.m, this.y);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,418,"throwNPDLOException(this.minv, this.y);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,451,f (this.m != null) {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,452,his.y = this.m.solve(this.r2);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,452,if (this.minv != null) {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,453,this.y = this.minv.operate(this.r2);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,457,"hrowNPDLOException(this.m, this.y);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,458,"throwNPDLOException(this.minv, this.y);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,525,f (m != null) {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,526, = m.solve(r2);
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,526,if (minv != null) {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,527,y = minv.operate(r2);
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,531,"hrowNPDLOException(m, y);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,532,"throwNPDLOException(minv, y);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,744, stopping criterion</a>.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,745,* stopping criterion</a>. Note that setting {@code check} to {@code true}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,746,* entails an extra matrix-vector product in the initial phase.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,746, @param maxIterations Maximum number of iterations.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,747, @param delta &delta; parameter for the default stopping criterion.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,748,* @param maxIterations the maximum number of iterations
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,749,* @param delta the &delta; parameter for the default stopping criterion
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,749, preconditioner should be checked. This entails an extra matrix-vector
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,750, product in the initial phase.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,751,* preconditioner should be checked
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,761, stopping criterion</a> and custom iteration manager.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,762,* stopping criterion</a> and custom iteration manager. Note that setting
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,763,* {@code check} to {@code true} entails an extra matrix-vector product in
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,764,* the initial phase.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,763, @param manager Custom iteration manager.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,764, @param delta &delta; parameter for the default stopping criterion.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,766,* @param manager the custom iteration manager
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,767,* @param delta the &delta; parameter for the default stopping criterion
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,766, preconditioner should be checked. This entails an extra matrix-vector
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,767, product in the initial phase.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,769,* preconditioner should be checked
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,784," vector x, this method checks that x' L y = y' L x (within a given"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,785," accuracy), where y = L x."
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,786,"* vector x, this method checks that"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,787,* x' &middot; L &middot; y = y' &middot; L &middot; x
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,788,"* (within a given accuracy), where y = L &middot; x."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,787, @param l The linear operator L.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,788, @param x The candidate vector x.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,789, @param y The candidate vector y = L x.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,790, @param z The vector z = L y.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,791, @throws NonSelfAdjointOperatorException when the test fails.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,790,* @param l the linear operator L
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,791,* @param x the candidate vector x
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,792,* @param y the candidate vector y = L &middot; x
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,793,* @param z the vector z = L &middot; y
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,794,* @throws NonSelfAdjointOperatorException when the test fails
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,794,"inal RealVector x, final RealVector y,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,795,inal RealVector z)
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,797,"final RealVector x, final RealVector y, final RealVector z)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,817, @param a The scalar by which {@code x} is to be multiplied.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,818, @param x The first vector to be added to {@code z}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,819, @param b The scalar by which {@code y} is to be multiplied.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,820, @param y The second vector to be added to {@code z}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,821, @param z The vector to be incremented.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,819,* @param a the scalar by which {@code x} is to be multiplied
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,820,* @param x the first vector to be added to {@code z}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,821,* @param b the scalar by which {@code y} is to be multiplied
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,822,* @param y the second vector to be added to {@code z}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,823,* @param z the vector to be incremented
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,824,"inal double b, final RealVector y,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,825,inal RealVector z) {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,826,"final double b, final RealVector y, final RealVector z) {"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,839, @param a The scalar by which {@code x} is to be multiplied.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,840, @param x The vector to be added to {@code y}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,841, @param y The vector to be incremented.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,840,* @param a the scalar by which {@code x} is to be multiplied
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,841,* @param x the vector to be added to {@code y}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,842,* @param y the vector to be incremented
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,844,inal RealVector y) {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,845,final RealVector y) {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,855, @param l The offending linear operator.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,856, @param v The offending vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,857, @throws NonPositiveDefiniteOperatorException in any circumstances.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,856,* @param l the offending linear operator
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,857,* @param v the offending vector
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,858,* @throws NonPositiveDefiniteOperatorException in any circumstances
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,860,inal RealVector v)
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,861,hrows NonPositiveDefiniteOperatorException {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,861,final RealVector v) throws NonPositiveDefiniteOperatorException {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,874, @return {@code true} if the tests are to be performed.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,874,* @return {@code true} if the tests are to be performed
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,881, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,882, b.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,881,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,884, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,885, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,886, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,887, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,888, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,889, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,890, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,891," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,892, have dimensions inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,894," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,895, @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,896, definite.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,897, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,898," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,899, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,900, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,884,"* {@code true}, and {@code a} or {@code minv} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,885,* @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,886,* positive definite
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,887,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,904,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,905,inal RealVector b)
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,906,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,907,"imensionMismatchException, NonSelfAdjointOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,908,"onPositiveDefiniteOperatorException, IllConditionedOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,909,axCountExceededException {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,891,"final RealLinearOperator minv, final RealVector b) throws"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,892,"NullArgumentException, NonSquareOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,893,"DimensionMismatchException, MaxCountExceededException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,894,"NonSelfAdjointOperatorException, NonPositiveDefiniteOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,895,IllConditionedOperatorException {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,912,"eturn solveInPlace(a, m, b, x, false, 0.);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,898,"return solveInPlace(a, minv, b, x, false, 0.);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,934, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,935, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,936, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,937," @param goodb Usually {@code false}, except if {@code x} is expected to"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,938, contain a large multiple of {@code b}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,939, @param shift The amount to be subtracted to all diagonal elements of A.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,940, @return A reference to {@code x} (shallow copy).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,941, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,942, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,943, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,944, @throws DimensionMismatchException if {@code m} or {@code b} have
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,945, dimensions inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,946, @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,947," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,948, @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,949, definite.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,950, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,920,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,921,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,922,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,923,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,924,"* @param goodb usually {@code false}, except if {@code x} is expected to"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,925,* contain a large multiple of {@code b}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,926,* @param shift the amount to be subtracted to all diagonal elements of A
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,927,* @return a reference to {@code x} (shallow copy)
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,928,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,929,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,930,* square
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,931,* @throws DimensionMismatchException if {@code minv} or {@code b} have
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,932,* dimensions inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,952, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,953, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,934,* unless a custom
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,935,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,936,* has been set at construction
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,937,* @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,938,"* {@code true}, and {@code a} or {@code minv} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,939,* @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,940,* positive definite
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,941,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,956,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,957,"inal RealVector b, final boolean goodb,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,958,inal double shift)
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,959,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,960,"imensionMismatchException, NonSelfAdjointOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,961,"onPositiveDefiniteOperatorException, IllConditionedOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,962,axCountExceededException {
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,944,"final RealLinearOperator minv, final RealVector b, final boolean goodb,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,945,"final double shift) throws NullArgumentException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,946,"NonSquareOperatorException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,947,"MaxCountExceededException, NonSelfAdjointOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,948,"NonPositiveDefiniteOperatorException, IllConditionedOperatorException {"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,965,"eturn solveInPlace(a, m, b, x, goodb, shift);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,951,"return solveInPlace(a, minv, b, x, goodb, shift);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,969, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,970, b.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,955,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,972, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,973, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,974, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,975, @param x Not meaningful in this implementation. Should not be considered
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,976," as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,977, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,978, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,979, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,980, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,981," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,982, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,957,* @param x not meaningful in this implementation; should not be considered
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,958,"* as an initial guess (<a href=""#initguess"">more</a>)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,984," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,985, @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,986, definite.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,987, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,988," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,989, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,990, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,960,"* {@code true}, and {@code a} or {@code minv} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,961,* @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,962,* positive definite
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,963,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,994,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,995,"inal RealVector b, final RealVector x)"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,967,"final RealLinearOperator minv, final RealVector b, final RealVector x)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1001,"eturn solveInPlace(a, m, b, x.copy(), false, 0.);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,973,"return solveInPlace(a, minv, b, x.copy(), false, 0.);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1005, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1006, b.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,977,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1008, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1009, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1010, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1011, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1012, @throws NonSquareOperatorException if {@code a} is not square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1013, @throws DimensionMismatchException if {@code b} has dimensions
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1014, inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1016," {@code true}, and {@code a} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1017, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1018," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1019, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1020, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,980,"* {@code true}, and {@code a} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,981,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1050, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1051, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1052," @param goodb Usually {@code false}, except if {@code x} is expected to"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1053, contain a large multiple of {@code b}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1054, @param shift The amount to be subtracted to all diagonal elements of A.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1055, @return a reference to {@code x}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1056, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1057, @throws NonSquareOperatorException if {@code a} is not square.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1011,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1012,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1013,"* @param goodb usually {@code false}, except if {@code x} is expected to"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1014,* contain a large multiple of {@code b}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1015,* @param shift the amount to be subtracted to all diagonal elements of A
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1016,* @return a reference to {@code x}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1017,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1018,* @throws NonSquareOperatorException if {@code a} is not square
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1059, inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1060, @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1061," {@code true}, and {@code a} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1062, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1020,* inconsistent with {@code a}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1064, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1065, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1022,* unless a custom
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1023,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1024,* has been set at construction
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1025,* @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1026,"* {@code true}, and {@code a} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1027,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1068,"inal boolean goodb, final double shift)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1069,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1070,"imensionMismatchException, NonSelfAdjointOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1071,"llConditionedOperatorException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1030,"final boolean goodb, final double shift) throws NullArgumentException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1031,"NonSquareOperatorException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1032,"NonSelfAdjointOperatorException, IllConditionedOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1033,MaxCountExceededException {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1078, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1079, b.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1040,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1081, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1082, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1083, @param x Not meaningful in this implementation. Should not be considered
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1084," as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1085, @return A new vector containing the solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1086, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1087, @throws NonSquareOperatorException if {@code a} is not square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1088, @throws DimensionMismatchException if {@code b} or {@code x} have
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1089, dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1042,* @param x not meaningful in this implementation; should not be considered
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1043,"* as an initial guess (<a href=""#initguess"">more</a>)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1091," {@code true}, and {@code a} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1092, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1093," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1094, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1095, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1045,"* {@code true}, and {@code a} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1046,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1099,inal RealVector x)
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1100,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1101,"imensionMismatchException, NonSelfAdjointOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1102,"llConditionedOperatorException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1050,"final RealVector x) throws NullArgumentException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1051,"NonSquareOperatorException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1052,"NonSelfAdjointOperatorException, IllConditionedOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1053,MaxCountExceededException {
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1108, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1109, b. The solution is computed in-place.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1059,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1111, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1112, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1113, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1114, @param x Vector to be updated with the solution. {@code x} should not be
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1115," considered as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1116, @return A reference to {@code x} (shallow copy) updated with the
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1117, solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1118, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1119, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1120, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1121," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1122, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1061,* @param x the vector to be updated with the solution; {@code x} should
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1062,"* not be considered as an initial guess (<a href=""#initguess"">more</a>)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1124," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1125, @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1126, definite.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1127, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1128," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1129, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1130, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1064,"* {@code true}, and {@code a} or {@code minv} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1065,* @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1066,* positive definite
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1067,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1134,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1135,"inal RealVector b, final RealVector x)"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1071,"final RealLinearOperator minv, final RealVector b, final RealVector x)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1140,"eturn solveInPlace(a, m, b, x, false, 0.);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1076,"return solveInPlace(a, minv, b, x, false, 0.);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1162, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1163, @param m Preconditioner (can be {@code null}).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1164, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1165, @param x Vector to be updated with the solution. {@code x} should not be
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1166," considered as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1167," @param goodb Usually {@code false}, except if {@code x} is expected to"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1168, contain a large multiple of {@code b}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1169, @param shift The amount to be subtracted to all diagonal elements of A.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1170, @return A reference to {@code x} (shallow copy).
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1171, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1172, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1173, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1174," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1175, have dimensions inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1176, @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1177," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1178, @throws NonPositiveDefiniteOperatorException if {@code m} is not positive
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1179, definite.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1180, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1098,* @param a the linear operator A of the system
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1099,"* @param minv the inverse of the preconditioner, M<sup>-1</sup>"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1100,* (can be {@code null})
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1101,* @param b the right-hand side vector
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1102,* @param x the vector to be updated with the solution; {@code x} should
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1103,"* not be considered as an initial guess (<a href=""#initguess"">more</a>)"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1104,"* @param goodb usually {@code false}, except if {@code x} is expected to"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1105,* contain a large multiple of {@code b}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1106,* @param shift the amount to be subtracted to all diagonal elements of A
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1107,* @return a reference to {@code x} (shallow copy).
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1108,* @throws NullArgumentException if one of the parameters is {@code null}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1109,* @throws NonSquareOperatorException if {@code a} or {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1110,* square
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1111,"* @throws DimensionMismatchException if {@code minv}, {@code b} or"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1112,* {@code x} have dimensions inconsistent with {@code a}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1182, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1183, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1114,* unless a custom
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1115,* {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback}
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1116,* has been set at construction
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1117,* @throws NonSelfAdjointOperatorException if {@link #getCheck()} is
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1118,"* {@code true}, and {@code a} or {@code minv} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1119,* @throws NonPositiveDefiniteOperatorException if {@code minv} is not
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1120,* positive definite
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1121,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1186,"inal InvertibleRealLinearOperator m,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1187,"inal RealVector b, final RealVector x,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1188,"inal boolean goodb, final double shift)"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1124,"final RealLinearOperator minv, final RealVector b,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1125,"final RealVector x, final boolean goodb, final double shift)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1193,"heckParameters(a, m, b, x);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1130,"checkParameters(a, minv, b, x);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1200,"inal State state = new State(a, m, b, x, goodb, shift);"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1137,"final State state = new State(a, minv, b, x, goodb, shift);"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1232, Returns an estimate of the solution to the linear system A &middot; x =
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1233, b. The solution is computed in-place.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1169,* {@inheritDoc}
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1235, @param a Linear operator A of the system.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1236, @param b Right-hand side vector.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1237, @param x Vector to be updated with the solution. {@code x} should not be
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1238," considered as an initial guess (<a href=""#initguess"">more</a>)."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1239, @return A reference to {@code x} (shallow copy) updated with the
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1240, solution.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1241, @throws NullArgumentException if one of the parameters is {@code null}.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1242, @throws NonSquareOperatorException if {@code a} or {@code m} is not
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1243, square.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1244," @throws DimensionMismatchException if {@code m}, {@code b} or {@code x}"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1245, have dimensions inconsistent with {@code a}.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1171,* @param x the vector to be updated with the solution; {@code x} should
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1172,"* not be considered as an initial guess (<a href=""#initguess"">more</a>)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1247," {@code true}, and {@code a} or {@code m} is not self-adjoint."
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1248, @throws IllConditionedOperatorException if {@code a} is ill-conditioned.
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1249," @throws MaxCountExceededException at exhaustion of the iteration count,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1250, unless a custom {@link org.apache.commons.math.util.Incrementor.MaxCountExceededCallback callback} has been set at
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1251, construction.
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1174,"* {@code true}, and {@code a} is not self-adjoint"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1175,* @throws IllConditionedOperatorException if {@code a} is ill-conditioned
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1255,"inal RealVector b, final RealVector x)"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1256,"hrows NullArgumentException, NonSquareOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1257,"imensionMismatchException, NonSelfAdjointOperatorException,"
False,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1258,"llConditionedOperatorException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1179,"final RealVector b, final RealVector x) throws NullArgumentException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1180,"NonSquareOperatorException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1181,"NonSelfAdjointOperatorException, IllConditionedOperatorException,"
True,src/main/java/org/apache/commons/math/linear/SymmLQ.java,src/main/java/org/apache/commons/math/linear/SymmLQ.java,1182,MaxCountExceededException {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,219,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,220, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,219,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,237,Override
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,238,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,239,hrow new UnsupportedOperationException();
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,251,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,252, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,245,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,269,Override
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,270,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,271,hrow new UnsupportedOperationException();
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,287,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,288, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,275,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,308,Override
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,309,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,310,inal ArrayRealVector x = new ArrayRealVector(2);
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,311,".setEntry(0, -b.getEntry(0));"
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,312,".setEntry(1, b.getEntry(1));"
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,313,eturn x;
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,330,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,309,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,353,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,332,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,425,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,404,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,553,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java,532,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,59,inal InvertibleRealLinearOperator m;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,59,final RealLinearOperator minv;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,61, = new InvertibleRealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,63,Override
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,64,ublic RealVector operate(final RealVector x) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,65,f (x.getDimension() != n) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,66,"hrow new DimensionMismatchException(x.getDimension(),"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,67,);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,69,inal double[] y = new double[n];
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,70,or (int i = 0; i < n; i++) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,71,ouble d = (i + 1) * 1.1 / n;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,72, = FastMath.abs(d - shiftm);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,73,f (i % 10 == 0) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,74, += pertm;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,76,[i] = d * x.getEntry(i);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,78,"eturn new ArrayRealVector(y, false);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,61,minv = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,92,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,93,f (b.getDimension() != n) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,94,"hrow new DimensionMismatchException(b.getDimension(),"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,73,public RealVector operate(final RealVector x) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,74,if (x.getDimension() != n) {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,75,"throw new DimensionMismatchException(x.getDimension(),"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,97,inal double[] x = new double[n];
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,78,final double[] y = new double[n];
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,104,[i] = b.getEntry(i) / d;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,85,y[i] = x.getEntry(i) / d;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,106,"eturn new ArrayRealVector(x, false);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,87,"return new ArrayRealVector(y, false);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,110, = null;
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,91,minv = null;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,119,"inal RealVector x = solver.solve(a, m, b, goodb, shift);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,100,"final RealVector x = solver.solve(a, minv, b, goodb, shift);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,130,"ssert.assertTrue(""enorm="""
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,131, enorm
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,133, solver.getIterationManager()
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,134,"getIterations(),"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,135,norm <= etol);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,111,"Assert.assertTrue(""enorm="" + enorm + "", "" +"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,112,"solver.getIterationManager().getIterations(), enorm <= etol);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,346,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,347, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,323,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,364,Override
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,365,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,366,hrow new UnsupportedOperationException();
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,378,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,379, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,349,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,396,Override
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,397,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,398,hrow new UnsupportedOperationException();
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,414,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,415, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,379,final RealLinearOperator m = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,435,Override
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,436,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,437,inal ArrayRealVector x = new ArrayRealVector(2);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,438,".setEntry(0, -b.getEntry(0));"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,439,".setEntry(1, -b.getEntry(1));"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,440,eturn x;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,457,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,413,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,493,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,449,final RealLinearOperator m = JacobiPreconditioner.create(a);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,507,inal int npcg = prec.getIterationManager().getIterations();
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,508,inal int ncg = unprec.getIterationManager().getIterations();
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,509,"sg = String.format(pattern, npcg, ncg);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,510,"ssert.assertTrue(msg, npcg < ncg);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,463,final int np = prec.getIterationManager().getIterations();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,464,final int nup = unprec.getIterationManager().getIterations();
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,465,"msg = String.format(pattern, np, nup);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,466,"System.out.println(np + "", "" + nup);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,599,inal InvertibleRealLinearOperator m;
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,600, = new InvertibleRealLinearOperator() {
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,555,final RealLinearOperator minv = new RealLinearOperator() {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,604,eturn mMat.operate(x);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,559,return mSolver.solve(x);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,617,Override
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,618,ublic RealVector solve(final RealVector b) {
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,619,eturn mSolver.solve(b);
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,625,"ew SymmLQ(100, 1., true).solve(a, m, b);"
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,575,"new SymmLQ(100, 1., true).solve(a, minv, b);"
False,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,679,inal InvertibleRealLinearOperator m = JacobiPreconditioner.create(a);
True,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,src/test/java/org/apache/commons/math/linear/SymmLQTest.java,629,final RealLinearOperator m = JacobiPreconditioner.create(a);
