is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,2,* Copyright 2003-2004 The Apache Software Foundation.
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,16,package org.apache.commons.math.stat.univariate;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,18,import java.lang.reflect.InvocationTargetException;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,19,import java.util.List;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,21,import org.apache.commons.beanutils.PropertyUtils;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,22,import org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,23,import org.apache.commons.math.util.NumberTransformer;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,26,* This implementation of DescriptiveStatistics uses commons-beanutils to gather
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,27,* univariate statistics for a List of Java Beans by property.  This
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,28,"* implementation uses beanutils' PropertyUtils to get a simple, nested,"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,29,"* indexed, mapped, or combined property from an element of a List."
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,30,* @version $Revision: 1.1 $ $Date: 2004/04/20 21:01:35 $
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,32,public class BeanListUnivariateImpl extends ListUnivariateImpl {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,35,* propertyName of the property to get from the bean
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,37,private String propertyName;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,40,* Construct a BeanListUnivariate with specified
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,41,* backing list
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,42,* @param list Backing List
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,44,public BeanListUnivariateImpl(List list) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,45,"this(list, null);"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,49,* Construct a BeanListUnivariate with specified
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,50,* backing list and propertyName
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,51,* @param list Backing List
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,52,* @param propertyName Bean propertyName
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,54,"public BeanListUnivariateImpl(List list, String propertyName) {"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,55,super(list);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,56,setPropertyName(propertyName);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,60,* @return propertyName
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,62,public String getPropertyName() {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,63,return propertyName;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,67,* @param propertyName Name of Property
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,69,public void setPropertyName(String propertyName) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,70,this.propertyName = propertyName;
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,71,this.transformer = new NumberTransformer() {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,74,* @see org.apache.commons.math.util.NumberTransformer#transform(java.lang.Object)
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,76,public double transform(final Object o) throws MathException {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,77,try {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,78,return (
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,79,(Number) PropertyUtils.getProperty(
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,80,"o,"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,81,getPropertyName()))
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,82,.doubleValue();
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,83,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,84,throw new MathException(
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,85,"""IllegalAccessException in Transformation: """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,86,"+ e.getMessage(),"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,87,e);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,88,} catch (InvocationTargetException e) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,89,throw new MathException(
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,90,"""InvocationTargetException in Transformation: """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,91,"+ e.getMessage(),"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,92,e);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,93,} catch (NoSuchMethodException e) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,94,throw new MathException(
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,95,"""oSuchMethodException in Transformation: """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,96,"+ e.getMessage(),"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,97,e);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,104,* @see org.apache.commons.math.stat.Univariate#addValue(double)
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,106,public void addValue(double v) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,107,String msg =
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,108,"""The BeanListUnivariateImpl does not accept values """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,109,"+ ""through the addValue method.  Because elements of this list """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,110,"+ ""are JavaBeans, one must be sure to set the 'propertyName' """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,111,"+ ""property and add new Beans to the underlying list via the """
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,112,"+ ""addBean(Object bean) method"";"
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,113,throw new UnsupportedOperationException(msg);
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,117,* Adds a bean to this list.
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,119,* @param bean Bean to add to the list
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,121,public void addObject(Object bean) {
True,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,122,list.add(bean);
