is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,20,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,61, @throws IllegalArgumentException  if r is negative
True,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,61,* @throws MathIllegalArgumentException  if r is negative
False,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,66,hrow MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,src/main/java/org/apache/commons/math/complex/ComplexUtils.java,66,throw new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,20,mport org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,20,import org.apache.commons.math.exception.MathIllegalStateException;
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,30,xtends MathException {
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/CardanEulerSingularityException.java,30,extends MathIllegalStateException {
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,20,mport org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,32,xtends MathException {
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/NotARotationMatrixException.java,32,extends MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,22,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,22,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,171, @exception ArithmeticException if the axis norm is zero
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,171,* @exception MathIllegalArgumentException if the axis norm is zero
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,177,hrow MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS);
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,177,throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_AXIS);
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,311, @exception IllegalArgumentException if the norm of one of the vectors is zero
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,311,* @exception MathIllegalArgumentException if the norm of one of the vectors is zero
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,321,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,321,throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,404, @exception IllegalArgumentException if the norm of one of the vectors is zero
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,404,* @exception MathIllegalArgumentException if the norm of one of the vectors is zero
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,410,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java,410,throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR);
True,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,20,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,65, catch (ArithmeticException e) {
True,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java,66,} catch (MathIllegalArgumentException e) {
