is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,64,"ublic static int addAndCheck(int x, int y) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,64,"public static int addAndCheck(int x, int y)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,65,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,82,"ublic static long addAndCheck(long a, long b) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,83,"public static long addAndCheck(long a, long b) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,112,"ublic static long binomialCoefficient(final int n, final int k) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,113,"public static long binomialCoefficient(final int n, final int k)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,114,"throws NotPositiveException, NumberIsTooLargeException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,191,* @throws MathArithmeticException if the result is too large to be
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,192,* represented by a long integer.
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,190,"ublic static double binomialCoefficientDouble(final int n, final int k) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,194,"public static double binomialCoefficientDouble(final int n, final int k)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,195,"throws NotPositiveException, NumberIsTooLargeException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,236,* @throws MathArithmeticException if the result is too large to be
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,237,* represented by a long integer.
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,232,"ublic static double binomialCoefficientLog(final int n, final int k) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,239,"public static double binomialCoefficientLog(final int n, final int k)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,240,"throws NotPositiveException, NumberIsTooLargeException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,303,ublic static long factorial(final int n) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,311,"public static long factorial(final int n) throws NotPositiveException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,327,ublic static double factorialDouble(final int n) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,335,"public static double factorialDouble(final int n) throws NotPositiveException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,333,eturn factorial(n);
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,341,return FACTORIALS[n];
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,345,ublic static double factorialLog(final int n) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,353,public static double factorialLog(final int n) throws NotPositiveException {
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,351,eturn FastMath.log(factorial(n));
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,359,return FastMath.log(FACTORIALS[n]);
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,532,"ublic static long gcd(final long p, final long q) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,540,"public static long gcd(final long p, final long q) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,612,"ublic static int lcm(int a, int b) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,620,"public static int lcm(int a, int b) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,646,"ublic static long lcm(long a, long b) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,654,"public static long lcm(long a, long b) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,668,"ublic static int mulAndCheck(int x, int y) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,676,"public static int mulAndCheck(int x, int y) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,686,"ublic static long mulAndCheck(long a, long b) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,694,"public static long mulAndCheck(long a, long b) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,740,"ublic static int subAndCheck(int x, int y) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,748,"public static int subAndCheck(int x, int y) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,758,"ublic static long subAndCheck(long a, long b) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,766,"public static long subAndCheck(long a, long b) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,781,"ublic static int pow(final int k, int e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,789,"public static int pow(final int k, int e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,807,"ublic static int pow(final int k, long e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,815,"public static int pow(final int k, long e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,833,"ublic static long pow(final long k, int e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,841,"public static long pow(final long k, int e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,859,"ublic static long pow(final long k, long e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,867,"public static long pow(final long k, long e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,885,"ublic static BigInteger pow(final BigInteger k, int e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,893,"public static BigInteger pow(final BigInteger k, int e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,901,"ublic static BigInteger pow(final BigInteger k, long e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,909,"public static BigInteger pow(final BigInteger k, long e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,928,"ublic static BigInteger pow(final BigInteger k, BigInteger e) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,936,"public static BigInteger pow(final BigInteger k, BigInteger e) throws NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,1042,"rivate static long addAndCheck(long a, long b, Localizable pattern) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,1050,"private static long addAndCheck(long a, long b, Localizable pattern) throws MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,1085,"rivate static void checkBinomial(final int n, final int k) {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,1093,"private static void checkBinomial(final int n, final int k) throws NumberIsTooLargeException, NotPositiveException {"
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,251,ublic BigReal divide(BigReal a) {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,251,public BigReal divide(BigReal a) throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,265,ublic BigReal reciprocal() {
True,src/main/java/org/apache/commons/math3/util/BigReal.java,src/main/java/org/apache/commons/math3/util/BigReal.java,265,public BigReal reciprocal() throws MathArithmeticException {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,20,import org.apache.commons.math3.exception.MathInternalError;
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,72,ublic double evaluate(double x) {
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,73,"eturn evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,73,public double evaluate(double x) throws ConvergenceException {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,74,try {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,75,"return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,76,} catch (MaxCountExceededException e) {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,77,// this should never happen as integers never exceed MAX_VALUE
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,78,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,83,"ublic double evaluate(double x, double epsilon) {"
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,84,"eturn evaluate(x, epsilon, Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,89,"public double evaluate(double x, double epsilon) throws ConvergenceException {"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,90,try {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,91,"return evaluate(x, epsilon, Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,92,} catch (MaxCountExceededException e) {
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,93,// this should never happen as integers never exceed MAX_VALUE
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,94,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,104,* @throws MaxCountExceededException if maximal number of iterations is reached
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,94,"ublic double evaluate(double x, int maxIterations) {"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,106,"public double evaluate(double x, int maxIterations)"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,107,"throws ConvergenceException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,135,* @throws MaxCountExceededException if maximal number of iterations is reached
False,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,123,"ublic double evaluate(double x, double epsilon, int maxIterations) {"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,137,"public double evaluate(double x, double epsilon, int maxIterations)"
True,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,src/main/java/org/apache/commons/math3/util/ContinuedFraction.java,138,"throws ConvergenceException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,212,"eturn checkOrder(val, dir, strict, false);"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,212,try {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,213,"return checkOrder(val, dir, strict, false);"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,214,} catch (NonMonotonicSequenceException e) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,215,// this should never happen as abort is set to false
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,216,throw new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,227,"oolean strict, boolean abort) {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,232,"boolean strict, boolean abort)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,233,throws NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,288,oolean strict) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,294,boolean strict) throws NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,299,ublic static void checkOrder(double[] val) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,305,public static void checkOrder(double[] val) throws NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,434,"ublic static void sortInPlace(double[] x,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,435,ouble[] ... yList) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,440,"public static void sortInPlace(double[] x, double[] ... yList)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,441,"throws DimensionMismatchException, NullArgumentException {"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,458,ouble[] ... yList) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,464,double[] ... yList)
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,465,"throws NullArgumentException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,587,* @throws DimensionMismatchException if arrays dimensions don't match
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,581,"ublic static double linearCombination(final double[] a, final double[] b) {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,589,"public static double linearCombination(final double[] a, final double[] b)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,590,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,1055,"ublic static double[] normalizeArray(double[] values, double normalizedSum) {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,1064,"public static double[] normalizeArray(double[] values, double normalizedSum)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,1065,"throws MathIllegalArgumentException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,127,"ublic static byte copySign(byte magnitude, byte sign) {"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,127,"public static byte copySign(byte magnitude, byte sign)"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,128,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,149,"ublic static short copySign(short magnitude, short sign) {"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,150,"public static short copySign(short magnitude, short sign)"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,151,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,171,"ublic static int copySign(int magnitude, int sign) {"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,173,"public static int copySign(int magnitude, int sign)"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,174,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,193,"ublic static long copySign(long magnitude, long sign) {"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,196,"public static long copySign(long magnitude, long sign)"
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,197,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,211,ublic static void checkFinite(final double x) {
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,215,public static void checkFinite(final double x)
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,216,throws NotFiniteNumberException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,224,ublic static void checkFinite(final double[] val) {
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,229,public static void checkFinite(final double[] val)
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,230,throws NotFiniteNumberException {
False,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,243,bject ... args) {
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,249,Object ... args)
True,src/main/java/org/apache/commons/math3/util/MathUtils.java,src/main/java/org/apache/commons/math3/util/MathUtils.java,250,throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,21,import org.apache.commons.math3.exception.MathInternalError;
False,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,165,ublic MultidimensionalCounter(int ... size) {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,166,public MultidimensionalCounter(int ... size) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,216,ublic int[] getCounts(int index) {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,217,public int[] getCounts(int index) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,253,ublic int getCount(int ... c) throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,254,public int getCount(int ... c)
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,255,"throws OutOfRangeException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,293,"b.append(""["").append(getCount(i)).append(""]"");"
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,295,try {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,296,"sb.append(""["").append(getCount(i)).append(""]"");"
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,297,} catch (OutOfRangeException e) {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,298,// this should never happen
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,299,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,300,} catch (DimensionMismatchException e) {
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,301,// this should never happen
True,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,src/main/java/org/apache/commons/math3/util/MultidimensionalCounter.java,302,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,23,import org.apache.commons.math3.exception.MathInternalError;
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,395,try {
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,397,} catch (MathArithmeticException e) {
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,398,// should never happen as we don't use BigDecimal.ROUND_UNNECESSARY
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,399,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,400,} catch (MathIllegalArgumentException e) {
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,401,// should never happen as we use a valid rounding
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,402,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,416,* @throws MathArithmeticException if an exact operation is required but result is not exact
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,417,* @throws MathIllegalArgumentException if {@code roundingMethod} is not a valid rounding method.
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,408,"ublic static float round(float x, int scale, int roundingMethod) {"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,419,"public static float round(float x, int scale, int roundingMethod)"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,420,"throws MathArithmeticException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,435,* @throws MathArithmeticException if an exact operation is required but result is not exact
False,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,428,nt roundingMethod) {
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,441,int roundingMethod)
True,src/main/java/org/apache/commons/math3/util/Precision.java,src/main/java/org/apache/commons/math3/util/Precision.java,442,"throws MathArithmeticException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,24,import org.apache.commons.math3.exception.MathInternalError;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,158, @throws IllegalArgumentException if initialCapacity is not > 0
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,159,* @throws MathIllegalArgumentException if initialCapacity is not > 0
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,160,ublic ResizableDoubleArray(int initialCapacity) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,161,public ResizableDoubleArray(int initialCapacity) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,213, @throws IllegalArgumentException if parameters are not valid
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,214,* @throws MathIllegalArgumentException if parameters are not valid
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,215,"ublic ResizableDoubleArray(int initialCapacity, float expansionFactor) {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,216,"public ResizableDoubleArray(int initialCapacity, float expansionFactor) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,239, @throws IllegalArgumentException if parameters are not valid
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,240,* @throws MathIllegalArgumentException if parameters are not valid
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,242,loat contractionCriteria) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,243,float contractionCriteria) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,268, @throws IllegalArgumentException if parameters are not valid
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,269,* @throws MathIllegalArgumentException if parameters are not valid
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,271,"loat contractionCriteria, int expansionMode) {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,272,"float contractionCriteria, int expansionMode) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,368, @throws IllegalStateException if the array is empty
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,369,* @throws MathIllegalStateException if the array is empty
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,371,ublic synchronized double substituteMostRecentElement(double value) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,372,public synchronized double substituteMostRecentElement(double value) throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,392, @throws IllegalArgumentException if the contractionCriteria is less than
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,393,* @throws MathIllegalArgumentException if the contractionCriteria is less than
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,395,"rotected void checkContractExpand(float contraction, float expansion) {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,396,"protected void checkContractExpand(float contraction, float expansion) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,450, @throws IllegalArgumentException if i is greater than numElements.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,451,* @throws MathIllegalArgumentException if i is greater than numElements.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,453,ublic synchronized void discardFrontElements(int i) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,454,public synchronized void discardFrontElements(int i) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,467, @throws IllegalArgumentException if i is greater than numElements.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,468,* @throws MathIllegalArgumentException if i is greater than numElements.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,470,ublic synchronized void discardMostRecentElements(int i) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,471,public synchronized void discardMostRecentElements(int i) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,492, @throws IllegalArgumentException if i is greater than numElements.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,493,* @throws MathIllegalArgumentException if i is greater than numElements.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,495,"rivate synchronized void discardExtremeElements(int i,boolean front) {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,496,"private synchronized void discardExtremeElements(int i,boolean front) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,675,* @throws MathIllegalArgumentException if the contractionCriteria is less than
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,676,*         the expansionCriteria.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,675,ublic void setContractionCriteria(float contractionCriteria) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,678,public void setContractionCriteria(float contractionCriteria) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,716, @throws IllegalArgumentException if expansionFactor is <= 1 or greater
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,719,* @throws MathIllegalArgumentException if expansionFactor is <= 1 or greater
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,719,ublic void setExpansionFactor(float expansionFactor) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,722,public void setExpansionFactor(float expansionFactor) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,732, @throws IllegalArgumentException if the specified mode value is not valid
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,735,* @throws MathIllegalArgumentException if the specified mode value is not valid
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,734,ublic void setExpansionMode(int expansionMode) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,737,public void setExpansionMode(int expansionMode) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,751, @throws IllegalArgumentException if <code>initialCapacity</code> is not
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,754,* @throws MathIllegalArgumentException if <code>initialCapacity</code> is not
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,754,rotected void setInitialCapacity(int initialCapacity) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,757,protected void setInitialCapacity(int initialCapacity) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,772, @throws IllegalArgumentException if <code>i</code> is negative.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,775,* @throws MathIllegalArgumentException if <code>i</code> is negative.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,774,ublic synchronized void setNumElements(int i) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,777,public synchronized void setNumElements(int i) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,865,esizableDoubleArray result = new ResizableDoubleArray();
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,866,"opy(this, result);"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,867,eturn result;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,868,try {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,869,ResizableDoubleArray result = new ResizableDoubleArray();
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,870,"copy(this, result);"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,871,return result;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,872,} catch (NullArgumentException e) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,873,// this should never happen
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,874,throw new MathInternalError(e);
