is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,92,* Returns the product for this collection of values
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,93,* @param values Is a double[] containing the values
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,94,* @return the product values or Double.NaN if the array is empty
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,96,public static double product(double[] values) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,97,double product = Double.NaN;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,98,if( values.length > 0 ) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,99,product = 1.0;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,100,for( int i = 0; i < values.length; i++) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,101,product *= values[i];
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,104,return product;
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,108,* Returns the geometric mean for this collection of values
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,109,* @param values Is a double[] containing the values
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,110,* @return the geometric mean or Double.NaN if the array is empty or
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,111,* any of the values are &lt;= 0.
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,113,public static double geometricMean(double[] values) {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,114,"return Math.pow(product(values),(1.0/values.length));"
