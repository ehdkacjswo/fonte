is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,20,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,21,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,326,* <p>
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,327,* Reference values for the {@link GammaNSWC#invGamma1pm1(double)} method.
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,328,* These values were generated with the following <a
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,329,"* href=""http://maxima.sourceforge.net/"">Maxima</a> script"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,330,* </p>
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,332,* <pre>
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,333,* kill(all);
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,335,* fpprec : 64;
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,336,* gam1(x) := 1 / gamma(1 + x) - 1;
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,337,"* x : makelist(bfloat(i / 8), i, -4, 12);"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,339,"* for i : 1 while i <= length(x) do print(""{"","
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,340,"*                                         float(x[i]),"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,342,"*                                         float(gam1(x[i])),"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,344,* </pre>
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,346,// @formatter:off
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,347,private static final double[][] INV_GAMMA1P_M1_REF = {
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,348,"{ -0.5 , -.4358104164522437 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,349,"{ -0.375 , -.3029021533379859 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,350,"{ -0.25 , -0.183951060901737 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,351,"{ -0.125 , -.08227611018520711 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,352,"{ 0.0 , 0.0 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,353,"{ 0.125 , .06186116458306091 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,354,"{ 0.25 , .1032626513208373 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,355,"{ 0.375 , .1249687649039041 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,356,"{ 0.5 , .1283791670955126 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,357,"{ 0.625 , .1153565546592225 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,358,"{ 0.75 , 0.0880652521310173 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,359,"{ 0.875 , .04882730264547758 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,360,"{ 1.0 , 0.0 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,361,"{ 1.125 , -.05612340925950141 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,362,"{ 1.25 , -.1173898789433302 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,363,"{ 1.375 , -.1818408982517061 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,364,"{ 1.5 , -0.247747221936325 },"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,366,// @formatter:on
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,368,@Test
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,369,public void testInvGamma1pm1() {
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,371,final int ulps = 3;
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,372,for (int i = 0; i < INV_GAMMA1P_M1_REF.length; i++) {
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,373,final double[] ref = INV_GAMMA1P_M1_REF[i];
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,374,final double x = ref[0];
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,375,final double expected = ref[1];
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,376,final double actual = Gamma.invGamma1pm1(x);
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,377,final double tol = ulps * FastMath.ulp(expected);
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,378,"Assert.assertEquals(Double.toString(x), expected, actual, tol);"
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,382,@Test(expected = NumberIsTooSmallException.class)
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,383,public void testInvGamma1pm1Precondition1() {
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,385,Gamma.invGamma1pm1(-0.51);
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,388,@Test(expected = NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,389,public void testInvGamma1pm1Precondition2() {
True,src/test/java/org/apache/commons/math3/special/GammaTest.java,src/test/java/org/apache/commons/math3/special/GammaTest.java,391,Gamma.invGamma1pm1(1.51);
