is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1568,"uilder.addProperty(fieldName, fieldType, fieldNameNode);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1568,"if (builder.addProperty(fieldName, fieldType, fieldNameNode) == null) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1569,"// Duplicate field name, warning and skip"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1570,reporter.warning(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1571,"""Duplicate record field "" + fieldName,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1572,"sourceName,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1573,"n.getLineno(), """", n.getCharno());"
False,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,42,mport com.google.common.collect.ImmutableMap;
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,42,import com.google.common.collect.Maps;
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,45,import java.util.Collections;
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,46,import java.util.HashMap;
False,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,52,"rivate final ImmutableMap.Builder<String, RecordProperty> properties ="
False,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,53,mmutableMap.builder();
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,55,"private final HashMap<String, RecordProperty> properties = Maps.newHashMap();"
False,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,64, @return The builder itself for chaining purposes.
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,66,"* @return The builder itself for chaining purposes, or null if there's"
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,67,*          a duplicate.
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,72,if (properties.containsKey(name)) {
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,73,return null;
False,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,83,eturn registry.createRecordType(properties.build());
True,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,src/com/google/javascript/rhino/jstype/RecordTypeBuilder.java,89,return registry.createRecordType(Collections.unmodifiableMap(properties));
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8433,public void testDuplicateRecordFields1() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8434,"testTypes(""/**"""
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8435,"+ ""* @param {{x:string, x:number}} a"""
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8437,"+ ""function f(a) {};"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8438,"""Parse error. Duplicate record field x"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8441,public void testDuplicateRecordFields2() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8442,"testTypes(""/**"""
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8443,"+ ""* @param {{name:string,number:x,number:y}} a"""
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8445,"+ ""function f(a) {};"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8446,"new String[] { ""Parse error. Duplicate record field number"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8447,"""Bad type annotation. Unknown type x"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,8448,"""Bad type annotation. Unknown type y""});"
