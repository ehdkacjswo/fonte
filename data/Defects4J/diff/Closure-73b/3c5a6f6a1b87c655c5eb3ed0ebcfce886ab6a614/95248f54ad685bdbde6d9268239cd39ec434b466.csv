is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,85,"ew LinkedDirectedGraph<NameInfo, JSModule>();"
True,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java,85,LinkedDirectedGraph.createWithoutAnnotations();
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,40, <p>A {@link CallGraph} connects {@link Function}s to {@link Callsite}s and
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,40,* <p>A {@link CallGraph} connects {@link Function}s to {@link Callsite}s and
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,47, call a function when in fact it does not do so in the running program.
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,49, <p>The callgraph is also not complete: in some cases it may be unable to
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,50," determine some targets of a callsite. In this case,"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,47,* call a function when in fact it does not do so in the running program.
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,49,* <p>The callgraph is also not complete: in some cases it may be unable to
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,50,"* determine some targets of a callsite. In this case,"
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,61,ublic class CallGraph implements CompilerPass {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,61,public class CallGraph implements CompilerPass {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,85," If true, then the callgraph will use NameReferenceGraph as a"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,85,"* If true, then the callgraph will use NameReferenceGraph as a"
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,123,his.compiler = compiler;
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,123,this.compiler = compiler;
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,188,ublic Function getUniqueFunctionWithName(final String desiredName) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,188,public Function getUniqueFunctionWithName(final String desiredName) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,208,"hrow new IllegalStateException(""Found "" + functions.size()"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,208,"throw new IllegalStateException(""Found "" + functions.size()"
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,218,reconditions.checkArgument(callsiteNode.getType() == Token.CALL ||
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,218,Preconditions.checkArgument(callsiteNode.getType() == Token.CALL ||
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,240,"odeTraversal.traverse(compiler, jsRoot, new AbstractPostOrderCallback() {"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,240,"NodeTraversal.traverse(compiler, jsRoot, new AbstractPostOrderCallback() {"
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,278,"unctionsByNode.put(functionNode, function);"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,278,"functionsByNode.put(functionNode, function);"
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,284,allsite callsite = new Callsite(callsiteNode);
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,284,Callsite callsite = new Callsite(callsiteNode);
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,291, Maps a Callsite to the Function(s) it could call
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,291,* Maps a Callsite to the Function(s) it could call
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,306,efinitionProvider definitionProvider) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,306,DefinitionProvider definitionProvider) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,312,allsite.hasUnknownTarget = true;
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,312,callsite.hasUnknownTarget = true;
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,335,allsite.hasUnknownTarget = true;
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,335,callsite.hasUnknownTarget = true;
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,373,f (function != null) {
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,373,if (function != null) {
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,391,unction.isAliased = true;
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,391,function.isAliased = true;
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,503,"ew LinkedDirectedGraph<Function, Callsite>();"
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,503,LinkedDirectedGraph.createWithoutAnnotations();
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,516,orward);
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,516,forward);
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,553,ameReferenceGraphConstruction graphConstruction
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,553,NameReferenceGraphConstruction graphConstruction
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,583,f (!useNameReferenceGraph
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,583,if (!useNameReferenceGraph
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,587,ollection<Definition> definitions =
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,587,Collection<Definition> definitions =
False,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,683, targets.
True,src/com/google/javascript/jscomp/CallGraph.java,src/com/google/javascript/jscomp/CallGraph.java,683,* targets.
False,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,202,"ew LinkedUndirectedGraph<Var, Void>();"
True,src/com/google/javascript/jscomp/CoalesceVariableNames.java,src/com/google/javascript/jscomp/CoalesceVariableNames.java,202,LinkedUndirectedGraph.create();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1524,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(this, true);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1524,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1784,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(this, true);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1784,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(this, true, false);"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,83,private final boolean edgeAnnotations;
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,134,"* @param edgeAnnotations Whether to allow edge annotations. By default,"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,135,*    only node annotations are allowed.
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,135,oolean shouldTraverseFunctions) {
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,138,"boolean shouldTraverseFunctions, boolean edgeAnnotations) {"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,141,this.edgeAnnotations = edgeAnnotations;
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,150,"fg = new AstControlFlowGraph(computeFallThrough(root), nodePriorities);"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,154,"cfg = new AstControlFlowGraph(computeFallThrough(root), nodePriorities,"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,155,edgeAnnotations);
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,992,"ap<DiGraphNode<Node, Branch>, Integer> priorities) {"
False,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,993,uper(entry);
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,997,"Map<DiGraphNode<Node, Branch>, Integer> priorities,"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,998,boolean edgeAnnotations) {
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,999,"super(entry,"
True,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,src/com/google/javascript/jscomp/ControlFlowAnalysis.java,1000,"true /* node annotations */, edgeAnnotations);"
False,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,47,ublic ControlFlowGraph(N entry) {
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,47,ControlFlowGraph(
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,48,"N entry, boolean nodeAnnotations, boolean edgeAnnotations) {"
True,src/com/google/javascript/jscomp/ControlFlowGraph.java,src/com/google/javascript/jscomp/ControlFlowGraph.java,49,"super(nodeAnnotations, edgeAnnotations);"
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,123,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,123,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
False,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,267,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,267,ControlFlowAnalysis cfa = new ControlFlowAnalysis(
True,src/com/google/javascript/jscomp/InstrumentFunctions.java,src/com/google/javascript/jscomp/InstrumentFunctions.java,268,"compiler, false, false);"
False,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,84,"ew LinkedDirectedGraph<JsName, RefType>();"
True,src/com/google/javascript/jscomp/NameAnalyzer.java,src/com/google/javascript/jscomp/NameAnalyzer.java,84,LinkedDirectedGraph.createWithoutAnnotations();
True,src/com/google/javascript/jscomp/NameReferenceGraph.java,src/com/google/javascript/jscomp/NameReferenceGraph.java,87,"super(true, true);"
False,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,574,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,src/com/google/javascript/jscomp/NodeTraversal.java,src/com/google/javascript/jscomp/NodeTraversal.java,574,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
False,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,90,"inkedDirectedGraph<String, String> graph = LinkedDirectedGraph.create();"
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,90,"LinkedDirectedGraph<String, String> graph ="
True,src/com/google/javascript/jscomp/PassConfig.java,src/com/google/javascript/jscomp/PassConfig.java,91,LinkedDirectedGraph.createWithoutAnnotations();
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,255,"ew LinkedDirectedGraph<FunctionInformation, Node>();"
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,255,LinkedDirectedGraph.createWithoutAnnotations();
False,src/com/google/javascript/jscomp/TypeInferencePass.java,src/com/google/javascript/jscomp/TypeInferencePass.java,146,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,src/com/google/javascript/jscomp/TypeInferencePass.java,src/com/google/javascript/jscomp/TypeInferencePass.java,146,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, false);"
False,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,71,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,71,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, false);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,51,"public static <N, E> LinkedDirectedGraph<N, E> createWithoutAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,52,"return new LinkedDirectedGraph<N, E>(false, false);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,55,"public static <N, E> LinkedDirectedGraph<N, E> createWithNodeAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,56,"return new LinkedDirectedGraph<N, E>(true, false);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,59,"public static <N, E> LinkedDirectedGraph<N, E> createWithEdgeAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,60,"return new LinkedDirectedGraph<N, E>(false, true);"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,52,"eturn new LinkedDirectedGraph<N, E>();"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,64,"return new LinkedDirectedGraph<N, E>(true, true);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,67,private final boolean useNodeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,68,private final boolean useEdgeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,70,protected LinkedDirectedGraph(
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,71,"boolean useNodeAnnotations, boolean useEdgeAnnotations) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,72,this.useNodeAnnotations = useNodeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,73,this.useEdgeAnnotations = useEdgeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,81,useEdgeAnnotations ?
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,82,"new AnnotatedLinkedDirectedGraphEdge<N, E>(src, edgeValue, dest) :"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,113,"ode = new LinkedDirectedGraphNode<N, E>(nodeValue);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,136,node = useNodeAnnotations ?
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,137,"new AnnotatedLinkedDirectedGraphNode<N, E>(nodeValue) :"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,138,"new LinkedDirectedGraphNode<N, E>(nodeValue);"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,298,rotected Annotation annotation;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,300,rotected int id;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,302,rivate static int totalNodes = 0;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,311,his.id = totalNodes++;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,319,"SuppressWarnings(""unchecked"")"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,322,eturn (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,339,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,340,"""Graph initialized with node annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,327,nnotation = data;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,345,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,346,"""Graph initialized with node annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,337,"eturn ""LDN"" + id;"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,356,"return ""LDN"" + hashCode();"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,409,* A directed graph node with annotations.
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,411,"static class AnnotatedLinkedDirectedGraphNode<N, E>"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,412,"extends LinkedDirectedGraphNode<N, E> {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,414,protected Annotation annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,417,* @param nodeValue Node's value.
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,419,AnnotatedLinkedDirectedGraphNode(N nodeValue) {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,420,super(nodeValue);
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,423,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,424,@Override
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,425,public <A extends Annotation> A getAnnotation() {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,426,return (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,429,@Override
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,430,public void setAnnotation(Annotation data) {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,431,annotation = data;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,402,rotected Annotation annotation;
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,441,"SuppressWarnings(""unchecked"")"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,444,eturn (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,487,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,488,"""Graph initialized with edge annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,449,nnotation = data;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,493,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,494,"""Graph initialized with edge annotations turned off"");"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,534,* A directed graph edge that stores the source and destination nodes at each
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,535,* edge.
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,537,"static class AnnotatedLinkedDirectedGraphEdge<N, E>"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,538,"extends LinkedDirectedGraphEdge<N, E> {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,540,protected Annotation annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,543,* Constructor.
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,545,* @param edgeValue Edge Value.
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,547,"AnnotatedLinkedDirectedGraphEdge(DiGraphNode<N, E> sourceNode,"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,548,"E edgeValue, DiGraphNode<N, E> destNode) {"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,549,"super(sourceNode, edgeValue, destNode);"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,552,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,553,@Override
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,554,public <A extends Annotation> A getAnnotation() {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,555,return (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,558,@Override
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,559,public void setAnnotation(Annotation data) {
True,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedDirectedGraph.java,560,annotation = data;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,48,"public static <N, E> LinkedUndirectedGraph<N, E> createWithoutAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,49,"return new LinkedUndirectedGraph<N, E>(false, false);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,52,"public static <N, E> LinkedUndirectedGraph<N, E> createWithNodeAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,53,"return new LinkedUndirectedGraph<N, E>(true, false);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,56,"public static <N, E> LinkedUndirectedGraph<N, E> createWithEdgeAnnotations() {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,57,"return new LinkedUndirectedGraph<N, E>(false, true);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,60,"public static <N, E> LinkedUndirectedGraph<N, E> create() {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,61,"return new LinkedUndirectedGraph<N, E>(true, true);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,64,private final boolean useNodeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,65,private final boolean useEdgeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,67,protected LinkedUndirectedGraph(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,68,"boolean useNodeAnnotations, boolean useEdgeAnnotations) {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,69,this.useNodeAnnotations = useNodeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,70,this.useEdgeAnnotations = useEdgeAnnotations;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,78,useEdgeAnnotations ?
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,79,"new AnnotatedLinkedUndirectedGraphEdge<N, E>(src, edgeValue, dest) :"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,74,"ode = new LinkedUndirectedGraphNode<N, E>(nodeValue);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,101,node = useNodeAnnotations ?
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,102,"new AnnotatedLinkedUndirectedGraphNode<N, E>(nodeValue) :"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,103,"new LinkedUndirectedGraphNode<N, E>(nodeValue);"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,246,rivate Annotation annotation;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,247,rivate int id;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,248,rivate static int totalNodes = 0;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,250,ublic LinkedUndirectedGraphNode(N nodeValue) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,276,LinkedUndirectedGraphNode(N nodeValue) {
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,252,his.id = totalNodes++;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,260,"SuppressWarnings(""unchecked"")"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,263,eturn (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,287,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,288,"""Graph initialized with node annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,267,ublic N getValue() {
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,268,eturn value;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,292,public void setAnnotation(Annotation data) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,293,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,294,"""Graph initialized with node annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,272,ublic void setAnnotation(Annotation data) {
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,273,nnotation = data;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,298,public N getValue() {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,299,return value;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,283,"eturn ""LDN"" + id;"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,309,"return ""LDN"" + hashCode();"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,349,* An undirected graph node with annotations.
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,351,"static class AnnotatedLinkedUndirectedGraphNode<N, E>"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,352,"extends LinkedUndirectedGraphNode<N, E> {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,354,protected Annotation annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,356,AnnotatedLinkedUndirectedGraphNode(N nodeValue) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,357,super(nodeValue);
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,360,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,361,@Override
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,362,public <A extends Annotation> A getAnnotation() {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,363,return (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,366,@Override
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,367,public void setAnnotation(Annotation data) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,368,annotation = data;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,331,rotected Annotation annotation;
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,333,"ublic LinkedUndirectedGraphEdge(UndiGraphNode<N, E> nodeA, E edgeValue,"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,382,"LinkedUndirectedGraphEdge(UndiGraphNode<N, E> nodeA, E edgeValue,"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,355,"SuppressWarnings(""unchecked"")"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,358,eturn (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,406,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,407,"""Graph initialized with edge annotations turned off"");"
False,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,363,nnotation = data;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,412,throw new UnsupportedOperationException(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,413,"""Graph initialized with edge annotations turned off"");"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,445,* An annotated undirected graph edge..
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,447,"static class AnnotatedLinkedUndirectedGraphEdge<N, E>"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,448,"extends LinkedUndirectedGraphEdge<N, E> {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,450,protected Annotation annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,452,AnnotatedLinkedUndirectedGraphEdge(
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,453,"UndiGraphNode<N, E> nodeA, E edgeValue,"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,454,"UndiGraphNode<N, E> nodeB) {"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,455,"super(nodeA, edgeValue, nodeB);"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,458,"@SuppressWarnings(""unchecked"")"
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,459,@Override
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,460,public <A extends Annotation> A getAnnotation() {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,461,return (A) annotation;
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,464,@Override
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,465,public void setAnnotation(Annotation data) {
True,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,src/com/google/javascript/jscomp/graph/LinkedUndirectedGraph.java,466,annotation = data;
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,60,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,60,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,92,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,92,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,111,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,111,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,132,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,132,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,160,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,160,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,181,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,181,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,203,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,203,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,228,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,228,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,242,"iGraph<String, String> g = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,test/com/google/javascript/jscomp/CheckPathsBetweenNodesTest.java,242,"DiGraph<String, String> g = LinkedDirectedGraph.create();"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,225,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, true);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,225,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, true, true);"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,256,"ew ControlFlowAnalysis(compiler, shouldTraverseFunctions);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,256,"new ControlFlowAnalysis(compiler, shouldTraverseFunctions, true);"
False,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1195,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, true);"
True,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,test/com/google/javascript/jscomp/ControlFlowAnalysisTest.java,1195,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, true, true);"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,515,ew ControlFlowGraph<Instruction>(inst1);
True,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,515,"new ControlFlowGraph<Instruction>(inst1, true, true);"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,572,ew ControlFlowGraph<Instruction>(inst1);
True,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,572,"new ControlFlowGraph<Instruction>(inst1, true, true);"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,701,ew ControlFlowGraph<Instruction>(inst1);
True,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,701,"new ControlFlowGraph<Instruction>(inst1, true, true);"
False,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,739,ew ControlFlowGraph<Instruction>(inst1) {
True,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,test/com/google/javascript/jscomp/DataFlowAnalysisTest.java,739,"new ControlFlowGraph<Instruction>(inst1, true, true) {"
False,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,74,"raph = new LinkedDirectedGraph<Counter, String>();"
True,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,74,graph = LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,197,"raph = new LinkedDirectedGraph<Counter, String>();"
True,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,test/com/google/javascript/jscomp/FixedPointGraphTraversalTest.java,197,graph = LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,352,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,352,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
False,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,139,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,test/com/google/javascript/jscomp/MaybeReachingVariableUseTest.java,139,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
False,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,164,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,test/com/google/javascript/jscomp/MustBeReachingVariableDefTest.java,164,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
False,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,99,"ontrolFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
True,test/com/google/javascript/jscomp/TypeInferenceTest.java,test/com/google/javascript/jscomp/TypeInferenceTest.java,99,"ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, false);"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,38,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,38,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,53,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,53,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,66,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,66,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,85,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,85,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,106,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,106,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,125,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,125,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,155,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,test/com/google/javascript/jscomp/graph/GraphColoringTest.java,155,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphReachabilityTest.java,test/com/google/javascript/jscomp/graph/GraphReachabilityTest.java,34,"raph = new LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphReachabilityTest.java,test/com/google/javascript/jscomp/graph/GraphReachabilityTest.java,34,graph = LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,44,"ew LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,44,LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,93,"ew LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,93,LinkedUndirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,120,"ew LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,120,LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,149,"ew LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,149,LinkedUndirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,164,"ew LinkedDirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,164,LinkedDirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,186,"ew LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,186,LinkedUndirectedGraph.create();
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,207,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,207,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,214,"raph<String, String> graph = new LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,214,"Graph<String, String> graph = LinkedUndirectedGraph.create();"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,274,"estDirectedDegree(new LinkedDirectedGraph<String, String>());"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,275,"estDirectedDegree(new LinkedUndirectedGraph<String, String>());"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,274,"testDirectedDegree(LinkedDirectedGraph.<String, String>create());"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,275,"testDirectedDegree(LinkedUndirectedGraph.<String, String>create());"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,295,"estDirectedConnectIfNotFound(new LinkedDirectedGraph<String, String>());"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,296,"estDirectedConnectIfNotFound(new LinkedUndirectedGraph<String, String>());"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,295,testDirectedConnectIfNotFound(
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,296,"LinkedDirectedGraph.<String, String>create());"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,297,testDirectedConnectIfNotFound(
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,298,"LinkedUndirectedGraph.<String, String>create());"
False,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,314,"ew LinkedUndirectedGraph<String, String>();"
True,test/com/google/javascript/jscomp/graph/GraphTest.java,test/com/google/javascript/jscomp/graph/GraphTest.java,316,LinkedUndirectedGraph.create();
