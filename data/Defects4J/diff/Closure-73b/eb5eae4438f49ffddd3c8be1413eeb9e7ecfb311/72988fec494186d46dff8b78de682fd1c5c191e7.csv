is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,209, Defines the delegate proxy properties. Their types depend on properties of
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,210, the delegate base methods.
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,209,* Defines the delegate proxy prototype properties. Their types depend on
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,210,* properties of the delegate base methods.
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,212, @param delegateProxyMap Map from delegate proxy prototype to delegate base
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,213,     constructor.
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,212,* @param delegateProxyPrototypes List of delegate proxy prototypes.
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,215,ublic void defineDelegateProxyProperties(
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,214,public void defineDelegateProxyPrototypeProperties(
False,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,217,"ap<ObjectType, FunctionType> delegateProxyMap);"
True,src/com/google/javascript/jscomp/CodingConvention.java,src/com/google/javascript/jscomp/CodingConvention.java,216,List<ObjectType> delegateProxyPrototypes);
False,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,156,ublic void defineDelegateProxyProperties(
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,156,public void defineDelegateProxyPrototypeProperties(
False,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,158,"ap<ObjectType, FunctionType> delegateProxyMap) {"
True,src/com/google/javascript/jscomp/DefaultCodingConvention.java,src/com/google/javascript/jscomp/DefaultCodingConvention.java,158,List<ObjectType> delegateProxyPrototypes) {
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,126,f (NodeUtil.isFunctionExpression(n) ||
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,127,ompiler_.getCodingConvention().isExported(
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,128,.getFirstChild().getString())) {
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,126,"if (NodeUtil.isFunctionExpression(n) || isExportedFunction(n, scope)) {"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,148,* @param n The function node.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,149,* @return Whether the function is exported.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,151,"private boolean isExportedFunction(Node n, Scope scope) {"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,152,Preconditions.checkState(NodeUtil.isFunctionDeclaration(n));
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,153,"// If we aren't removing global names, assume that all global functions"
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,154,// are exported.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,155,return (!removeGlobals && scope.isGlobal()) ||
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,156,compiler_.getCodingConvention().isExported(
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,157,n.getFirstChild().getString());
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,48,mport com.google.common.collect.Maps;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,69,mport java.util.Map;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,107,"rivate Map<ObjectType, FunctionType> delegateProxyMap = Maps.newHashMap();"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,105,private List<ObjectType> delegateProxyPrototypes = Lists.newArrayList();
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,179,odingConvention.defineDelegateProxyProperties(
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,180,"ypeRegistry, newScope, delegateProxyMap);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,177,codingConvention.defineDelegateProxyPrototypeProperties(
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,178,"typeRegistry, newScope, delegateProxyPrototypes);"
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,1001,"elegateProxyMap.put(delegateProxy.getPrototype(), delegateBaseCtor);"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,999,delegateProxyPrototypes.add(delegateProxy.getPrototype());
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,23,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,29,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,31,import java.util.ArrayDeque;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,35,import java.util.Deque;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,39,import java.util.Set;
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,61,"private final Map<String, INPUT> provideMap = Maps.newHashMap();"
False,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,58,"inal Map<String, INPUT> provides = Maps.newHashMap();"
False,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,69,"rovides.put(provide, input);"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,75,"provideMap.put(provide, input);"
False,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,77,NPUT dep = provides.get(req);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,83,INPUT dep = provideMap.get(req);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,99,* Gets all the dependencies of the given roots. The inputs must be returned
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,100,"* in a stable order. In other words, if A comes before B, and A does not"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,101,"* transitively depend on B, then A must also come before B in the returned"
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,102,* list.
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,104,public List<INPUT> getSortedDependenciesOf(List<INPUT> roots) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,105,Preconditions.checkArgument(inputs.containsAll(roots));
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,106,Set<INPUT> included = Sets.newHashSet();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,107,Deque<INPUT> worklist = new ArrayDeque<INPUT>(roots);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,108,while (!worklist.isEmpty()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,109,INPUT current = worklist.pop();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,110,if (included.add(current)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,111,for (String req : current.getRequires()) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,112,INPUT dep = provideMap.get(req);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,113,if (dep != null) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,114,worklist.add(dep);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,120,ImmutableList.Builder builder = ImmutableList.builder();
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,121,for (INPUT current : sortedList) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,122,if (included.contains(current)) {
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,123,builder.add(current);
True,src/com/google/javascript/jscomp/deps/SortedDependencies.java,src/com/google/javascript/jscomp/deps/SortedDependencies.java,126,return builder.build();
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,649,ode.addChildToBack(transformAsString(el.getLeft()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,650,ode.addChildToBack(transform(el.getRight()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,649,if (el.isGetter()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,650,reportGetter(el);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,651,} else if (el.isSetter()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,652,reportSetter(el);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,653,} else {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,654,node.addChildToBack(transformAsString(el.getLeft()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,655,node.addChildToBack(transform(el.getRight()));
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,851,void reportGetter(AstNode node) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,852,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,853,"""getters are not supported in Internet Explorer"","
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,854,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,855,"node.getLineno(), """", 0);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,858,void reportSetter(AstNode node) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,859,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,860,"""setters are not supported in Internet Explorer"","
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,861,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,862,"node.getLineno(), """", 0);"
False,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,100,"SType type = registry.createFromTypeNodes(root, sourceName, scope);"
False,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,101,f (root.getBooleanProp(Node.BRACELESS_TYPE)) {
False,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,102,ype.forgiveUnknownNames();
False,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,104,eturn type;
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,100,"return registry.createFromTypeNodes(root, sourceName, scope,"
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,101,root.getBooleanProp(Node.BRACELESS_TYPE));
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,127,ublic void forgiveUnknownNames() {}
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,127,void forgiveUnknownNames() {}
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,149,"* The type registry has three modes, which control how type ASTs are"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,150,* converted to types in {@link @createFromTypeNodes}.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,152,public static enum ResolveMode {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,154,* Expressions are converted into Unknown blobs that can be
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,155,* resolved into complex types.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,157,"LAZY_EXPRESSIONS,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,160,* Expressions are evaluated. If any names in the expression point to
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,161,"* unknown types, then we create a proxy {@code NamedType} structure"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,162,* until the type can be resolved.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,164,"* This is the legacy way of resolving ways, and may not exist in the"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,165,* future.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,167,"LAZY_NAMES,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,170,* Expressions and type names are evaluated aggressively. A warning
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,171,* will be emitted if a type name fails to resolve to a real type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,173,IMMEDIATE
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,176,private ResolveMode resolveMode = ResolveMode.LAZY_NAMES;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,198,* Set the current resolving mode of the type registry.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,199,* @see ResolveMode
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,201,public void setResolveMode(ResolveMode mode) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,202,this.resolveMode = mode;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1303,"return createFromTypeNodes(n, sourceName, scope, false);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1307,* Creates a JSType from the nodes representing a type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1308,* @param n The node with type info.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1309,* @param sourceName The source file name.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1310,* @param scope A scope for doing type name lookups.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1311,* @param forgiving Whether we should be forgiving about type names
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1312,*     that we can't find.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1314,"public JSType createFromTypeNodes(Node n, String sourceName,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1315,"StaticScope<JSType> scope, boolean forgiving) {"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1316,if (resolveMode == ResolveMode.LAZY_EXPRESSIONS) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1317,"return new UnresolvedTypeExpression(this, n, sourceName, forgiving);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1270,"eturn createFromTypeNodes(n.getFirstChild(), sourceName, scope)"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1325,return createFromTypeNodes(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1326,"n.getFirstChild(), sourceName, scope, forgiving)"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1279,"reateFromTypeNodes(firstChild, sourceName, scope));"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1335,"createFromTypeNodes(firstChild, sourceName, scope, forgiving));"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1369,if (forgiving) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1370,namedType.forgiveUnknownNames();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1372,if (resolveMode != ResolveMode.LAZY_NAMES) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1373,"namedType = namedType.resolveInternal(reporter, scope);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,113,Override
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,114,ublic void forgiveUnknownNames() {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,113,void forgiveUnknownNames() {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,96,ublic void forgiveUnknownNames() {
True,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,96,void forgiveUnknownNames() {
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,3,* ***** BEGIN LICENSE BLOCK *****
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,4,* Version: MPL 1.1/GPL 2.0
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,8,* the License. You may obtain a copy of the License at
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,9,* http://www.mozilla.org/MPL/
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,13,* for the specific language governing rights and limitations under the
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,14,* License.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,16,"* The Original Code is Rhino code, released"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,17,"* May 6, 1999."
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,19,* The Initial Developer of the Original Code is
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,20,* Netscape Communications Corporation.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,22,* the Initial Developer. All Rights Reserved.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,24,* Contributor(s):
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,25,*   Nick Santos
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,26,*   Google Inc.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,28,"* Alternatively, the contents of this file may be used under the terms of"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,29,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,30,* case the provisions of the GPL are applicable instead of those above. If
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,31,* you wish to allow use of your version of this file only under the terms of
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,32,* the GPL and not to allow others to use your version of this file under the
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,33,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,34,* them with the notice and other provisions required by the GPL. If you do
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,35,"* not delete the provisions above, a recipient may use your version of this"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,36,* file under either the MPL or the GPL.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,38,* ***** END LICENSE BLOCK ***** */
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,40,package com.google.javascript.rhino.jstype;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,42,import com.google.common.base.Preconditions;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,43,import com.google.javascript.rhino.ErrorReporter;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,44,import com.google.javascript.rhino.JSTypeExpression;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,45,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,48,* An {@code UnresolvedType} is a reference to some type expression.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,49,* This provides a convenient mechanism for implementing forward
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,50,* references to types; a {@code UnresolvedType} can be used as a
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,51,* placeholder until its reference is resolved.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,53,* The {@code UnresolvedType} will behave like an opaque unknown type.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,54,"* When its {@code #resolve} method is called, it will return the underlying"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,55,* type. The underlying type can resolve to any JS type.<p>
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,57,* @author nicksantos@google.com (Nick Santos)
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,59,class UnresolvedTypeExpression extends UnknownType {
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,60,private static final long serialVersionUID = 1L;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,62,private final Node typeExpr;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,63,private final String sourceName;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,66,"* If true, don't warn about unresolveable type names."
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,68,* NOTE(nicksantos): A lot of third-party code doesn't use our type syntax.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,69,* They have code like
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,70,* {@code @return} the bus.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,71,"* and they clearly don't mean that ""the"" is a type. In these cases, we're"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,72,"* forgiving and try to guess whether or not ""the"" is a type when it's not"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,73,* clear.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,75,private boolean forgiving = false;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,78,* Create a named type based on the reference.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,80,"UnresolvedTypeExpression(JSTypeRegistry registry, Node typeExpr,"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,81,"String sourceName, boolean forgiving) {"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,82,"super(registry, false);"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,84,Preconditions.checkNotNull(typeExpr);
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,85,this.typeExpr = typeExpr;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,86,this.sourceName = sourceName;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,87,this.forgiving = forgiving;
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,91,* Resolve the referenced type within the enclosing scope.
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,93,@Override
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,94,"JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,95,"return registry.createFromTypeNodes(typeExpr, sourceName, enclosing,"
True,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,src/com/google/javascript/rhino/jstype/UnresolvedTypeExpression.java,96,forgiving);
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,204,"estSame(""function foo(a) {}"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,204,"test(""function foo(a) {}"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,205,"""function foo() {}"");"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,210,"est(""function foo(a) {}"","
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,211,"function foo($a$$) {}"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,211,"test(""function foo(a) {alert(a)}"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,212,"""function foo($a$$) {alert($a$$)}"");"
False,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,213,"estSame(""foo(function bar(){})"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,213,"testSame(""foo(function bar(){})"");"
False,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,217,ublic void testRemoveGlobal() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,216,public void testRemoveGlobal1() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,222,public void testRemoveGlobal2() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,223,removeGlobal = false;
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,224,"testSame(""var x=1"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,225,"test(""function y(x){var z;}"", ""function y(){}"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,228,public void testRemoveGlobal3() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,229,removeGlobal = false;
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,230,"testSame(""var x=1"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,231,"test(""function x(){function y(x){var z;}y()}"","
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,232,"""function x(){function y(){}y()}"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,235,public void testRemoveGlobal4() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,236,removeGlobal = false;
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,237,"testSame(""var x=1"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,238,"test(""function x(){function y(x){var z;}}"","
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,239,"""function x(){}"");"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,2,* Copyright 2010 Google Inc.
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,17,package com.google.javascript.jscomp.deps;
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,20,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,22,import junit.framework.TestCase;
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,24,import java.util.List;
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,27,* Tests for {@link SortedDependencies}
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,28,* @author nicksantos@google.com (Nick Santos)
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,30,public class SortedDependenciesTest extends TestCase {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,32,public void testSort() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,33,SimpleDependencyInfo a = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,34,"""a"", ""a"", symbols(), symbols(""b"", ""c""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,35,SimpleDependencyInfo b = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,36,"""b"", ""b"", symbols(""b""), symbols(""d""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,37,SimpleDependencyInfo c = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,38,"""c"", ""c"", symbols(""c""), symbols(""d""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,39,SimpleDependencyInfo d = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,40,"""d"", ""d"", symbols(""d""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,41,SimpleDependencyInfo e = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,42,"""e"", ""e"", symbols(""e""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,43,SimpleDependencyInfo f = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,44,"""f"", ""f"", symbols(""f""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,46,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,47,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,48,"ImmutableList.of(a, b, c, d));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,49,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,50,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,51,"ImmutableList.of(d, b, c, a));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,52,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,53,"ImmutableList.of(d, c, b, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,54,"ImmutableList.of(d, c, b, a));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,55,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,56,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,57,"ImmutableList.of(d, a, b, c));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,59,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,60,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,61,"ImmutableList.of(d, b, c, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,62,ImmutableList.of(a));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,63,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,64,"ImmutableList.of(d, c),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,65,"ImmutableList.of(d, c, b, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,66,ImmutableList.of(c));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,67,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,68,"ImmutableList.of(d),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,69,"ImmutableList.of(d, c, b, a),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,70,ImmutableList.of(d));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,72,try {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,73,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,74,"ImmutableList.<SimpleDependencyInfo>of(),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,75,"ImmutableList.of(a, b, c, d),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,76,ImmutableList.of(e));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,77,"fail(""Expected an exception"");"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,78,} catch (IllegalArgumentException expected) {}
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,81,public void testSort2() {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,82,SimpleDependencyInfo ab = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,83,"""ab"", ""ab"", symbols(""a"", ""b""), symbols(""d"", ""f""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,84,SimpleDependencyInfo c = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,85,"""c"", ""c"", symbols(""c""), symbols(""h""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,86,SimpleDependencyInfo d = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,87,"""d"", ""d"", symbols(""d""), symbols(""e"", ""f""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,88,SimpleDependencyInfo ef = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,89,"""ef"", ""ef"", symbols(""e"", ""f""), symbols(""g"", ""c""));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,90,SimpleDependencyInfo g = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,91,"""g"", ""g"", symbols(""g""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,92,SimpleDependencyInfo hi = new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,93,"""hi"", ""hi"", symbols(""h"", ""i""), symbols());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,95,assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,96,"ImmutableList.of(g, hi, c, ef, d, ab),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,97,"ImmutableList.of(ab, c, d, ef, g, hi));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,99,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,100,"ImmutableList.of(g),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,101,"ImmutableList.of(ab, c, d, ef, g, hi),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,102,ImmutableList.of(g));
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,103,assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,104,"ImmutableList.of(g, hi, c, ef, d),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,105,"ImmutableList.of(ab, c, d, ef, g, hi),"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,106,"ImmutableList.of(d, hi));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,109,private void assertSortedInputs(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,110,"List<SimpleDependencyInfo> expected,"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,111,List<SimpleDependencyInfo> shuffled) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,112,SortedDependencies<SimpleDependencyInfo> sorted =
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,113,new SortedDependencies<SimpleDependencyInfo>(shuffled);
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,114,"assertEquals(expected, sorted.getSortedList());"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,117,private void assertSortedDeps(
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,118,"List<SimpleDependencyInfo> expected,"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,119,"List<SimpleDependencyInfo> shuffled,"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,120,List<SimpleDependencyInfo> roots) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,121,SortedDependencies<SimpleDependencyInfo> sorted =
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,122,new SortedDependencies<SimpleDependencyInfo>(shuffled);
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,123,"assertEquals(expected, sorted.getSortedDependenciesOf(roots));"
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,126,private List<String> symbols(String ... strings) {
True,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,test/com/google/javascript/jscomp/deps/SortedDependenciesTest.java,127,return Lists.newArrayList(strings);
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,625,public void testGettersForbidden1() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,626,"parseError(""var x = {get foo() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,627,"""getters are not supported in Internet Explorer"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,630,public void testGettersForbidden2() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,631,"parseError(""var x = {get foo bar() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,632,"""invalid property id"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,635,public void testGettersForbidden3() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,636,"parseError(""var x = {a getter:function b() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,637,"""missing : after property id"", ""syntax error"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,640,public void testGettersForbidden4() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,641,"parseError(""var x = {\""a\"" getter:function b() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,642,"""missing : after property id"", ""syntax error"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,645,public void testGettersForbidden5() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,646,"parseError(""var x = {a: 2, get foo() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,647,"""getters are not supported in Internet Explorer"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,650,public void testSettersForbidden() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,651,"parseError(""var x = {set foo() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,652,"""setters are not supported in Internet Explorer"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,655,public void testSettersForbidden2() {
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,656,"parseError(""var x = {a setter:function b() { return 3; }};"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,657,"""missing : after property id"", ""syntax error"");"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,41,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,43,import com.google.javascript.rhino.Token;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,44,import com.google.javascript.rhino.jstype.JSTypeRegistry.ResolveMode;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,150,public void testTypeResolutionModes() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,151,SimpleErrorReporter reporter = new SimpleErrorReporter();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,153,JSTypeRegistry lazyExprRegistry = new JSTypeRegistry(reporter);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,154,lazyExprRegistry.setResolveMode(ResolveMode.LAZY_EXPRESSIONS);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,156,JSTypeRegistry lazyNameRegistry = new JSTypeRegistry(reporter);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,157,lazyNameRegistry.setResolveMode(ResolveMode.LAZY_NAMES);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,159,JSTypeRegistry immediateRegistry = new JSTypeRegistry(reporter);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,160,immediateRegistry.setResolveMode(ResolveMode.IMMEDIATE);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,162,"Node expr = new Node(Token.QMARK, Node.newString(""foo""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,163,StaticScope<JSType> empty = new EmptyScope();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,165,JSType type = lazyExprRegistry.createFromTypeNodes(
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,166,"expr, ""source.js"", empty);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,167,assertTrue(type instanceof UnresolvedTypeExpression);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,168,assertTrue(type.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,169,"assertEquals(""?"", type.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,170,"assertNull(""Unexpected warnings: "" + reporter.warnings(),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,171,reporter.warnings());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,173,type = lazyNameRegistry.createFromTypeNodes(
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,174,"expr, ""source.js"", empty);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,175,assertTrue(type instanceof UnionType);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,176,assertTrue(type.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,177,"assertEquals(""(foo|null)"", type.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,178,"assertNull(""Unexpected warnings: "" + reporter.warnings(),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,179,reporter.warnings());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,181,type = immediateRegistry.createFromTypeNodes(
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,182,"expr, ""source.js"", empty);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,183,assertTrue(type instanceof UnknownType);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,184,"assertEquals(""Expected warnings"", 1, reporter.warnings().size());"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,187,private static class EmptyScope implements StaticScope<JSType> {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,188,public StaticSlot<JSType> getSlot(final String name) { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,189,public StaticSlot<JSType> getOwnSlot(String name) { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,190,public StaticScope<JSType> getParentScope() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,191,public JSType getTypeOfThis() { return null; }
