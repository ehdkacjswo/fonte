is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,705, @param globalName Name of global
True,src/com/google/javascript/jscomp/AliasExternals.java,src/com/google/javascript/jscomp/AliasExternals.java,705,* @param global Name of global
False,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,69,"    {@link JoinOp#join(LatticeElement, LatticeElement)}."
True,src/com/google/javascript/jscomp/DataFlowAnalysis.java,src/com/google/javascript/jscomp/DataFlowAnalysis.java,69,*    {@link JoinOp#apply}.
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,138,"ew CallVisitor(fns, anonFns, new Inline(injector)));"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,138,new CallVisitor(
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,139,"fns, anonFns, new Inline(injector, specializationState)));"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,318,rivate Node getContainingFunction(NodeTraversal t) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,319,private static Node getContainingFunction(NodeTraversal t) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,558,rivate class Inline implements CallVisitorCallback {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,559,private static class Inline implements CallVisitorCallback {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,561,private final SpecializeModule.SpecializationState specializationState;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,561,nline(FunctionInjector injector) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,563,"Inline(FunctionInjector injector,"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,564,SpecializeModule.SpecializationState specializationState) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,566,this.specializationState = specializationState;
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,518, Hash byte array to a 64 bit value. The digits of pi are used
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,519, for the hash seed.
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,521, @param value the bytes to hash
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,522, @param offset the starting position of value where bytes are
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,523, used for the hash computation
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,524, @param length number of bytes of value that are used for the
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,525, hash computation
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,526, @return 64 bit hash value
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,528,"rivate static long hash64(byte[] value, int offset, int length) {"
False,src/com/google/javascript/jscomp/JsMessage.java,src/com/google/javascript/jscomp/JsMessage.java,529,"eturn hash64(value, offset, length, SEED64);"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,214, <li>{@code {'name': function() ...}}</li>
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,215, <li>{@code {name: function() ...}}</li>
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,214,* <li>{@code &#123;'name': function() ...&#125;}</li>
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,215,* <li>{@code &#123;name: function() ...&#125;}</li>
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,915, Function appeared in externs file.
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,917,oolean isExtern() {
False,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,918,eturn extern;
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,31,mport java.util.logging.Logger;
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,69,rivate static final Logger logger =
False,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,70,ogger.getLogger(RemoveUnusedVars.class.getName());
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,326,"aybeMarkCandidate(propNode, t);"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,326,maybeMarkCandidate(propNode);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,338,"aybeMarkCandidate(key, t);"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,338,maybeMarkCandidate(key);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,399, @param t The traversal
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,401,"rivate void maybeMarkCandidate(Node n, NodeTraversal t) {"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,400,private void maybeMarkCandidate(Node n) {
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,405,"ountPropertyOccurrence(name, t);"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,404,countPropertyOccurrence(name);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,429,"ountPropertyOccurrence(name, t);"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,428,countPropertyOccurrence(name);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,438, @param t The node traversal
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,440,"rivate void countPropertyOccurrence(String name, NodeTraversal t) {"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,438,private void countPropertyOccurrence(String name) {
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,443,"rop = new Property(name, t.getInput());"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,441,prop = new Property(name);
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,457,inal CompilerInput input;
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,461,"roperty(String name, CompilerInput input) {"
True,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,458,Property(String name) {
False,src/com/google/javascript/jscomp/RenameProperties.java,src/com/google/javascript/jscomp/RenameProperties.java,463,his.input = input;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,74,ompilerInput input;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,82,his.input = null;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,391,"etProperty(n.getString(), input).prototypeCount++;"
True,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,389,getProperty(n.getString()).prototypeCount++;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,403,"etProperty(n.getString(), input).objLitCount++;"
True,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,401,getProperty(n.getString()).objLitCount++;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,415,"etProperty(n.getString(), input).refCount++;"
True,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,413,getProperty(n.getString()).refCount++;
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,422,"rivate Property getProperty(String name, CompilerInput input) {"
True,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,420,private Property getProperty(String name) {
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,428,"/ Kind of arbitrary--if a property appears in multiple inputs, we"
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,429,/ consider it belonging to the first one we saw it in.
False,src/com/google/javascript/jscomp/RenamePrototypes.java,src/com/google/javascript/jscomp/RenamePrototypes.java,430,rop.input = input;
False,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,326," property, and if so, returns the qualfied name node representing"
True,src/com/google/javascript/jscomp/TypedScopeCreator.java,src/com/google/javascript/jscomp/TypedScopeCreator.java,326,"* property, and if so, returns the qualified name node representing"
