is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,139,ptions.sortClosureDependencies = config.sortClosureDependencies;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,139,options.manageClosureDependencies = config.manageClosureDependencies;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1258,rivate boolean sortClosureDependencies = false;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1258,private boolean manageClosureDependencies = false;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1261, Sets whether to sort files by their goog.provide/require deps.
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1261,"* Sets whether to sort files by their goog.provide/require deps,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1262,* and prune inputs that are not required.
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1263,ommandLineConfig setSortClosureDependencies(boolean newVal) {
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1264,his.sortClosureDependencies = newVal;
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1264,CommandLineConfig setManageClosureDependencies(boolean newVal) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1265,this.manageClosureDependencies = newVal;
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,276,"Option(name = ""--sort_closure_dependencies"","
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,276,"@Option(name = ""--manage_closure_dependencies"","
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,280," ""goog.requires symbol X."")"
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,281,rivate boolean sort_closure_dependencies = false;
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,280,"+ ""goog.requires symbol X. If an input provides symbols, and """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,281,"+ ""those symbols are never required, then that input will not """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,282,"+ ""be included in the compilation."")"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,283,private boolean manage_closure_dependencies = false;
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,432,setSortClosureDependencies(flags.sort_closure_dependencies);
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,434,.setManageClosureDependencies(flags.manage_closure_dependencies);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,f (options.sortClosureDependencies) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,if (options.manageClosureDependencies) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,nputs = Lists.newArrayList(sorter.getSortedList());
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,inputs = Lists.newArrayList(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1063,sorter.getSortedDependenciesOf(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1064,sorter.getInputsWithoutProvides()));
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,75,oolean sortClosureDependencies = false;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,75,boolean manageClosureDependencies = false;
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,849, Sets the id generators to replace.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,849,* Sets the functions whose debug strings to replace.
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,912, Sort inputs by their goog.provide/goog.require calls.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,912,"* Sort inputs by their goog.provide/goog.require calls, and prune inputs"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,913,* whose symbols are not required.
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,914,ublic void setSortClosureDependencies(boolean newVal) {
False,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,915,ortClosureDependencies = newVal;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,915,public void setManageClosureDependencies(boolean newVal) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,916,manageClosureDependencies = newVal;
False,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,204,f (defNode != null) {
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,204,if (defNode != null &&
True,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java,205,"!reachingDef.dependsOnOuterScopeVars(name, cfgNode)) {"
True,src/com/google/javascript/jscomp/GoogleCodeRemoval.java,src/com/google/javascript/jscomp/GoogleCodeRemoval.java,37,* @author robbyw@google.com (Robby Walker)
False,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,349,"f (NodeUtil.isName(n) && jsScope.isDeclared(n.getString(), false)) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,349,"if (NodeUtil.isName(n) && jsScope.isDeclared(n.getString(), true)) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,377,"boolean dependsOnOuterScopeVars(String name, Node useNode) {"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,378,Preconditions.checkArgument(getCfg().hasNode(useNode));
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,379,"GraphNode<Node, Branch> n = getCfg().getNode(useNode);"
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,380,FlowState<MustDef> state = n.getAnnotation();
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,381,Definition def = state.getIn().reachingDef.get(jsScope.getVar(name));
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,382,for (Var s : def.depends) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,383,if (s.scope != jsScope) {
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,384,return true;
True,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,src/com/google/javascript/jscomp/MustBeReachingVariableDef.java,387,return false;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,2, Copyright 2008 Google Inc.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,16,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,20," A potential check holds a warning or error for delayed evaluation, so that"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,21, its validity can be assessed based on information gathered after its
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,22, creation.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,24, @see PotentialCheckManager
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,28,bstract class PotentialCheck {
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,29,rivate final AbstractCompiler compiler;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,30,rivate final JSError err;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,32,"otentialCheck(AbstractCompiler compiler, JSError err) {"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,33,his.compiler = compiler;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,34,his.err = err;
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,38, Reports the warning or error.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,40,rivate void report() {
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,41,ompiler.report(err);
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,45, Reports the warning or error only if it's still relevant.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,47,oid evaluate() {
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,48,f (stillRelevant()) {
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,49,eport();
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,54, Assesses whether the check is still relevant.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,55," @return {@code true} if the check should be reported, {@code false} if it"
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,56,     should be discarded.
False,src/com/google/javascript/jscomp/PotentialCheck.java,src/com/google/javascript/jscomp/PotentialCheck.java,58,rotected abstract boolean stillRelevant();
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,2, Copyright 2008 Google Inc.
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,16,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,18,mport com.google.common.collect.Lists;
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,20,mport java.util.List;
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,23," A manager for {@link PotentialCheck}s, holding them and evaluating on demand."
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,27,lass PotentialCheckManager {
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,28,rivate final List<PotentialCheck> checks = Lists.newArrayList();
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,31, Adds a potential check for later evaluation.
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,33,oid add(PotentialCheck check) {
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,34,hecks.add(check);
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,38, Evaluates all pending potential checks. Each check is either reported or
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,39, permanently discarded.
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,41,oid flush() {
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,42,or (PotentialCheck check : checks) {
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,43,heck.evaluate();
False,src/com/google/javascript/jscomp/PotentialCheckManager.java,src/com/google/javascript/jscomp/PotentialCheckManager.java,45,hecks.clear();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,263,rivate final PotentialCheckManager potentialChecks =
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,264,ew PotentialCheckManager();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,342,otentialChecks.flush();
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,260,"rgs.add(""--sort_closure_dependencies=true"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,260,"args.add(""--manage_closure_dependencies=true"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,271,public void testSourcePruningOn() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,272,"args.add(""--manage_closure_dependencies=true"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,273,test(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,274,"""goog.require('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,275,"""goog.provide('beer');"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,276,"""goog.provide('scotch'); var x = 3;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,278,new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,279,"""var beer = {};"","
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,278,// TODO(user): These should be inlinable.
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,288,// TODO(user): These should be inlinable.
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,293,// TODO(user): These should be inlinable after the REGEX checks.
False,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,296,"/ Is a bad idea, a similar case was found in closure string.js"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,299,// Don't inline construction into loops.
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,345,public void testDependOnOuterScopeVariables() {
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,346,"noInline(""var x; function foo() { var y = x; x = 0; print(y) }"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,347,"noInline(""var x; function foo() { var y = x; x++; print(y) }"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,349,"// Sadly, we don't understand the data flow of outer scoped variables as"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,350,// it can be modified by code outside of this scope. We can't inline
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,351,// at all if the definition has dependence on such variable.
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,352,"noInline(""var x; function foo() { var y = x; print(y) }"");"
True,test/com/google/javascript/jscomp/GoogleCodeRemovalTest.java,test/com/google/javascript/jscomp/GoogleCodeRemovalTest.java,22,* @author robbyw@google.com (Robby Walker)
