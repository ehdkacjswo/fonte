is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,6, Copyright (c) 2001-2003 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,7, reserved.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,6,* Copyright (c) 2001-2003 The Apache Software Foundation. All rights reserved.
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,10," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,11, are met:
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,13, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,14,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,16, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,17,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,18,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,19,    distribution.
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,21," 3. The end-user documentation included with the redistribution,"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,22,"    if any, must include the following acknowledgement:"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,23,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,24,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,25,"    Alternately, this acknowledgement may appear in the software itself,"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,26,    if and wherever such third-party acknowledgements normally appear.
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,28," 4. The names ""Apache"", ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,29,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,30,    from this software without prior written permission. For written
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,31,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,33," 5. Products derived from this software may not be called ""Apache"","
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,34,"    ""Apache"" nor may ""Apache"" appear in their name without prior"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,35,    written permission of the Apache Software Foundation.
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,37, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,38," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,39, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,40, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,41," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,42," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,43," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,44," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,45," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,46, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,47," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,48, SUCH DAMAGE.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,9,"* modification, are permitted provided that the following conditions are met: 1."
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,10,"* Redistributions of source code must retain the above copyright notice, this"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,11,* list of conditions and the following disclaimer. 2. Redistributions in
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,12,"* binary form must reproduce the above copyright notice, this list of"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,13,* conditions and the following disclaimer in the documentation and/or other
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,14,* materials provided with the distribution. 3. The end-user documentation
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,15,"* included with the redistribution, if any, must include the following"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,16,"* acknowledgement: ""This product includes software developed by the Apache"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,17,"* Software Foundation (http://www.apache.org/)."" Alternately, this"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,18,"* acknowledgement may appear in the software itself, if and wherever such"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,19,"* third-party acknowledgements normally appear. 4. The names ""Apache"", ""The"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,20,"* Jakarta Project"", ""Commons"", and ""Apache Software Foundation"" must not be"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,21,* used to endorse or promote products derived from this software without prior
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,22,"* written permission. For written permission, please contact"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,23,* apache@apache.org. 5. Products derived from this software may not be called
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,24,"* ""Apache"", ""Apache"" nor may ""Apache"" appear in their name without prior"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,25,* written permission of the Apache Software Foundation.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,27,"* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,28,"* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,29,* FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,30,"* APACHE SOFTWARE FOUNDATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,31,"* INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,32,"* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,33,"* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,34,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,35,* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,36,"* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,51, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,52, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,53," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,54, <http://www.apache.org/>.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,39,* This software consists of voluntary contributions made by many individuals
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,40,* on behalf of the Apache Software Foundation. For more information on the
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,41,"* Apache Software Foundation, please see <http://www.apache.org/> ."
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,67, @version $Revision: 1.4 $ $Date: 2003/10/05 21:45:49 $
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,54,* @version $Revision: 1.5 $ $Date: 2003/11/07 22:37:26 $
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,56,* @author Gary Gregory
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,60,public static Test suite() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,61,return (new TestSuite(MetaphoneTest.class));
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,64,private Metaphone metaphone = null;
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,76,ublic static Test suite() {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,77,eturn (new TestSuite(MetaphoneTest.class));
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,70,"public void assertIsMetaphoneEqual(String source, String[] matches) {"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,71,// match source to all matches
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,72,for (int i = 0; i < matches.length; i++) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,73,"assertTrue(this.getMetaphone().isMetaphoneEqual(source, matches[i]));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,75,// match to each other
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,76,for (int i = 0; i < matches.length; i++) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,77,for (int j = 0; j < matches.length; j++) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,78,"assertTrue(this.getMetaphone().isMetaphoneEqual(matches[i], matches[j]));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,80,ublic void setUp() throws Exception {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,83,public void assertMetaphoneEqual(String[][] pairs) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,84,this.validateFixture(pairs);
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,85,for (int i = 0; i < pairs.length; i++) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,86,String name0 = pairs[i][0];
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,87,String name1 = pairs[i][1];
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,88,"String failMsg = ""Expected match between "" + name0 + "" and "" + name1;"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,89,"assertTrue(failMsg, this.getMetaphone().isMetaphoneEqual(name0, name1));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,90,"assertTrue(failMsg, this.getMetaphone().isMetaphoneEqual(name1, name0));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,94,* @return Returns the metaphone.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,96,private Metaphone getMetaphone() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,97,return this.metaphone;
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,100,protected StringEncoder makeEncoder() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,101,return new Metaphone();
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,105,* @param metaphone
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,106,*                  The metaphone to set.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,108,private void setMetaphone(Metaphone metaphone) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,109,this.metaphone = metaphone;
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,112,public void setUp() throws Exception {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,82,metaphone = new Metaphone();
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,114,this.setMetaphone(new Metaphone());
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,87,metaphone = null;
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,119,this.setMetaphone(null);
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,90,rotected StringEncoder makeEncoder() {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,91,eturn new Metaphone();
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,122,public void testIsMetaphoneEqual1() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,123,"this.assertMetaphoneEqual(new String[][] { { ""Case"", ""case"" }, {"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,124,"""CASE"", ""Case"" }, {"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,125,"""caSe"", ""cAsE"" }, {"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,126,"""quick"", ""cookie"" }"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,131,* Matches computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,133,public void testIsMetaphoneEqual2() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,134,"this.assertMetaphoneEqual(new String[][] { { ""Lawrence"", ""Lorenza"" }, {"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,135,"""Gary"", ""Cahra"" }, });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,139,* Initial AE case.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,141,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,143,public void testIsMetaphoneEqualAero() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,144,"this.assertIsMetaphoneEqual(""Aero"", new String[] { ""Eure"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,148,* Initial WH case.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,150,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,152,public void testIsMetaphoneEqualWhite() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,153,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,154,"""White"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,155,"new String[] { ""Wade"", ""Wait"", ""Waite"", ""Wat"", ""Whit"", ""Wiatt"", ""Wit"", ""Wittie"", ""Witty"", ""Wood"", ""Woodie"", ""Woody"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,159,"* Initial A, not followed by an E case."
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,161,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,163,public void testIsMetaphoneEqualAlbert() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,164,"this.assertIsMetaphoneEqual(""Albert"", new String[] { ""Ailbert"", ""Alberik"", ""Albert"", ""Alberto"", ""Albrecht"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,168,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,170,public void testIsMetaphoneEqualGary() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,171,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,172,"""Gary"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,173,new String[] {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,174,"""Cahra"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,175,"""Cara"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,176,"""Carey"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,177,"""Cari"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,178,"""Caria"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,179,"""Carie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,180,"""Caro"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,181,"""Carree"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,182,"""Carri"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,183,"""Carrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,184,"""Carry"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,185,"""Cary"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,186,"""Cora"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,187,"""Corey"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,188,"""Cori"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,189,"""Corie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,190,"""Correy"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,191,"""Corri"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,192,"""Corrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,193,"""Corry"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,194,"""Cory"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,195,"""Gray"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,196,"""Kara"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,197,"""Kare"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,198,"""Karee"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,199,"""Kari"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,200,"""Karia"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,201,"""Karie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,202,"""Karrah"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,203,"""Karrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,204,"""Karry"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,205,"""Kary"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,206,"""Keri"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,207,"""Kerri"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,208,"""Kerrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,209,"""Kerry"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,210,"""Kira"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,211,"""Kiri"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,212,"""Kora"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,213,"""Kore"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,214,"""Kori"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,215,"""Korie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,216,"""Korrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,217,"""Korry"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,221,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,223,public void testIsMetaphoneEqualJohn() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,224,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,225,"""John"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,226,new String[] {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,227,"""Gena"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,228,"""Gene"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,229,"""Genia"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,230,"""Genna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,231,"""Genni"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,232,"""Gennie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,233,"""Genny"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,234,"""Giana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,235,"""Gianna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,236,"""Gina"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,237,"""Ginni"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,238,"""Ginnie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,239,"""Ginny"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,240,"""Jaine"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,241,"""Jan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,242,"""Jana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,243,"""Jane"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,244,"""Janey"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,245,"""Jania"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,246,"""Janie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,247,"""Janna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,248,"""Jany"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,249,"""Jayne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,250,"""Jean"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,251,"""Jeana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,252,"""Jeane"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,253,"""Jeanie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,254,"""Jeanna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,255,"""Jeanne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,256,"""Jeannie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,257,"""Jen"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,258,"""Jena"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,259,"""Jeni"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,260,"""Jenn"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,261,"""Jenna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,262,"""Jennee"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,263,"""Jenni"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,264,"""Jennie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,265,"""Jenny"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,266,"""Jinny"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,267,"""Jo Ann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,268,"""Jo-Ann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,269,"""Jo-Anne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,270,"""Joan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,271,"""Joana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,272,"""Joane"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,273,"""Joanie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,274,"""Joann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,275,"""Joanna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,276,"""Joanne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,277,"""Joeann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,278,"""Johna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,279,"""Johnna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,280,"""Joni"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,281,"""Jonie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,282,"""Juana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,283,"""June"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,284,"""Junia"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,285,"""Junie"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,289,* Initial KN case.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,291,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,293,public void testIsMetaphoneEqualKnight() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,294,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,295,"""Knight"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,296,new String[] {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,297,"""Hynda"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,298,"""Nada"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,299,"""Nadia"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,300,"""Nady"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,301,"""Nat"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,302,"""Nata"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,303,"""Natty"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,304,"""Neda"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,305,"""Nedda"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,306,"""Nedi"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,307,"""Netta"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,308,"""Netti"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,309,"""Nettie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,310,"""Netty"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,311,"""Nita"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,312,"""Nydia"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,315,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,317,public void testIsMetaphoneEqualMary() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,318,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,319,"""Mary"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,320,new String[] {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,321,"""Mair"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,322,"""Maire"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,323,"""Mara"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,324,"""Mareah"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,325,"""Mari"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,326,"""Maria"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,327,"""Marie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,328,"""Mary"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,329,"""Maura"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,330,"""Maure"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,331,"""Meara"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,332,"""Merrie"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,333,"""Merry"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,334,"""Mira"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,335,"""Moira"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,336,"""Mora"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,337,"""Moria"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,338,"""Moyra"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,339,"""Muire"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,340,"""Myra"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,341,"""Myrah"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,345,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,347,public void testIsMetaphoneEqualParis() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,348,"this.assertIsMetaphoneEqual(""Paris"", new String[] { ""Pearcy"", ""Perris"", ""Piercy"", ""Pierz"", ""Pryse"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,352,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,354,public void testIsMetaphoneEqualPeter() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,355,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,356,"""Peter"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,357,"new String[] { ""Peadar"", ""Peder"", ""Pedro"", ""Peter"", ""Petr"", ""Peyter"", ""Pieter"", ""Pietro"", ""Piotr"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,361,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,363,public void testIsMetaphoneEqualRay() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,364,"this.assertIsMetaphoneEqual(""Ray"", new String[] { ""Ray"", ""Rey"", ""Roi"", ""Roy"", ""Ruy"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,368,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,370,public void testIsMetaphoneEqualSusan() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,371,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,372,"""Susan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,373,new String[] {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,374,"""Siusan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,375,"""Sosanna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,376,"""Susan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,377,"""Susana"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,378,"""Susann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,379,"""Susanna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,380,"""Susannah"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,381,"""Susanne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,382,"""Suzann"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,383,"""Suzanna"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,384,"""Suzanne"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,385,"""Zuzana"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,389,* Initial WR case.
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,391,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,393,public void testIsMetaphoneEqualWright() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,394,"this.assertIsMetaphoneEqual(""Wright"", new String[] { ""Rota"", ""Rudd"", ""Ryde"" });"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,398,* Match data computed from http://www.lanw.com/java/phonetic/default.htm
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,400,public void testIsMetaphoneEqualXalan() {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,401,this.assertIsMetaphoneEqual(
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,402,"""Xalan"","
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,403,"new String[] { ""Celene"", ""Celina"", ""Celine"", ""Selena"", ""Selene"", ""Selina"", ""Seline"", ""Suellen"", ""Xylina"" });"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,97,"ssertEquals(""TSTN"",_metaphone.metaphone(""testing""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,98,"ssertEquals(""0"",_metaphone.metaphone(""The""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,99,"ssertEquals(""KK"",_metaphone.metaphone(""quick""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,100,"ssertEquals(""BRN"",_metaphone.metaphone(""brown""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,101,"ssertEquals(""FKS"",_metaphone.metaphone(""fox""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,102,"ssertEquals(""JMPT"",_metaphone.metaphone(""jumped""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,103,"ssertEquals(""OFR"",_metaphone.metaphone(""over""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,104,"ssertEquals(""0"",_metaphone.metaphone(""the""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,105,"ssertEquals(""LS"",_metaphone.metaphone(""lazy""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,106,"ssertEquals(""TKS"",_metaphone.metaphone(""dogs""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,109,ublic void testIsMetaphoneEqual() {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,110,"ssertTrue(_metaphone.isMetaphoneEqual(""Case"",""case""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,111,"ssertTrue(_metaphone.isMetaphoneEqual(""CASE"",""Case""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,112,"ssertTrue(_metaphone.isMetaphoneEqual(""caSe"",""cAsE""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,114,"ssertTrue(_metaphone.isMetaphoneEqual(""cookie"",""quick""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,115,"ssertTrue(_metaphone.isMetaphoneEqual(""quick"",""cookie""));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,118,rivate Metaphone _metaphone = null;
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,407,"assertEquals(""TSTN"", this.getMetaphone().metaphone(""testing""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,408,"assertEquals(""0"", this.getMetaphone().metaphone(""The""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,409,"assertEquals(""KK"", this.getMetaphone().metaphone(""quick""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,410,"assertEquals(""BRN"", this.getMetaphone().metaphone(""brown""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,411,"assertEquals(""FKS"", this.getMetaphone().metaphone(""fox""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,412,"assertEquals(""JMPT"", this.getMetaphone().metaphone(""jumped""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,413,"assertEquals(""OFR"", this.getMetaphone().metaphone(""over""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,414,"assertEquals(""0"", this.getMetaphone().metaphone(""the""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,415,"assertEquals(""LS"", this.getMetaphone().metaphone(""lazy""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,416,"assertEquals(""TKS"", this.getMetaphone().metaphone(""dogs""));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,419,public void validateFixture(String[][] pairs) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,420,if (pairs.length == 0) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,421,"fail(""Test fixture is empty"");"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,423,for (int i = 0; i < pairs.length; i++) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,424,if (pairs[i].length != 2) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,425,"fail(""Error in test fixture in the data array at index "" + i);"
