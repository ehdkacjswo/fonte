is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,52,"rivate static final Map<NameType, Set<String>> namePfxs = new EnumMap<NameType, Set<String>>(NameType.class);"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,52,"private static final Map<NameType, Set<String>> NAME_PREFIXES = new EnumMap<NameType, Set<String>>(NameType.class);"
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,55,"amePfxs.put(NameType.ASHKENAZI,"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,55,"NAME_PREFIXES.put(NameType.ASHKENAZI,"
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,57,"amePfxs.put(NameType.SEPHARDIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(""al"", ""el"", ""da"", ""dal"", ""de"","
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,57,"NAME_PREFIXES.put(NameType.SEPHARDIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(""al"", ""el"", ""da"", ""dal"", ""de"","
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,59,"amePfxs.put(NameType.GENERIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(""da"", ""dal"", ""de"", ""del"", ""dela"","
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,59,"NAME_PREFIXES.put(NameType.GENERIC, Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(""da"", ""dal"", ""de"", ""del"", ""dela"","
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,157,or (String l : namePfxs.get(this.nameType)) {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,157,for (String l : NAME_PREFIXES.get(this.nameType)) {
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,185,ords2.removeAll(namePfxs.get(this.nameType));
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,185,words2.removeAll(NAME_PREFIXES.get(this.nameType));
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,189,ords2.removeAll(namePfxs.get(this.nameType));
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,189,words2.removeAll(NAME_PREFIXES.get(this.nameType));
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,244," Applied to a single alternative at a time -- not to a parenthisized list it removes all embedded bracketed attributes,"
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,245," logically-ands them together, and places them at the end."
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,244,"* Applied to a single alternative at a time -- not to a parenthisized list it removes all embedded bracketed attributes, logically-ands"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,245,"* them together, and places them at the end."
