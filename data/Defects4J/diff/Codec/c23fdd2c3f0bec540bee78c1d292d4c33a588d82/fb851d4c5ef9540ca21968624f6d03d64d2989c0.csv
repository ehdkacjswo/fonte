is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,6,* Copyright (c) 2001-2004 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,7,* reserved.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,11,* are met:
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,19,*    distribution.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,21,"* 3. The end-user documentation included with the redistribution,"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,22,"*    if any, must include the following acknowledgement:"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,25,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,26,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,28,"* 4. The names ""Apache"", ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,34,"*    nor may ""Apache"" appear in their name without prior"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,35,*    written permission of the Apache Software Foundation.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,57,package org.apache.commons.codec.binary ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,59,import org.apache.commons.codec.BinaryDecoder ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,60,import org.apache.commons.codec.BinaryEncoder ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,61,import org.apache.commons.codec.DecoderException ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,62,import org.apache.commons.codec.EncoderException ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,65,* Encodes and decodes binary to and from ascii bit Strings.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,67,* @todo may want to add more bit vector functions like and/or/xor/nand
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,68,* @todo also might be good to generate boolean[] from byte[] et. cetera.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,69,"* @author <a href=""mailto:akarasulu@apache.org"">Alex Karasulu</a>"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,70,* @author $Author: tobrien $
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,71,* @version $Revision: 1.1 $
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,73,"public class Binary implements BinaryDecoder, BinaryEncoder"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,75,/** mask for bit 0 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,76,public static final int BIT_0 = 1 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,77,/** mask for bit 1 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,78,public static final int BIT_1 = 1 << 1 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,79,/** mask for bit 2 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,80,public static final int BIT_2 = 1 << 2 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,81,/** mask for bit 3 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,82,public static final int BIT_3 = 1 << 3 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,83,/** mask for bit 4 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,84,public static final int BIT_4 = 1 << 4 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,85,/** mask for bit 5 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,86,public static final int BIT_5 = 1 << 5 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,87,/** mask for bit 6 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,88,public static final int BIT_6 = 1 << 6 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,89,/** mask for bit 7 of a byte */
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,90,public static final int BIT_7 = 1 << 7 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,92,public static final int [] BITS =
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,94,"BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,99,* Converts an array of raw binary data into an array of ascii 0 and 1
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,100,* characters.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,102,* @param raw the raw binary data to convert
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,103,* @return 0 and 1 ascii character bytes one for each bit of the argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,104,* @see org.apache.commons.codec.BinaryEncoder#encode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,106,public byte[] encode( byte[] raw )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,108,return toAsciiBytes( raw ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,113,* Converts an array of raw binary data into an array of ascii 0 and 1
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,114,* chars.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,116,* @param raw the raw binary data to convert
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,117,* @return 0 and 1 ascii character chars one for each bit of the argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,118,* @throws EncoderException if the argument is not a byte[]
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,119,* @see org.apache.commons.codec.Encoder#encode(java.lang.Object)
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,121,public Object encode( Object raw ) throws EncoderException
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,123,if ( ! ( raw instanceof byte [] ) )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,125,"throw new EncoderException( ""argument not a byte array"" ) ;"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,128,return toAsciiChars( ( byte [] ) raw ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,133,* Decodes a byte array where each byte represents an ascii '0' or '1'.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,135,* @param ascii each byte represents an ascii '0' or '1'
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,136,* @return the raw encoded binary where each bit corresponds to a byte in
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,137,*      the byte array argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,138,"* @throws DecoderException if argument is not a byte[], char[] or String"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,139,* @see org.apache.commons.codec.Decoder#decode(java.lang.Object)
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,141,public Object decode( Object ascii ) throws DecoderException
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,143,if ( ascii instanceof byte[] )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,145,return fromAscii( ( byte[] ) ascii ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,148,if ( ascii instanceof char[] )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,150,return fromAscii( ( char[] ) ascii ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,153,if ( ascii instanceof String )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,155,return fromAscii( ( ( String ) ascii ).toCharArray() ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,158,"throw new DecoderException( ""argument not a byte array"" ) ;"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,163,* Decodes a byte array where each byte represents an ascii '0' or '1'.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,165,* @param ascii each byte represents an ascii '0' or '1'
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,166,* @return the raw encoded binary where each bit corresponds to a byte in
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,167,*      the byte array argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,168,* @see org.apache.commons.codec.Decoder#decode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,170,public byte[] decode( byte[] ascii )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,172,return fromAscii( ascii ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,177,* Decodes a String where each char of the String represents an ascii '0'
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,178,* or '1'.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,180,* @param ascii String of '0' and '1' characters
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,181,* @return the raw encoded binary where each bit corresponds to a byte in
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,182,*      the byte array argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,183,* @see org.apache.commons.codec.Decoder#decode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,185,public byte[] decode( String ascii )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,187,return fromAscii( ascii.toCharArray() ) ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,192,* Decodes a byte array where each char represents an ascii '0' or '1'.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,194,* @param ascii each char represents an ascii '0' or '1'
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,195,* @return the raw encoded binary where each bit corresponds to a char in
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,196,*      the char array argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,198,public static byte[] fromAscii( char[] ascii )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,200,// get length/8 times bytes with 3 bit shifts to the right of the length
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,201,byte[] l_raw = new byte[ ascii.length >> 3 ] ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,204,* Yah its long and repetitive but I unraveled an internal loop to
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,205,* check each bit of a byte for speed using the bit masks that are
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,206,* precomputed which is another PITA but it makes it faster.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,208,* We also decr index jj by 8 as we go along to not recompute indices
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,209,* using multiplication every time inside the loop.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,211,* @todo might want another nested loop to use BITS[] now that its here
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,213,"for ( int ii=0, jj=ascii.length-1; ii < l_raw.length; ii++, jj-=8 )"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,215,if ( ascii[jj] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,217,l_raw[ii] |= BIT_0 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,220,if ( ascii[jj - 1] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,222,l_raw[ii] |= BIT_1 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,225,if ( ascii[jj - 2] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,227,l_raw[ii] |= BIT_2 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,230,if ( ascii[jj - 3] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,232,l_raw[ii] |= BIT_3 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,235,if ( ascii[jj - 4] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,237,l_raw[ii] |= BIT_4 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,240,if ( ascii[jj - 5] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,242,l_raw[ii] |= BIT_5 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,245,if ( ascii[jj - 6] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,247,l_raw[ii] |= BIT_6 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,250,if ( ascii[jj - 7] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,252,l_raw[ii] |= BIT_7 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,256,return l_raw ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,261,* Decodes a byte array where each byte represents an ascii '0' or '1'.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,263,* @param ascii each byte represents an ascii '0' or '1'
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,264,* @return the raw encoded binary where each bit corresponds to a byte in
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,265,*      the byte array argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,267,public static byte[] fromAscii( byte[] ascii )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,269,// get length/8 times bytes with 3 bit shifts to the right of the length
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,270,byte[] l_raw = new byte[ ascii.length >> 3 ] ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,273,* Yah its long and repetitive but I unraveled an internal loop to
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,274,* check each bit of a byte for speed using the bit masks that are
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,275,* precomputed which is another PITA but it makes it faster.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,277,* We also decr index jj by 8 as we go along to not recompute indices
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,278,* using multiplication every time inside the loop.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,280,* @todo might want another nested loop to use BITS[] now that its here
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,282,"for ( int ii=0, jj=ascii.length-1; ii < l_raw.length; ii++, jj-=8 )"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,284,if ( ascii[jj] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,286,l_raw[ii] |= BIT_0 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,289,if ( ascii[jj - 1] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,291,l_raw[ii] |= BIT_1 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,294,if ( ascii[jj - 2] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,296,l_raw[ii] |= BIT_2 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,299,if ( ascii[jj - 3] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,301,l_raw[ii] |= BIT_3 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,304,if ( ascii[jj - 4] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,306,l_raw[ii] |= BIT_4 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,309,if ( ascii[jj - 5] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,311,l_raw[ii] |= BIT_5 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,314,if ( ascii[jj - 6] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,316,l_raw[ii] |= BIT_6 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,319,if ( ascii[jj - 7] == '1' )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,321,l_raw[ii] |= BIT_7 ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,325,return l_raw ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,330,* Converts an array of raw binary data into an array of ascii 0 and 1
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,331,* character bytes - each byte is a truncated char.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,333,* @param raw the raw binary data to convert
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,334,* @return an array of 0 and 1 character bytes for each bit of the argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,335,* @see org.apache.commons.codec.BinaryEncoder#encode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,337,public static byte[] toAsciiBytes( byte[] raw )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,339,// get 8 times the bytes with 3 bit shifts to the left of the length
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,340,byte [] l_ascii = new byte[ raw.length << 3 ] ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,343,* Yah its long and repetitive but I unraveled an internal loop to
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,344,* check each bit of a byte for speed using the bit masks that are
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,345,* precomputed which is another PITA but it makes it faster.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,347,* We also decr index jj by 8 as we go along to not recompute indices
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,348,* using multiplication every time inside the loop.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,350,* @todo might want another nested loop to use BITS[] now that its here
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,352,"for ( int ii=0, jj=l_ascii.length-1; ii < raw.length; ii++, jj-=8 )"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,354,if ( ( raw[ii] & BIT_0 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,356,l_ascii[jj] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,358,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,360,l_ascii[jj] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,363,if ( ( raw[ii] & BIT_1 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,365,l_ascii[jj - 1] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,367,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,369,l_ascii[jj - 1] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,372,if ( ( raw[ii] & BIT_2 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,374,l_ascii[jj - 2] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,376,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,378,l_ascii[jj - 2] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,381,if ( ( raw[ii] & BIT_3 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,383,l_ascii[jj - 3] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,385,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,387,l_ascii[jj - 3] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,390,if ( ( raw[ii] & BIT_4 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,392,l_ascii[jj - 4] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,394,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,396,l_ascii[jj - 4] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,399,if ( ( raw[ii] & BIT_5 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,401,l_ascii[jj - 5] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,403,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,405,l_ascii[jj - 5] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,408,if ( ( raw[ii] & BIT_6 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,410,l_ascii[jj - 6] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,412,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,414,l_ascii[jj - 6] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,417,if ( ( raw[ii] & BIT_7 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,419,l_ascii[jj - 7] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,421,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,423,l_ascii[jj - 7] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,427,return l_ascii ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,432,* Converts an array of raw binary data into an array of ascii 0 and 1
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,433,* characters.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,435,* @param raw the raw binary data to convert
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,436,* @return an array of 0 and 1 characters for each bit of the argument
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,437,* @see org.apache.commons.codec.BinaryEncoder#encode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,439,public static char[] toAsciiChars( byte[] raw )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,441,// get 8 times the bytes with 3 bit shifts to the left of the length
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,442,char [] l_ascii = new char[ raw.length << 3 ] ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,445,* Yah its long and repetitive but I unraveled an internal loop to
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,446,* check each bit of a byte for speed using the bit masks that are
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,447,* precomputed which is another PITA but it makes it faster.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,449,* We also grow index jj by 8 as we go along to not recompute indices
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,450,* using multiplication every time inside the loop.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,452,* @todo might want another nested loop to use BITS[] now that its here
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,454,"for ( int ii=0, jj=l_ascii.length-1; ii < raw.length; ii++, jj-=8 )"
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,456,if ( ( raw[ii] & BIT_0 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,458,l_ascii[jj] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,460,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,462,l_ascii[jj] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,465,if ( ( raw[ii] & BIT_1 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,467,l_ascii[jj - 1] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,469,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,471,l_ascii[jj - 1] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,474,if ( ( raw[ii] & BIT_2 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,476,l_ascii[jj - 2] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,478,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,480,l_ascii[jj - 2] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,483,if ( ( raw[ii] & BIT_3 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,485,l_ascii[jj - 3] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,487,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,489,l_ascii[jj - 3] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,492,if ( ( raw[ii] & BIT_4 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,494,l_ascii[jj - 4] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,496,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,498,l_ascii[jj - 4] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,501,if ( ( raw[ii] & BIT_5 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,503,l_ascii[jj - 5] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,505,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,507,l_ascii[jj - 5] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,510,if ( ( raw[ii] & BIT_6 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,512,l_ascii[jj - 6] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,514,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,516,l_ascii[jj - 6] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,519,if ( ( raw[ii] & BIT_7 ) == 0 )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,521,l_ascii[jj - 7] = '0' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,523,else
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,525,l_ascii[jj - 7] = '1' ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,529,return l_ascii ;
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,534,* Converts an array of raw binary data into a String of ascii 0 and 1
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,535,* characters.
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,537,* @param raw the raw binary data to convert
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,538,* @return a String of 0 and 1 characters representing the binary data
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,539,* @see org.apache.commons.codec.BinaryEncoder#encode(byte[])
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,541,public static String toAsciiString( byte[] raw )
True,src/java/org/apache/commons/codec/binary/Binary.java,src/java/org/apache/commons/codec/binary/Binary.java,543,return new String( toAsciiChars( raw ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,4,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,6,* Copyright (c) 2001-2004 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,7,* reserved.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,10,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,11,* are met:
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,18,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,19,*    distribution.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,21,"* 3. The end-user documentation included with the redistribution,"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,22,"*    if any, must include the following acknowledgement:"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,23,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,25,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,26,*    if and wherever such third-party acknowledgements normally appear.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,28,"* 4. The names ""Apache"", ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,30,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,31,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,34,"*    nor may ""Apache"" appear in their name without prior"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,35,*    written permission of the Apache Software Foundation.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,48,* SUCH DAMAGE.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,51,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,53,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,54,* <http://www.apache.org/>.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,58,package org.apache.commons.codec.binary ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,61,import junit.framework.TestCase ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,65,* TestCase for Binary class.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,67,"* @author <a href=""mailto:akarasulu@apache.org"">Alex Karasulu</a>"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,68,* @author $Author: tobrien $
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,69,* @version $Rev$
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,71,public class BinaryTest extends TestCase
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,73,Binary instance = null ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,76,* @see TestCase#setUp()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,78,protected void setUp() throws Exception
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,80,super.setUp();
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,81,instance = new Binary() ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,85,* @see TestCase#tearDown()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,87,protected void tearDown() throws Exception
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,89,super.tearDown();
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,90,instance = null ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,94,* Constructor for BinaryTest.
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,95,* @param arg0
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,97,public BinaryTest(String arg0)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,99,super(arg0);
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,104,// Test decode(Object)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,110,* Class to test for Object decode(Object)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,112,public void testDecodeObject() throws Exception
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,114,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,116,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,117,"byte [] decoded = ( byte[] ) instance.decode( ( Object ) ""00000000"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,118,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,120,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,121,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,122,"decoded = ( byte[] ) instance.decode( ( Object ) ""00000001"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,123,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,125,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,126,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,127,"decoded = ( byte[] ) instance.decode( ( Object ) ""00000011"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,128,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,130,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,131,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,132,"decoded = ( byte[] ) instance.decode( ( Object ) ""00000111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,133,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,135,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,136,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,137,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,138,"decoded = ( byte[] ) instance.decode( ( Object ) ""00001111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,139,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,141,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,142,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,143,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,144,"decoded = ( byte[] ) instance.decode( ( Object ) ""00011111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,145,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,147,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,148,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,149,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,150,"decoded = ( byte[] ) instance.decode( ( Object ) ""00111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,151,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,153,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,154,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,155,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,156,"decoded = ( byte[] ) instance.decode( ( Object ) ""01111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,157,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,159,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,160,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,161,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,162,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,163,"decoded = ( byte[] ) instance.decode( ( Object ) ""11111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,164,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,166,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,168,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,169,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,170,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,171,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,172,"decoded = ( byte[] ) instance.decode( ( Object ) ""0000000011111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,173,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,175,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,176,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,177,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,178,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,179,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,180,"decoded = ( byte[] ) instance.decode( ( Object ) ""0000000111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,181,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,183,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,184,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,185,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,186,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,187,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,188,"decoded = ( byte[] ) instance.decode( ( Object ) ""0000001111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,189,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,191,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,192,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,193,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,194,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,195,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,196,"decoded = ( byte[] ) instance.decode( ( Object ) ""0000011111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,197,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,199,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,200,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,201,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,202,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,203,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,204,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,205,"decoded = ( byte[] ) instance.decode( ( Object ) ""0000111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,206,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,208,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,209,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,210,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,211,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,212,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,213,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,214,"decoded = ( byte[] ) instance.decode( ( Object ) ""0001111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,215,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,217,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,218,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,219,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,220,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,221,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,222,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,223,"decoded = ( byte[] ) instance.decode( ( Object ) ""0011111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,224,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,226,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,227,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,228,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,229,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,230,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,231,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,232,"decoded = ( byte[] ) instance.decode( ( Object ) ""0111111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,233,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,235,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,236,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,237,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,238,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,239,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,240,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,241,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,242,"decoded = ( byte[] ) instance.decode( ( Object ) ""1111111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,243,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,249,// Test decode(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,255,* Class to test for byte[] decode(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,257,public void testDecodebyteArray()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,259,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,261,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,262,"byte [] decoded = instance.decode( ""00000000"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,263,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,265,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,266,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,267,"decoded = instance.decode( ""00000001"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,268,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,270,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,271,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,272,"decoded = instance.decode( ""00000011"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,273,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,275,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,276,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,277,"decoded = instance.decode( ""00000111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,278,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,280,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,281,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,282,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,283,"decoded = instance.decode( ""00001111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,284,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,286,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,287,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,288,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,289,"decoded = instance.decode( ""00011111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,290,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,292,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,293,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,294,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,295,"decoded = instance.decode( ""00111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,296,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,298,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,299,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,300,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,301,"decoded = instance.decode( ""01111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,302,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,304,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,305,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,306,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,307,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,308,"decoded = instance.decode( ""11111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,309,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,311,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,313,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,314,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,315,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,316,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,317,"decoded = instance.decode( ""0000000011111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,318,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,320,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,321,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,322,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,323,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,324,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,325,"decoded = instance.decode( ""0000000111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,326,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,328,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,329,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,330,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,331,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,332,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,333,"decoded = instance.decode( ""0000001111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,334,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,336,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,337,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,338,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,339,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,340,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,341,"decoded = instance.decode( ""0000011111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,342,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,344,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,345,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,346,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,347,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,348,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,349,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,350,"decoded = instance.decode( ""0000111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,351,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,353,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,354,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,355,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,356,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,357,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,358,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,359,"decoded = instance.decode( ""0001111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,360,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,362,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,363,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,364,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,365,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,366,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,367,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,368,"decoded = instance.decode( ""0011111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,369,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,371,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,372,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,373,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,374,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,375,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,376,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,377,"decoded = instance.decode( ""0111111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,378,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,380,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,381,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,382,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,383,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,384,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,385,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,386,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,387,"decoded = instance.decode( ""1111111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,388,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,394,// Test decode(String)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,400,* Class to test for byte[] decode(String)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,402,public void testDecodeString()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,404,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,406,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,407,"byte [] decoded = instance.decode( ""00000000"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,408,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,410,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,411,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,412,"decoded = instance.decode( ""00000001"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,413,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,415,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,416,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,417,"decoded = instance.decode( ""00000011"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,418,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,420,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,421,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,422,"decoded = instance.decode( ""00000111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,423,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,425,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,426,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,427,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,428,"decoded = instance.decode( ""00001111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,429,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,431,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,432,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,433,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,434,"decoded = instance.decode( ""00011111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,435,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,437,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,438,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,439,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,440,"decoded = instance.decode( ""00111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,441,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,443,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,444,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,445,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,446,"decoded = instance.decode( ""01111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,447,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,449,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,450,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,451,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,452,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,453,"decoded = instance.decode( ""11111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,454,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,456,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,458,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,459,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,460,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,461,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,462,"decoded = instance.decode( ""0000000011111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,463,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,465,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,466,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,467,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,468,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,469,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,470,"decoded = instance.decode( ""0000000111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,471,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,473,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,474,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,475,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,476,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,477,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,478,"decoded = instance.decode( ""0000001111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,479,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,481,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,482,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,483,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,484,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,485,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,486,"decoded = instance.decode( ""0000011111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,487,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,489,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,490,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,491,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,492,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,493,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,494,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,495,"decoded = instance.decode( ""0000111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,496,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,498,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,499,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,500,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,501,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,502,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,503,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,504,"decoded = instance.decode( ""0001111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,505,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,507,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,508,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,509,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,510,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,511,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,512,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,513,"decoded = instance.decode( ""0011111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,514,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,516,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,517,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,518,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,519,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,520,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,521,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,522,"decoded = instance.decode( ""0111111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,523,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,525,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,526,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,527,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,528,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,529,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,530,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,531,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,532,"decoded = instance.decode( ""1111111111111111"" ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,533,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,539,// Test fromAscii(char[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,545,* Class to test for byte[] fromAscii(char[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,547,public void testFromAsciicharArray()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,549,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,551,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,552,"byte [] decoded = Binary.fromAscii( ""00000000"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,553,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,555,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,556,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,557,"decoded = Binary.fromAscii( ""00000001"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,558,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,560,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,561,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,562,"decoded = Binary.fromAscii( ""00000011"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,563,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,565,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,566,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,567,"decoded = Binary.fromAscii( ""00000111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,568,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,570,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,571,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,572,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,573,"decoded = Binary.fromAscii( ""00001111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,574,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,576,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,577,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,578,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,579,"decoded = Binary.fromAscii( ""00011111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,580,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,582,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,583,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,584,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,585,"decoded = Binary.fromAscii( ""00111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,586,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,588,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,589,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,590,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,591,"decoded = Binary.fromAscii( ""01111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,592,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,594,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,595,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,596,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,597,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,598,"decoded = Binary.fromAscii( ""11111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,599,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,601,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,603,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,604,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,605,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,606,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,607,"decoded = Binary.fromAscii( ""0000000011111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,608,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,610,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,611,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,612,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,613,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,614,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,615,"decoded = Binary.fromAscii( ""0000000111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,616,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,618,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,619,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,620,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,621,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,622,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,623,"decoded = Binary.fromAscii( ""0000001111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,624,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,626,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,627,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,628,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,629,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,630,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,631,"decoded = Binary.fromAscii( ""0000011111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,632,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,634,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,635,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,636,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,637,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,638,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,639,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,640,"decoded = Binary.fromAscii( ""0000111111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,641,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,643,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,644,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,645,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,646,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,647,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,648,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,649,"decoded = Binary.fromAscii( ""0001111111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,650,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,652,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,653,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,654,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,655,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,656,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,657,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,658,"decoded = Binary.fromAscii( ""0011111111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,659,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,661,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,662,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,663,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,664,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,665,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,666,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,667,"decoded = Binary.fromAscii( ""0111111111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,668,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,670,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,671,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,672,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,673,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,674,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,675,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,676,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,677,"decoded = Binary.fromAscii( ""1111111111111111"".toCharArray() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,678,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,684,// Test fromAscii(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,690,* Class to test for byte[] fromAscii(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,692,public void testFromAsciibyteArray()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,694,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,696,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,697,"byte [] decoded = Binary.fromAscii( ""00000000"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,698,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,700,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,701,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,702,"decoded = Binary.fromAscii( ""00000001"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,703,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,705,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,706,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,707,"decoded = Binary.fromAscii( ""00000011"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,708,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,710,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,711,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,712,"decoded = Binary.fromAscii( ""00000111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,713,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,715,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,716,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,717,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,718,"decoded = Binary.fromAscii( ""00001111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,719,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,721,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,722,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,723,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,724,"decoded = Binary.fromAscii( ""00011111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,725,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,727,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,728,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,729,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,730,"decoded = Binary.fromAscii( ""00111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,731,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,733,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,734,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,735,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,736,"decoded = Binary.fromAscii( ""01111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,737,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,739,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,740,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,741,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,742,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,743,"decoded = Binary.fromAscii( ""11111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,744,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,746,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,748,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,749,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,750,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,751,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,752,"decoded = Binary.fromAscii( ""0000000011111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,753,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,755,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,756,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,757,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,758,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,759,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,760,"decoded = Binary.fromAscii( ""0000000111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,761,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,763,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,764,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,765,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,766,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,767,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,768,"decoded = Binary.fromAscii( ""0000001111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,769,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,771,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,772,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,773,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,774,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,775,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,776,"decoded = Binary.fromAscii( ""0000011111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,777,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,779,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,780,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,781,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,782,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,783,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,784,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,785,"decoded = Binary.fromAscii( ""0000111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,786,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,788,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,789,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,790,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,791,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,792,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,793,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,794,"decoded = Binary.fromAscii( ""0001111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,795,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,797,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,798,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,799,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,800,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,801,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,802,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,803,"decoded = Binary.fromAscii( ""0011111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,804,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,806,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,807,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,808,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,809,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,810,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,811,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,812,"decoded = Binary.fromAscii( ""0111111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,813,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,815,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,816,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,817,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,818,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,819,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,820,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,821,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,822,"decoded = Binary.fromAscii( ""1111111111111111"".getBytes() ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,823,"assertEquals( new String( bits ), new String( decoded ) ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,830,// Test encode(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,836,* Class to test for byte[] encode(byte[])
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,838,public void testEncodebyteArray()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,840,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,842,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,843,String l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,844,"assertEquals( ""00000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,846,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,847,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,848,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,849,"assertEquals( ""00000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,851,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,852,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,853,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,854,"assertEquals( ""00000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,856,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,857,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,858,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,859,"assertEquals( ""00000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,861,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,862,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,863,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,864,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,865,"assertEquals( ""00001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,867,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,868,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,869,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,870,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,871,"assertEquals( ""00011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,873,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,874,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,875,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,876,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,877,"assertEquals( ""00111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,879,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,880,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,881,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,882,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,883,"assertEquals( ""01111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,885,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,886,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,887,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,888,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,889,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,890,"assertEquals( ""11111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,892,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,894,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,895,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,896,"assertEquals( ""0000000000000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,898,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,899,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,900,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,901,"assertEquals( ""0000000000000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,903,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,904,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,905,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,906,"assertEquals( ""0000000000000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,908,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,909,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,910,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,911,"assertEquals( ""0000000000000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,913,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,914,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,915,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,916,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,917,"assertEquals( ""0000000000001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,919,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,920,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,921,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,922,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,923,"assertEquals( ""0000000000011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,925,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,926,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,927,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,928,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,929,"assertEquals( ""0000000000111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,931,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,932,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,933,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,934,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,935,"assertEquals( ""0000000001111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,937,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,938,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,939,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,940,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,941,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,942,"assertEquals( ""0000000011111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,944,// work on the other byte now
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,946,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,947,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,948,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,949,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,950,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,951,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,952,"assertEquals( ""0000000111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,954,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,955,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,956,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,957,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,958,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,959,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,960,"assertEquals( ""0000001111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,962,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,963,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,964,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,965,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,966,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,967,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,968,"assertEquals( ""0000011111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,970,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,971,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,972,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,973,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,974,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,975,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,976,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,977,"assertEquals( ""0000111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,979,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,980,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,981,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,982,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,983,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,984,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,985,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,986,"assertEquals( ""0001111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,988,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,989,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,990,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,991,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,992,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,993,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,994,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,995,"assertEquals( ""0011111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,997,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,998,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,999,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1000,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1001,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1002,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1003,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1004,"assertEquals( ""0111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1006,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1007,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1008,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1009,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1010,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1011,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1012,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1013,l_encoded = new String( instance.encode( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1014,"assertEquals( ""1111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1020,// Test toAsciiBytes
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1025,public void testToAsciiBytes()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1027,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1029,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1030,String l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1031,"assertEquals( ""00000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1033,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1034,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1035,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1036,"assertEquals( ""00000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1038,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1039,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1040,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1041,"assertEquals( ""00000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1043,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1044,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1045,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1046,"assertEquals( ""00000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1048,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1049,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1050,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1051,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1052,"assertEquals( ""00001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1054,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1055,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1056,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1057,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1058,"assertEquals( ""00011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1060,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1061,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1062,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1063,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1064,"assertEquals( ""00111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1066,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1067,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1068,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1069,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1070,"assertEquals( ""01111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1072,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1073,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1074,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1075,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1076,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1077,"assertEquals( ""11111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1079,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1081,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1082,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1083,"assertEquals( ""0000000000000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1085,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1086,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1087,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1088,"assertEquals( ""0000000000000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1090,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1091,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1092,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1093,"assertEquals( ""0000000000000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1095,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1096,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1097,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1098,"assertEquals( ""0000000000000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1100,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1101,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1102,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1103,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1104,"assertEquals( ""0000000000001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1106,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1107,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1108,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1109,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1110,"assertEquals( ""0000000000011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1112,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1113,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1114,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1115,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1116,"assertEquals( ""0000000000111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1118,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1119,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1120,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1121,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1122,"assertEquals( ""0000000001111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1124,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1125,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1126,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1127,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1128,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1129,"assertEquals( ""0000000011111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1131,// work on the other byte now
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1133,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1134,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1135,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1136,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1137,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1138,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1139,"assertEquals( ""0000000111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1141,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1142,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1143,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1144,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1145,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1146,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1147,"assertEquals( ""0000001111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1149,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1150,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1151,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1152,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1153,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1154,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1155,"assertEquals( ""0000011111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1157,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1158,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1159,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1160,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1161,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1162,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1163,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1164,"assertEquals( ""0000111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1166,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1167,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1168,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1169,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1170,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1171,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1172,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1173,"assertEquals( ""0001111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1175,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1176,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1177,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1178,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1179,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1180,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1181,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1182,"assertEquals( ""0011111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1184,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1185,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1186,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1187,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1188,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1189,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1190,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1191,"assertEquals( ""0111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1193,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1194,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1195,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1196,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1197,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1198,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1199,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1200,l_encoded = new String( Binary.toAsciiBytes( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1201,"assertEquals( ""1111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1206,// Test toAsciiChars
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1211,public void testToAsciiChars()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1213,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1215,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1216,String l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1217,"assertEquals( ""00000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1219,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1220,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1221,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1222,"assertEquals( ""00000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1224,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1225,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1226,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1227,"assertEquals( ""00000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1229,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1230,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1231,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1232,"assertEquals( ""00000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1234,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1235,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1236,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1237,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1238,"assertEquals( ""00001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1240,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1241,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1242,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1243,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1244,"assertEquals( ""00011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1246,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1247,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1248,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1249,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1250,"assertEquals( ""00111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1252,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1253,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1254,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1255,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1256,"assertEquals( ""01111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1258,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1259,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1260,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1261,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1262,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1263,"assertEquals( ""11111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1265,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1267,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1268,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1269,"assertEquals( ""0000000000000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1271,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1272,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1273,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1274,"assertEquals( ""0000000000000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1276,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1277,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1278,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1279,"assertEquals( ""0000000000000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1281,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1282,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1283,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1284,"assertEquals( ""0000000000000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1286,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1287,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1288,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1289,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1290,"assertEquals( ""0000000000001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1292,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1293,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1294,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1295,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1296,"assertEquals( ""0000000000011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1298,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1299,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1300,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1301,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1302,"assertEquals( ""0000000000111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1304,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1305,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1306,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1307,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1308,"assertEquals( ""0000000001111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1310,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1311,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1312,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1313,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1314,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1315,"assertEquals( ""0000000011111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1317,// work on the other byte now
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1319,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1320,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1321,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1322,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1323,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1324,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1325,"assertEquals( ""0000000111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1327,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1328,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1329,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1330,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1331,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1332,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1333,"assertEquals( ""0000001111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1335,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1336,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1337,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1338,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1339,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1340,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1341,"assertEquals( ""0000011111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1343,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1344,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1345,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1346,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1347,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1348,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1349,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1350,"assertEquals( ""0000111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1352,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1353,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1354,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1355,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1356,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1357,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1358,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1359,"assertEquals( ""0001111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1361,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1362,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1363,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1364,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1365,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1366,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1367,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1368,"assertEquals( ""0011111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1370,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1371,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1372,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1373,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1374,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1375,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1376,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1377,"assertEquals( ""0111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1379,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1380,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1381,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1382,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1383,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1384,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1385,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1386,l_encoded = new String( Binary.toAsciiChars( bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1387,"assertEquals( ""1111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1393,// Test toAsciiString
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1398,public void testToAsciiString()
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1400,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1402,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1403,String l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1404,"assertEquals( ""00000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1406,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1407,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1408,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1409,"assertEquals( ""00000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1411,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1412,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1413,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1414,"assertEquals( ""00000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1416,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1417,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1418,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1419,"assertEquals( ""00000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1421,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1422,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1423,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1424,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1425,"assertEquals( ""00001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1427,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1428,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1429,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1430,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1431,"assertEquals( ""00011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1433,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1434,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1435,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1436,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1437,"assertEquals( ""00111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1439,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1440,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1441,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1442,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1443,"assertEquals( ""01111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1445,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1446,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1447,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1448,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1449,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1450,"assertEquals( ""11111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1452,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1454,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1455,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1456,"assertEquals( ""0000000000000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1458,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1459,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1460,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1461,"assertEquals( ""0000000000000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1463,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1464,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1465,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1466,"assertEquals( ""0000000000000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1468,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1469,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1470,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1471,"assertEquals( ""0000000000000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1473,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1474,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1475,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1476,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1477,"assertEquals( ""0000000000001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1479,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1480,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1481,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1482,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1483,"assertEquals( ""0000000000011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1485,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1486,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1487,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1488,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1489,"assertEquals( ""0000000000111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1491,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1492,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1493,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1494,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1495,"assertEquals( ""0000000001111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1497,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1498,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1499,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1500,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1501,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1502,"assertEquals( ""0000000011111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1504,// work on the other byte now
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1506,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1507,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1508,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1509,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1510,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1511,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1512,"assertEquals( ""0000000111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1514,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1515,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1516,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1517,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1518,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1519,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1520,"assertEquals( ""0000001111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1522,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1523,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1524,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1525,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1526,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1527,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1528,"assertEquals( ""0000011111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1530,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1531,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1532,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1533,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1534,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1535,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1536,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1537,"assertEquals( ""0000111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1539,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1540,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1541,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1542,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1543,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1544,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1545,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1546,"assertEquals( ""0001111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1548,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1549,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1550,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1551,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1552,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1553,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1554,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1555,"assertEquals( ""0011111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1557,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1558,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1559,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1560,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1561,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1562,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1563,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1564,"assertEquals( ""0111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1566,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1567,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1568,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1569,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1570,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1571,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1572,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1573,l_encoded = Binary.toAsciiString( bits ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1574,"assertEquals( ""1111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1580,// Test encode(Object)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1586,* Class to test for Object encode(Object)
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1588,public void testEncodeObject() throws Exception
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1590,// With a single raw binary
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1592,byte [] bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1593,String l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1594,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1595,"assertEquals( ""00000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1597,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1598,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1599,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1600,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1601,"assertEquals( ""00000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1603,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1604,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1605,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1606,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1607,"assertEquals( ""00000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1609,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1610,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1611,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1612,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1613,"assertEquals( ""00000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1615,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1616,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1617,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1618,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1619,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1620,"assertEquals( ""00001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1622,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1623,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1624,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1625,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1626,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1627,"assertEquals( ""00011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1629,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1630,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1631,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1632,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1633,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1634,"assertEquals( ""00111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1636,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1637,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1638,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1639,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1640,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1641,"assertEquals( ""01111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1643,bits = new byte[1] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1644,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1645,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1646,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1647,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1648,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1649,"assertEquals( ""11111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1651,// With a two raw binaries
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1653,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1654,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1655,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1656,"assertEquals( ""0000000000000000"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1658,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1659,bits[0] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1660,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1661,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1662,"assertEquals( ""0000000000000001"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1664,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1665,bits[0] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1666,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1667,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1668,"assertEquals( ""0000000000000011"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1670,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1671,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1672,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1673,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1674,"assertEquals( ""0000000000000111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1676,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1677,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1678,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1679,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1680,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1681,"assertEquals( ""0000000000001111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1683,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1684,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1685,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1686,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1687,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1688,"assertEquals( ""0000000000011111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1690,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1691,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1692,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1693,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1694,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1695,"assertEquals( ""0000000000111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1697,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1698,bits[0] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1699,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1700,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1701,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1702,"assertEquals( ""0000000001111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1704,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1705,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1706,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1707,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1708,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1709,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1710,"assertEquals( ""0000000011111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1712,// work on the other byte now
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1714,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1715,bits[1] = Binary.BIT_0 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1716,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1717,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1718,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1719,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1720,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1721,"assertEquals( ""0000000111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1723,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1724,bits[1] = Binary.BIT_0 | Binary.BIT_1 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1725,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1726,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1727,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1728,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1729,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1730,"assertEquals( ""0000001111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1732,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1733,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1734,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1735,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1736,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1737,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1738,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1739,"assertEquals( ""0000011111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1741,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1742,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1743,| Binary.BIT_3 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1744,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1745,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1746,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1747,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1748,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1749,"assertEquals( ""0000111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1751,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1752,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1753,| Binary.BIT_3 | Binary.BIT_4 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1754,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1755,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1756,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1757,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1758,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1759,"assertEquals( ""0001111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1761,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1762,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1763,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1764,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1765,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1766,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1767,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1768,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1769,"assertEquals( ""0011111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1771,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1772,bits[1] = Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1773,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6 ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1774,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1775,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1776,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1777,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1778,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1779,"assertEquals( ""0111111111111111"", l_encoded ) ;"
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1781,bits = new byte[2] ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1782,bits[0] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1783,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1784,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1785,bits[1] = ( byte ) ( Binary.BIT_0 | Binary.BIT_1 | Binary.BIT_2
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1786,| Binary.BIT_3 | Binary.BIT_4 | Binary.BIT_5 | Binary.BIT_6
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1787,| Binary.BIT_7 ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1788,l_encoded = new String( ( char [] )
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1789,instance.encode( ( Object ) bits ) ) ;
True,src/test/org/apache/commons/codec/binary/BinaryTest.java,src/test/org/apache/commons/codec/binary/BinaryTest.java,1790,"assertEquals( ""1111111111111111"", l_encoded ) ;"
