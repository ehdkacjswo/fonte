is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,18,ackage org.apache.commons.codec.binary;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,20,mport java.io.FilterInputStream;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,22,mport java.io.InputStream;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,25, Provides Base64 encoding and decoding in a streaming fashion (unlimited size).
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,26, When encoding the default lineLength is 76 characters and the default
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,27," lineEnding is CRLF, but these can be overridden by using the appropriate"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,28, constructor.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,29, <p>
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,30," The default behaviour of the Base64InputStream is to DECODE, whereas the"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,31," default behaviour of the Base64OutputStream is to ENCODE, but this"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,32, behaviour can be overridden by using a different constructor.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,33, </p><p>
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,34, This class implements section <cite>6.8. Base64 Content-Transfer-Encoding</cite> from RFC 2045 <cite>Multipurpose
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,35, Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</cite> by Freed and Borenstein.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,36, </p><p>
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,37," Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,38," character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc)."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,39, </p>
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,40, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,41, @version $Id $
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,42," @see <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,43, @since 1.4
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,45,ublic class Base64InputStream extends FilterInputStream {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,47,rivate final boolean doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,48,rivate final Base64 base64;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,49,rivate final byte[] singleByte = new byte[1];
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,52, Creates a Base64InputStream such that all data read is Base64-decoded
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,53, from the original provided InputStream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,55, @param in InputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,57,ublic Base64InputStream(InputStream in) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,58,"his(in, false);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,62, Creates a Base64InputStream such that all data read is either
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,63, Base64-encoded or Base64-decoded from the original provided InputStream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,65, @param in       InputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,66," @param doEncode true if we should encode all data read from us,"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,67,                 false if we should decode.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,69,"ublic Base64InputStream(InputStream in, boolean doEncode) {"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,70,uper(in);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,71,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,72,his.base64 = new Base64();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,76, Creates a Base64InputStream such that all data read is either
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,77, Base64-encoded or Base64-decoded from the original provided InputStream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,79, @param in            InputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,80," @param doEncode      true if we should encode all data read from us,"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,81,                      false if we should decode.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,82," @param lineLength    If doEncode is true, each line of encoded"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,83,                      data will contain lineLength characters.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,84,"                      If lineLength <=0, the encoded data is not divided into lines."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,85,"                      If doEncode is false, lineLength is ignored."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,86," @param lineSeparator If doEncode is true, each line of encoded"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,87,                      data will be terminated with this byte sequence (e.g. \r\n).
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,88,"                      If lineLength <= 0, the lineSeparator is not used."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,89,                      If doEncode is false lineSeparator is ignored.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,91,"ublic Base64InputStream(InputStream in, boolean doEncode, int lineLength, byte[] lineSeparator) {"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,92,uper(in);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,93,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,94,"his.base64 = new Base64(lineLength, lineSeparator);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,98, Reads one <code>byte</code> from this input stream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,100, @return the byte as an integer in the range 0 to 255
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,101, Returns -1 if EOF has been reached.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,103,ublic int read() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,104,"nt r = read(singleByte, 0, 1);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,105,hile (r == 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,106," = read(singleByte, 0, 1);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,108,f (r > 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,109,eturn singleByte[0] < 0 ? 256 + singleByte[0] : singleByte[0];
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,111,eturn -1;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,115, Attempts to read <code>len</code> bytes into the specified
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,116, <code>b</code> array starting at <code>offset</code> from
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,117, this InputStream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,119, @param b destination byte array
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,120, @param offset where to start writing the bytes
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,121, @param len maximum number of bytes to read
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,123, @return number of bytes read
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,124, @throws IOException if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,125, @throws NullPointerException if the byte array parameter is null
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,126," @throws IndexOutOfBoundsException if offset, len or buffer size are invalid"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,128,"ublic int read(byte b[], int offset, int len) throws IOException {"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,129,f (b == null) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,130,hrow new NullPointerException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,131, else if (offset < 0 || len < 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,132,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,133, else if (offset > b.length || offset + len > b.length) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,134,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,135, else if (len == 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,136,eturn 0;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,137, else {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,138,f (!base64.hasData()) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,139,yte[] buf = new byte[doEncode ? 4096 : 8192];
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,140,nt c = in.read(buf);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,142,/ A little optimization to avoid System.arraycopy()
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,143,/ when possible.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,144,f (c > 0 && b.length == len) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,145,"ase64.setInitialBuffer(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,148,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,149,"ase64.encode(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,150, else {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,151,"ase64.decode(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,154,"eturn base64.readResults(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,159, {@inheritDoc}
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,160, @return false
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,162,ublic boolean markSupported() {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,163,eturn false; // not an easy job to support marks
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,18,package org.apache.commons.codec.binary;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,20,import java.io.FilterInputStream;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,21,import java.io.IOException;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,22,import java.io.InputStream;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,25,* Provides Base64 encoding and decoding in a streaming fashion (unlimited size).
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,26,* When encoding the default lineLength is 76 characters and the default
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,27,"* lineEnding is CRLF, but these can be overridden by using the appropriate"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,28,* constructor.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,29,* <p>
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,30,"* The default behaviour of the Base64InputStream is to DECODE, whereas the"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,31,"* default behaviour of the Base64OutputStream is to ENCODE, but this"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,32,* behaviour can be overridden by using a different constructor.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,33,* </p><p>
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,34,* This class implements section <cite>6.8. Base64 Content-Transfer-Encoding</cite> from RFC 2045 <cite>Multipurpose
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,35,* Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</cite> by Freed and Borenstein.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,36,* </p><p>
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,37,"* Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,38,"* character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc)."
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,39,* </p>
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,40,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,41,* @version $Id $
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,42,"* @see <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,43,* @since 1.4
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,45,public class Base64InputStream extends FilterInputStream {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,47,private final boolean doEncode;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,48,private final Base64 base64;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,49,private final byte[] singleByte = new byte[1];
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,52,* Creates a Base64InputStream such that all data read is Base64-decoded
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,53,* from the original provided InputStream.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,55,* @param in InputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,57,public Base64InputStream(InputStream in) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,58,"this(in, false);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,62,* Creates a Base64InputStream such that all data read is either
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,63,* Base64-encoded or Base64-decoded from the original provided InputStream.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,65,* @param in       InputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,66,"* @param doEncode true if we should encode all data read from us,"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,67,*                 false if we should decode.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,69,"public Base64InputStream(InputStream in, boolean doEncode) {"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,70,super(in);
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,71,this.doEncode = doEncode;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,72,this.base64 = new Base64();
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,76,* Creates a Base64InputStream such that all data read is either
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,77,* Base64-encoded or Base64-decoded from the original provided InputStream.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,79,* @param in            InputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,80,"* @param doEncode      true if we should encode all data read from us,"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,81,*                      false if we should decode.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,82,"* @param lineLength    If doEncode is true, each line of encoded"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,83,*                      data will contain lineLength characters.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,84,"*                      If lineLength <=0, the encoded data is not divided into lines."
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,85,"*                      If doEncode is false, lineLength is ignored."
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,86,"* @param lineSeparator If doEncode is true, each line of encoded"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,87,*                      data will be terminated with this byte sequence (e.g. \r\n).
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,88,"*                      If lineLength <= 0, the lineSeparator is not used."
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,89,*                      If doEncode is false lineSeparator is ignored.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,91,"public Base64InputStream(InputStream in, boolean doEncode, int lineLength, byte[] lineSeparator) {"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,92,super(in);
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,93,this.doEncode = doEncode;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,94,"this.base64 = new Base64(lineLength, lineSeparator);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,98,* Reads one <code>byte</code> from this input stream.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,100,* @return the byte as an integer in the range 0 to 255
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,101,* Returns -1 if EOF has been reached.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,103,public int read() throws IOException {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,104,"int r = read(singleByte, 0, 1);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,105,while (r == 0) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,106,"r = read(singleByte, 0, 1);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,108,if (r > 0) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,109,return singleByte[0] < 0 ? 256 + singleByte[0] : singleByte[0];
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,111,return -1;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,115,* Attempts to read <code>len</code> bytes into the specified
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,116,* <code>b</code> array starting at <code>offset</code> from
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,117,* this InputStream.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,119,* @param b destination byte array
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,120,* @param offset where to start writing the bytes
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,121,* @param len maximum number of bytes to read
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,123,* @return number of bytes read
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,124,* @throws IOException if an I/O error occurs.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,125,* @throws NullPointerException if the byte array parameter is null
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,126,"* @throws IndexOutOfBoundsException if offset, len or buffer size are invalid"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,128,"public int read(byte b[], int offset, int len) throws IOException {"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,129,if (b == null) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,130,throw new NullPointerException();
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,131,} else if (offset < 0 || len < 0) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,132,throw new IndexOutOfBoundsException();
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,133,} else if (offset > b.length || offset + len > b.length) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,134,throw new IndexOutOfBoundsException();
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,135,} else if (len == 0) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,136,return 0;
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,137,} else {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,138,if (!base64.hasData()) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,139,byte[] buf = new byte[doEncode ? 4096 : 8192];
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,140,int c = in.read(buf);
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,142,// A little optimization to avoid System.arraycopy()
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,143,// when possible.
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,144,if (c > 0 && b.length == len) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,145,"base64.setInitialBuffer(b, offset, len);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,148,if (doEncode) {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,149,"base64.encode(buf, 0, c);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,150,} else {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,151,"base64.decode(buf, 0, c);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,154,"return base64.readResults(b, offset, len);"
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,159,* {@inheritDoc}
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,160,* @return false
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,162,public boolean markSupported() {
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,163,return false; // not an easy job to support marks
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,18,ackage org.apache.commons.codec.binary;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,20,mport java.io.FilterOutputStream;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,22,mport java.io.OutputStream;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,25, Provides Base64 encoding and decoding in a streaming fashion (unlimited size).
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,26, When encoding the default lineLength is 76 characters and the default
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,27," lineEnding is CRLF, but these can be overridden by using the appropriate"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,28, constructor.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,29, <p>
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,30," The default behaviour of the Base64OutputStream is to ENCODE, whereas the"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,31, default behaviour of the Base64InputStream is to DECODE.  But this behaviour
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,32, can be overridden by using a different constructor.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,33, </p><p>
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,34, This class implements section <cite>6.8. Base64 Content-Transfer-Encoding</cite> from RFC 2045 <cite>Multipurpose
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,35, Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</cite> by Freed and Borenstein.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,36, </p><p>
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,37," Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,38," character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc)."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,39, </p>
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,40, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,41, @version $Id $
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,42," @see <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,43, @since 1.4
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,45,ublic class Base64OutputStream extends FilterOutputStream {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,46,rivate final boolean doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,47,rivate final Base64 base64;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,48,rivate final byte[] singleByte = new byte[1];
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,51, Creates a Base64OutputStream such that all data written is Base64-encoded
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,52, to the original provided OutputStream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,54, @param out OutputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,56,ublic Base64OutputStream(OutputStream out) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,57,"his(out, true);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,61, Creates a Base64OutputStream such that all data written is either
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,62, Base64-encoded or Base64-decoded to the original provided OutputStream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,64, @param out      OutputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,65," @param doEncode true if we should encode all data written to us,"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,66,                 false if we should decode.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,68,"ublic Base64OutputStream(OutputStream out, boolean doEncode) {"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,69,uper(out);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,70,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,71,his.base64 = new Base64();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,75, Creates a Base64OutputStream such that all data written is either
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,76, Base64-encoded or Base64-decoded to the original provided OutputStream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,78, @param out           OutputStream to wrap.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,79," @param doEncode      true if we should encode all data written to us,"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,80,                      false if we should decode.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,81," @param lineLength    If doEncode is true, each line of encoded"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,82,                      data will contain lineLength characters.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,83,"                      If lineLength <=0, the encoded data is not divided into lines."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,84,"                      If doEncode is false, lineLength is ignored."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,85," @param lineSeparator If doEncode is true, each line of encoded"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,86,                      data will be terminated with this byte sequence (e.g. \r\n).
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,87,"                      If lineLength <= 0, the lineSeparator is not used."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,88,                      If doEncode is false lineSeparator is ignored.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,90,"ublic Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator) {"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,91,uper(out);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,92,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,93,"his.base64 = new Base64(lineLength, lineSeparator);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,97, Writes the specified <code>byte</code> to this output stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,99,ublic void write(int i) throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,100,ingleByte[0] = (byte) i;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,101,"rite(singleByte, 0, 1);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,105, Writes <code>len</code> bytes from the specified
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,106, <code>b</code> array starting at <code>offset</code> to
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,107, this output stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,109, @param b source byte array
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,110, @param offset where to start reading the bytes
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,111, @param len maximum number of bytes to write
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,113, @throws IOException if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,114, @throws NullPointerException if the byte array parameter is null
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,115," @throws IndexOutOfBoundsException if offset, len or buffer size are invalid"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,117,"ublic void write(byte b[], int offset, int len) throws IOException {"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,118,f (b == null) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,119,hrow new NullPointerException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,120, else if (offset < 0 || len < 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,121,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,122, else if (offset > b.length || offset + len > b.length) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,123,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,124, else if (len > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,125,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,126,"ase64.encode(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,127, else {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,128,"ase64.decode(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,130,lush(false);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,135, Flushes this output stream and forces any buffered output bytes
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,136," to be written out to the stream.  If propogate is true, the wrapped"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,137, stream will also be flushed.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,139, @param propogate boolean flag to indicate whether the wrapped
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,140,                  OutputStream should also be flushed.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,141, @throws IOException if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,143,rivate void flush(boolean propogate) throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,144,nt avail = base64.avail();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,145,f (avail > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,146,yte[] buf = new byte[avail];
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,147,"nt c = base64.readResults(buf, 0, avail);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,148,f (c > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,149,"ut.write(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,152,f (propogate) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,153,ut.flush();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,158, Flushes this output stream and forces any buffered output bytes
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,159, to be written out to the stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,161, @throws IOException if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,163,ublic void flush() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,164,lush(true);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,168, Closes this output stream and releases any system resources
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,169, associated with the stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,171,ublic void close() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,172,/ Notify encoder of EOF (-1).
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,173,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,174,"ase64.encode(singleByte, 0, -1);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,175, else {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,176,"ase64.decode(singleByte, 0, -1);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,178,lush();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,179,ut.close();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,18,package org.apache.commons.codec.binary;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,20,import java.io.FilterOutputStream;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,21,import java.io.IOException;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,22,import java.io.OutputStream;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,25,* Provides Base64 encoding and decoding in a streaming fashion (unlimited size).
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,26,* When encoding the default lineLength is 76 characters and the default
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,27,"* lineEnding is CRLF, but these can be overridden by using the appropriate"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,28,* constructor.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,29,* <p>
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,30,"* The default behaviour of the Base64OutputStream is to ENCODE, whereas the"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,31,* default behaviour of the Base64InputStream is to DECODE.  But this behaviour
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,32,* can be overridden by using a different constructor.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,33,* </p><p>
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,34,* This class implements section <cite>6.8. Base64 Content-Transfer-Encoding</cite> from RFC 2045 <cite>Multipurpose
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,35,* Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</cite> by Freed and Borenstein.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,36,* </p><p>
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,37,"* Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,38,"* character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc)."
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,39,* </p>
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,40,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,41,* @version $Id $
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,42,"* @see <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,43,* @since 1.4
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,45,public class Base64OutputStream extends FilterOutputStream {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,46,private final boolean doEncode;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,47,private final Base64 base64;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,48,private final byte[] singleByte = new byte[1];
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,51,* Creates a Base64OutputStream such that all data written is Base64-encoded
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,52,* to the original provided OutputStream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,54,* @param out OutputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,56,public Base64OutputStream(OutputStream out) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,57,"this(out, true);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,61,* Creates a Base64OutputStream such that all data written is either
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,62,* Base64-encoded or Base64-decoded to the original provided OutputStream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,64,* @param out      OutputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,65,"* @param doEncode true if we should encode all data written to us,"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,66,*                 false if we should decode.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,68,"public Base64OutputStream(OutputStream out, boolean doEncode) {"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,69,super(out);
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,70,this.doEncode = doEncode;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,71,this.base64 = new Base64();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,75,* Creates a Base64OutputStream such that all data written is either
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,76,* Base64-encoded or Base64-decoded to the original provided OutputStream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,78,* @param out           OutputStream to wrap.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,79,"* @param doEncode      true if we should encode all data written to us,"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,80,*                      false if we should decode.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,81,"* @param lineLength    If doEncode is true, each line of encoded"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,82,*                      data will contain lineLength characters.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,83,"*                      If lineLength <=0, the encoded data is not divided into lines."
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,84,"*                      If doEncode is false, lineLength is ignored."
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,85,"* @param lineSeparator If doEncode is true, each line of encoded"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,86,*                      data will be terminated with this byte sequence (e.g. \r\n).
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,87,"*                      If lineLength <= 0, the lineSeparator is not used."
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,88,*                      If doEncode is false lineSeparator is ignored.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,90,"public Base64OutputStream(OutputStream out, boolean doEncode, int lineLength, byte[] lineSeparator) {"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,91,super(out);
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,92,this.doEncode = doEncode;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,93,"this.base64 = new Base64(lineLength, lineSeparator);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,97,* Writes the specified <code>byte</code> to this output stream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,99,public void write(int i) throws IOException {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,100,singleByte[0] = (byte) i;
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,101,"write(singleByte, 0, 1);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,105,* Writes <code>len</code> bytes from the specified
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,106,* <code>b</code> array starting at <code>offset</code> to
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,107,* this output stream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,109,* @param b source byte array
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,110,* @param offset where to start reading the bytes
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,111,* @param len maximum number of bytes to write
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,113,* @throws IOException if an I/O error occurs.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,114,* @throws NullPointerException if the byte array parameter is null
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,115,"* @throws IndexOutOfBoundsException if offset, len or buffer size are invalid"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,117,"public void write(byte b[], int offset, int len) throws IOException {"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,118,if (b == null) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,119,throw new NullPointerException();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,120,} else if (offset < 0 || len < 0) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,121,throw new IndexOutOfBoundsException();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,122,} else if (offset > b.length || offset + len > b.length) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,123,throw new IndexOutOfBoundsException();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,124,} else if (len > 0) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,125,if (doEncode) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,126,"base64.encode(b, offset, len);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,127,} else {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,128,"base64.decode(b, offset, len);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,130,flush(false);
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,135,* Flushes this output stream and forces any buffered output bytes
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,136,"* to be written out to the stream.  If propogate is true, the wrapped"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,137,* stream will also be flushed.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,139,* @param propogate boolean flag to indicate whether the wrapped
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,140,*                  OutputStream should also be flushed.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,141,* @throws IOException if an I/O error occurs.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,143,private void flush(boolean propogate) throws IOException {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,144,int avail = base64.avail();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,145,if (avail > 0) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,146,byte[] buf = new byte[avail];
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,147,"int c = base64.readResults(buf, 0, avail);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,148,if (c > 0) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,149,"out.write(buf, 0, c);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,152,if (propogate) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,153,out.flush();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,158,* Flushes this output stream and forces any buffered output bytes
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,159,* to be written out to the stream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,161,* @throws IOException if an I/O error occurs.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,163,public void flush() throws IOException {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,164,flush(true);
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,168,* Closes this output stream and releases any system resources
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,169,* associated with the stream.
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,171,public void close() throws IOException {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,172,// Notify encoder of EOF (-1).
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,173,if (doEncode) {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,174,"base64.encode(singleByte, 0, -1);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,175,} else {
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,176,"base64.decode(singleByte, 0, -1);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,178,flush();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,179,out.close();
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,18,ackage org.apache.commons.codec.binary;
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,20,mport java.io.UnsupportedEncodingException;
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,22,mport org.apache.commons.codec.RequiredCharsetNames;
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,25, Converts String to bytes using the encodings required by the Java specification.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,27, @see RequiredCharsetNames
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,28," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,29, @version $Id: $
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,31,ublic class StringBytesUtils {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,34," Encodes the given string into a sequence of bytes using the ISO-8859-1 charset, storing the result into a new"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,35, byte array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,37, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,38,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,39, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,40, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,41,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,42," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,43,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,44," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,46,ublic static byte[] getBytesIso8859_1(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,47,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.ISO_8859_1);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,51," Encodes the given string into a sequence of bytes using the US-ASCII charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,52, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,54, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,55,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,56, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,57, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,58,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,59," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,60,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,61," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,63,ublic static byte[] getBytesUsAscii(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,64,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.US_ASCII);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,68," Encodes the given string into a sequence of bytes using the UTF-16 charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,69, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,71, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,72,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,73, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,74, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,75,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,76," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,77,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,78," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,80,ublic static byte[] getBytesUtf16(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,81,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,85," Encodes the given string into a sequence of bytes using the UTF-16BE charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,86, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,88, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,89,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,90, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,91, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,92,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,93," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,94,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,95," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,97,ublic static byte[] getBytesUtf16Be(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,98,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16BE);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,102," Encodes the given string into a sequence of bytes using the UTF-16LE charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,103, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,105, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,106,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,107, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,108, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,109,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,110," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,111,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,112," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,114,ublic static byte[] getBytesUtf16Le(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,115,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16LE);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,119," Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,120, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,122, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,123,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,124, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,125, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,126,"             Thrown when the charset is missing, which should be never according the the Java specification."
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,127," @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,128,      encoding names </a>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,129," @see #getSupportedBytes(String, String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,131,ublic static byte[] getBytesUtf8(String string) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,132,"eturn StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_8);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,136," Encodes the given string into a sequence of bytes using the named charset, storing the result into a new byte"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,137, array.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,138, <p>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,139," This method catches {@link UnsupportedEncodingException} and rethrows it as {@link IllegalStateException}, which"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,140, should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,141, </p>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,143, @param string
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,144,            the String to encode
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,145, @param charsetName
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,146,            The name of a required {@link java.nio.charset.Charset}
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,147, @return encoded bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,148, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,149,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,150,             required charset name.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,151, @see RequiredCharsetNames
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,152, @see String#getBytes(String)
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,154,"ublic static byte[] getSupportedBytes(String string, String charsetName) {"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,155,ry {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,156,eturn string.getBytes(charsetName);
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,157, catch (UnsupportedEncodingException e) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,158,"hrow StringBytesUtils.newIllegalStateException(charsetName, e);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,162,"rivate static IllegalStateException newIllegalStateException(String charsetName, UnsupportedEncodingException e) {"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,163,"eturn new IllegalStateException(charsetName + "": "" + e);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,167, Constructs a new <code>String</code> by decoding the specified array of bytes using the given charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,168, <p>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,169," This method catches {@link UnsupportedEncodingException} and re-throws it as {@link IllegalStateException}, which"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,170, should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,171, </p>
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,173, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,174,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,175, @param charsetName
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,176,            The name of a required {@link java.nio.charset.Charset}
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,177, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,178,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,179,             required charset name.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,180, @see RequiredCharsetNames
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,181," @see String#String(byte[], String)"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,183,"ublic static String newString(byte[] bytes, String charsetName) {"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,184,ry {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,185,"eturn new String(bytes, charsetName);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,186, catch (UnsupportedEncodingException e) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,187,"hrow StringBytesUtils.newIllegalStateException(charsetName, e);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,192, Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,194, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,195,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,196, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,197,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,198,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,200,ublic static String newStringIso8859_1(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,201,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.ISO_8859_1);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,205, Constructs a new <code>String</code> by decoding the specified array of bytes using the US-ASCII charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,207, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,208,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,209, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,210,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,211,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,213,ublic static String newStringUsAscii(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,214,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.US_ASCII);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,218, Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16 charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,220, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,221,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,222, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,223,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,224,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,226,ublic static String newStringUtf16(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,227,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,231, Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16BE charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,233, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,234,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,235, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,236,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,237,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,239,ublic static String newStringUtf16Be(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,240,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16BE);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,244, Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16LE charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,246, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,247,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,248, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,249,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,250,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,252,ublic static String newStringUtf16Le(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,253,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16LE);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,257, Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-8 charset.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,259, @param bytes
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,260,            The bytes to be decoded into characters
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,261, @throws IllegalStateException
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,262,"             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,263,             charset is required.
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,265,ublic static String newStringUtf8(byte[] bytes) {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,266,"eturn StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_8);"
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,269,rivate StringBytesUtils() {
False,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,270,"/ noop, cannot instantiate."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,18,package org.apache.commons.codec.binary;
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,20,import java.io.UnsupportedEncodingException;
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,22,import org.apache.commons.codec.RequiredCharsetNames;
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,25,* Converts String to bytes using the encodings required by the Java specification.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,27,* @see RequiredCharsetNames
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,28,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,29,* @version $Id: $
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,31,public class StringBytesUtils {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,34,"* Encodes the given string into a sequence of bytes using the ISO-8859-1 charset, storing the result into a new"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,35,* byte array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,37,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,38,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,39,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,40,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,41,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,42,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,43,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,44,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,46,public static byte[] getBytesIso8859_1(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,47,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.ISO_8859_1);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,51,"* Encodes the given string into a sequence of bytes using the US-ASCII charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,52,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,54,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,55,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,56,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,57,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,58,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,59,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,60,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,61,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,63,public static byte[] getBytesUsAscii(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,64,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.US_ASCII);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,68,"* Encodes the given string into a sequence of bytes using the UTF-16 charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,69,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,71,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,72,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,73,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,74,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,75,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,76,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,77,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,78,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,80,public static byte[] getBytesUtf16(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,81,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,85,"* Encodes the given string into a sequence of bytes using the UTF-16BE charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,86,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,88,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,89,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,90,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,91,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,92,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,93,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,94,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,95,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,97,public static byte[] getBytesUtf16Be(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,98,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16BE);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,102,"* Encodes the given string into a sequence of bytes using the UTF-16LE charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,103,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,105,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,106,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,107,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,108,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,109,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,110,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,111,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,112,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,114,public static byte[] getBytesUtf16Le(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,115,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_16LE);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,119,"* Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,120,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,122,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,123,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,124,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,125,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,126,"*             Thrown when the charset is missing, which should be never according the the Java specification."
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,127,"* @see <a href=""http://java.sun.com/j2se/1.3/docs/api/java/lang/package-summary.html#charenc"">JRE character"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,128,*      encoding names </a>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,129,"* @see #getSupportedBytes(String, String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,131,public static byte[] getBytesUtf8(String string) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,132,"return StringBytesUtils.getSupportedBytes(string, RequiredCharsetNames.UTF_8);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,136,"* Encodes the given string into a sequence of bytes using the named charset, storing the result into a new byte"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,137,* array.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,138,* <p>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,139,"* This method catches {@link UnsupportedEncodingException} and rethrows it as {@link IllegalStateException}, which"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,140,* should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,141,* </p>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,143,* @param string
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,144,*            the String to encode
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,145,* @param charsetName
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,146,*            The name of a required {@link java.nio.charset.Charset}
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,147,* @return encoded bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,148,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,149,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,150,*             required charset name.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,151,* @see RequiredCharsetNames
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,152,* @see String#getBytes(String)
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,154,"public static byte[] getSupportedBytes(String string, String charsetName) {"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,155,try {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,156,return string.getBytes(charsetName);
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,157,} catch (UnsupportedEncodingException e) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,158,"throw StringBytesUtils.newIllegalStateException(charsetName, e);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,162,"private static IllegalStateException newIllegalStateException(String charsetName, UnsupportedEncodingException e) {"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,163,"return new IllegalStateException(charsetName + "": "" + e);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,167,* Constructs a new <code>String</code> by decoding the specified array of bytes using the given charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,168,* <p>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,169,"* This method catches {@link UnsupportedEncodingException} and re-throws it as {@link IllegalStateException}, which"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,170,* should never happen for a required charset name. Use this method when the encoding is required to be in the JRE.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,171,* </p>
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,173,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,174,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,175,* @param charsetName
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,176,*            The name of a required {@link java.nio.charset.Charset}
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,177,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,178,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen for a"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,179,*             required charset name.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,180,* @see RequiredCharsetNames
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,181,"* @see String#String(byte[], String)"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,183,"public static String newString(byte[] bytes, String charsetName) {"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,184,try {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,185,"return new String(bytes, charsetName);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,186,} catch (UnsupportedEncodingException e) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,187,"throw StringBytesUtils.newIllegalStateException(charsetName, e);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,192,* Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,194,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,195,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,196,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,197,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,198,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,200,public static String newStringIso8859_1(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,201,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.ISO_8859_1);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,205,* Constructs a new <code>String</code> by decoding the specified array of bytes using the US-ASCII charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,207,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,208,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,209,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,210,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,211,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,213,public static String newStringUsAscii(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,214,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.US_ASCII);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,218,* Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16 charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,220,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,221,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,222,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,223,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,224,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,226,public static String newStringUtf16(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,227,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,231,* Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16BE charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,233,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,234,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,235,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,236,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,237,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,239,public static String newStringUtf16Be(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,240,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16BE);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,244,* Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16LE charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,246,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,247,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,248,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,249,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,250,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,252,public static String newStringUtf16Le(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,253,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_16LE);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,257,* Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-8 charset.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,259,* @param bytes
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,260,*            The bytes to be decoded into characters
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,261,* @throws IllegalStateException
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,262,"*             Thrown when a {@link UnsupportedEncodingException} is caught, which should never happen since the"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,263,*             charset is required.
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,265,public static String newStringUtf8(byte[] bytes) {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,266,"return StringBytesUtils.newString(bytes, RequiredCharsetNames.UTF_8);"
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,269,private StringBytesUtils() {
True,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,src/java/org/apache/commons/codec/binary/StringBytesUtils.java,270,"// noop, cannot instantiate."
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,2, Copyright (C) 1993-2003 SEAGULL
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,4, RequiredCharsetNamesTest.java
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,5," Created on Jul 20, 2009, 6:08:58 PM"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,9,ackage org.apache.commons.codec;
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,11,mport junit.framework.Assert;
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,12,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,15, Sanity checks.
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,17," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,18, @version $Id: $
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,20,ublic class RequiredCharsetNamesTest extends TestCase {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,22,ublic void testIso8859_1() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,23,"ssert.assertEquals(""ISO-8859-1"", RequiredCharsetNames.ISO_8859_1);"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,26,ublic void testUsAscii() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,27,"ssert.assertEquals(""US-ASCII"", RequiredCharsetNames.US_ASCII);"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,30,ublic void testUtf16() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,31,"ssert.assertEquals(""UTF-16"", RequiredCharsetNames.UTF_16);"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,34,ublic void testUtf16Be() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,35,"ssert.assertEquals(""UTF-16BE"", RequiredCharsetNames.UTF_16BE);"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,38,ublic void testUtf16Le() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,39,"ssert.assertEquals(""UTF-16LE"", RequiredCharsetNames.UTF_16LE);"
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,42,ublic void testUtf8() {
False,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,43,"ssert.assertEquals(""UTF-8"", RequiredCharsetNames.UTF_8);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,2,* Copyright (C) 1993-2003 SEAGULL
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,4,* RequiredCharsetNamesTest.java
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,5,"* Created on Jul 20, 2009, 6:08:58 PM"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,9,package org.apache.commons.codec;
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,11,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,12,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,15,* Sanity checks.
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,17,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,18,* @version $Id: $
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,20,public class RequiredCharsetNamesTest extends TestCase {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,22,public void testIso8859_1() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,23,"Assert.assertEquals(""ISO-8859-1"", RequiredCharsetNames.ISO_8859_1);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,26,public void testUsAscii() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,27,"Assert.assertEquals(""US-ASCII"", RequiredCharsetNames.US_ASCII);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,30,public void testUtf16() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,31,"Assert.assertEquals(""UTF-16"", RequiredCharsetNames.UTF_16);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,34,public void testUtf16Be() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,35,"Assert.assertEquals(""UTF-16BE"", RequiredCharsetNames.UTF_16BE);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,38,public void testUtf16Le() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,39,"Assert.assertEquals(""UTF-16LE"", RequiredCharsetNames.UTF_16LE);"
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,42,public void testUtf8() {
True,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java,43,"Assert.assertEquals(""UTF-8"", RequiredCharsetNames.UTF_8);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,18,ackage org.apache.commons.codec.binary;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,20,mport java.io.ByteArrayInputStream;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,21,mport java.io.InputStream;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,24,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,27, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,28, @version $Id $
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,29, @since 1.4
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,31,ublic class Base64InputStreamTest extends TestCase {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,33,"rivate final static byte[] CRLF = {(byte) '\r', (byte) '\n'};"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,35,rivate final static byte[] LF = {(byte) '\n'};
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,37,"rivate static final String STRING_FIXTURE = ""Hello World"";"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,40, Construct a new instance of this test case.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,42, @param name
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,43,            Name of the test case
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,45,ublic Base64InputStreamTest(String name) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,46,uper(name);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,50, Tests the Base64InputStream implementation against empty input.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,52, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,53,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,55,ublic void testBase64EmptyInputStream() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,56,yte[] emptyEncoded = new byte[0];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,57,yte[] emptyDecoded = new byte[0];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,58,"estByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,59,"estByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,63, Tests the Base64InputStream implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,65, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,66,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,68,ublic void testBase64InputStreamByChunk() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,69,/ Hello World test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,70,"yte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,71,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,72,"estByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,74,/ Single Byte test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,75,"ncoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,76,ecoded = new byte[]{(byte) 0};
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,77,"estByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,79,/ OpenSSL interop test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,80,ncoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,81,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,82,"estByChunk(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,84,/ Single Line test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,85,"tring singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,86,ncoded = StringBytesUtils.getBytesUtf8(singleLine);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,87,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,88,"estByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,90,/ test random data of sizes 0 thru 150
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,91,or (int i = 0; i <= 150; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,92,"yte[][] randomData = Base64TestData.randomData(i, false);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,93,ncoded = randomData[1];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,94,ecoded = randomData[0];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,95,"estByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,100, Tests the Base64InputStream implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,102, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,103,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,105,ublic void testBase64InputStreamByteByByte() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,106,/ Hello World test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,107,"yte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,108,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,109,"estByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,111,/ Single Byte test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,112,"ncoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,113,ecoded = new byte[]{(byte) 0};
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,114,"estByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,116,/ OpenSSL interop test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,117,ncoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,118,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,119,"estByteByByte(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,121,/ Single Line test.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,122,"tring singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,123,ncoded = StringBytesUtils.getBytesUtf8(singleLine);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,124,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,125,"estByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,127,/ test random data of sizes 0 thru 150
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,128,or (int i = 0; i <= 150; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,129,"yte[][] randomData = Base64TestData.randomData(i, false);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,130,ncoded = randomData[1];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,131,ecoded = randomData[0];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,132,"estByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,137, Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,138, encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,139, <p/>
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,140," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,141, over and over again.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,143, @param encoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,144,            base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,145, @param decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,146,"            the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,147, @param chunkSize
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,148,            chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,149, @param seperator
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,150,            Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,151, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,152,             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,154,"rivate void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,156,/ Start with encode.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,157,nputStream in = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,158,"n = new Base64InputStream(in, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,159,yte[] output = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,161,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,162,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,163,"ssertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,165,/ Now let's try decode.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,166,n = new ByteArrayInputStream(encoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,167,n = new Base64InputStream(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,168,utput = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,170,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,171,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,172,"ssertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,174,/ I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,175,n = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,176,or (int i = 0; i < 10; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,177,"n = new Base64InputStream(in, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,178,"n = new Base64InputStream(in, false);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,180,utput = Base64TestData.streamToBytes(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,182,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,183,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,184,"ssertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,188, Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,189, encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,190, <p/>
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,191," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,192, over and over again.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,194, @param encoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,195,            base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,196, @param decoded
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,197,"            the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,198, @param chunkSize
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,199,            chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,200, @param seperator
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,201,            Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,202, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,203,             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,205,"rivate void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,207,/ Start with encode.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,208,nputStream in = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,209,"n = new Base64InputStream(in, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,210,yte[] output = new byte[encoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,211,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,212,utput[i] = (byte) in.read();
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,215,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,216,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,217,"ssertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,219,/ Now let's try decode.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,220,n = new ByteArrayInputStream(encoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,221,n = new Base64InputStream(in);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,222,utput = new byte[decoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,223,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,224,utput[i] = (byte) in.read();
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,227,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,228,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,229,"ssertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,231,/ I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,232,n = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,233,or (int i = 0; i < 10; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,234,"n = new Base64InputStream(in, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,235,"n = new Base64InputStream(in, false);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,237,utput = new byte[decoded.length];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,238,or (int i = 0; i < output.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,239,utput[i] = (byte) in.read();
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,242,"ssertEquals(""EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,243,"ssertEquals(""Still EOF"", -1, in.read());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,244,"ssertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,248, Tests markSupported.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,250, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,252,ublic void testMarkSupported() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,253,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,254,yteArrayInputStream bin = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,255,"ase64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,256,/ Always returns false for now.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,257,"ssertFalse(""Base64InputStream.markSupported() is false"", in.markSupported());"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,261, Tests read returning 0
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,263, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,265,ublic void testRead0() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,266,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,267,yte[] buf = new byte[1024];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,268,nt bytesRead = 0;
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,269,yteArrayInputStream bin = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,270,"ase64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,271,"ytesRead = in.read(buf, 0, 0);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,272,"ssertEquals(""Base64InputStream.read(buf, 0, 0) returns 0"", 0, bytesRead);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,276, Tests read with null.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,278, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,279,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,281,ublic void testReadNull() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,282,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,283,yteArrayInputStream bin = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,284,"ase64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,285,ry {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,286,"n.read(null, 0, 0);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,287,"ail(""Base64InputStream.read(null, 0, 0) to throw a NullPointerException"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,288, catch (NullPointerException e) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,289,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,294, Tests read throwing IndexOutOfBoundsException
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,296, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,298,ublic void testReadOutOfBounds() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,299,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,300,yte[] buf = new byte[1024];
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,301,yteArrayInputStream bin = new ByteArrayInputStream(decoded);
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,302,"ase64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,304,ry {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,305,"n.read(buf, -1, 0);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,306,"ail(""Expected Base64InputStream.read(buf, -1, 0) to throw IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,307, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,308,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,311,ry {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,312,"n.read(buf, 0, -1);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,313,"ail(""Expected Base64InputStream.read(buf, 0, -1) to throw IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,314, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,315,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,318,ry {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,319,"n.read(buf, buf.length + 1, 0);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,320,"ail(""Base64InputStream.read(buf, buf.length + 1, 0) throws IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,321, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,322,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,325,ry {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,326,"n.read(buf, buf.length - 1, 2);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,327,"ail(""Base64InputStream.read(buf, buf.length - 1, 2) throws IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,328, catch (IndexOutOfBoundsException e) {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,329,/ Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,18,package org.apache.commons.codec.binary;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,20,import java.io.ByteArrayInputStream;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,21,import java.io.InputStream;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,22,import java.util.Arrays;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,27,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,28,* @version $Id $
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,29,* @since 1.4
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,31,public class Base64InputStreamTest extends TestCase {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,33,"private final static byte[] CRLF = {(byte) '\r', (byte) '\n'};"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,35,private final static byte[] LF = {(byte) '\n'};
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,37,"private static final String STRING_FIXTURE = ""Hello World"";"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,40,* Construct a new instance of this test case.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,42,* @param name
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,43,*            Name of the test case
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,45,public Base64InputStreamTest(String name) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,46,super(name);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,50,* Tests the Base64InputStream implementation against empty input.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,52,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,53,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,55,public void testBase64EmptyInputStream() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,56,byte[] emptyEncoded = new byte[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,57,byte[] emptyDecoded = new byte[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,58,"testByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,59,"testByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,63,* Tests the Base64InputStream implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,65,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,66,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,68,public void testBase64InputStreamByChunk() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,69,// Hello World test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,70,"byte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,71,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,72,"testByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,74,// Single Byte test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,75,"encoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,76,decoded = new byte[]{(byte) 0};
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,77,"testByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,79,// OpenSSL interop test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,80,encoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,81,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,82,"testByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,84,// Single Line test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,85,"String singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,86,encoded = StringBytesUtils.getBytesUtf8(singleLine);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,87,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,88,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,90,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,91,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,92,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,93,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,94,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,95,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,100,* Tests the Base64InputStream implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,102,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,103,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,105,public void testBase64InputStreamByteByByte() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,106,// Hello World test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,107,"byte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,108,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,109,"testByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,111,// Single Byte test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,112,"encoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,113,decoded = new byte[]{(byte) 0};
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,114,"testByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,116,// OpenSSL interop test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,117,encoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,118,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,119,"testByteByByte(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,121,// Single Line test.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,122,"String singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,123,encoded = StringBytesUtils.getBytesUtf8(singleLine);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,124,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,125,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,127,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,128,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,129,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,130,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,131,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,132,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,137,* Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,138,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,139,* <p/>
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,140,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,141,* over and over again.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,143,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,144,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,145,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,146,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,147,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,148,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,149,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,150,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,151,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,152,*             Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,154,"private void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,156,// Start with encode.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,157,InputStream in = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,158,"in = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,159,byte[] output = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,161,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,162,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,163,"assertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,165,// Now let's try decode.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,166,in = new ByteArrayInputStream(encoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,167,in = new Base64InputStream(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,168,output = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,170,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,171,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,172,"assertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,174,// I always wanted to do this! (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,175,in = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,176,for (int i = 0; i < 10; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,177,"in = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,178,"in = new Base64InputStream(in, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,180,output = Base64TestData.streamToBytes(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,182,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,183,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,184,"assertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,188,* Tests method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,189,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,190,* <p/>
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,191,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64InputStream wraps itself in encode and decode mode"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,192,* over and over again.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,194,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,195,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,196,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,197,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,198,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,199,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,200,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,201,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,202,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,203,*             Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,205,"private void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,207,// Start with encode.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,208,InputStream in = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,209,"in = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,210,byte[] output = new byte[encoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,211,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,212,output[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,215,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,216,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,217,"assertTrue(""Streaming base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,219,// Now let's try decode.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,220,in = new ByteArrayInputStream(encoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,221,in = new Base64InputStream(in);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,222,output = new byte[decoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,223,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,224,output[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,227,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,228,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,229,"assertTrue(""Streaming base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,231,// I always wanted to do this! (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,232,in = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,233,for (int i = 0; i < 10; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,234,"in = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,235,"in = new Base64InputStream(in, false);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,237,output = new byte[decoded.length];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,238,for (int i = 0; i < output.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,239,output[i] = (byte) in.read();
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,242,"assertEquals(""EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,243,"assertEquals(""Still EOF"", -1, in.read());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,244,"assertTrue(""Streaming base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,248,* Tests markSupported.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,250,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,252,public void testMarkSupported() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,253,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,254,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,255,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,256,// Always returns false for now.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,257,"assertFalse(""Base64InputStream.markSupported() is false"", in.markSupported());"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,261,* Tests read returning 0
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,263,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,265,public void testRead0() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,266,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,267,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,268,int bytesRead = 0;
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,269,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,270,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,271,"bytesRead = in.read(buf, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,272,"assertEquals(""Base64InputStream.read(buf, 0, 0) returns 0"", 0, bytesRead);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,276,* Tests read with null.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,278,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,279,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,281,public void testReadNull() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,282,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,283,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,284,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,285,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,286,"in.read(null, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,287,"fail(""Base64InputStream.read(null, 0, 0) to throw a NullPointerException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,288,} catch (NullPointerException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,289,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,294,* Tests read throwing IndexOutOfBoundsException
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,296,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,298,public void testReadOutOfBounds() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,299,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,300,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,301,ByteArrayInputStream bin = new ByteArrayInputStream(decoded);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,302,"Base64InputStream in = new Base64InputStream(bin, true, 4, new byte[]{0, 0, 0});"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,304,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,305,"in.read(buf, -1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,306,"fail(""Expected Base64InputStream.read(buf, -1, 0) to throw IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,307,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,308,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,311,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,312,"in.read(buf, 0, -1);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,313,"fail(""Expected Base64InputStream.read(buf, 0, -1) to throw IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,314,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,315,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,318,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,319,"in.read(buf, buf.length + 1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,320,"fail(""Base64InputStream.read(buf, buf.length + 1, 0) throws IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,321,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,322,// Expected
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,325,try {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,326,"in.read(buf, buf.length - 1, 2);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,327,"fail(""Base64InputStream.read(buf, buf.length - 1, 2) throws IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,328,} catch (IndexOutOfBoundsException e) {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,329,// Expected
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,18,ackage org.apache.commons.codec.binary;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,20,mport java.io.ByteArrayOutputStream;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,21,mport java.io.OutputStream;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,22,mport java.util.Arrays;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,24,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,27, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,28, @version $Id $
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,29, @since 1.4
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,31,ublic class Base64OutputStreamTest extends TestCase {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,33,"rivate final static byte[] CRLF = {(byte) '\r', (byte) '\n'};"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,35,rivate final static byte[] LF = {(byte) '\n'};
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,37,"rivate static final String STRING_FIXTURE = ""Hello World"";"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,40, Construct a new instance of this test case.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,42, @param name
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,43,            Name of the test case
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,45,ublic Base64OutputStreamTest(String name) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,46,uper(name);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,50, Test the Base64OutputStream implementation against empty input.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,52, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,53,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,55,ublic void testBase64EmptyOutputStream() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,56,yte[] emptyEncoded = new byte[0];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,57,yte[] emptyDecoded = new byte[0];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,58,"estByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,59,"estByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,63, Test the Base64OutputStream implementation
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,65, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,66,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,68,ublic void testBase64OutputStreamByChunk() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,69,/ Hello World test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,70,"yte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,71,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,72,"estByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,74,/ Single Byte test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,75,"ncoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,76,ecoded = new byte[]{(byte) 0};
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,77,"estByChunk(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,79,/ OpenSSL interop test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,80,ncoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,81,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,82,"estByChunk(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,84,/ Single Line test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,85,"tring singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,86,ncoded = StringBytesUtils.getBytesUtf8(singleLine);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,87,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,88,"estByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,90,/ test random data of sizes 0 thru 150
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,91,or (int i = 0; i <= 150; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,92,"yte[][] randomData = Base64TestData.randomData(i, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,93,ncoded = randomData[1];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,94,ecoded = randomData[0];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,95,"estByChunk(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,100, Test the Base64OutputStream implementation
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,102, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,103,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,105,ublic void testBase64OutputStreamByteByByte() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,106,/ Hello World test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,107,"yte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,108,yte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,109,"estByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,111,/ Single Byte test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,112,"ncoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,113,ecoded = new byte[]{(byte) 0};
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,114,"estByteByByte(encoded, decoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,116,/ OpenSSL interop test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,117,ncoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,118,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,119,"estByteByByte(encoded, decoded, 64, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,121,/ Single Line test.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,122,"tring singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,123,ncoded = StringBytesUtils.getBytesUtf8(singleLine);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,124,ecoded = Base64TestData.DECODED;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,125,"estByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,127,/ test random data of sizes 0 thru 150
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,128,or (int i = 0; i <= 150; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,129,"yte[][] randomData = Base64TestData.randomData(i, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,130,ncoded = randomData[1];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,131,ecoded = randomData[0];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,132,"estByteByByte(encoded, decoded, 0, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,137, Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,138, encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,139, <p/>
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,140," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,141, mode over and over again.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,143, @param encoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,144,            base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,145, @param decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,146,"            the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,147, @param chunkSize
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,148,            chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,149, @param seperator
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,150,            Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,151, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,152,             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,154,"rivate void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,156,/ Start with encode.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,157,yteArrayOutputStream byteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,158,"utputStream out = new Base64OutputStream(byteOut, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,159,ut.write(decoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,160,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,161,yte[] output = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,162,"ssertTrue(""Streaming chunked base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,164,/ Now let's try decode.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,165,yteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,166,"ut = new Base64OutputStream(byteOut, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,167,ut.write(encoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,168,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,169,utput = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,170,"ssertTrue(""Streaming chunked base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,172,/ I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,173,yteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,174,ut = byteOut;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,175,or (int i = 0; i < 10; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,176,"ut = new Base64OutputStream(out, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,177,"ut = new Base64OutputStream(out, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,179,ut.write(decoded);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,180,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,181,utput = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,183,"ssertTrue(""Streaming chunked base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,187, Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,188, encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,189, <p/>
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,190," By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,191, mode over and over again.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,193, @param encoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,194,            base64 encoded data
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,195, @param decoded
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,196,"            the data from above, but decoded"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,197, @param chunkSize
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,198,            chunk size (line-length) of the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,199, @param seperator
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,200,            Line separator in the base64 encoded data.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,201, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,202,             Usually signifies a bug in the Base64 commons-codec implementation.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,204,"rivate void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,206,/ Start with encode.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,207,yteArrayOutputStream byteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,208,"utputStream out = new Base64OutputStream(byteOut, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,209,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,210,ut.write(decoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,212,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,213,yte[] output = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,214,"ssertTrue(""Streaming byte-by-byte base64 encode"", Arrays.equals(output, encoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,216,/ Now let's try decode.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,217,yteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,218,"ut = new Base64OutputStream(byteOut, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,219,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,220,ut.write(encoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,222,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,223,utput = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,224,"ssertTrue(""Streaming byte-by-byte base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,226,/ Now let's try decode with tonnes of flushes.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,227,yteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,228,"ut = new Base64OutputStream(byteOut, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,229,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,230,ut.write(encoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,231,ut.flush();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,233,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,234,utput = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,235,"ssertTrue(""Streaming byte-by-byte flush() base64 decode"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,237,/ I always wanted to do this! (wrap encoder with decoder etc etc).
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,238,yteOut = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,239,ut = byteOut;
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,240,or (int i = 0; i < 10; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,241,"ut = new Base64OutputStream(out, false);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,242,"ut = new Base64OutputStream(out, true, chunkSize, seperator);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,244,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,245,ut.write(decoded[i]);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,247,ut.close();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,248,utput = byteOut.toByteArray();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,250,"ssertTrue(""Streaming byte-by-byte base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,254, Tests Base64OutputStream.write for expected IndexOutOfBoundsException conditions.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,256, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,257,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,259,ublic void testWriteOutOfBounds() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,260,yte[] buf = new byte[1024];
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,261,yteArrayOutputStream bout = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,262,ase64OutputStream out = new Base64OutputStream(bout);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,264,ry {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,265,"ut.write(buf, -1, 1);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,266,"ail(""Expected Base64OutputStream.write(buf, -1, 1) to throw a IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,267, catch (IndexOutOfBoundsException ioobe) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,268,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,271,ry {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,272,"ut.write(buf, 1, -1);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,273,"ail(""Expected Base64OutputStream.write(buf, 1, -1) to throw a IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,274, catch (IndexOutOfBoundsException ioobe) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,275,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,278,ry {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,279,"ut.write(buf, buf.length + 1, 0);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,280,"ail(""Expected Base64OutputStream.write(buf, buf.length + 1, 0) to throw a IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,281, catch (IndexOutOfBoundsException ioobe) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,282,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,285,ry {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,286,"ut.write(buf, buf.length - 1, 2);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,287,"ail(""Expected Base64OutputStream.write(buf, buf.length - 1, 2) to throw a IndexOutOfBoundsException"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,288, catch (IndexOutOfBoundsException ioobe) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,289,/ Expected
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,294, Tests Base64OutputStream.write(null).
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,296, @throws Exception
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,297,             for some failure scenarios.
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,299,ublic void testWriteToNullCoverage() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,300,yteArrayOutputStream bout = new ByteArrayOutputStream();
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,301,ase64OutputStream out = new Base64OutputStream(bout);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,302,ry {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,303,"ut.write(null, 0, 0);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,304,"ail(""Expcted Base64OutputStream.write(null) to throw a NullPointerException"");"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,305, catch (NullPointerException e) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,306,/ Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,18,package org.apache.commons.codec.binary;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,20,import java.io.ByteArrayOutputStream;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,21,import java.io.OutputStream;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,22,import java.util.Arrays;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,27,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,28,* @version $Id $
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,29,* @since 1.4
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,31,public class Base64OutputStreamTest extends TestCase {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,33,"private final static byte[] CRLF = {(byte) '\r', (byte) '\n'};"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,35,private final static byte[] LF = {(byte) '\n'};
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,37,"private static final String STRING_FIXTURE = ""Hello World"";"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,40,* Construct a new instance of this test case.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,42,* @param name
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,43,*            Name of the test case
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,45,public Base64OutputStreamTest(String name) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,46,super(name);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,50,* Test the Base64OutputStream implementation against empty input.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,52,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,53,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,55,public void testBase64EmptyOutputStream() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,56,byte[] emptyEncoded = new byte[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,57,byte[] emptyDecoded = new byte[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,58,"testByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,59,"testByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,63,* Test the Base64OutputStream implementation
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,65,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,66,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,68,public void testBase64OutputStreamByChunk() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,69,// Hello World test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,70,"byte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,71,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,72,"testByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,74,// Single Byte test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,75,"encoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,76,decoded = new byte[]{(byte) 0};
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,77,"testByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,79,// OpenSSL interop test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,80,encoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,81,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,82,"testByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,84,// Single Line test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,85,"String singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,86,encoded = StringBytesUtils.getBytesUtf8(singleLine);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,87,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,88,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,90,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,91,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,92,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,93,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,94,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,95,"testByChunk(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,100,* Test the Base64OutputStream implementation
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,102,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,103,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,105,public void testBase64OutputStreamByteByByte() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,106,// Hello World test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,107,"byte[] encoded = StringBytesUtils.getBytesUtf8(""SGVsbG8gV29ybGQ=\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,108,byte[] decoded = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,109,"testByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,111,// Single Byte test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,112,"encoded = StringBytesUtils.getBytesUtf8(""AA==\r\n"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,113,decoded = new byte[]{(byte) 0};
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,114,"testByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,116,// OpenSSL interop test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,117,encoded = StringBytesUtils.getBytesUtf8(Base64TestData.ENCODED);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,118,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,119,"testByteByByte(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,121,// Single Line test.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,122,"String singleLine = Base64TestData.ENCODED.replaceAll(""\n"", """");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,123,encoded = StringBytesUtils.getBytesUtf8(singleLine);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,124,decoded = Base64TestData.DECODED;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,125,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,127,// test random data of sizes 0 thru 150
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,128,for (int i = 0; i <= 150; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,129,"byte[][] randomData = Base64TestData.randomData(i, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,130,encoded = randomData[1];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,131,decoded = randomData[0];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,132,"testByteByByte(encoded, decoded, 0, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,137,* Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,138,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,139,* <p/>
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,140,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,141,* mode over and over again.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,143,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,144,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,145,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,146,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,147,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,148,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,149,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,150,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,151,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,152,*             Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,154,"private void testByChunk(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,156,// Start with encode.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,157,ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,158,"OutputStream out = new Base64OutputStream(byteOut, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,159,out.write(decoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,160,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,161,byte[] output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,162,"assertTrue(""Streaming chunked base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,164,// Now let's try decode.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,165,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,166,"out = new Base64OutputStream(byteOut, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,167,out.write(encoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,168,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,169,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,170,"assertTrue(""Streaming chunked base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,172,// I always wanted to do this! (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,173,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,174,out = byteOut;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,175,for (int i = 0; i < 10; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,176,"out = new Base64OutputStream(out, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,177,"out = new Base64OutputStream(out, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,179,out.write(decoded);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,180,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,181,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,183,"assertTrue(""Streaming chunked base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,187,* Test method does three tests on the supplied data: 1. encoded ---[DECODE]--> decoded 2. decoded ---[ENCODE]-->
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,188,* encoded 3. decoded ---[WRAP-WRAP-WRAP-etc...] --> decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,189,* <p/>
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,190,"* By ""[WRAP-WRAP-WRAP-etc...]"" we mean situation where the Base64OutputStream wraps itself in encode and decode"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,191,* mode over and over again.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,193,* @param encoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,194,*            base64 encoded data
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,195,* @param decoded
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,196,"*            the data from above, but decoded"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,197,* @param chunkSize
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,198,*            chunk size (line-length) of the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,199,* @param seperator
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,200,*            Line separator in the base64 encoded data.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,201,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,202,*             Usually signifies a bug in the Base64 commons-codec implementation.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,204,"private void testByteByByte(byte[] encoded, byte[] decoded, int chunkSize, byte[] seperator) throws Exception {"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,206,// Start with encode.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,207,ByteArrayOutputStream byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,208,"OutputStream out = new Base64OutputStream(byteOut, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,209,for (int i = 0; i < decoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,210,out.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,212,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,213,byte[] output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,214,"assertTrue(""Streaming byte-by-byte base64 encode"", Arrays.equals(output, encoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,216,// Now let's try decode.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,217,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,218,"out = new Base64OutputStream(byteOut, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,219,for (int i = 0; i < encoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,220,out.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,222,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,223,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,224,"assertTrue(""Streaming byte-by-byte base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,226,// Now let's try decode with tonnes of flushes.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,227,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,228,"out = new Base64OutputStream(byteOut, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,229,for (int i = 0; i < encoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,230,out.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,231,out.flush();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,233,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,234,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,235,"assertTrue(""Streaming byte-by-byte flush() base64 decode"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,237,// I always wanted to do this! (wrap encoder with decoder etc etc).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,238,byteOut = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,239,out = byteOut;
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,240,for (int i = 0; i < 10; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,241,"out = new Base64OutputStream(out, false);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,242,"out = new Base64OutputStream(out, true, chunkSize, seperator);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,244,for (int i = 0; i < decoded.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,245,out.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,247,out.close();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,248,output = byteOut.toByteArray();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,250,"assertTrue(""Streaming byte-by-byte base64 wrap-wrap-wrap!"", Arrays.equals(output, decoded));"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,254,* Tests Base64OutputStream.write for expected IndexOutOfBoundsException conditions.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,256,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,257,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,259,public void testWriteOutOfBounds() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,260,byte[] buf = new byte[1024];
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,261,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,262,Base64OutputStream out = new Base64OutputStream(bout);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,264,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,265,"out.write(buf, -1, 1);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,266,"fail(""Expected Base64OutputStream.write(buf, -1, 1) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,267,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,268,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,271,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,272,"out.write(buf, 1, -1);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,273,"fail(""Expected Base64OutputStream.write(buf, 1, -1) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,274,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,275,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,278,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,279,"out.write(buf, buf.length + 1, 0);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,280,"fail(""Expected Base64OutputStream.write(buf, buf.length + 1, 0) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,281,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,282,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,285,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,286,"out.write(buf, buf.length - 1, 2);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,287,"fail(""Expected Base64OutputStream.write(buf, buf.length - 1, 2) to throw a IndexOutOfBoundsException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,288,} catch (IndexOutOfBoundsException ioobe) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,289,// Expected
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,294,* Tests Base64OutputStream.write(null).
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,296,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,297,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,299,public void testWriteToNullCoverage() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,300,ByteArrayOutputStream bout = new ByteArrayOutputStream();
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,301,Base64OutputStream out = new Base64OutputStream(bout);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,302,try {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,303,"out.write(null, 0, 0);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,304,"fail(""Expcted Base64OutputStream.write(null) to throw a NullPointerException"");"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,305,} catch (NullPointerException e) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,306,// Expected
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,18,ackage org.apache.commons.codec.binary;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,20,mport java.io.IOException;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,21,mport java.io.InputStream;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,22,mport java.util.Random;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,25, This random data was encoded by OpenSSL. Java had nothing to do with it. This data helps us test interop between
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,26, Commons-Codec and OpenSSL. Notice that OpenSSL creates 64 character lines instead of the 76 of Commons-Codec.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,28, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,29, @version $Id $
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,30, @since 1.4
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,32,ublic class Base64TestData {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,34,"/ OpenSSL doesn't include the final \n, but it would be annoying beyond belief"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,35,/ to further parameterize commons-codec to support this pointless variation.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,36,inal static String ENCODED
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,37," ""9IPNKwUvdLiIAp6ctz12SiQmOGstWyYvSPeevufDhrzaws65voykKjbIj33YWTa9\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,38," ""xA7c/FHypWclrZhQ7onfc3JE93BJ5fT4R9zAEdjbjy1hv4ZYNnET4WJeXMLJ/5p+\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,39," ""qBpTsPpepW8DNVYy1c02/1wyC+kgA6CvRUd9cSr/lt88AEdsTV4GMCn1+EwuAiYd\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,40," ""ivxuzn+cLM8q2jewqlI52tP9J7Cs8vqG71s6+WAELKvm/UovvyaOi+OdMUfjQ0JL\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,41," ""iLkHu6p9OwUgvQqiDKzEv/Augo0dTPZzYGEyCP5GVrle3QQdgciIHnpdd4VUTPGR\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,42," ""UbXeKbh++U3fbJIng/sQXM3IYByMZ7xt9HWS1LUcRdQ7Prwn/IlQWxOMeq+KZJSo\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,43," ""AviWtdserXyHbIEa//hmr4p/j80k0g9q35hq1ayGM9984ALTSaZ8WeyFbZx1CxC/\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,44," ""Qoqf92UH/ylBRnSJNn4sS0oa3uUbNvOnpkB4D9V7Ut9atinCJrw+wiJcMl+9kp25\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,45," ""1IUxBGA4cUxh0eaxk3ODWnwI95EktmWOKwCSP0xjWwIMxDjygwAG5R8fk9H9bVi1\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,46," ""thMavm4nDc4vaNoSE1RnZNYwbiUVlVPM9EclvJWTWd6igWeA0MxHAA8iOM5Vnmqp\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,47," ""/WGM7UDq59rBIdNQCoeTJaAkEtAuLL5zogOa5e+MzVjvB5MYQlOlaaTtQrRApXa5\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,48," ""Z4VfEanu9UK2fi1T8jJPFC2PmXebxp0bnO+VW+bgyEdIIkIQCaZq1MKWC3KuiOS9\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,49," ""BJ1t7O0A2JKJKvoE4UNulzV2TGCC+KAnmjRqQBqXlJmgjHQAoHNZKOma/uIQOsvf\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,50," ""DnqicYdDmfyCYuV89HjA1H8tiDJ85VfsrFHdcbPAoNCpi65awJSHfdPO1NDONOK+\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,51," ""+S7Y0VXUgoYYrBV4Y7YbC8wg/nqcimr3lm3tRyp+QsgKzdREbfNRk0F5PLyLfsUE\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,52," ""lepjs1QdV3fEV1LJtiywA3ubVNQJRxhbYxa/C/Xy2qxpm6vvdL92l3q1ccev35Ic\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,53," ""aOiSx7Im+/GxV2lVKdaOvYVGDD1zBRe6Y2CwQb9p088l3/93qGR5593NCiuPPWcs\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,54," ""DWwUShM1EyW0FNX1F8bnzHnYijoyE/jf4s/l9bBd7yJdRWRCyih2WcypAiOIEkBs\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,55," ""H+dCTgalu8sRDoMh4ZIBBdgHfoZUycLqReQFLZZ4Sl4zSmzt5vQxQFhEKb9+ff/4\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,56," ""rb1KAo6wifengxVfIsa2b5ljXzAqXs7JkPvmC6fa7X4ZZndRokaxYlu3cg8OV+uG\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,57," ""/6YAHZilo8at0OpkkNdNFuhwuGlkBqrZKNUj/gSiYYc06gF/r/z6iWAjpXJRW1qq\n"""
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,58," ""3CLZXdZFZ/VrqXeVjtOAu2A=\n"";"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,60,inal static byte[] DECODED
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,61," {-12, -125, -51, 43, 5, 47, 116, -72, -120, 2, -98, -100, -73, 61, 118, 74, 36, 38, 56, 107, 45, 91, 38,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,62,"7, 72, -9, -98, -66, -25, -61, -122, -68, -38, -62, -50, -71, -66, -116, -92, 42, 54, -56, -113, 125,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,63,"40, 89, 54, -67, -60, 14, -36, -4, 81, -14, -91, 103, 37, -83, -104, 80, -18, -119, -33, 115, 114, 68,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,64,"9, 112, 73, -27, -12, -8, 71, -36, -64, 17, -40, -37, -113, 45, 97, -65, -122, 88, 54, 113, 19, -31, 98,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,65,"4, 92, -62, -55, -1, -102, 126, -88, 26, 83, -80, -6, 94, -91, 111, 3, 53, 86, 50, -43, -51, 54, -1, 92,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,66,"0, 11, -23, 32, 3, -96, -81, 69, 71, 125, 113, 42, -1, -106, -33, 60, 0, 71, 108, 77, 94, 6, 48, 41, -11,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,67,"8, 76, 46, 2, 38, 29, -118, -4, 110, -50, 127, -100, 44, -49, 42, -38, 55, -80, -86, 82, 57, -38, -45,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,68,"3, 39, -80, -84, -14, -6, -122, -17, 91, 58, -7, 96, 4, 44, -85, -26, -3, 74, 47, -65, 38, -114, -117,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,69,"29, -99, 49, 71, -29, 67, 66, 75, -120, -71, 7, -69, -86, 125, 59, 5, 32, -67, 10, -94, 12, -84, -60, -65,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,70,"16, 46, -126, -115, 29, 76, -10, 115, 96, 97, 50, 8, -2, 70, 86, -71, 94, -35, 4, 29, -127, -56, -120,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,71,"0, 122, 93, 119, -123, 84, 76, -15, -111, 81, -75, -34, 41, -72, 126, -7, 77, -33, 108, -110, 39, -125,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,72,"5, 16, 92, -51, -56, 96, 28, -116, 103, -68, 109, -12, 117, -110, -44, -75, 28, 69, -44, 59, 62, -68,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,73,"9, -4, -119, 80, 91, 19, -116, 122, -81, -118, 100, -108, -88, 2, -8, -106, -75, -37, 30, -83, 124, -121,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,74,"08, -127, 26, -1, -8, 102, -81, -118, 127, -113, -51, 36, -46, 15, 106, -33, -104, 106, -43, -84, -122,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,75,"1, -33, 124, -32, 2, -45, 73, -90, 124, 89, -20, -123, 109, -100, 117, 11, 16, -65, 66, -118, -97, -9,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,76,"01, 7, -1, 41, 65, 70, 116, -119, 54, 126, 44, 75, 74, 26, -34, -27, 27, 54, -13, -89, -90, 64, 120, 15,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,77,"43, 123, 82, -33, 90, -74, 41, -62, 38, -68, 62, -62, 34, 92, 50, 95, -67, -110, -99, -71, -44, -123,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,78,"9, 4, 96, 56, 113, 76, 97, -47, -26, -79, -109, 115, -125, 90, 124, 8, -9, -111, 36, -74, 101, -114, 43,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,79,", -110, 63, 76, 99, 91, 2, 12, -60, 56, -14, -125, 0, 6, -27, 31, 31, -109, -47, -3, 109, 88, -75, -74,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,80,"9, 26, -66, 110, 39, 13, -50, 47, 104, -38, 18, 19, 84, 103, 100, -42, 48, 110, 37, 21, -107, 83, -52,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,81,"12, 71, 37, -68, -107, -109, 89, -34, -94, -127, 103, -128, -48, -52, 71, 0, 15, 34, 56, -50, 85, -98,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,82,"06, -87, -3, 97, -116, -19, 64, -22, -25, -38, -63, 33, -45, 80, 10, -121, -109, 37, -96, 36, 18, -48,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,83,"6, 44, -66, 115, -94, 3, -102, -27, -17, -116, -51, 88, -17, 7, -109, 24, 66, 83, -91, 105, -92, -19,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,84,"6, -76, 64, -91, 118, -71, 103, -123, 95, 17, -87, -18, -11, 66, -74, 126, 45, 83, -14, 50, 79, 20, 45,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,85,"113, -103, 119, -101, -58, -99, 27, -100, -17, -107, 91, -26, -32, -56, 71, 72, 34, 66, 16, 9, -90, 106,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,86,"44, -62, -106, 11, 114, -82, -120, -28, -67, 4, -99, 109, -20, -19, 0, -40, -110, -119, 42, -6, 4, -31,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,87,"7, 110, -105, 53, 118, 76, 96, -126, -8, -96, 39, -102, 52, 106, 64, 26, -105, -108, -103, -96, -116,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,88,"16, 0, -96, 115, 89, 40, -23, -102, -2, -30, 16, 58, -53, -33, 14, 122, -94, 113, -121, 67, -103, -4,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,89,"126, 98, -27, 124, -12, 120, -64, -44, 127, 45, -120, 50, 124, -27, 87, -20, -84, 81, -35, 113, -77,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,90,"64, -96, -48, -87, -117, -82, 90, -64, -108, -121, 125, -45, -50, -44, -48, -50, 52, -30, -66, -7, 46,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,91,"40, -47, 85, -44, -126, -122, 24, -84, 21, 120, 99, -74, 27, 11, -52, 32, -2, 122, -100, -118, 106, -9,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,92,"106, 109, -19, 71, 42, 126, 66, -56, 10, -51, -44, 68, 109, -13, 81, -109, 65, 121, 60, -68, -117, 126,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,93,"59, 4, -107, -22, 99, -77, 84, 29, 87, 119, -60, 87, 82, -55, -74, 44, -80, 3, 123, -101, 84, -44, 9, 71,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,94,"4, 91, 99, 22, -65, 11, -11, -14, -38, -84, 105, -101, -85, -17, 116, -65, 118, -105, 122, -75, 113,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,95,"57, -81, -33, -110, 28, 104, -24, -110, -57, -78, 38, -5, -15, -79, 87, 105, 85, 41, -42, -114, -67,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,96,"123, 70, 12, 61, 115, 5, 23, -70, 99, 96, -80, 65, -65, 105, -45, -49, 37, -33, -1, 119, -88, 100, 121,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,97,"25, -35, -51, 10, 43, -113, 61, 103, 44, 13, 108, 20, 74, 19, 53, 19, 37, -76, 20, -43, -11, 23, -58, -25,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,98,"52, 121, -40, -118, 58, 50, 19, -8, -33, -30, -49, -27, -11, -80, 93, -17, 34, 93, 69, 100, 66, -54, 40,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,99,"18, 89, -52, -87, 2, 35, -120, 18, 64, 108, 31, -25, 66, 78, 6, -91, -69, -53, 17, 14, -125, 33, -31, -110,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,100,", 5, -40, 7, 126, -122, 84, -55, -62, -22, 69, -28, 5, 45, -106, 120, 74, 94, 51, 74, 108, -19, -26, -12,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,101,"9, 64, 88, 68, 41, -65, 126, 125, -1, -8, -83, -67, 74, 2, -114, -80, -119, -9, -89, -125, 21, 95, 34,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,102,"58, -74, 111, -103, 99, 95, 48, 42, 94, -50, -55, -112, -5, -26, 11, -89, -38, -19, 126, 25, 102, 119,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,103,"1, -94, 70, -79, 98, 91, -73, 114, 15, 14, 87, -21, -122, -1, -90, 0, 29, -104, -91, -93, -58, -83, -48,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,104,"22, 100, -112, -41, 77, 22, -24, 112, -72, 105, 100, 6, -86, -39, 40, -43, 35, -2, 4, -94, 97, -121, 52,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,105,"22, 1, 127, -81, -4, -6, -119, 96, 35, -91, 114, 81, 91, 90, -86, -36, 34, -39, 93, -42, 69, 103, -11,"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,106,"07, -87, 119, -107, -114, -45, -128, -69, 96};"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,108,/ Some utility code to help test chunked reads of the InputStream.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,110,rivate final static int SIZE_KEY = 0;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,111,rivate final static int LAST_READ_KEY = 1;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,113,tatic byte[] streamToBytes(final InputStream in) throws IOException {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,114,"/ new byte[7] is obviously quite slow, but helps exercise the code."
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,115,yte[] buf = new byte[7];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,116,ry {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,117,"nt[] status = fill(buf, 0, in);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,118,nt size = status[SIZE_KEY];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,119,nt lastRead = status[LAST_READ_KEY];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,120,hile (lastRead != -1) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,121,uf = resizeArray(buf);
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,122,"tatus = fill(buf, size, in);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,123,ize = status[SIZE_KEY];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,124,astRead = status[LAST_READ_KEY];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,126,f (buf.length != size) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,127,yte[] smallerBuf = new byte[size];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,128,"ystem.arraycopy(buf, 0, smallerBuf, 0, size);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,129,uf = smallerBuf;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,132,inally {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,133,n.close();
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,135,eturn buf;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,138,"rivate static int[] fill(final byte[] buf, final int offset, final InputStream in)"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,139,hrows IOException {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,140,"nt read = in.read(buf, offset, buf.length - offset);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,141,nt lastRead = read;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,142,f (read == -1) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,143,ead = 0;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,145,hile (lastRead != -1 && read + offset < buf.length) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,146,"astRead = in.read(buf, offset + read, buf.length - read - offset);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,147,f (lastRead != -1) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,148,ead += lastRead;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,151,"eturn new int[]{offset + read, lastRead};"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,154,rivate static byte[] resizeArray(final byte[] bytes) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,155,yte[] biggerBytes = new byte[bytes.length * 2];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,156,"ystem.arraycopy(bytes, 0, biggerBytes, 0, bytes.length);"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,157,eturn biggerBytes;
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,162, Returns an encoded and decoded copy of the same random data.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,164, @param size amount of random data to generate and encode
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,165, @param urlSafe true if encoding be urlSafe
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,166," @return two byte[] arrays:  [0] = decoded, [1] = encoded"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,168,"tatic byte[][] randomData(int size, boolean urlSafe) {"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,169,andom r = new Random();
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,170,yte[] decoded = new byte[size];
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,171,.nextBytes(decoded);
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,172,yte[] encoded = urlSafe ? Base64.encodeBase64URLSafe(decoded) : Base64.encodeBase64(decoded);
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,173,"eturn new byte[][] {decoded, encoded};"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,177, Tests the supplied byte[] array to see if it contains the specified byte c.
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,179, @param bytes byte[] array to test
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,180, @param c byte to look for
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,181," @return true if bytes contains c, false otherwise"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,183,"tatic boolean bytesContain(byte[] bytes, byte c) {"
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,184,or (int i = 0; i < bytes.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,185,f (bytes[i] == c) { return true; }
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,187,eturn false;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,18,package org.apache.commons.codec.binary;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,20,import java.io.IOException;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,21,import java.io.InputStream;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,22,import java.util.Random;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,25,* This random data was encoded by OpenSSL. Java had nothing to do with it. This data helps us test interop between
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,26,* Commons-Codec and OpenSSL. Notice that OpenSSL creates 64 character lines instead of the 76 of Commons-Codec.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,28,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,29,* @version $Id $
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,30,* @since 1.4
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,32,public class Base64TestData {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,34,"// OpenSSL doesn't include the final \n, but it would be annoying beyond belief"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,35,// to further parameterize commons-codec to support this pointless variation.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,36,final static String ENCODED
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,37,"= ""9IPNKwUvdLiIAp6ctz12SiQmOGstWyYvSPeevufDhrzaws65voykKjbIj33YWTa9\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,38,"+ ""xA7c/FHypWclrZhQ7onfc3JE93BJ5fT4R9zAEdjbjy1hv4ZYNnET4WJeXMLJ/5p+\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,39,"+ ""qBpTsPpepW8DNVYy1c02/1wyC+kgA6CvRUd9cSr/lt88AEdsTV4GMCn1+EwuAiYd\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,40,"+ ""ivxuzn+cLM8q2jewqlI52tP9J7Cs8vqG71s6+WAELKvm/UovvyaOi+OdMUfjQ0JL\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,41,"+ ""iLkHu6p9OwUgvQqiDKzEv/Augo0dTPZzYGEyCP5GVrle3QQdgciIHnpdd4VUTPGR\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,42,"+ ""UbXeKbh++U3fbJIng/sQXM3IYByMZ7xt9HWS1LUcRdQ7Prwn/IlQWxOMeq+KZJSo\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,43,"+ ""AviWtdserXyHbIEa//hmr4p/j80k0g9q35hq1ayGM9984ALTSaZ8WeyFbZx1CxC/\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,44,"+ ""Qoqf92UH/ylBRnSJNn4sS0oa3uUbNvOnpkB4D9V7Ut9atinCJrw+wiJcMl+9kp25\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,45,"+ ""1IUxBGA4cUxh0eaxk3ODWnwI95EktmWOKwCSP0xjWwIMxDjygwAG5R8fk9H9bVi1\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,46,"+ ""thMavm4nDc4vaNoSE1RnZNYwbiUVlVPM9EclvJWTWd6igWeA0MxHAA8iOM5Vnmqp\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,47,"+ ""/WGM7UDq59rBIdNQCoeTJaAkEtAuLL5zogOa5e+MzVjvB5MYQlOlaaTtQrRApXa5\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,48,"+ ""Z4VfEanu9UK2fi1T8jJPFC2PmXebxp0bnO+VW+bgyEdIIkIQCaZq1MKWC3KuiOS9\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,49,"+ ""BJ1t7O0A2JKJKvoE4UNulzV2TGCC+KAnmjRqQBqXlJmgjHQAoHNZKOma/uIQOsvf\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,50,"+ ""DnqicYdDmfyCYuV89HjA1H8tiDJ85VfsrFHdcbPAoNCpi65awJSHfdPO1NDONOK+\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,51,"+ ""+S7Y0VXUgoYYrBV4Y7YbC8wg/nqcimr3lm3tRyp+QsgKzdREbfNRk0F5PLyLfsUE\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,52,"+ ""lepjs1QdV3fEV1LJtiywA3ubVNQJRxhbYxa/C/Xy2qxpm6vvdL92l3q1ccev35Ic\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,53,"+ ""aOiSx7Im+/GxV2lVKdaOvYVGDD1zBRe6Y2CwQb9p088l3/93qGR5593NCiuPPWcs\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,54,"+ ""DWwUShM1EyW0FNX1F8bnzHnYijoyE/jf4s/l9bBd7yJdRWRCyih2WcypAiOIEkBs\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,55,"+ ""H+dCTgalu8sRDoMh4ZIBBdgHfoZUycLqReQFLZZ4Sl4zSmzt5vQxQFhEKb9+ff/4\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,56,"+ ""rb1KAo6wifengxVfIsa2b5ljXzAqXs7JkPvmC6fa7X4ZZndRokaxYlu3cg8OV+uG\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,57,"+ ""/6YAHZilo8at0OpkkNdNFuhwuGlkBqrZKNUj/gSiYYc06gF/r/z6iWAjpXJRW1qq\n"""
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,58,"+ ""3CLZXdZFZ/VrqXeVjtOAu2A=\n"";"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,60,final static byte[] DECODED
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,61,"= {-12, -125, -51, 43, 5, 47, 116, -72, -120, 2, -98, -100, -73, 61, 118, 74, 36, 38, 56, 107, 45, 91, 38,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,62,"47, 72, -9, -98, -66, -25, -61, -122, -68, -38, -62, -50, -71, -66, -116, -92, 42, 54, -56, -113, 125,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,63,"-40, 89, 54, -67, -60, 14, -36, -4, 81, -14, -91, 103, 37, -83, -104, 80, -18, -119, -33, 115, 114, 68,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,64,"-9, 112, 73, -27, -12, -8, 71, -36, -64, 17, -40, -37, -113, 45, 97, -65, -122, 88, 54, 113, 19, -31, 98,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,65,"94, 92, -62, -55, -1, -102, 126, -88, 26, 83, -80, -6, 94, -91, 111, 3, 53, 86, 50, -43, -51, 54, -1, 92,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,66,"50, 11, -23, 32, 3, -96, -81, 69, 71, 125, 113, 42, -1, -106, -33, 60, 0, 71, 108, 77, 94, 6, 48, 41, -11,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,67,"-8, 76, 46, 2, 38, 29, -118, -4, 110, -50, 127, -100, 44, -49, 42, -38, 55, -80, -86, 82, 57, -38, -45,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,68,"-3, 39, -80, -84, -14, -6, -122, -17, 91, 58, -7, 96, 4, 44, -85, -26, -3, 74, 47, -65, 38, -114, -117,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,69,"-29, -99, 49, 71, -29, 67, 66, 75, -120, -71, 7, -69, -86, 125, 59, 5, 32, -67, 10, -94, 12, -84, -60, -65,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,70,"-16, 46, -126, -115, 29, 76, -10, 115, 96, 97, 50, 8, -2, 70, 86, -71, 94, -35, 4, 29, -127, -56, -120,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,71,"30, 122, 93, 119, -123, 84, 76, -15, -111, 81, -75, -34, 41, -72, 126, -7, 77, -33, 108, -110, 39, -125,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,72,"-5, 16, 92, -51, -56, 96, 28, -116, 103, -68, 109, -12, 117, -110, -44, -75, 28, 69, -44, 59, 62, -68,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,73,"39, -4, -119, 80, 91, 19, -116, 122, -81, -118, 100, -108, -88, 2, -8, -106, -75, -37, 30, -83, 124, -121,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,74,"108, -127, 26, -1, -8, 102, -81, -118, 127, -113, -51, 36, -46, 15, 106, -33, -104, 106, -43, -84, -122,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,75,"51, -33, 124, -32, 2, -45, 73, -90, 124, 89, -20, -123, 109, -100, 117, 11, 16, -65, 66, -118, -97, -9,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,76,"101, 7, -1, 41, 65, 70, 116, -119, 54, 126, 44, 75, 74, 26, -34, -27, 27, 54, -13, -89, -90, 64, 120, 15,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,77,"-43, 123, 82, -33, 90, -74, 41, -62, 38, -68, 62, -62, 34, 92, 50, 95, -67, -110, -99, -71, -44, -123,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,78,"49, 4, 96, 56, 113, 76, 97, -47, -26, -79, -109, 115, -125, 90, 124, 8, -9, -111, 36, -74, 101, -114, 43,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,79,"0, -110, 63, 76, 99, 91, 2, 12, -60, 56, -14, -125, 0, 6, -27, 31, 31, -109, -47, -3, 109, 88, -75, -74,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,80,"19, 26, -66, 110, 39, 13, -50, 47, 104, -38, 18, 19, 84, 103, 100, -42, 48, 110, 37, 21, -107, 83, -52,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,81,"-12, 71, 37, -68, -107, -109, 89, -34, -94, -127, 103, -128, -48, -52, 71, 0, 15, 34, 56, -50, 85, -98,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,82,"106, -87, -3, 97, -116, -19, 64, -22, -25, -38, -63, 33, -45, 80, 10, -121, -109, 37, -96, 36, 18, -48,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,83,"46, 44, -66, 115, -94, 3, -102, -27, -17, -116, -51, 88, -17, 7, -109, 24, 66, 83, -91, 105, -92, -19,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,84,"66, -76, 64, -91, 118, -71, 103, -123, 95, 17, -87, -18, -11, 66, -74, 126, 45, 83, -14, 50, 79, 20, 45,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,85,"-113, -103, 119, -101, -58, -99, 27, -100, -17, -107, 91, -26, -32, -56, 71, 72, 34, 66, 16, 9, -90, 106,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,86,"-44, -62, -106, 11, 114, -82, -120, -28, -67, 4, -99, 109, -20, -19, 0, -40, -110, -119, 42, -6, 4, -31,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,87,"67, 110, -105, 53, 118, 76, 96, -126, -8, -96, 39, -102, 52, 106, 64, 26, -105, -108, -103, -96, -116,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,88,"116, 0, -96, 115, 89, 40, -23, -102, -2, -30, 16, 58, -53, -33, 14, 122, -94, 113, -121, 67, -103, -4,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,89,"-126, 98, -27, 124, -12, 120, -64, -44, 127, 45, -120, 50, 124, -27, 87, -20, -84, 81, -35, 113, -77,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,90,"-64, -96, -48, -87, -117, -82, 90, -64, -108, -121, 125, -45, -50, -44, -48, -50, 52, -30, -66, -7, 46,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,91,"-40, -47, 85, -44, -126, -122, 24, -84, 21, 120, 99, -74, 27, 11, -52, 32, -2, 122, -100, -118, 106, -9,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,92,"-106, 109, -19, 71, 42, 126, 66, -56, 10, -51, -44, 68, 109, -13, 81, -109, 65, 121, 60, -68, -117, 126,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,93,"-59, 4, -107, -22, 99, -77, 84, 29, 87, 119, -60, 87, 82, -55, -74, 44, -80, 3, 123, -101, 84, -44, 9, 71,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,94,"24, 91, 99, 22, -65, 11, -11, -14, -38, -84, 105, -101, -85, -17, 116, -65, 118, -105, 122, -75, 113,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,95,"-57, -81, -33, -110, 28, 104, -24, -110, -57, -78, 38, -5, -15, -79, 87, 105, 85, 41, -42, -114, -67,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,96,"-123, 70, 12, 61, 115, 5, 23, -70, 99, 96, -80, 65, -65, 105, -45, -49, 37, -33, -1, 119, -88, 100, 121,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,97,"-25, -35, -51, 10, 43, -113, 61, 103, 44, 13, 108, 20, 74, 19, 53, 19, 37, -76, 20, -43, -11, 23, -58, -25,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,98,"-52, 121, -40, -118, 58, 50, 19, -8, -33, -30, -49, -27, -11, -80, 93, -17, 34, 93, 69, 100, 66, -54, 40,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,99,"118, 89, -52, -87, 2, 35, -120, 18, 64, 108, 31, -25, 66, 78, 6, -91, -69, -53, 17, 14, -125, 33, -31, -110,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,100,"1, 5, -40, 7, 126, -122, 84, -55, -62, -22, 69, -28, 5, 45, -106, 120, 74, 94, 51, 74, 108, -19, -26, -12,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,101,"49, 64, 88, 68, 41, -65, 126, 125, -1, -8, -83, -67, 74, 2, -114, -80, -119, -9, -89, -125, 21, 95, 34,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,102,"-58, -74, 111, -103, 99, 95, 48, 42, 94, -50, -55, -112, -5, -26, 11, -89, -38, -19, 126, 25, 102, 119,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,103,"81, -94, 70, -79, 98, 91, -73, 114, 15, 14, 87, -21, -122, -1, -90, 0, 29, -104, -91, -93, -58, -83, -48,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,104,"-22, 100, -112, -41, 77, 22, -24, 112, -72, 105, 100, 6, -86, -39, 40, -43, 35, -2, 4, -94, 97, -121, 52,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,105,"-22, 1, 127, -81, -4, -6, -119, 96, 35, -91, 114, 81, 91, 90, -86, -36, 34, -39, 93, -42, 69, 103, -11,"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,106,"107, -87, 119, -107, -114, -45, -128, -69, 96};"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,108,// Some utility code to help test chunked reads of the InputStream.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,110,private final static int SIZE_KEY = 0;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,111,private final static int LAST_READ_KEY = 1;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,113,static byte[] streamToBytes(final InputStream in) throws IOException {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,114,"// new byte[7] is obviously quite slow, but helps exercise the code."
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,115,byte[] buf = new byte[7];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,116,try {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,117,"int[] status = fill(buf, 0, in);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,118,int size = status[SIZE_KEY];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,119,int lastRead = status[LAST_READ_KEY];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,120,while (lastRead != -1) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,121,buf = resizeArray(buf);
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,122,"status = fill(buf, size, in);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,123,size = status[SIZE_KEY];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,124,lastRead = status[LAST_READ_KEY];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,126,if (buf.length != size) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,127,byte[] smallerBuf = new byte[size];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,128,"System.arraycopy(buf, 0, smallerBuf, 0, size);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,129,buf = smallerBuf;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,132,finally {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,133,in.close();
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,135,return buf;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,138,"private static int[] fill(final byte[] buf, final int offset, final InputStream in)"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,139,throws IOException {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,140,"int read = in.read(buf, offset, buf.length - offset);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,141,int lastRead = read;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,142,if (read == -1) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,143,read = 0;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,145,while (lastRead != -1 && read + offset < buf.length) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,146,"lastRead = in.read(buf, offset + read, buf.length - read - offset);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,147,if (lastRead != -1) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,148,read += lastRead;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,151,"return new int[]{offset + read, lastRead};"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,154,private static byte[] resizeArray(final byte[] bytes) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,155,byte[] biggerBytes = new byte[bytes.length * 2];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,156,"System.arraycopy(bytes, 0, biggerBytes, 0, bytes.length);"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,157,return biggerBytes;
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,162,* Returns an encoded and decoded copy of the same random data.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,164,* @param size amount of random data to generate and encode
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,165,* @param urlSafe true if encoding be urlSafe
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,166,"* @return two byte[] arrays:  [0] = decoded, [1] = encoded"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,168,"static byte[][] randomData(int size, boolean urlSafe) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,169,Random r = new Random();
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,170,byte[] decoded = new byte[size];
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,171,r.nextBytes(decoded);
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,172,byte[] encoded = urlSafe ? Base64.encodeBase64URLSafe(decoded) : Base64.encodeBase64(decoded);
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,173,"return new byte[][] {decoded, encoded};"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,177,* Tests the supplied byte[] array to see if it contains the specified byte c.
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,179,* @param bytes byte[] array to test
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,180,* @param c byte to look for
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,181,"* @return true if bytes contains c, false otherwise"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,183,"static boolean bytesContain(byte[] bytes, byte c) {"
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,184,for (int i = 0; i < bytes.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,185,if (bytes[i] == c) { return true; }
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,187,return false;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,18,ackage org.apache.commons.codec.binary;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,20,mport java.io.UnsupportedEncodingException;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,21,mport java.util.Arrays;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,23,mport junit.framework.Assert;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,24,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,27," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,28, @version $Id: $
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,30,ublic class StringBytesUtilsTest extends TestCase {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,32,rivate static byte[] BYTES_FIXTURE;
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,34,"rivate static final String STRING_FIXTURE = ""ABC"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,36,ry {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,37,"YTES_FIXTURE = ""abc"".getBytes(""US-ASCII"");"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,38, catch (UnsupportedEncodingException e) {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,39,hrow new IllegalArgumentException(e.toString());
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,43,ublic void testGetBytesIso8859_1() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,44,"tring charsetName = ""ISO-8859-1"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,45,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,46,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,47,yte[] actual = StringBytesUtils.getBytesIso8859_1(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,48,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,51,ublic void testGetBytesUsAscii() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,52,"tring charsetName = ""US-ASCII"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,53,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,54,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,55,yte[] actual = StringBytesUtils.getBytesUsAscii(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,56,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,59,ublic void testGetBytesUtf16() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,60,"tring charsetName = ""UTF-16"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,61,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,62,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,63,yte[] actual = StringBytesUtils.getBytesUtf16(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,64,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,67,ublic void testGetBytesUtf16Be() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,68,"tring charsetName = ""UTF-16BE"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,69,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,70,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,71,yte[] actual = StringBytesUtils.getBytesUtf16Be(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,72,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,75,ublic void testGetBytesUtf16Le() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,76,"tring charsetName = ""UTF-16LE"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,77,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,78,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,79,yte[] actual = StringBytesUtils.getBytesUtf16Le(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,80,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,83,ublic void testGetBytesUtf8() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,84,"tring charsetName = ""UTF-8"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,85,estGetSupportedBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,86,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,87,yte[] actual = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,88,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,91,rivate void testGetSupportedBytes(String charsetName) throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,92,yte[] expected = STRING_FIXTURE.getBytes(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,93,"yte[] actual = StringBytesUtils.getSupportedBytes(STRING_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,94,"ssert.assertTrue(Arrays.equals(expected, actual));"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,97,ublic void testGetSupportedBytesBadEnc() {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,98,ry {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,99,"tringBytesUtils.getSupportedBytes(STRING_FIXTURE, ""UNKNOWN"");"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,100,"ssert.fail(""Expected "" + IllegalStateException.class.getName());"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,101, catch (IllegalStateException e) {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,102,/ Expected
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,106,rivate void testNewString(String charsetName) throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,107,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,108,"tring actual = StringBytesUtils.newString(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,109,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,112,ublic void testNewStringBadEnc() {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,113,ry {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,114,"tringBytesUtils.newString(BYTES_FIXTURE, ""UNKNOWN"");"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,115,"ssert.fail(""Expected "" + IllegalStateException.class.getName());"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,116, catch (IllegalStateException e) {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,117,/ Expected
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,121,ublic void testNewStringIso8859_1() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,122,"tring charsetName = ""ISO-8859-1"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,123,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,124,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,125,tring actual = StringBytesUtils.newStringIso8859_1(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,126,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,129,ublic void testNewStringUsAscii() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,130,"tring charsetName = ""US-ASCII"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,131,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,132,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,133,tring actual = StringBytesUtils.newStringUsAscii(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,134,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,137,ublic void testNewStringUtf16() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,138,"tring charsetName = ""UTF-16"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,139,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,140,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,141,tring actual = StringBytesUtils.newStringUtf16(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,142,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,145,ublic void testNewStringUtf16Be() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,146,"tring charsetName = ""UTF-16BE"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,147,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,148,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,149,tring actual = StringBytesUtils.newStringUtf16Be(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,150,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,153,ublic void testNewStringUtf16Le() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,154,"tring charsetName = ""UTF-16LE"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,155,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,156,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,157,tring actual = StringBytesUtils.newStringUtf16Le(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,158,"ssert.assertEquals(expected, actual);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,161,ublic void testNewStringUtf8() throws UnsupportedEncodingException {
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,162,"tring charsetName = ""UTF-8"";"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,163,estNewString(charsetName);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,164,"tring expected = new String(BYTES_FIXTURE, charsetName);"
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,165,tring actual = StringBytesUtils.newStringUtf8(BYTES_FIXTURE);
False,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,166,"ssert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,18,package org.apache.commons.codec.binary;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,20,import java.io.UnsupportedEncodingException;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,21,import java.util.Arrays;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,23,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,24,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,27,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,28,* @version $Id: $
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,30,public class StringBytesUtilsTest extends TestCase {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,32,private static byte[] BYTES_FIXTURE;
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,34,"private static final String STRING_FIXTURE = ""ABC"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,36,try {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,37,"BYTES_FIXTURE = ""abc"".getBytes(""US-ASCII"");"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,38,} catch (UnsupportedEncodingException e) {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,39,throw new IllegalArgumentException(e.toString());
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,43,public void testGetBytesIso8859_1() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,44,"String charsetName = ""ISO-8859-1"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,45,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,46,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,47,byte[] actual = StringBytesUtils.getBytesIso8859_1(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,48,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,51,public void testGetBytesUsAscii() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,52,"String charsetName = ""US-ASCII"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,53,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,54,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,55,byte[] actual = StringBytesUtils.getBytesUsAscii(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,56,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,59,public void testGetBytesUtf16() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,60,"String charsetName = ""UTF-16"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,61,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,62,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,63,byte[] actual = StringBytesUtils.getBytesUtf16(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,64,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,67,public void testGetBytesUtf16Be() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,68,"String charsetName = ""UTF-16BE"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,69,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,70,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,71,byte[] actual = StringBytesUtils.getBytesUtf16Be(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,72,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,75,public void testGetBytesUtf16Le() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,76,"String charsetName = ""UTF-16LE"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,77,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,78,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,79,byte[] actual = StringBytesUtils.getBytesUtf16Le(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,80,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,83,public void testGetBytesUtf8() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,84,"String charsetName = ""UTF-8"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,85,testGetSupportedBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,86,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,87,byte[] actual = StringBytesUtils.getBytesUtf8(STRING_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,88,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,91,private void testGetSupportedBytes(String charsetName) throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,92,byte[] expected = STRING_FIXTURE.getBytes(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,93,"byte[] actual = StringBytesUtils.getSupportedBytes(STRING_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,94,"Assert.assertTrue(Arrays.equals(expected, actual));"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,97,public void testGetSupportedBytesBadEnc() {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,98,try {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,99,"StringBytesUtils.getSupportedBytes(STRING_FIXTURE, ""UNKNOWN"");"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,100,"Assert.fail(""Expected "" + IllegalStateException.class.getName());"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,101,} catch (IllegalStateException e) {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,102,// Expected
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,106,private void testNewString(String charsetName) throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,107,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,108,"String actual = StringBytesUtils.newString(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,109,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,112,public void testNewStringBadEnc() {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,113,try {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,114,"StringBytesUtils.newString(BYTES_FIXTURE, ""UNKNOWN"");"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,115,"Assert.fail(""Expected "" + IllegalStateException.class.getName());"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,116,} catch (IllegalStateException e) {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,117,// Expected
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,121,public void testNewStringIso8859_1() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,122,"String charsetName = ""ISO-8859-1"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,123,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,124,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,125,String actual = StringBytesUtils.newStringIso8859_1(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,126,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,129,public void testNewStringUsAscii() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,130,"String charsetName = ""US-ASCII"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,131,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,132,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,133,String actual = StringBytesUtils.newStringUsAscii(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,134,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,137,public void testNewStringUtf16() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,138,"String charsetName = ""UTF-16"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,139,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,140,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,141,String actual = StringBytesUtils.newStringUtf16(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,142,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,145,public void testNewStringUtf16Be() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,146,"String charsetName = ""UTF-16BE"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,147,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,148,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,149,String actual = StringBytesUtils.newStringUtf16Be(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,150,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,153,public void testNewStringUtf16Le() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,154,"String charsetName = ""UTF-16LE"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,155,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,156,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,157,String actual = StringBytesUtils.newStringUtf16Le(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,158,"Assert.assertEquals(expected, actual);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,161,public void testNewStringUtf8() throws UnsupportedEncodingException {
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,162,"String charsetName = ""UTF-8"";"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,163,testNewString(charsetName);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,164,"String expected = new String(BYTES_FIXTURE, charsetName);"
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,165,String actual = StringBytesUtils.newStringUtf8(BYTES_FIXTURE);
True,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java,166,"Assert.assertEquals(expected, actual);"
