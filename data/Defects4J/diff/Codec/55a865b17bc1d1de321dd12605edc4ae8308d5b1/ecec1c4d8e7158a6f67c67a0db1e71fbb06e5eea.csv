is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/StringEncoderComparator.java,src/main/java/org/apache/commons/codec/StringEncoderComparator.java,31,"@SuppressWarnings(""rawtypes"")"
True,src/main/java/org/apache/commons/codec/StringEncoderComparator.java,src/main/java/org/apache/commons/codec/StringEncoderComparator.java,73,"@SuppressWarnings(""unchecked"")"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,284,"oid decode(final byte[] in, int inPos, final int inAvail, final Context context) { // package protected for access from I/O streams"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,284,"void decode(final byte[] in, int inPos, final int inAvail, final Context context) {"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,285,// package protected for access from I/O streams
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,378,"oid encode(final byte[] in, int inPos, final int inAvail, final Context context) { // package protected for access from I/O streams"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,380,"void encode(final byte[] in, int inPos, final int inAvail, final Context context) {"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,381,// package protected for access from I/O streams
False,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,80,"ublic Base32InputStream(final InputStream in, final boolean doEncode, final int lineLength, final byte[] lineSeparator) {"
True,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,80,"public Base32InputStream(final InputStream in, final boolean doEncode,"
True,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,src/main/java/org/apache/commons/codec/binary/Base32InputStream.java,81,"final int lineLength, final byte[] lineSeparator) {"
False,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,80,"ublic Base32OutputStream(final OutputStream out, final boolean doEncode, final int lineLength, final byte[] lineSeparator) {"
True,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,80,"public Base32OutputStream(final OutputStream out, final boolean doEncode,"
True,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java,81,"final int lineLength, final byte[] lineSeparator) {"
False,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,657,"ublic static byte[] encodeBase64(final byte[] binaryData, final boolean isChunked, final boolean urlSafe, final int maxResultSize) {"
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,657,"public static byte[] encodeBase64(final byte[] binaryData, final boolean isChunked,"
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,658,"final boolean urlSafe, final int maxResultSize) {"
False,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,84,"ublic Base64InputStream(final InputStream in, final boolean doEncode, final int lineLength, final byte[] lineSeparator) {"
True,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,84,"public Base64InputStream(final InputStream in, final boolean doEncode,"
True,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,src/main/java/org/apache/commons/codec/binary/Base64InputStream.java,85,"final int lineLength, final byte[] lineSeparator) {"
False,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,84,"ublic Base64OutputStream(final OutputStream out, final boolean doEncode, final int lineLength, final byte[] lineSeparator) {"
True,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,84,"public Base64OutputStream(final OutputStream out, final boolean doEncode,"
True,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java,85,"final int lineLength, final byte[] lineSeparator) {"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,182,"rotected BaseNCodec(final int unencodedBlockSize, final int encodedBlockSize, final int lineLength, final int chunkSeparatorLength) {"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,182,"protected BaseNCodec(final int unencodedBlockSize, final int encodedBlockSize,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,183,"final int lineLength, final int chunkSeparatorLength) {"
False,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,195,"rivate static IllegalStateException newIllegalStateException(final String charsetName, final UnsupportedEncodingException e) {"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,195,"private static IllegalStateException newIllegalStateException(final String charsetName,"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,196,final UnsupportedEncodingException e) {
False,src/main/java/org/apache/commons/codec/digest/B64.java,src/main/java/org/apache/commons/codec/digest/B64.java,54,"tatic void b64from24bit(final byte b2, final byte b1, final byte b0, final int outLen, final StringBuilder buffer) {"
True,src/main/java/org/apache/commons/codec/digest/B64.java,src/main/java/org/apache/commons/codec/digest/B64.java,54,"static void b64from24bit(final byte b2, final byte b1, final byte b0, final int outLen,"
True,src/main/java/org/apache/commons/codec/digest/B64.java,src/main/java/org/apache/commons/codec/digest/B64.java,55,final StringBuilder buffer) {
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,125,"rivate static String sha2Crypt(final byte[] keyBytes, final String salt, final String saltPrefix, final int blocksize, final String algorithm) {"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,125,"private static String sha2Crypt(final byte[] keyBytes, final String salt, final String saltPrefix,"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,126,"final int blocksize, final String algorithm) {"
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,407,"rivate int handleG(final String value, final DoubleMetaphoneResult result, int index, final boolean slavoGermanic) {"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,407,"private int handleG(final String value, final DoubleMetaphoneResult result, int index,"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,408,final boolean slavoGermanic) {
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,512,"rivate int handleJ(final String value, final DoubleMetaphoneResult result, int index, final boolean slavoGermanic) {"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,513,"private int handleJ(final String value, final DoubleMetaphoneResult result, int index,"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,514,final boolean slavoGermanic) {
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,579,"rivate int handleR(final String value, final DoubleMetaphoneResult result, final int index, final boolean slavoGermanic) {"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,581,"private int handleR(final String value, final DoubleMetaphoneResult result, final int index,"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,582,final boolean slavoGermanic) {
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,593,"rivate int handleS(final String value, final DoubleMetaphoneResult result, int index, final boolean slavoGermanic) {"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,596,"private int handleS(final String value, final DoubleMetaphoneResult result, int index,"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,597,final boolean slavoGermanic) {
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,753,"rivate int handleZ(final String value, final DoubleMetaphoneResult result, int index, final boolean slavoGermanic) {"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,757,"private int handleZ(final String value, final DoubleMetaphoneResult result, int index,"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,758,final boolean slavoGermanic) {
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,9,     http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,39,"rivate static final int ONE = 1, TWO = 2, THREE = 3, FOUR = 4, FIVE = 5, SIX = 6, SEVEN = 7, EIGHT = 8, ELEVEN = 11, TWELVE = 12;"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,39,"private static final int ONE = 1, TWO = 2, THREE = 3, FOUR = 4, FIVE = 5, SIX = 6, SEVEN = 7, EIGHT = 8,"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,40,"ELEVEN = 11, TWELVE = 12;"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,44,"rivate static final String PLAIN_ASCII = ""AaEeIiOoUu"" // grave"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,45," ""AaEeIiOoUuYy"" // acute"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,46," ""AaEeIiOoUuYy"" // circumflex"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,47," ""AaOoNn"" // tilde"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,48," ""AaEeIiOoUuYy"" // umlaut"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,49," ""Aa"" // ring"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,50," ""Cc"" // cedilla"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,51," ""OoUu""; // double acute"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,45,"private static final String PLAIN_ASCII = ""AaEeIiOoUu"" + // grave"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,46,"""AaEeIiOoUuYy"" + // acute"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,47,"""AaEeIiOoUuYy"" + // circumflex"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,48,"""AaOoNn"" + // tilde"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,49,"""AaEeIiOoUuYy"" + // umlaut"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,50,"""Aa"" + // ring"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,51,"""Cc"" + // cedilla"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,52,"""OoUu""; // double acute"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,56,"rivate static final String UNICODE = ""\u00C0\u00E0\u00C8\u00E8\u00CC\u00EC\u00D2\u00F2\u00D9\u00F9"""
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,57," ""\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DD\u00FD"""
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,58," ""\u00C2\u00E2\u00CA\u00EA\u00CE\u00EE\u00D4\u00F4\u00DB\u00FB\u0176\u0177"" + ""\u00C3\u00E3\u00D5\u00F5\u00D1\u00F1"""
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,59," ""\u00C4\u00E4\u00CB\u00EB\u00CF\u00EF\u00D6\u00F6\u00DC\u00FC\u0178\u00FF"" + ""\u00C5\u00E5"" + ""\u00C7\u00E7"""
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,60," ""\u0150\u0151\u0170\u0171"";"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,57,"private static final String UNICODE = ""\u00C0\u00E0\u00C8\u00E8\u00CC\u00EC\u00D2\u00F2\u00D9\u00F9"" +"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,58,"""\u00C1\u00E1\u00C9\u00E9\u00CD\u00ED\u00D3\u00F3\u00DA\u00FA\u00DD\u00FD"" +"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,59,"""\u00C2\u00E2\u00CA\u00EA\u00CE\u00EE\u00D4\u00F4\u00DB\u00FB\u0176\u0177"" +"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,60,"""\u00C3\u00E3\u00D5\u00F5\u00D1\u00F1"" +"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,61,"""\u00C4\u00E4\u00CB\u00EB\u00CF\u00EF\u00D6\u00F6\u00DC\u00FC\u0178\u00FF"" +"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,62,"""\u00C5\u00E5"" + ""\u00C7\u00E7"" + ""\u0150\u0151\u0170\u0171"";"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,62,"rivate static final String[] DOUBLE_CONSONANT = new String[] { ""BB"", ""CC"", ""DD"", ""FF"", ""GG"", ""HH"", ""JJ"", ""KK"", ""LL"", ""MM"", ""NN"", ""PP"", ""QQ"", ""RR"", ""SS"", ""TT"", ""VV"","
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,63,"WW"", ""XX"", ""YY"", ""ZZ"" };"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,64,private static final String[] DOUBLE_CONSONANT =
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,65,"new String[] { ""BB"", ""CC"", ""DD"", ""FF"", ""GG"", ""HH"", ""JJ"", ""KK"", ""LL"", ""MM"", ""NN"", ""PP"", ""QQ"", ""RR"", ""SS"","
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,66,"""TT"", ""VV"", ""WW"", ""XX"", ""YY"", ""ZZ"" };"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,106,"hrow new EncoderException(""Parameter supplied to Match Rating Approach encoder is not of type java.lang.String"");"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,109,throw new EncoderException(
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,110,"""Parameter supplied to Match Rating Approach encoder is not of type java.lang.String"");"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,271,"eturn letter.equalsIgnoreCase(""E"") || letter.equalsIgnoreCase(""A"") || letter.equalsIgnoreCase(""O"") || letter.equalsIgnoreCase(""I"") ||"
False,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,272,"etter.equalsIgnoreCase(""U"");"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,275,"return letter.equalsIgnoreCase(""E"") || letter.equalsIgnoreCase(""A"") || letter.equalsIgnoreCase(""O"") ||"
True,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java,276,"letter.equalsIgnoreCase(""I"") || letter.equalsIgnoreCase(""U"");"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,340,"ublic PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat, final int maxPhonemes) {"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,340,"public PhoneticEngine(final NameType nameType, final RuleType ruleType, final boolean concat,"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,341,final int maxPhonemes) {
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,177,"inal Map<RuleType, Map<String, List<Rule>>> rts = new EnumMap<RuleType, Map<String, List<Rule>>>(RuleType.class);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,177,"final Map<RuleType, Map<String, List<Rule>>> rts ="
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,178,"new EnumMap<RuleType, Map<String, List<Rule>>>(RuleType.class);"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,260,"ublic static List<Rule> getInstance(final NameType nameType, final RuleType rt, final Languages.LanguageSet langs) {"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,261,"public static List<Rule> getInstance(final NameType nameType, final RuleType rt,"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,262,final Languages.LanguageSet langs) {
