is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,69,rivate static final byte[] intToBase64 = {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,69,private static final byte[] STANDARD_ENCODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78,"* This is a copy of the STANDARD_ENCODE_TABLE above, but with + and /"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,79,* changed to - and _ to make the encoded Base64 results more URL-SAFE.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,80,* This table is only used when the Base64's mode is set to URL-SAFE.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,82,private static final byte[] URL_SAFE_ENCODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,83,"'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,84,"'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,85,"'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,86,"'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,87,"'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,83, This array is a lookup table that translates unicode characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,96,* This array is a lookup table that translates Unicode characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,102,* Note:  '+' and '-' both decode to 62.  '/' and '_' both decode to 63.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,103,* This means decoder seamlessly handles both URL_SAFE and STANDARD base64.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,104,"* (The encoder, on the other hand, needs to know ahead of time what to emit)."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,92,rivate static final byte[] base64ToInt = {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,109,private static final byte[] DECODE_TABLE = {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,95,"1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,112,"-1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,98,"4, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,115,"24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,130,* Encode table to use:  either STANDARD or URL_SAFE.  Note:  the DECODE_TABLE above remains static
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,131,"* because it is able to decode both STANDARD and URL_SAFE streams, but the encodeTable must be a member"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,132,* variable so we can switch between the two modes.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,134,private final byte[] encodeTable;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,178," Default constructor:  lineLength is 76, and the lineSeparator is CRLF"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,179," when encoding, and all forms can be decoded."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,201,* Sets state for decoding and encoding.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,202,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,203,"* When encoding the line length is 76, the line separator is CRLF, and we use the STANDARD_ENCODE_TABLE."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,204,* </p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,206,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,207,* When decoding all variants can be decoded.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,208,* </p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,182,"his(CHUNK_SIZE, CHUNK_SEPARATOR);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,211,this(false);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,215,"* Same as default constructor (line length is 76, line separator is CRLF), but URL-SAFE mode for encoding is"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,216,* supplied.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,218,* When decoding: all variants can be decoded.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,220,* @param urlSafe
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,221,*            true if URL-SAFE encoding should be performed. In most situations this should be set to false.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,223,public Base64(boolean urlSafe) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,224,"this(CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,187, Consumer can use this constructor to choose a different lineLength
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,188, when encoding (lineSeparator is still CRLF).  All forms of data can
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,189, be decoded.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,190, </p><p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,191, Note:  lineLengths that aren't multiples of 4 will still essentially
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,192, end up being multiples of 4 in the encoded data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,229,* Sets the line length when encoding (line separator is still CRLF). All forms of data can be decoded.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,195, @param lineLength each line of encoded data will be at most this long
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,196, (rounded up to nearest multiple of 4).
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,197," If lineLength <= 0, then the output will not be divided into lines (chunks)."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,198, Ignored when decoding.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,231,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,232,* Note: line lengths that aren't multiples of 4 will still essentially end up being multiples of 4 in the encoded
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,233,* data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,234,* </p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,236,* @param lineLength
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,237,*            each line of encoded data will be at most this long (rounded up to nearest multiple of 4). If
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,238,"*            lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,206, Consumer can use this constructor to choose a different lineLength
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,207, and lineSeparator when encoding.  All forms of data can
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,208, be decoded.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,246,* Sets the line length and line separator when encoding. All forms of data can be decoded.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,247,* </p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,248,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,249,* Note: line lengths that aren't multiples of 4 will still essentially end up being multiples of 4 in the encoded
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,250,* data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,251,* </p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,253,* @param lineLength
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,254,*            Each line of encoded data will be at most this long (rounded up to nearest multiple of 4). Ignored
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,255,"*            when decoding. If <= 0, then output will not be divided into lines (chunks)."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,256,* @param lineSeparator
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,257,*            Each line of encoded data will end with this sequence of bytes.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,258,* @throws IllegalArgumentException
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,259,*             The provided lineSeparator included some base64 characters. That's not going to work!
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,261,"public Base64(int lineLength, byte[] lineSeparator) {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,262,"this(lineLength, lineSeparator, false);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,266,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,267,"* Consumer can use this constructor to choose a different lineLength,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,268,"* lineSeparator, and whether to use URL-SAFE mode when encoding."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,269,* All forms of data can be decoded.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,280,* @param urlSafe       Instead of emitting '+' and '/' we emit '-' and '_' respectively.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,281,"*                      urlSafe is only applied to ""encode"" operations.  Decoding seamlessly"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,282,*                      handles both modes.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,222,"ublic Base64(int lineLength, byte[] lineSeparator) {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,287,"public Base64(int lineLength, byte[] lineSeparator, boolean urlSafe) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,231,his.decodeSize = encodeSize - 1;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,296,this.decodeSize = this.encodeSize - 1;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,306,this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,310,"* Returns our current encode mode. True if we're URL-SAFE, false otherwise."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,312,"* @return true if we're in URL-SAFE mode, false otherwise."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,314,public boolean isUrlSafe() {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,315,return this.encodeTable == URL_SAFE_ENCODE_TABLE;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,248,oolean hasData() { return buf != null; }
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,323,boolean hasData() {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,324,return this.buf != null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,255,nt avail() { return buf != null ? pos - readPos : 0; }
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,332,int avail() {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,333,return buf != null ? pos - readPos : 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,297, else {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,298,eturn eof ? -1 : 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,return eof ? -1 : 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,350,uf[pos++] = intToBase64[(x >> 2) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,351,uf[pos++] = intToBase64[(x << 4) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,352,uf[pos++] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,353,uf[pos++] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,427,buf[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,428,buf[pos++] = encodeTable[(x << 4) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,429,// URL-SAFE skips the padding to further reduce size.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,430,if (encodeTable == STANDARD_ENCODE_TABLE) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,431,buf[pos++] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,432,buf[pos++] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,357,uf[pos++] = intToBase64[(x >> 10) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,358,uf[pos++] = intToBase64[(x >> 4) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,359,uf[pos++] = intToBase64[(x << 2) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,360,uf[pos++] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,437,buf[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,438,buf[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,439,buf[pos++] = encodeTable[(x << 2) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,440,// URL-SAFE skips the padding to further reduce size.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,441,if (encodeTable == STANDARD_ENCODE_TABLE) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,442,buf[pos++] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,uf[pos++] = intToBase64[(x >> 18) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,378,uf[pos++] = intToBase64[(x >> 12) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,379,uf[pos++] = intToBase64[(x >> 6) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,380,uf[pos++] = intToBase64[x & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,460,buf[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,461,buf[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,462,buf[pos++] = encodeTable[(x >> 6) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,463,buf[pos++] = encodeTable[x & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,426, = x << 6;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,427,witch (modulus) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,428,ase 2:
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,429, = x << 6;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,430,uf[pos++] = (byte) ((x >> 16) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,431,reak;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,432,ase 3:
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,433,uf[pos++] = (byte) ((x >> 16) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,434,uf[pos++] = (byte) ((x >> 8) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,435,reak;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,439,eturn;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,511,break;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,441,f (b >= 0 && b < base64ToInt.length) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,442,nt result = base64ToInt[b];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,513,if (b >= 0 && b < DECODE_TABLE.length) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,514,int result = DECODE_TABLE[b];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,528,// Two forms of EOF as far as base64 decoder is concerned:  actual
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,529,// EOF (-1) and first time '=' character is encountered in stream.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,530,// This approach makes the '=' padding characters completely optional.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,531,if (eof && modulus != 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,532,x = x << 6;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,533,switch (modulus) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,534,case 2:
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,535,x = x << 6;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,536,buf[pos++] = (byte) ((x >> 16) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,537,break;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,538,case 3:
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,539,buf[pos++] = (byte) ((x >> 16) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,540,buf[pos++] = (byte) ((x >> 8) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,541,break;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,465,eturn octet == PAD || (octet >= 0 && octet < base64ToInt.length && base64ToInt[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,554,return octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,603,* Encodes binary data using a url-safe variation of the base64 algorithm but does not chunk the output.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,604,* The url-safe variation emits - and _ instead of + and / characters.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,606,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,607,*            binary data to encode
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,608,* @return Base64 characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,610,public static byte[] encodeBase64URLSafe(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,611,"return encodeBase64(binaryData, false, true);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,666,"return encodeBase64(binaryData, isChunked, false);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,670,"* Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,672,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,673,*            Array containing binary data to encode.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,674,* @param isChunked
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,675,*            if <code>true</code> this encoder will chunk the base64 output into 76 character blocks
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,676,* @param urlSafe
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,677,*            if <code>true</code> this encoder will emit - and _ instead of the usual + and / characters.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,678,* @return Base64-encoded data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,679,* @throws IllegalArgumentException
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,680,*             Thrown when the input array needs an output array bigger than {@link Integer#MAX_VALUE}
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,682,"public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,567,ase64 b64 = isChunked ? new Base64() : new Base64(0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,686,"Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,707,"// In URL-SAFE mode we skip the padding characters, so sometimes our"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,708,// final length is a bit smaller.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,709,if (urlSafe && b64.pos < buf.length) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,710,byte[] smallerBuf = new byte[b64.pos];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,711,"System.arraycopy(buf, 0, smallerBuf, 0, b64.pos);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,712,buf = smallerBuf;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,652, Check if a byte value is whitespace or not.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,769,* Checks if a byte value is whitespace or not.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,654, @param byteToCheck the byte to check
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,771,* @param byteToCheck
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,772,*            the byte to check
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,657,rivate static boolean isWhiteSpace(byte byteToCheck){
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,775,private static boolean isWhiteSpace(byte byteToCheck) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,659,ase ' ' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,660,ase '\n' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,661,ase '\r' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,662,ase '\t' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,663,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,664,efault :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,665,eturn false;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,777,case ' ' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,778,case '\n' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,779,case '\r' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,780,case '\t' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,781,return true;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,782,default :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,783,return false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,721,"eturn encodeBase64(pArray, false);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,835,"return encodeBase64(pArray, false, isUrlSafe());"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,726, Decode a byte64-encoded integer according to crypto
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,840,* Decodes a byte64-encoded integer according to crypto
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,737, Encode to a byte64-encoded integer according to crypto
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,851,* Encodes to a byte64-encoded integer according to crypto
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,21,import java.io.UnsupportedEncodingException;
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,752,"* Base64 encoding of UUID's is a common use-case, especially in URL-SAFE"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,753,"* mode.  This test case ends up being the ""URL-SAFE"" JUnit's."
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,755,* @throws DecoderException if Hex.decode() fails - a serious problem since
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,756,* Hex comes from our own commons-codec!
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,758,"* @throws UnsupportedEncodingException if ""UTF-8"" character set is not"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,759,* available.  Unlikely.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,761,"public void testUUID() throws DecoderException, UnsupportedEncodingException {"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,762,// The 4 UUID's below contains mixtures of + and / to help us test the
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,763,// URL-SAFE encoding mode.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,764,byte[][] ids = new byte[4][];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,766,// ids[0] was chosen so that it encodes with at least one +.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,767,"ids[0] = Hex.decodeHex(""94ed8d0319e4493399560fb67404d370"".toCharArray());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,769,// ids[1] was chosen so that it encodes with both / and +.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,770,"ids[1] = Hex.decodeHex(""2bf7cc2701fe4397b49ebeed5acc7090"".toCharArray());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,772,// ids[2] was chosen so that it encodes with at least one /.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,773,"ids[2] = Hex.decodeHex(""64be154b6ffa40258d1a01288e7c31ca"".toCharArray());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,775,"// ids[3] was chosen so that it encodes with both / and +, with /"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,776,// right at the beginning.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,777,"ids[3] = Hex.decodeHex(""ff7f8fc01cdb471a8c8b5a9306183fe8"".toCharArray());"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,779,byte[][] standard = new byte[4][];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,780,"standard[0] = ""lO2NAxnkSTOZVg+2dATTcA=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,781,"standard[1] = ""K/fMJwH+Q5e0nr7tWsxwkA=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,782,"standard[2] = ""ZL4VS2/6QCWNGgEojnwxyg=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,783,"standard[3] = ""/3+PwBzbRxqMi1qTBhg/6A=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,785,byte[][] urlSafe1 = new byte[4][];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,786,// regular padding (two '==' signs).
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,787,"urlSafe1[0] = ""lO2NAxnkSTOZVg-2dATTcA=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,788,"urlSafe1[1] = ""K_fMJwH-Q5e0nr7tWsxwkA=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,789,"urlSafe1[2] = ""ZL4VS2_6QCWNGgEojnwxyg=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,790,"urlSafe1[3] = ""_3-PwBzbRxqMi1qTBhg_6A=="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,792,byte[][] urlSafe2 = new byte[4][];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,793,// single padding (only one '=' sign).
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,794,"urlSafe2[0] = ""lO2NAxnkSTOZVg-2dATTcA="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,795,"urlSafe2[1] = ""K_fMJwH-Q5e0nr7tWsxwkA="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,796,"urlSafe2[2] = ""ZL4VS2_6QCWNGgEojnwxyg="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,797,"urlSafe2[3] = ""_3-PwBzbRxqMi1qTBhg_6A="".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,799,byte[][] urlSafe3 = new byte[4][];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,800,// no padding (no '=' signs).
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,801,"urlSafe3[0] = ""lO2NAxnkSTOZVg-2dATTcA"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,802,"urlSafe3[1] = ""K_fMJwH-Q5e0nr7tWsxwkA"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,803,"urlSafe3[2] = ""ZL4VS2_6QCWNGgEojnwxyg"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,804,"urlSafe3[3] = ""_3-PwBzbRxqMi1qTBhg_6A"".getBytes(""UTF-8"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,806,for (int i = 0; i < 4; i++) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,807,byte[] encodedStandard = Base64.encodeBase64(ids[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,808,byte[] encodedUrlSafe = Base64.encodeBase64URLSafe(ids[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,809,byte[] decodedStandard = Base64.decodeBase64(standard[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,810,byte[] decodedUrlSafe1 = Base64.decodeBase64(urlSafe1[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,811,byte[] decodedUrlSafe2 =Base64.decodeBase64(urlSafe2[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,812,byte[] decodedUrlSafe3 =Base64.decodeBase64(urlSafe3[i]);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,814,// Very important debugging output should anyone
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,815,// ever need to delve closely into this stuff.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,816,if (false) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,817,"System.out.println(""reference: ["" + new String(Hex.encodeHex(ids[i])) + ""]"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,818,"System.out.println(""standard:  ["" + new String(Hex.encodeHex(decodedStandard)) + ""] From: ["" + new String(standard[i], ""UTF-8"") + ""]"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,819,"System.out.println(""safe1:     ["" + new String(Hex.encodeHex(decodedUrlSafe1)) + ""] From: ["" + new String(urlSafe1[i], ""UTF-8"") + ""]"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,820,"System.out.println(""safe2:     ["" + new String(Hex.encodeHex(decodedUrlSafe2)) + ""] From: ["" + new String(urlSafe2[i], ""UTF-8"") + ""]"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,821,"System.out.println(""safe3:     ["" + new String(Hex.encodeHex(decodedUrlSafe3)) + ""] From: ["" + new String(urlSafe3[i], ""UTF-8"") + ""]"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,824,"assertTrue(""standard encode uuid"", Arrays.equals(encodedStandard, standard[i]));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,825,"assertTrue(""url-safe encode uuid"", Arrays.equals(encodedUrlSafe, urlSafe3[i]));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,826,"assertTrue(""standard decode uuid"", Arrays.equals(decodedStandard, ids[i]));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,827,"assertTrue(""url-safe1 decode uuid"", Arrays.equals(decodedUrlSafe1, ids[i]));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,828,"assertTrue(""url-safe2 decode uuid"", Arrays.equals(decodedUrlSafe2, ids[i]));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,829,"assertTrue(""url-safe3 decode uuid"", Arrays.equals(decodedUrlSafe3, ids[i]));"
