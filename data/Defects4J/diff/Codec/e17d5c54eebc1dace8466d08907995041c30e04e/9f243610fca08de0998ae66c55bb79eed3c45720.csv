is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,543,/ WE'RE DONE!!!!
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,543,// We're done.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,631, @return Base64 characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,631,* @return byte[] containing Base64 characters in their UTF-8 representation.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,638,* Encodes binary data using the base64 algorithm into 76 character blocks separated by CRLF.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,640,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,641,*            binary data to encode
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,642,* @return String containing Base64 characters.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,644,public static String encodeBase64String(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,645,"return StringUtils.newStringUtf8(encodeBase64(binaryData, true));"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,643, @return Base64 characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,654,* @return byte[] containing Base64 characters in their UTF-8 representation.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,662,* Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output. The
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,663,* url-safe variation emits - and _ instead of + and / characters.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,665,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,666,*            binary data to encode
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,667,* @return String containing Base64 characters
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,668,* @since 1.4
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,670,public static String encodeBase64URLSafeString(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,671,"return StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,663," Decoder interface, and will throw a DecoderException if the supplied object is not of type byte[]."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,687,"* Decoder interface, and will throw a DecoderException if the supplied object is not of type byte[] or String."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,667, @return An object (of type byte[]) containing the binary data which corresponds to the byte[] supplied.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,691,* @return An object (of type byte[]) containing the binary data which corresponds to the byte[] or String supplied.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,671,ublic Object decode(Object pObject) throws DecoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,695,public Object decode(Object pObject) throws DecoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,698,} else if (pObject instanceof String) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,699,return decode((String) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,675,"hrow new DecoderException(""Parameter supplied to Base64 decode is not a byte[]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,701,"throw new DecoderException(""Parameter supplied to Base64 decode is not a byte[] or a String"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,706,* Decodes a String containing containing characters in the Base64 alphabet.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,708,* @param pArray
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,709,*            A String containing Base64 character data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,710,* @return a byte array containing binary data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,712,public byte[] decode(String pArray) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,713,return decode(StringUtils.getBytesUtf8(pArray));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,724,reset();
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,812,* Decodes a Base64 String into octets
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,814,* @param base64String
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,815,*            String containing Base64 data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,816,* @return Array containing decoded data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,818,public static byte[] decodeBase64(String base64String) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,819,return new Base64().decode(base64String);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,781,ase64 b64 = new Base64();
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,782,eturn b64.decode(base64Data);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,830,return new Base64().decode(base64Data);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,899,"* Encodes a byte[] containing binary data, into a String containing characters in the Base64 alphabet."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,901,* @param pArray
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,902,*            a byte array containing binary data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,903,* @return A String containing only Base64 character data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,905,public String encodeToString(byte[] pArray) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,906,return StringUtils.newStringUtf8(encode(pArray));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,917,reset();
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,918,if (pArray == null || pArray.length == 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,919,return pArray;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1032,* Resets this Base64 object to its initial newly constructed state.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1034,private void reset() {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1035,buffer = null;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1036,pos = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1037,readPos = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1038,currentLinePos = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1039,modulus = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1040,eof = false;
True,src/java/org/apache/commons/codec/binary/StringUtils.java,src/java/org/apache/commons/codec/binary/StringUtils.java,152,if (string == null) {
True,src/java/org/apache/commons/codec/binary/StringUtils.java,src/java/org/apache/commons/codec/binary/StringUtils.java,153,return null;
True,src/java/org/apache/commons/codec/binary/StringUtils.java,src/java/org/apache/commons/codec/binary/StringUtils.java,185,if (bytes == null) {
True,src/java/org/apache/commons/codec/binary/StringUtils.java,src/java/org/apache/commons/codec/binary/StringUtils.java,186,return null;
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,63,ncodedContent = new String(Base64.encodeBase64(content.getBytes()));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,63,byte[] encodedBytes = Base64.encodeBase64(StringUtils.getBytesUtf8(content));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,64,encodedContent = StringUtils.newStringUtf8(encodedBytes);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,291,"ssertEquals(""empty base64 encode"", null, Base64.decodeBase64(null));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,292,"assertEquals(""empty base64 encode"", null, Base64.decodeBase64((byte[]) null));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,426,"64.decode(""Yadayadayada"");"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,427,"ail(""decode(Object) didn't throw an exception when passed a String object"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,427,b64.decode(new Integer(5));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,428,"fail(""decode(Object) didn't throw an exception when passed an Integer object"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,960,public void testByteToStringVariations() throws DecoderException {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,961,Base64 base64 = new Base64(0);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,962,"byte[] b1 = StringUtils.getBytesUtf8(""Hello World"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,963,byte[] b2 = new byte[0];
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,964,byte[] b3 = null;
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,965,"byte[] b4 = Hex.decodeHex(""2bf7cc2701fe4397b49ebeed5acc7090"".toCharArray());  // for url-safe tests"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,967,"assertEquals(""byteToString Hello World"", ""SGVsbG8gV29ybGQ="", base64.encodeToString(b1));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,968,"assertEquals(""byteToString static Hello World"", ""SGVsbG8gV29ybGQ=\r\n"", Base64.encodeBase64String(b1));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,969,"assertEquals(""byteToString \""\"""", """", base64.encodeToString(b2));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,970,"assertEquals(""byteToString static \""\"""", """", Base64.encodeBase64String(b2));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,971,"assertEquals(""byteToString null"", null, base64.encodeToString(b3));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,972,"assertEquals(""byteToString static null"", null, Base64.encodeBase64String(b3));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,973,"assertEquals(""byteToString UUID"", ""K/fMJwH+Q5e0nr7tWsxwkA=="", base64.encodeToString(b4));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,974,"assertEquals(""byteToString static UUID"", ""K/fMJwH+Q5e0nr7tWsxwkA==\r\n"", Base64.encodeBase64String(b4));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,975,"assertEquals(""byteToString static-url-safe UUID"", ""K_fMJwH-Q5e0nr7tWsxwkA"", Base64.encodeBase64URLSafeString(b4));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,978,public void testStringToByteVariations() throws DecoderException {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,979,Base64 base64 = new Base64();
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,980,"String s1 = ""SGVsbG8gV29ybGQ=\r\n"";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,981,"String s2 = """";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,982,String s3 = null;
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,983,"String s4a = ""K/fMJwH+Q5e0nr7tWsxwkA==\r\n"";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,984,"String s4b = ""K_fMJwH-Q5e0nr7tWsxwkA"";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,985,"byte[] b4 = Hex.decodeHex(""2bf7cc2701fe4397b49ebeed5acc7090"".toCharArray());  // for url-safe tests"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,987,"assertEquals(""StringToByte Hello World"", ""Hello World"", StringUtils.newStringUtf8(base64.decode(s1)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,988,"assertEquals(""StringToByte Hello World"", ""Hello World"", StringUtils.newStringUtf8((byte[])base64.decode((Object)s1)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,989,"assertEquals(""StringToByte static Hello World"", ""Hello World"", StringUtils.newStringUtf8(Base64.decodeBase64(s1)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,990,"assertEquals(""StringToByte \""\"""", """", StringUtils.newStringUtf8(base64.decode(s2)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,991,"assertEquals(""StringToByte static \""\"""", """", StringUtils.newStringUtf8(Base64.decodeBase64(s2)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,992,"assertEquals(""StringToByte null"", null, StringUtils.newStringUtf8(base64.decode(s3)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,993,"assertEquals(""StringToByte static null"", null, StringUtils.newStringUtf8(Base64.decodeBase64(s3)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,994,"assertTrue(""StringToByte UUID"", Arrays.equals(b4, base64.decode(s4b)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,995,"assertTrue(""StringToByte static UUID"", Arrays.equals(b4, Base64.decodeBase64(s4a)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,996,"assertTrue(""StringToByte static-url-safe UUID"", Arrays.equals(b4, Base64.decodeBase64(s4b)));"
