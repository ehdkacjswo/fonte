is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,19,import java.security.NoSuchAlgorithmException;
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,26, <p>This class is immutable and thread-safe.</p>
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,27,* <p>
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,28,* This class is immutable and thread-safe.
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,44,* @throws NoSuchAlgorithmException if no algorithm implementation is available
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,43,ublic static String crypt(byte[] keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,46,public static String crypt(byte[] keyBytes) throws NoSuchAlgorithmException {
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,50, A random salt and the default algorithm (currently SHA-512) are used. See
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,51," {@link #crypt(String, String)} for details."
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,53,"* If no salt is provided, a random salt and the default algorithm (currently SHA-512) will be used."
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,54,"* See {@link #crypt(String, String)} for details."
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,61,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,62,* @throws NoSuchAlgorithmException if no algorithm implementation is available
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,59,"ublic static String crypt(byte[] keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,64,"public static String crypt(byte[] keyBytes, String salt) throws NoSuchAlgorithmException {"
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,87,* @throws NoSuchAlgorithmException if no algorithm implementation is available
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,83,ublic static String crypt(String key) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,89,public static String crypt(String key) throws NoSuchAlgorithmException {
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,139,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,140,* @throws NoSuchAlgorithmException if no algorithm implementation is available
False,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,141,"ublic static String crypt(String key, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Crypt.java,src/main/java/org/apache/commons/codec/digest/Crypt.java,142,"public static String crypt(String key, String salt) throws NoSuchAlgorithmException {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,20,import java.security.NoSuchAlgorithmException;
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,30, </p>
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,31,"* <a href=""http://www.freebsd.org/cgi/cvsweb.cgi/src/lib/libcrypt/crypt-md5.c?rev=1.1;content-type=text%2Fplain"">"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,32,* crypt-md5.c @ freebsd.org</a><br/>
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,32, http://www.freebsd.org/cgi/cvsweb.cgi/src/lib/libcrypt/crypt-md5.c?rev=1.1;content-type=text%2Fplain<br/>
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,33," Source: $FreeBSD: src/lib/libcrypt/crypt-md5.c,v 1.1 1999/01/21 13:50:09 brandon Exp $"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,34, </p>
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,35, <p>Conversion to Kotlin and from there to Java in 2012.</p>
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,37," <p>The C style comments are from the original C code, the ones with ""//"" from the port.</p>"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,39, <p>This class is immutable and thread-safe.</p>
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,34,* Source:
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,35,"* <pre>$FreeBSD: src/lib/libcrypt/crypt-md5.c,v 1.1 1999/01/21 13:50:09 brandon Exp $</pre>"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,36,* <p>
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,37,* Conversion to Kotlin and from there to Java in 2012.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,38,* <p>
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,39,"* The C style comments are from the original C code, the ones with ""//"" from the port."
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,40,* <p>
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,41,* This class is immutable and thread-safe.
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,47, The Identifier of the Apache variant.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,48,/** The Identifier of the Apache variant. */
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,52, The number of bytes of the final hash.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,51,/** The number of bytes of the final hash. */
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,57, The MessageDigest MD5_ALGORITHM.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,54,/** The MessageDigest MD5_ALGORITHM. */
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,62, The Identifier of this crypt() variant.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,57,/** The Identifier of this crypt() variant. */
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,67, The number of rounds of the big loop.
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,60,/** The number of rounds of the big loop. */
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,71,"** See {@link #apr1Crypt(String, String)} for details. */"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,72,ublic static String apr1Crypt(byte[] keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,64,"* See {@link #apr1Crypt(String, String)} for details."
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,66,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,68,public static String apr1Crypt(byte[] keyBytes) throws NoSuchAlgorithmException {
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,76,"** See {@link #apr1Crypt(String, String)} for details. */"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,77,"ublic static String apr1Crypt(byte[] keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,73,"* See {@link #apr1Crypt(String, String)} for details."
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,75,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,76,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,78,"public static String apr1Crypt(byte[] keyBytes, String salt) throws NoSuchAlgorithmException {"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,85,"** See {@link #apr1Crypt(String, String)} for details. */"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,86,ublic static String apr1Crypt(String keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,87,"* See {@link #apr1Crypt(String, String)} for details."
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,89,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,91,public static String apr1Crypt(String keyBytes) throws NoSuchAlgorithmException {
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,107,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,108,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,103,"ublic static String apr1Crypt(String keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,110,"public static String apr1Crypt(String keyBytes, String salt) throws NoSuchAlgorithmException {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,119,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,112,ublic static String md5Crypt(final byte[] keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,121,public static String md5Crypt(final byte[] keyBytes) throws NoSuchAlgorithmException {
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,136,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,137,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,128,"ublic static String md5Crypt(byte[] keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,139,"public static String md5Crypt(byte[] keyBytes, String salt) throws NoSuchAlgorithmException {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,148,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,149,"* @throws NoSuchAlgorithmException if no ""MD5"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,137,"ublic static String md5Crypt(final byte[] keyBytes, final String salt, final String prefix) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,151,"public static String md5Crypt(final byte[] keyBytes, final String salt, final String prefix)"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,152,throws NoSuchAlgorithmException {
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,145,"attern p = Pattern.compile(""^"" + prefix.replace(""$"", ""\\$"") + ""([\\.\\/a-zA-Z0-9]{1,8}).*"");"
False,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,146,atcher m = p.matcher(salt);
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,160,"final Pattern p = Pattern.compile(""^"" + prefix.replace(""$"", ""\\$"") + ""([\\.\\/a-zA-Z0-9]{1,8}).*"");"
True,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,src/main/java/org/apache/commons/codec/digest/Md5Crypt.java,161,final Matcher m = p.matcher(salt);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,20,import java.security.NoSuchAlgorithmException;
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,25,import org.apache.commons.codec.Charsets;
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,30, </p>
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,33, Conversion to Kotlin and from there to Java in 2012 by Christian Hammers &lt;ch@lathspell.de&gt; and likewise put
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,34, into the Public Domain.
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,35, </p>
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,37, <p>This class is immutable and thread-safe.</p>
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,33,* Conversion to Kotlin and from there to Java in 2012 by Christian Hammers &lt;ch@lathspell.de&gt;
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,34,* and likewise put into the Public Domain.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,35,* <p>
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,36,* This class is immutable and thread-safe.
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,45, Default number of rounds if not explicitly specified.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,43,/** Default number of rounds if not explicitly specified. */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,50, Maximum number of rounds.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,46,/** Maximum number of rounds. */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,55, Minimum number of rounds.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,49,/** Minimum number of rounds. */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,60, Prefix for optional rounds specification.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,52,/** Prefix for optional rounds specification. */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,65, The MessageDigest algorithm.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,55,/** The SHA-256 MessageDigest algorithm. */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,70, The number of bytes the final hash value will have.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,58,/** The number of bytes the final hash value will have (SHA-256 variant). */
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,75, The prefixes that can be used to identify this crypt() variant.
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,61,/** The prefixes that can be used to identify this crypt() variant (SHA-256). */
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,64,/** The SHA-512 MessageDigest algorithm. */
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,67,/** The number of bytes the final hash value will have (SHA-512 variant). */
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,70,/** The prefixes that can be used to identify this crypt() variant (SHA-512). */
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,73,/** The pattern to match valid salt values. */
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,74,private static final Pattern SALT_PATTERN =
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,75,"Pattern.compile(""^\\$([56])\\$(rounds=(\\d+)\\$)?([\\.\\/a-zA-Z0-9]{1,16}).*"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,82,"* @throws NoSuchAlgorithmException if no ""SHA-256"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,90,ublic static String sha256Crypt(byte[] keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,84,public static String sha256Crypt(byte[] keyBytes) throws NoSuchAlgorithmException {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,93,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,94,"* @throws NoSuchAlgorithmException if no ""SHA-256"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,99,"ublic static String sha256Crypt(byte[] keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,96,"public static String sha256Crypt(byte[] keyBytes, String salt) throws NoSuchAlgorithmException {"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,117, @param salt_string
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,114,* @param salt
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,123,* @throws IllegalArgumentException if the given salt is {@code null} or does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,124,* @throws NoSuchAlgorithmException if no implementation for the given algorithm is available
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,128,hrows Exception {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,127,throws NoSuchAlgorithmException {
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,135,"hrow new IllegalArgumentException(""Invalid salt value: null"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,135,"throw new IllegalArgumentException(""Salt must not be null"");"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,137,"attern p = Pattern.compile(""^\\$([56])\\$(rounds=(\\d+)\\$)?([\\.\\/a-zA-Z0-9]{1,16}).*"");"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,138,atcher m = p.matcher(salt);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,138,Matcher m = SALT_PATTERN.matcher(salt);
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,148,"yte[] saltBytes = saltString.getBytes(""UTF-8"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,148,byte[] saltBytes = saltString.getBytes(Charsets.UTF_8);
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,345,"/ ""digest A/C"" to desribe this behavior."
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,345,"// ""digest A/C"" to describe this behavior."
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,416,tringBuilder buffer = new StringBuilder(saltPrefix +
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,417,"roundsCustom ? ROUNDS_PREFIX + rounds + ""$"" : """") + saltString + ""$"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,416,StringBuilder buffer = new StringBuilder(saltPrefix);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,417,if (roundsCustom) {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,418,buffer.append(ROUNDS_PREFIX);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,419,buffer.append(rounds);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,420,"buffer.append(""$"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,422,buffer.append(saltString);
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,423,"buffer.append(""$"");"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,507,"* @throws NoSuchAlgorithmException if no ""SHA-512"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,501,ublic static String sha512Crypt(byte[] keyBytes) throws Exception {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,509,public static String sha512Crypt(byte[] keyBytes) throws NoSuchAlgorithmException {
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,518,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,519,"* @throws NoSuchAlgorithmException if no ""SHA-512"" algorithm implementation is available"
False,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,510,"ublic static String sha512Crypt(byte[] keyBytes, String salt) throws Exception {"
True,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java,521,"public static String sha512Crypt(byte[] keyBytes, String salt) throws NoSuchAlgorithmException {"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,26, <p>This class only implements the traditional 56 bit DES based algorithm. Please
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,25,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,26,* This class only implements the traditional 56 bit DES based algorithm. Please
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,28, algorithms supported in the current glibc's crypt().</p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,30, <p>The Java implementation was taken from the JetSpeed Portal project (see
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,31, org.apache.jetspeed.services.security.ldap.UnixCrypt).</p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,33, <p>This class is slightly incompatible if the given salt contains characters
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,34, that are not part of the allowed range [a-zA-Z0-9./].</p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,36, <p>This class is immutable and thread-safe.</p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,28,* algorithms supported in the current glibc's crypt().
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,29,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,30,* The Java implementation was taken from the JetSpeed Portal project (see
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,31,* org.apache.jetspeed.services.security.ldap.UnixCrypt).
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,32,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,33,* This class is slightly incompatible if the given salt contains characters
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,34,* that are not part of the allowed range [a-zA-Z0-9./].
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,35,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,36,* This class is immutable and thread-safe.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,213,* Generates a crypt(3) compatible hash using the DES algorithm.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,214,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,215,"* As no salt is given, a random one will be used."
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,217,* @param original
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,218,*             plaintext password
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,219,* @return a 13 character string starting with the salt string
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,221,public static String crypt(byte[] original) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,222,"return crypt(original, null);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,226,* Generates a crypt(3) compatible hash using the DES algorithm.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,227,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,228,* Using unspecified characters as salt results incompatible hash values.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,230,* @param original
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,231,*             plaintext password
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,232,* @param salt
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,233,*             a two character string drawn from [a-zA-Z0-9./] or null for a random one
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,234,* @return a 13 character string starting with the salt string
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,235,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,237,"public static String crypt(byte[] original, String salt) {"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,238,if (salt == null) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,239,Random randomGenerator = new Random();
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,240,int numSaltChars = SALT_CHARS.length;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,241,"salt = """" + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] +"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,242,SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars];
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,243,"} else if (!salt.matches(""^["" + B64.B64T + ""]{2,}$"")) {"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,244,"throw new IllegalArgumentException(""Invalid salt value: "" + salt);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,247,"for (; salt.length() < 2; salt = salt + ""A"") {"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,248,// NOOP
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,251,"StringBuilder buffer = new StringBuilder(""             "");"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,252,char charZero = salt.charAt(0);
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,253,char charOne = salt.charAt(1);
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,254,"buffer.setCharAt(0, charZero);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,255,"buffer.setCharAt(1, charOne);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,256,int eSwap0 = CON_SALT[charZero];
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,257,int eSwap1 = CON_SALT[charOne] << 4;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,258,byte key[] = new byte[8];
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,259,for (int i = 0; i < key.length; i++) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,260,key[i] = 0;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,263,for (int i = 0; i < key.length && i < original.length; i++) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,264,int iChar = original[i];
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,265,key[i] = (byte) (iChar << 1);
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,268,int schedule[] = desSetKey(key);
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,269,"int out[] = body(schedule, eSwap0, eSwap1);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,270,byte b[] = new byte[9];
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,271,"intToFourBytes(out[0], b, 0);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,272,"intToFourBytes(out[1], b, 4);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,273,b[8] = 0;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,274,int i = 2;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,275,int y = 0;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,276,int u = 128;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,277,for (; i < 13; i++) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,278,int j = 0;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,279,int c = 0;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,280,for (; j < 6; j++) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,281,c <<= 1;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,282,if ((b[y] & u) != 0) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,283,c |= 0x1;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,285,u >>>= 1;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,286,if (u == 0) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,287,y++;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,288,u = 128;
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,290,"buffer.setCharAt(i, (char) COV2CHAR[c]);"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,293,return buffer.toString();
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,297,* Generates a crypt(3) compatible hash using the DES algorithm.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,298,* <p>
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,299,"* As no salt is given, a random one is used."
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,301,* @param original
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,302,*             plaintext password
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,303,* @return a 13 character string starting with the salt string
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,305,public static String crypt(String original) {
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,306,return crypt(original.getBytes(Charsets.UTF_8));
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,310,* Generates a crypt(3) compatible hash using the DES algorithm.
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,312,* @param original
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,313,*             plaintext password
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,314,* @param salt
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,315,*             a two character string drawn from [a-zA-Z0-9./] or null for a random one
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,316,* @return a 13 character string starting with the salt string
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,317,* @throws IllegalArgumentException if the salt does not match the allowed pattern
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,319,"public static String crypt(String original, String salt) {"
True,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,320,"return crypt(original.getBytes(Charsets.UTF_8), salt);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,344, Generates a crypt(3) compatible hash using the DES algorithm.
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,345, <p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,346," As no salt is given, a random one will be used."
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,348, @param original
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,349,             plaintext password
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,350, @return a 13 character string starting with the salt string
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,352,ublic static String crypt(byte[] original) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,353,"eturn crypt(original, null);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,357, Generates a crypt(3) compatible hash using the DES algorithm.
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,358, <p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,359, Using unspecified characters as salt results incompatible hash values.
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,361, @param original
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,362,             plaintext password
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,363, @param salt
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,364,             a two character string drawn from [a-zA-Z0-9./] or null for a random one
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,365, @return a 13 character string starting with the salt string
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,367,"ublic static String crypt(byte[] original, String salt) {"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,368,f (salt == null) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,369,andom randomGenerator = new Random();
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,370,nt numSaltChars = SALT_CHARS.length;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,371,"alt = """" + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars];"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,372," else if (!salt.matches(""^["" + B64.B64T + ""]{2,}$"")) {"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,373,"hrow new IllegalArgumentException(""Invalid salt value: "" + salt);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,376,"or (; salt.length() < 2; salt = salt + ""A"") {"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,377,/ NOOP
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,379,"tringBuilder buffer = new StringBuilder(""             "");"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,380,har charZero = salt.charAt(0);
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,381,har charOne = salt.charAt(1);
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,382,"uffer.setCharAt(0, charZero);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,383,"uffer.setCharAt(1, charOne);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,384,nt eSwap0 = CON_SALT[charZero];
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,385,nt eSwap1 = CON_SALT[charOne] << 4;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,386,yte key[] = new byte[8];
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,387,or (int i = 0; i < key.length; i++) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,388,ey[i] = 0;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,391,or (int i = 0; i < key.length && i < original.length; i++) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,392,nt iChar = original[i];
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,393,ey[i] = (byte) (iChar << 1);
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,396,nt schedule[] = desSetKey(key);
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,397,"nt out[] = body(schedule, eSwap0, eSwap1);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,398,yte b[] = new byte[9];
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,399,"ntToFourBytes(out[0], b, 0);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,400,"ntToFourBytes(out[1], b, 4);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,401,[8] = 0;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,402,nt i = 2;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,403,nt y = 0;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,404,nt u = 128;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,405,or (; i < 13; i++) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,406,nt j = 0;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,407,nt c = 0;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,408,or (; j < 6; j++) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,409, <<= 1;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,410,f ((b[y] & u) != 0) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,411, |= 0x1;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,413, >>>= 1;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,414,f (u == 0) {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,415,++;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,416, = 128;
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,418,"uffer.setCharAt(i, (char) COV2CHAR[c]);"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,421,eturn buffer.toString();
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,425, Generates a crypt(3) compatible hash using the DES algorithm.
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,426, <p>
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,427," As no salt is given, a random one is used."
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,429, @param original
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,430,             plaintext password
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,431, @return a 13 character string starting with the salt string
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,433,ublic static String crypt(String original) throws Exception {
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,434,eturn crypt(original.getBytes(Charsets.UTF_8));
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,438, Generates a crypt(3) compatible hash using the DES algorithm.
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,440, @param original
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,441,             plaintext password
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,442, @param salt
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,443,             a two character string drawn from [a-zA-Z0-9./] or null for a random one
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,444, @return a 13 character string starting with the salt string
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,446,"ublic static String crypt(String original, String salt) throws Exception {"
False,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,src/main/java/org/apache/commons/codec/digest/UnixCrypt.java,447,"eturn crypt(original.getBytes(Charsets.UTF_8), salt);"
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,22,import java.security.NoSuchAlgorithmException;
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,24,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,26,ublic void testApr1CryptStrings() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,30,public void testApr1CryptStrings() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,41,ublic void testApr1CryptBytes() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,45,public void testApr1CryptBytes() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,47,"ssertEquals(""$apr1$./$kCwT1pY9qXAJElYG9q1QE1"", Md5Crypt.apr1Crypt(""t\u00e4st"".getBytes(""ISO-8859-1""), ""$apr1$./$""));"
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,51,"assertEquals(""$apr1$./$kCwT1pY9qXAJElYG9q1QE1"", Md5Crypt.apr1Crypt(""t\u00e4st"".getBytes(Charsets.ISO_8859_1), ""$apr1$./$""));"
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,51,ublic void testApr1CryptExplicitCall() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,55,public void testApr1CryptExplicitCall() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,60,ublic void testApr1CryptNullData() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,64,public void testApr1CryptNullData() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,65,ublic void testApr1CryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java,69,public void testApr1CryptWithEmptySalt() throws NoSuchAlgorithmException {
True,src/test/java/org/apache/commons/codec/digest/CryptTest.java,src/test/java/org/apache/commons/codec/digest/CryptTest.java,21,import java.security.NoSuchAlgorithmException;
False,src/test/java/org/apache/commons/codec/digest/CryptTest.java,src/test/java/org/apache/commons/codec/digest/CryptTest.java,25,ublic void testDefaultCryptVariant() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/CryptTest.java,src/test/java/org/apache/commons/codec/digest/CryptTest.java,28,public void testDefaultCryptVariant() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/CryptTest.java,src/test/java/org/apache/commons/codec/digest/CryptTest.java,39,ublic void testCryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/CryptTest.java,src/test/java/org/apache/commons/codec/digest/CryptTest.java,42,public void testCryptWithEmptySalt() throws NoSuchAlgorithmException {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,22,import java.security.NoSuchAlgorithmException;
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,24,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,26,ublic void testMd5CryptStrings() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,30,public void testMd5CryptStrings() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,39,ublic void testMd5CryptBytes() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,43,public void testMd5CryptBytes() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,45,"ssertEquals(""$1$./$J2UbKzGe0Cpe63WZAt6p//"", Crypt.crypt(""t\u00e4st"".getBytes(""ISO-8859-1""), ""$1$./$""));"
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,49,"assertEquals(""$1$./$J2UbKzGe0Cpe63WZAt6p//"", Crypt.crypt(""t\u00e4st"".getBytes(Charsets.ISO_8859_1), ""$1$./$""));"
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,49,ublic void testMd5CryptExplicitCall() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,53,public void testMd5CryptExplicitCall() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,55,ublic void testMd5CryptNullData() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,59,public void testMd5CryptNullData() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,60,ublic void testMd5CryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java,64,public void testMd5CryptWithEmptySalt() throws NoSuchAlgorithmException {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,22,import java.security.NoSuchAlgorithmException;
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,24,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,26,ublic void testSha256CryptStrings() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,30,public void testSha256CryptStrings() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,39,ublic void testSha256CryptBytes() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,43,public void testSha256CryptBytes() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,45,"ssertEquals(""$5$./$qx5gFfCzjuWUOvsDDy.5Nor3UULPIqLVBZhgGNS0c14"", Crypt.crypt(""t\u00e4st"".getBytes(""ISO-8859-1""), ""$5$./$""));"
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,49,"assertEquals(""$5$./$qx5gFfCzjuWUOvsDDy.5Nor3UULPIqLVBZhgGNS0c14"", Crypt.crypt(""t\u00e4st"".getBytes(Charsets.ISO_8859_1), ""$5$./$""));"
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,49,ublic void testSha256CryptExplicitCall() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,53,public void testSha256CryptExplicitCall() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,55,ublic void testSha256CryptNullData() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,59,public void testSha256CryptNullData() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,60,ublic void testSha256CryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java,64,public void testSha256CryptWithEmptySalt() throws NoSuchAlgorithmException {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,22,import java.security.NoSuchAlgorithmException;
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,24,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,26,ublic void testSha512CryptStrings() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,30,public void testSha512CryptStrings() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,39,ublic void testSha512CryptBytes() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,43,public void testSha512CryptBytes() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,45,"ssertEquals(""$6$./$L49DSK.d2df/LxGLJQMyS5A/Um.TdHqgc46j5FpScEPlqQHP5dEazltaDNDZ6UEs2mmNI6kPwtH/rsP9g5zBI."", Crypt.crypt(""t\u00e4st"".getBytes(""ISO-8859-1""), ""$6$./$""));"
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,49,"assertEquals(""$6$./$L49DSK.d2df/LxGLJQMyS5A/Um.TdHqgc46j5FpScEPlqQHP5dEazltaDNDZ6UEs2mmNI6kPwtH/rsP9g5zBI."", Crypt.crypt(""t\u00e4st"".getBytes(Charsets.ISO_8859_1), ""$6$./$""));"
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,49,ublic void testSha512CryptExplicitCall() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,53,public void testSha512CryptExplicitCall() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,55,ublic void testSha512CryptNullData() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,59,public void testSha512CryptNullData() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,60,ublic void testSha512CryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java,64,public void testSha512CryptWithEmptySalt() throws NoSuchAlgorithmException {
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,22,import java.security.NoSuchAlgorithmException;
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,24,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,26,ublic void testUnixCryptStrings() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,30,public void testUnixCryptStrings() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,37,ublic void testUnixCryptBytes() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,41,public void testUnixCryptBytes() throws NoSuchAlgorithmException {
False,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,43,"ssertEquals(""./bLIFNqo9XKQ"", Crypt.crypt(""t\u00e4st"".getBytes(""ISO-8859-1""), ""./""));"
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,47,"assertEquals(""./bLIFNqo9XKQ"", Crypt.crypt(""t\u00e4st"".getBytes(Charsets.ISO_8859_1), ""./""));"
False,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,62,ublic void testUnicCryptInvalidSalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,66,public void testUnicCryptInvalidSalt() {
False,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,72,ublic void testUnixCryptWithEmptySalt() throws Exception {
True,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java,76,public void testUnixCryptWithEmptySalt() {
