is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,15, limitations under the License.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,18,ackage org.apache.commons.codec.language;
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,20,mport org.apache.commons.codec.EncoderException;
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,21,mport org.apache.commons.codec.StringEncoder;
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,24, Encodes a string into a Caverphone 2.0 value. Delegate to a {@link Caverphone2} instance.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,26, This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,27, algorithm:
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,29, @author Apache Software Foundation
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,30, @version $Id: Caverphone.java 1079535 2011-03-08 20:54:37Z ggregory $
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,31," @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,32," @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,33, @since 1.4
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,34," @deprecated 1.5 Replaced by {@link Caverphone2}, will be removed in 2.0."
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,36,ublic class Caverphone implements StringEncoder {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,39, Delegate to a {@link Caverphone2} instance to avoid code duplication.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,41,inal private Caverphone2 encoder = new Caverphone2();
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,44, Creates an instance of the Caverphone encoder
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,46,ublic Caverphone() {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,47,uper();
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,51, Encodes the given String into a Caverphone value.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,53, @param source
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,54,            String the source string
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,55, @return A caverphone code for the given String
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,57,ublic String caverphone(String source) {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,58,eturn this.encoder.encode(source);
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,62, Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,63," the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,65, @param pObject
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,66,            Object to encode
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,67, @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,68,         supplied.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,69, @throws EncoderException
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,70,             if the parameter supplied is not of type java.lang.String
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,72,ublic Object encode(Object pObject) throws EncoderException {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,73,f (!(pObject instanceof String)) {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,74,"hrow new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,76,eturn this.caverphone((String) pObject);
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,80, Encodes a String using the Caverphone algorithm.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,82, @param pString
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,83,            String object to encode
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,84, @return The caverphone code corresponding to the String supplied
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,86,ublic String encode(String pString) {
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,87,eturn this.caverphone(pString);
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,91, Tests if the caverphones of two strings are identical.
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,93, @param str1
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,94,            First of two strings to compare
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,95, @param str2
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,96,            Second of two strings to compare
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,97," @return <code>true</code> if the caverphones of these strings are identical, <code>false</code> otherwise."
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,99,"ublic boolean isCaverphoneEqual(String str1, String str2) {"
False,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,100,eturn this.caverphone(str1).equals(this.caverphone(str2));
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,18,package org.apache.commons.codec.language;
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,20,import org.apache.commons.codec.EncoderException;
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,21,import org.apache.commons.codec.StringEncoder;
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,24,* Encodes a string into a Caverphone 2.0 value. Delegate to a {@link Caverphone2} instance.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,26,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,27,* algorithm:
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,29,* @author Apache Software Foundation
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,30,* @version $Id: Caverphone.java 1079535 2011-03-08 20:54:37Z ggregory $
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,31,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,32,"* @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,33,* @since 1.4
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,34,"* @deprecated 1.5 Replaced by {@link Caverphone2}, will be removed in 2.0."
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,36,public class Caverphone implements StringEncoder {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,39,* Delegate to a {@link Caverphone2} instance to avoid code duplication.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,41,final private Caverphone2 encoder = new Caverphone2();
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,44,* Creates an instance of the Caverphone encoder
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,46,public Caverphone() {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,47,super();
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,51,* Encodes the given String into a Caverphone value.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,53,* @param source
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,54,*            String the source string
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,55,* @return A caverphone code for the given String
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,57,public String caverphone(String source) {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,58,return this.encoder.encode(source);
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,62,* Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,63,"* the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,65,* @param pObject
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,66,*            Object to encode
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,67,* @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,68,*         supplied.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,69,* @throws EncoderException
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,70,*             if the parameter supplied is not of type java.lang.String
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,72,public Object encode(Object pObject) throws EncoderException {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,73,if (!(pObject instanceof String)) {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,74,"throw new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,76,return this.caverphone((String) pObject);
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,80,* Encodes a String using the Caverphone algorithm.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,82,* @param pString
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,83,*            String object to encode
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,84,* @return The caverphone code corresponding to the String supplied
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,86,public String encode(String pString) {
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,87,return this.caverphone(pString);
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,91,* Tests if the caverphones of two strings are identical.
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,93,* @param str1
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,94,*            First of two strings to compare
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,95,* @param str2
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,96,*            Second of two strings to compare
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,97,"* @return <code>true</code> if the caverphones of these strings are identical, <code>false</code> otherwise."
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,99,"public boolean isCaverphoneEqual(String str1, String str2) {"
True,src/main/java/org/apache/commons/codec/language/Caverphone.java,src/main/java/org/apache/commons/codec/language/Caverphone.java,100,return this.caverphone(str1).equals(this.caverphone(str2));
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,15, limitations under the License.
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,18,ackage org.apache.commons.codec.language.bm;
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,21, Constants used to process resource files.
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,23, @author Apache Software Foundation
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,24, @since 1.6
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,26,lass ResourceConstants {
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,28,"tatic final String CMT = ""//"";"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,29,"tatic final String ENCODING = ""UTF-8"";"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,30,"tatic final String EXT_CMT_END = ""*/"";"
False,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,31,"tatic final String EXT_CMT_START = ""/*"";"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,18,package org.apache.commons.codec.language.bm;
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,21,* Constants used to process resource files.
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,23,* @author Apache Software Foundation
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,24,* @since 1.6
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,26,class ResourceConstants {
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,28,"static final String CMT = ""//"";"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,29,"static final String ENCODING = ""UTF-8"";"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,30,"static final String EXT_CMT_END = ""*/"";"
True,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java,31,"static final String EXT_CMT_START = ""/*"";"
