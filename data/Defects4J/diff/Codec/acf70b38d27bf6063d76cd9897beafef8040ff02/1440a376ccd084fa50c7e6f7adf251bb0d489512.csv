is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,418,or (int i = 0; i < arrayOctet.length; i++) {
False,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,419,f (PAD == arrayOctet[i] || isInAlphabet(arrayOctet[i])) {
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,418,for (byte element : arrayOctet) {
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,419,if (PAD == element || isInAlphabet(element)) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,275,or (int i = 0; i < arr.length; i++) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,276,f (arr[i] == key) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,275,for (char element : arr) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,276,if (element == key) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,409,or (int replacement = 0; replacement < PREPROCESS_MAP.length; replacement++) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,410,f (chrs[index] == PREPROCESS_MAP[replacement][0]) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,411,hrs[index] = PREPROCESS_MAP[replacement][1];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,409,for (char[] element : PREPROCESS_MAP) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,410,if (chrs[index] == element[0]) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,411,chrs[index] = element[1];
False,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,908,or (int i = 0; i < SILENT_START.length; i++) {
False,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,909,f (value.startsWith(SILENT_START[i])) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,908,for (String element : SILENT_START) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,909,if (value.startsWith(element)) {
False,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1016,or (int i = 0; i < criteria.length; i++) {
False,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1017,f (target.equals(criteria[i])) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1016,for (String element : criteria) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1017,if (target.equals(element)) {
False,src/java/org/apache/commons/codec/net/QCodec.java,src/java/org/apache/commons/codec/net/QCodec.java,156,or (int i = 0; i < bytes.length; i++) {
False,src/java/org/apache/commons/codec/net/QCodec.java,src/java/org/apache/commons/codec/net/QCodec.java,157,f (bytes[i] == UNDERSCORE) {
True,src/java/org/apache/commons/codec/net/QCodec.java,src/java/org/apache/commons/codec/net/QCodec.java,156,for (byte b : bytes) {
True,src/java/org/apache/commons/codec/net/QCodec.java,src/java/org/apache/commons/codec/net/QCodec.java,157,if (b == UNDERSCORE) {
False,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,148,or (int i = 0; i < bytes.length; i++) {
False,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,149,nt b = bytes[i];
True,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,148,for (byte c : bytes) {
True,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java,149,int b = c;
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,133,or (int i = 0; i < bytes.length; i++) {
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,134,nt b = bytes[i];
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,133,for (byte c : bytes) {
True,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,134,int b = c;
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,39,or (int i = 0; i < data.length; i++) {
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,40,"his.checkEncoding(data[i][1], data[i][0]);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,39,for (String[] element : data) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,40,"this.checkEncoding(element[1], element[0]);"
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,45,or (int i = 0; i < data.length; i++) {
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,46,"his.checkEncoding(expected, data[i]);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,45,for (String element : data) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,46,"this.checkEncoding(expected, element);"
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,96,or (int i = 0; i < data.length; i++) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,96,for (String element : data) {
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,101,ef = encoder.encode(data[i]);
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,101,ref = encoder.encode(element);
False,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,105,ur = encoder.encode(data[i]);
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,105,cur = encoder.encode(element);
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,233,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,234,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,233,for (byte element : decoded) {
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,234,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,243,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,244,ut.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,243,for (byte element : encoded) {
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,244,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,253,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,254,ut.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,253,for (byte element : encoded) {
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,254,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,268,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,269,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,268,for (byte element : decoded) {
True,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java,269,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,64,or (int i = 0; i < BASE32_TEST_CASES.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,65,"ssertEquals(BASE32_TEST_CASES[i][1], codec.encodeAsString(BASE32_TEST_CASES[i][0].getBytes(""UTF-8"")));"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,64,for (String[] element : BASE32_TEST_CASES) {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,65,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,72,or (int i = 0; i < BASE32HEX_TEST_CASES.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,73,"ssertEquals(BASE32HEX_TEST_CASES[i][1], codec.encodeAsString(BASE32HEX_TEST_CASES[i][0].getBytes(""UTF-8"")));"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,72,for (String[] element : BASE32HEX_TEST_CASES) {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,73,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,80,or (int i = 0; i < BASE32_TEST_CASES_CHUNKED.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,81,"ssertEquals(BASE32_TEST_CASES_CHUNKED[i][1], codec.encodeAsString(BASE32_TEST_CASES_CHUNKED[i][0].getBytes(""UTF-8"")));"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,80,for (String[] element : BASE32_TEST_CASES_CHUNKED) {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,81,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
False,src/test/org/apache/commons/codec/binary/Base32TestData.java,src/test/org/apache/commons/codec/binary/Base32TestData.java,119,or (int i = 0; i < bytes.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base32TestData.java,src/test/org/apache/commons/codec/binary/Base32TestData.java,120,f (bytes[i] == c) { return true; }
True,src/test/org/apache/commons/codec/binary/Base32TestData.java,src/test/org/apache/commons/codec/binary/Base32TestData.java,119,for (byte b : bytes) {
True,src/test/org/apache/commons/codec/binary/Base32TestData.java,src/test/org/apache/commons/codec/binary/Base32TestData.java,120,if (b == c) { return true; }
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,245,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,246,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,245,for (byte element : decoded) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,246,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,255,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,256,ut.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,255,for (byte element : encoded) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,256,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,265,or (int i = 0; i < encoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,266,ut.write(encoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,265,for (byte element : encoded) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,266,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,280,or (int i = 0; i < decoded.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,281,ut.write(decoded[i]);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,280,for (byte element : decoded) {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,281,out.write(element);
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,217,or (int i = 0; i < bytes.length; i++) {
False,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,218,f (bytes[i] == c) { return true; }
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,217,for (byte b : bytes) {
True,src/test/org/apache/commons/codec/binary/Base64TestData.java,src/test/org/apache/commons/codec/binary/Base64TestData.java,218,if (b == c) { return true; }
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,145,or (int i = 0; i < data.length; i++) {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,146,"(ColognePhonetic) this.getStringEncoder()).isEncodeEqual(data[i][1], data[i][0]);"
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,145,for (String[] element : data) {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,146,"((ColognePhonetic) this.getStringEncoder()).isEncodeEqual(element[1], element[0]);"
False,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1032,or (int i = 0; i < pairs.length; i++) {
False,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1033,tring name0 = pairs[i][0];
False,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1034,tring name1 = pairs[i][1];
True,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1032,for (String[] pair : pairs) {
True,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1033,String name0 = pair[0];
True,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1034,String name1 = pair[1];
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,36,or (int i = 0; i < matches.length; i++) {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,37,"ssertTrue(""Source: "" + source + "", should have same Metaphone as: "" + matches[i],"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,38,"his.getMetaphone().isMetaphoneEqual(source, matches[i]));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,36,for (String matche : matches) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,37,"assertTrue(""Source: "" + source + "", should have same Metaphone as: "" + matche,"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,38,"this.getMetaphone().isMetaphoneEqual(source, matche));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,41,or (int i = 0; i < matches.length; i++) {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,42,or (int j = 0; j < matches.length; j++) {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,43,"ssertTrue(this.getMetaphone().isMetaphoneEqual(matches[i], matches[j]));"
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,41,for (String matche : matches) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,42,for (String matche2 : matches) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,43,"assertTrue(this.getMetaphone().isMetaphoneEqual(matche, matche2));"
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,50,or (int i = 0; i < pairs.length; i++) {
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,51,tring name0 = pairs[i][0];
False,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,52,tring name1 = pairs[i][1];
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,50,for (String[] pair : pairs) {
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,51,String name0 = pair[0];
True,src/test/org/apache/commons/codec/language/MetaphoneTest.java,src/test/org/apache/commons/codec/language/MetaphoneTest.java,52,String name1 = pair[1];
False,src/test/org/apache/commons/codec/net/BCodecTest.java,src/test/org/apache/commons/codec/net/BCodecTest.java,46,or (int i = 0; i < unicodeChars.length; i++) {
False,src/test/org/apache/commons/codec/net/BCodecTest.java,src/test/org/apache/commons/codec/net/BCodecTest.java,47,uffer.append((char) unicodeChars[i]);
True,src/test/org/apache/commons/codec/net/BCodecTest.java,src/test/org/apache/commons/codec/net/BCodecTest.java,46,for (int unicodeChar : unicodeChars) {
True,src/test/org/apache/commons/codec/net/BCodecTest.java,src/test/org/apache/commons/codec/net/BCodecTest.java,47,buffer.append((char) unicodeChar);
False,src/test/org/apache/commons/codec/net/QCodecTest.java,src/test/org/apache/commons/codec/net/QCodecTest.java,52,or (int i = 0; i < unicodeChars.length; i++) {
False,src/test/org/apache/commons/codec/net/QCodecTest.java,src/test/org/apache/commons/codec/net/QCodecTest.java,53,uffer.append((char)unicodeChars[i]);
True,src/test/org/apache/commons/codec/net/QCodecTest.java,src/test/org/apache/commons/codec/net/QCodecTest.java,52,for (int unicodeChar : unicodeChars) {
True,src/test/org/apache/commons/codec/net/QCodecTest.java,src/test/org/apache/commons/codec/net/QCodecTest.java,53,buffer.append((char)unicodeChar);
False,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,50,or (int i = 0; i < unicodeChars.length; i++) {
False,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,51,uffer.append((char)unicodeChars[i]);
True,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,50,for (int unicodeChar : unicodeChars) {
True,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,51,buffer.append((char)unicodeChar);
False,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,55,or (int i = 0; i < unicodeChars.length; i++) {
False,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,56,uffer.append((char)unicodeChars[i]);
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,55,for (int unicodeChar : unicodeChars) {
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,56,buffer.append((char)unicodeChar);
