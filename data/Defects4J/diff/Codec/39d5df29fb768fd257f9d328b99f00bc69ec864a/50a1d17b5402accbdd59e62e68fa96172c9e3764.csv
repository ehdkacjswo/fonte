is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,67,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,68,* <b>Note</b>: this version of the Beider-Morse encoding is equivalent with v3.3 of the reference implementation.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,98,"rivate static final String LANGUAGE_RULES_RN = ""org/apache/commons/codec/language/bm/lang.txt"";"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,98,"private static final String LANGUAGE_RULES_RN = ""org/apache/commons/codec/language/bm/%s_lang.txt"";"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,102,"angs.put(s, loadFromResource(LANGUAGE_RULES_RN, Languages.getInstance(s)));"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,102,"Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));"
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,77,public abstract LanguageSet merge(LanguageSet other);
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,132,@Override
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,133,public LanguageSet merge(final LanguageSet other) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,134,if (other == NO_LANGUAGES) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,135,return this;
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,136,} else if (other == ANY_LANGUAGE) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,137,return other;
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,138,} else {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,139,final SomeLanguages sl = (SomeLanguages) other;
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,140,final Set<String> ls = new HashSet<String>(languages);
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,141,for (String lang : sl.languages) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,142,ls.add(lang);
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,144,return from(ls);
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,237,@Override
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,238,public LanguageSet merge(final LanguageSet other) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,239,return other;
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,277,@Override
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,278,public LanguageSet merge(final LanguageSet other) {
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,279,return other;
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,31,mport java.util.TreeSet;
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,31,import java.util.TreeMap;
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,338,inal Set<Rule.Phoneme> phonemes = new TreeSet<Rule.Phoneme>(Rule.Phoneme.COMPARATOR);
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,338,"final Map<Rule.Phoneme, Rule.Phoneme> phonemes ="
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,339,"new TreeMap<Rule.Phoneme, Rule.Phoneme>(Rule.Phoneme.COMPARATOR);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,358,honemes.addAll(subBuilder.getPhonemes());
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,359,"// the phonemes map orders the phonemes only based on their text, but ignores the language set"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,360,"// when adding new phonemes, check for equal phonemes and merge their language set, otherwise"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,361,// phonemes with the same text but different language set get lost
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,362,for (final Rule.Phoneme newPhoneme : subBuilder.getPhonemes()) {
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,363,if (phonemes.containsKey(newPhoneme)) {
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,364,final Rule.Phoneme oldPhoneme = phonemes.remove(newPhoneme);
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,365,final Rule.Phoneme mergedPhoneme = oldPhoneme.mergeWithLanguage(newPhoneme.getLanguages());
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,366,"phonemes.put(mergedPhoneme, mergedPhoneme);"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,367,} else {
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,368,"phonemes.put(newPhoneme, newPhoneme);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,361,eturn new PhonemeBuilder(phonemes);
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,373,return new PhonemeBuilder(phonemes.keySet());
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,152,* Returns a new Phoneme with the same text but a union of its
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,153,* current language set and the given one.
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,155,* @param lang the language set to merge
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,156,* @return a new Phoneme
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,158,public Phoneme mergeWithLanguage(final LanguageSet lang) {
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,159,"return new Phoneme(this.phonemeText.toString(), this.languages.merge(lang));"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,162,@Override
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,163,public String toString() {
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,164,"return phonemeText.toString() + ""["" + languages + ""]"";"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,461,"sb.append("", pat='"").append(pat).append('\'');"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,462,"sb.append("", lcon='"").append(lCon).append('\'');"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,463,"sb.append("", rcon='"").append(rCon).append('\'');"
False,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,20,mport static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,20,import static org.junit.Assert.*;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,190,"assertEquals(encode(args, true, ""Bendzin""), ""bndzn|bntsn|bnzn|vndzn|vntsn"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,196,"assertEquals(encode(args, true, ""Halpern""), ""YlpYrn|Ylpirn|alpYrn|alpirn|olpYrn|olpirn|xalpirn|xolpirn"");"
False,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,20,mport static org.junit.Assert.assertEquals;
False,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,21,mport static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,20,import static org.junit.Assert.*;
False,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,44,"ew Object[] { ""Renault"", ""rYnDlt|rYnalt|rYnult|rinDlt|rinalt|rinult"", NameType.ASHKENAZI, RuleType.APPROX, Boolean.TRUE, TEN },"
False,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,45,"ew Object[] { ""Renault"", ""rYnDlt"", NameType.ASHKENAZI, RuleType.APPROX, Boolean.TRUE, Integer.valueOf(1) },"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,43,"new Object[] { ""Renault"", ""rYnDlt|rYnalt|rYnult|rinDlt|rinalt|rinolt|rinult"", NameType.ASHKENAZI, RuleType.APPROX, Boolean.TRUE, TEN },"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java,44,"new Object[] { ""Renault"", ""rinDlt"", NameType.ASHKENAZI, RuleType.APPROX, Boolean.TRUE, Integer.valueOf(1) },"
