is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,9,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,19,package org.apache.commons.codec.binary;
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,21,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,23,public class Base32Test extends TestCase {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,25,private static final String [][] BASE32_TEST_CASES = { // RFC 4648
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,27,"{""f""      ,""MY======""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,28,"{""fo""     ,""MZXQ====""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,29,"{""foo""    ,""MZXW6===""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,30,"{""foob""   ,""MZXW6YQ=""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,31,"{""fooba""  ,""MZXW6YTB""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,32,"{""foobar"" ,""MZXW6YTBOI======""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,35,private static final String [][] BASE32HEX_TEST_CASES = { // RFC 4648
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,37,"{""f""      ,""CO======""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,38,"{""fo""     ,""CPNG====""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,39,"{""foo""    ,""CPNMU===""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,40,"{""foob""   ,""CPNMUOG=""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,41,"{""fooba""  ,""CPNMUOJ1""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,42,"{""foobar"" ,""CPNMUOJ1E8======""},"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,46,public void testBase32Samples() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,47,for (int i = 0; i < BASE32_TEST_CASES.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,48,"assertEquals(BASE32_TEST_CASES[i][1], Base32.encodeBase32String(BASE32_TEST_CASES[i][0].getBytes(""UTF-8"")));"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,52,public void testBase32HexSamples() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,53,for (int i = 0; i < BASE32HEX_TEST_CASES.length; i++) {
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,54,"//                assertEquals(BASE32HEX_TEST_CASES[i][1], Base32.encodeBase32HexString(BASE32HEX_TEST_CASES[i][0].getBytes(""UTF-8"")));"
