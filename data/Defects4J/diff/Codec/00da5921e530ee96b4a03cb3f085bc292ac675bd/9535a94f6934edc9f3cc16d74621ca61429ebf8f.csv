is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,59, Chunk size per RFC 2045 section 6.8.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,59,*  MIME chunk size per RFC 2045 section 6.8.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,68,tatic final int CHUNK_SIZE = 76;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,68,public static final int MIME_CHUNK_SIZE = 76;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,71,* PEM chunk size per RFC 1421 section 4.3.2.4.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,73,* <p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,74,"* The {@value} character limit does not count the trailing CRLF, but counts all other characters, including any"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,75,* equal signs.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,76,* </p>
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78,"* @see <a href=""http://tools.ietf.org/html/rfc1421"">RFC 1421 section 4.3.2.4</a>"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,80,public static final int PEM_CHUNK_SIZE = 64;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,244,"his(CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,256,"this(MIME_CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,809,"ong len = getEncodeLength(binaryData, CHUNK_SIZE, CHUNK_SEPARATOR);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,821,"long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,55,ublic void testBase64EmptyInputStream() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,55,public void testBase64EmptyInputStreamMimeChuckSize() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,56,testBase64EmptyInputStream(Base64.MIME_CHUNK_SIZE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,60,* Tests the Base64InputStream implementation against empty input.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,62,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,63,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,65,public void testBase64EmptyInputStreamPemChuckSize() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,66,testBase64EmptyInputStream(Base64.PEM_CHUNK_SIZE);
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,69,private void testBase64EmptyInputStream(int chuckSize) throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,58,"estByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,59,"estByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,72,"testByteByByte(emptyEncoded, emptyDecoded, chuckSize, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,73,"testByChunk(emptyEncoded, emptyDecoded, chuckSize, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,72,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,86,"testByChunk(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,77,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,91,"testByChunk(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,82,"estByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,96,"testByChunk(encoded, decoded, Base64.PEM_CHUNK_SIZE, LF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,109,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,123,"testByteByByte(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,114,"estByteByByte(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,128,"testByteByByte(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,119,"estByteByByte(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java,133,"testByteByByte(encoded, decoded, Base64.PEM_CHUNK_SIZE, LF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,55,ublic void testBase64EmptyOutputStream() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,55,public void testBase64EmptyOutputStreamMimeChunkSize() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,56,testBase64EmptyOutputStream(Base64.MIME_CHUNK_SIZE);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,60,* Test the Base64OutputStream implementation against empty input.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,62,* @throws Exception
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,63,*             for some failure scenarios.
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,65,public void testBase64EmptyOutputStreamPemChunkSize() throws Exception {
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,66,testBase64EmptyOutputStream(Base64.PEM_CHUNK_SIZE);
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,69,private void testBase64EmptyOutputStream(int chunkSize) throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,58,"estByteByByte(emptyEncoded, emptyDecoded, 76, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,59,"estByChunk(emptyEncoded, emptyDecoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,72,"testByteByByte(emptyEncoded, emptyDecoded, chunkSize, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,73,"testByChunk(emptyEncoded, emptyDecoded, chunkSize, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,72,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,86,"testByChunk(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,77,"estByChunk(encoded, decoded, 76, CRLF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,91,"testByChunk(encoded, decoded, Base64.MIME_CHUNK_SIZE, CRLF);"
False,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,82,"estByChunk(encoded, decoded, 64, LF);"
True,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java,96,"testByChunk(encoded, decoded, Base64.PEM_CHUNK_SIZE, LF);"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,67,"ase64 b64 = new Base64(76, null);  // null lineSeparator same as saying no-chunking"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,67,"Base64 b64 = new Base64(Base64.MIME_CHUNK_SIZE, null);  // null lineSeparator same as saying no-chunking"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,510,"ssertEquals(76, Base64.CHUNK_SIZE);"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,510,"assertEquals(76, Base64.MIME_CHUNK_SIZE);"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,514,* Tests RFC 1421 section 4.3.2.4 chuck size definition.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,516,public void testRfc1421Section6Dot8ChunkSizeDefinition() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,517,"assertEquals(64, Base64.PEM_CHUNK_SIZE);"
