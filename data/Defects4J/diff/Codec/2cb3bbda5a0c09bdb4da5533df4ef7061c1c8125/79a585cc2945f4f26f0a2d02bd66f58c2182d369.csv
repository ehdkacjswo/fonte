is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,18,package org.apache.commons.codec.language.bm;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,22,import java.util.Arrays;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,23,import java.util.HashSet;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,24,import java.util.Map;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,25,import java.util.TreeMap;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,27,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,30,* Tests PhoneticEngine and Languages.LanguageSet in ways very similar to code found in solr-3.6.0.
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,32,* @since 1.7
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,34,public class PhoneticEngineRegressionTest {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,36,@Test
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,37,public void testSolrGENERIC() {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,38,"Map<String, String> args;"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,40,"// concat is true, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,41,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,42,"args.put(""nameType"", ""GENERIC"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,43,"assertEquals(encode(args, true, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,44,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,45,"assertEquals(encode(args, true, ""Angelo""), ""anZelo|andZelo|angelo|anhelo|anjelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,46,"assertEquals(encode(args, true, ""D'Angelo""), ""(anZelo|andZelo|angelo|anhelo|anjelo|anxelo)-(danZelo|dandZelo|dangelo|danhelo|danjelo|danxelo)"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,47,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,48,"assertEquals(encode(args, true, ""Angelo""), ""andZelo|angelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,49,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,51,"// concat is false, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,52,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,53,"assertEquals(encode(args, false, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,54,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,55,"assertEquals(encode(args, false, ""Angelo""), ""anZelo|andZelo|angelo|anhelo|anjelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,56,"assertEquals(encode(args, false, ""D'Angelo""), ""(anZelo|andZelo|angelo|anhelo|anjelo|anxelo)-(danZelo|dandZelo|dangelo|danhelo|danjelo|danxelo)"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,57,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,58,"assertEquals(encode(args, false, ""Angelo""), ""andZelo|angelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,59,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,61,"// concat is true, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,62,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,63,"assertEquals(encode(args, true, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,64,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,65,"assertEquals(encode(args, true, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,66,"assertEquals(encode(args, true, ""D'Angelo""), ""(agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo)-(dagilo|dangilo|daniilo|danilo|danxilo|danzilo|dogilo|dongilo|doniilo|donilo|donxilo|donzilo)"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,67,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,68,"assertEquals(encode(args, true, ""Angelo""), ""angilo|anxilo|anzilo|ongilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,69,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,71,"// concat is false, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,72,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,73,"assertEquals(encode(args, false, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,74,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,75,"assertEquals(encode(args, false, ""Angelo""), ""agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,76,"assertEquals(encode(args, false, ""D'Angelo""), ""(agilo|angilo|aniilo|anilo|anxilo|anzilo|ogilo|ongilo|oniilo|onilo|onxilo|onzilo)-(dagilo|dangilo|daniilo|danilo|danxilo|danzilo|dogilo|dongilo|doniilo|donilo|donxilo|donzilo)"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,77,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,78,"assertEquals(encode(args, false, ""Angelo""), ""angilo|anxilo|anzilo|ongilo|onxilo|onzilo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,79,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,82,@Test
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,83,public void testSolrASHKENAZI() {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,84,"Map<String, String> args;"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,86,"// concat is true, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,87,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,88,"args.put(""nameType"", ""ASHKENAZI"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,89,"assertEquals(encode(args, true, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,90,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,91,"assertEquals(encode(args, true, ""Angelo""), ""andZelo|angelo|anhelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,92,"assertEquals(encode(args, true, ""D'Angelo""), ""dandZelo|dangelo|danhelo|danxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,93,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,94,"assertEquals(encode(args, true, ""Angelo""), ""angelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,95,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,97,"// concat is false, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,98,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,99,"args.put(""nameType"", ""ASHKENAZI"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,100,"assertEquals(encode(args, false, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,101,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,102,"assertEquals(encode(args, false, ""Angelo""), ""andZelo|angelo|anhelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,103,"assertEquals(encode(args, false, ""D'Angelo""), ""dandZelo|dangelo|danhelo|danxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,104,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,105,"assertEquals(encode(args, false, ""Angelo""), ""angelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,106,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,108,"// concat is true, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,109,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,110,"args.put(""nameType"", ""ASHKENAZI"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,111,"assertEquals(encode(args, true, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,112,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,113,"assertEquals(encode(args, true, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,114,"assertEquals(encode(args, true, ""D'Angelo""), ""dAnElO|dAnSelO|dAngElO|dAngzelO|dAnkselO|dAnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,115,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,116,"assertEquals(encode(args, true, ""Angelo""), ""AnSelO|AngElO|AngzelO|AnkselO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,117,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,119,"// concat is false, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,120,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,121,"args.put(""nameType"", ""ASHKENAZI"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,122,"assertEquals(encode(args, false, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,123,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,124,"assertEquals(encode(args, false, ""Angelo""), ""AnElO|AnSelO|AngElO|AngzelO|AnkselO|AnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,125,"assertEquals(encode(args, false, ""D'Angelo""), ""dAnElO|dAnSelO|dAngElO|dAngzelO|dAnkselO|dAnzelO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,126,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,127,"assertEquals(encode(args, false, ""Angelo""), ""AnSelO|AngElO|AngzelO|AnkselO"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,128,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,131,@Test
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,132,public void testSolrSEPHARDIC() {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,133,"Map<String, String> args;"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,135,"// concat is true, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,136,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,137,"args.put(""nameType"", ""SEPHARDIC"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,138,"assertEquals(encode(args, true, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,139,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,140,"assertEquals(encode(args, true, ""Angelo""), ""anZelo|andZelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,141,"assertEquals(encode(args, true, ""D'Angelo""), ""anZelo|andZelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,142,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,143,"assertEquals(encode(args, true, ""Angelo""), ""andZelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,144,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,146,"// concat is false, ruleType is EXACT"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,147,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,148,"args.put(""nameType"", ""SEPHARDIC"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,149,"assertEquals(encode(args, false, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,150,"args.put(""ruleType"", ""EXACT"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,151,"assertEquals(encode(args, false, ""Angelo""), ""anZelo|andZelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,152,"assertEquals(encode(args, false, ""D'Angelo""), ""danZelo|dandZelo|danxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,153,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,154,"assertEquals(encode(args, false, ""Angelo""), ""andZelo|anxelo"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,155,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,157,"// concat is true, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,158,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,159,"args.put(""nameType"", ""SEPHARDIC"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,160,"assertEquals(encode(args, true, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,161,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,162,"assertEquals(encode(args, true, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,163,"assertEquals(encode(args, true, ""D'Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,164,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,165,"assertEquals(encode(args, true, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,166,"assertEquals(encode(args, true, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,168,"// concat is false, ruleType is APPROX"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,169,"args = new TreeMap<String, String>();"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,170,"args.put(""nameType"", ""SEPHARDIC"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,171,"assertEquals(encode(args, false, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,172,"args.put(""ruleType"", ""APPROX"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,173,"assertEquals(encode(args, false, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,174,"assertEquals(encode(args, false, ""D'Angelo""), ""danhila|danhilu|danzila|danzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,175,"args.put(""languageSet"", ""italian,greek,spanish"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,176,"assertEquals(encode(args, false, ""Angelo""), ""anhila|anhilu|anzila|anzilu|nhila|nhilu|nzila|nzilu"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,177,"assertEquals(encode(args, false, ""1234""), """");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,181,* This code is similar in style to code found in Solr:
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,182,* solr/core/src/java/org/apache/solr/analysis/BeiderMorseFilterFactory.java
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,184,* Making a JUnit test out of it to protect Solr from possible future
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,185,* regressions in Commons-Codec.
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,187,"private static String encode(Map<String, String> args, boolean concat, String input) {"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,188,Languages.LanguageSet languageSet;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,189,PhoneticEngine engine;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,191,// PhoneticEngine = NameType + RuleType + concat
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,192,// we use common-codec's defaults: GENERIC + APPROX + true
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,193,"String nameTypeArg = args.get(""nameType"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,194,NameType nameType = (nameTypeArg == null) ? NameType.GENERIC : NameType.valueOf(nameTypeArg);
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,196,"String ruleTypeArg = args.get(""ruleType"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,197,RuleType ruleType = (ruleTypeArg == null) ? RuleType.APPROX : RuleType.valueOf(ruleTypeArg);
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,199,"engine = new PhoneticEngine(nameType, ruleType, concat);"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,201,"// LanguageSet: defaults to automagic, otherwise a comma-separated list."
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,202,"String languageSetArg = args.get(""languageSet"");"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,203,"if (languageSetArg == null || languageSetArg.equals(""auto"")) {"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,204,languageSet = null;
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,205,} else {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,206,"languageSet = Languages.LanguageSet.from(new HashSet<String>(Arrays.asList(languageSetArg.split("",""))));"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,210,org/apache/lucene/analysis/phonetic/BeiderMorseFilter.java (lines 96-98) does this:
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,212,encoded = (languages == null)
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,213,? engine.encode(termAtt.toString())
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,214,": engine.encode(termAtt.toString(), languages);"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,216,"Hence our approach, below:"
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,218,if (languageSet == null) {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,219,return engine.encode(input);
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,220,} else {
True,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java,221,"return engine.encode(input, languageSet);"
