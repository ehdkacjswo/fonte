is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,24, <p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,26, </p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,29, </p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,31," This encoder is intentionally mutable to allow dynamic configuration through bean properties. As such, it is mutable, and may not be"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,32, thread-safe. If you require a guaranteed thread-safe encoding then use {@link PhoneticEngine} directly.
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,33, </p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,35, <h2>Encoding overview</h2>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,28,"* This encoder is intentionally mutable to allow dynamic configuration through bean properties. As such, it"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,29,"* is mutable, and may not be thread-safe. If you require a guaranteed thread-safe encoding then use"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,30,* {@link PhoneticEngine} directly.
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,31,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,32,* <b>Encoding overview</b>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,39," language the word comes from. For example, if it ends in ""<code>ault</code>"" then it infers that the word is French. Next,"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,40, the word is translated into a phonetic representation using a language-specific phonetics table. Some runs of letters
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,41," can be pronounced in multiple ways, and a single run of letters may be potentially broken up into phonemes at"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,42," different places, so this stage results in a set of possible language-specific phonetic representations. Lastly,"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,43, this language-specific phonetic representation is processed by a table of rules that re-writes it phonetically taking
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,44," into account systematic pronunciation differences between languages, to move it towards a pan-indo-european phonetic"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,45," representation. Again, sometimes there are multiple ways this could be done and sometimes things that can be"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,46, pronounced in several ways in the source language have only one way to represent them in this average phonetic
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,47," language, so the result is again a set of phonetic spellings."
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,48, </p>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,35,"* language the word comes from. For example, if it ends in ""<code>ault</code>"" then it infers that the word is French."
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,36,"* Next, the word is translated into a phonetic representation using a language-specific phonetics table. Some"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,37,"* runs of letters can be pronounced in multiple ways, and a single run of letters may be potentially broken up"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,38,"* into phonemes at different places, so this stage results in a set of possible language-specific phonetic"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,39,"* representations. Lastly, this language-specific phonetic representation is processed by a table of rules that"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,40,"* re-writes it phonetically taking into account systematic pronunciation differences between languages, to move"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,41,"* it towards a pan-indo-european phonetic representation. Again, sometimes there are multiple ways this could be"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,42,* done and sometimes things that can be pronounced in several ways in the source language have only one way to
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,43,"* represent them in this average phonetic language, so the result is again a set of phonetic spellings."
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,51," Some names are treated as having multiple parts. This can be due to two things. Firstly, they may be hyphenated. In"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,52," this case, each individual hyphenated word is encoded, and then these are combined end-to-end for the final encoding."
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,53," Secondly, some names have standard prefixes, for example, ""<code>Mac/Mc</code>"" in Scottish (English) names. As sometimes it is"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,54," ambiguous whether the prefix is intended or is an accident of the spelling, the word is encoded once with the prefix"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,55, and once without it. The resulting encoding contains one and then the other result.
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,56, </p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,59, <h2>Encoding format</h2>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,61, Individual phonetic spellings of an input word are represented in upper- and lower-case roman characters. Where there
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,62," are multiple possible phonetic representations, these are joined with a pipe (<code>|</code>) character. If multiple hyphenated"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,63," words where found, or if the word may contain a name prefix, each encoded word is placed in elipses and these blocks"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,64," are then joined with hyphens. For example, ""<code>d'ortley</code>"" has a possible prefix. The form without prefix encodes to"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,65," ""<code>ortlaj|ortlej</code>"", while the form with prefix encodes to ""<code>dortlaj|dortlej</code>"". Thus, the full, combined encoding is"
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,66," ""<code>(ortlaj|ortlej)-(dortlaj|dortlej)</code>""."
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,45,"* Some names are treated as having multiple parts. This can be due to two things. Firstly, they may be hyphenated."
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,46,"* In this case, each individual hyphenated word is encoded, and then these are combined end-to-end for the final"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,47,"* encoding. Secondly, some names have standard prefixes, for example, ""<code>Mac/Mc</code>"" in Scottish (English)"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,48,"* names. As sometimes it is ambiguous whether the prefix is intended or is an accident of the spelling, the word"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,49,* is encoded once with the prefix and once without it. The resulting encoding contains one and then the other result.
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,50,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,51,* <b>Encoding format</b>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,52,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,53,* Individual phonetic spellings of an input word are represented in upper- and lower-case roman characters. Where
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,54,"* there are multiple possible phonetic representations, these are joined with a pipe (<code>|</code>) character."
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,55,"* If multiple hyphenated words where found, or if the word may contain a name prefix, each encoded word is placed"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,56,"* in elipses and these blocks are then joined with hyphens. For example, ""<code>d'ortley</code>"" has a possible"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,57,"* prefix. The form without prefix encodes to ""<code>ortlaj|ortlej</code>"", while the form with prefix encodes to"
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,58,"* ""<code>dortlaj|dortlej</code>"". Thus, the full, combined encoding is ""<code>(ortlaj|ortlej)-(dortlaj|dortlej)</code>""."
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,75, </p>
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,143, Sets the type of name. Use {@link NameType#GENERIC} unless you specifically want phoentic encodings optimized for Ashkenazi or
False,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,144, Sephardic Jewish family names.
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,133,* Sets the type of name. Use {@link NameType#GENERIC} unless you specifically want phonetic encodings
True,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java,134,* optimized for Ashkenazi or Sephardic Jewish family names.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,34, <p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,36, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,38, This class encapsulates rules used to guess the possible languages that a word originates from. This is done by reference to a whole
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,39, series of rules distributed in resource files.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,40, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,36,* This class encapsulates rules used to guess the possible languages that a word originates from. This is
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,37,* done by reference to a whole series of rules distributed in resource files.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,42, Instances of this class are typically managed through the static factory method instance(). Unless you are developing your own language
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,43," guessing rules, you will not need to interact with this class directly."
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,44, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,39,* Instances of this class are typically managed through the static factory method instance().
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,40,"* Unless you are developing your own language guessing rules, you will not need to interact with this class directly."
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,47, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,48, <h2>Lang resources</h2
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,50, Language guessing rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,51, following the pattern: <blockquote>org/apache/commons/codec/language/bm/lang.txt</blockquote> The format of these resources is the
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,52, following:
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,53, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,44,* <b>Lang resources</b>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,45,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,46,* Language guessing rules are typically loaded from resource files. These are UTF-8 encoded text files.
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,47,* They are systematically named following the pattern:
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,48,* <blockquote>org/apache/commons/codec/language/bm/lang.txt</blockquote>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,49,* The format of these resources is the following:
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,55," <li><b>Rules:</b> whitespace separated strings. There should be 3 columns to each row, and these will be interpreted as:"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,51,* <li><b>Rules:</b> whitespace separated strings.
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,52,"* There should be 3 columns to each row, and these will be interpreted as:"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,62, <li><b>End-of-line comments:</b> Any occurance of '//' will cause all text following on that line to be discarded as a comment.</li>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,63, <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip all content until a
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,64, line ending in '*' and '/' is found.</li>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,59,* <li><b>End-of-line comments:</b> Any occurrence of '//' will cause all text following on that line to be
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,60,* discarded as a comment.</li>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,61,* <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode.
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,62,* This will skip all content until a line ending in '*' and '/' is found.</li>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,67, <p/>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,65,* <p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,119, <p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,121, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,123," In normal use, you will obtain instances of Lang through the {@link #instance(NameType)} method. You will only need to call this"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,124, yourself if you are developing custom language mapping rules.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,125, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,119,"* In normal use, you will obtain instances of Lang through the {@link #instance(NameType)} method."
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,120,* You will only need to call this yourself if you are developing custom language mapping rules.
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,160,"/ System.err.println(""index of comment: "" + cmtI);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,173,"/ System.err.println(""part count: "" + parts.length);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,176,/ fixme: we really need to log this somewhere
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,177,"ystem.err.println(""Warning: malformed line '"" + rawLine + ""'"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,169,// FIXME: consider throwing an IllegalStateException like in Rule
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,170,"// System.err.println(""Warning: malformed line '"" + rawLine + ""'"");"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,222,"/ System.out.println(""Testing text: '"" + text + ""'"");"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,227,"/ System.out.println(""Rule "" + rule.pattern + "" matches "" + text);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,229,"/ System.out.println(""Retaining "" + rule.languages);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,232,"/ System.out.println(""Removing "" + rule.languages);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,235,"/ System.out.println(""Current languages: "" + langs);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,236, else {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,237,"/ System.out.println(""Rule "" + rule.pattern + "" does not match "" + text);"
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,30, <p>
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,32, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,34, Language codes are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,35, pattern:
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,36, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,32,* Language codes are typically loaded from resource files. These are UTF-8 encoded text files. They are
True,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,33,* systematically named following the pattern:
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,40, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Languages.java,src/main/java/org/apache/commons/codec/language/bm/Languages.java,50, </p>
False,src/main/java/org/apache/commons/codec/language/bm/NameType.java,src/main/java/org/apache/commons/codec/language/bm/NameType.java,22, <code>GENERIC</code> NameType should work reasonably well for non-name words. The other encodings are specifically
False,src/main/java/org/apache/commons/codec/language/bm/NameType.java,src/main/java/org/apache/commons/codec/language/bm/NameType.java,23," tuned to family names, and may not work well at all for general text."
True,src/main/java/org/apache/commons/codec/language/bm/NameType.java,src/main/java/org/apache/commons/codec/language/bm/NameType.java,22,* <code>GENERIC</code> NameType should work reasonably well for non-name words. The other encodings are
True,src/main/java/org/apache/commons/codec/language/bm/NameType.java,src/main/java/org/apache/commons/codec/language/bm/NameType.java,23,"* specifically tuned to family names, and may not work well at all for general text."
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,34, <p>
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,36, </p>
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,38," This is a two-stage process. Firstly, the word is converted into a phonetic representation that takes into account the likely source"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,39," language. Next, this phonetic representation is converted into a pan-european 'average' representation, allowing comparison between"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,40, different versions of essentially the same word from different languages.
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,41, </p>
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,36,"* This is a two-stage process. Firstly, the word is converted into a phonetic representation that takes"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,37,"* into account the likely source language. Next, this phonetic representation is converted into a"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,38,"* pan-european 'average' representation, allowing comparison between different versions of essentially"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,39,* the same word from different languages.
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,43," This class is intentionally immutable. If you wish to alter the settings for a PhoneticEngine, you must make a new one with the updated"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,44, settings. This makes the class thread-safe.
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,45, </p>
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,41,"* This class is intentionally immutable. If you wish to alter the settings for a PhoneticEngine, you"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,42,* must make a new one with the updated settings. This makes the class thread-safe.
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,48, </p>
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,55," Utility for manipulating a set of phonemes as they are being built up. Not intended for use outside this package,"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,56, and probably not outside the {@link PhoneticEngine} class.
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,51,* Utility for manipulating a set of phonemes as they are being built up. Not intended for use outside
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,52,"* this package, and probably not outside the {@link PhoneticEngine} class."
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,94,* <p>
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,136," Stringifies the phoneme set. This produces a single string of the strings of each phoneme, joined with a pipe."
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,137," This is explicitly provied in place of toString as it is a potentially expensive operation, which should be"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,138, avoided when debugging.
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,132,"* Stringifies the phoneme set. This produces a single string of the strings of each phoneme,"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,133,* joined with a pipe. This is explicitly provided in place of toString as it is a potentially
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,134,"* expensive operation, which should be avoided when debugging."
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,163," matching rule was found, <code>phonemeBuilder</code> is replaced with a new buidler containing the phonemes"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,159,"* matching rule was found, <code>phonemeBuilder</code> is replaced with a new builder containing the phonemes"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,209,ULES: for (Rule rule : this.finalRules) {
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,205,for (Rule rule : this.finalRules) {
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,212,"/ log(""trying pattern: "" + pattern);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,215,"/ log(""no match"");"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,216,ontinue RULES;
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,210,continue;
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,221,reak RULES;
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,215,break;
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,252, @return a <code>CharSequence</code> that internally memoises subSequence values
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,246,* @return a <code>CharSequence</code> that internally caches subSequence values
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,288, @return          a single String consisting of each element of <code>strings</code> interlieved by <code>sep</code>
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,282,* @return          a single String consisting of each element of <code>strings</code> interleaved by <code>sep</code>
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,354, Applies the final rules to convert from a language-specific phonetic representation to a language-independent
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,355, representation.
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,348,* Applies the final rules to convert from a language-specific phonetic representation to a
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,349,* language-independent representation.
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,374,"/ System.err.println(""Expanding: "" + phonemeText);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,383,"/ System.err.println(""Not found. Appending as-is"");"
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,376,"// not found, appending as-is"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,389,"/ System.err.println(phonemeText + "" "" + i + "": "" + subBuilder.makeString());"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,392,"/ System.err.println(""Expanded to: "" + subBuilder.makeString());"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,393,"/ System.err.println(""phenomes in collection of type: "" + subBuilder.getPhonemes().getClass());"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,427,"/ System.err.println(""Languages: "" + languageSet);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,428,"/ System.err.println(""Rules: "" + rules);"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,500,"/ System.err.println(input + "" "" + i + "": "" + phonemeBuilder.makeString());"
False,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,541," @return true if multiple phonetic encodings are returned, false if just the first is."
True,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,526,"* @return true if multiple phonetic encodings are returned, false if just the first is"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,36, <p>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,38, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,40," Rules have a pattern, left context, right context, output phoneme, set of languages for which they apply and a logical flag indicating if"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,41, all lanugages must be in play. A rule matches if:
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,38,"* Rules have a pattern, left context, right context, output phoneme, set of languages for which they apply"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,39,* and a logical flag indicating if all languages must be in play. A rule matches if:
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,49, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,51," Rules are typically generated by parsing rules resources. In normal use, there will be no need for the user to explicitly construct their"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,52, own.
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,53, </p>
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,48,"* Rules are typically generated by parsing rules resources. In normal use, there will be no need for the user"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,49,* to explicitly construct their own.
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,56, <h2>Rules resources</h2>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,58, Rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically named following the pattern:
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,53,* <b>Rules resources</b>
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,54,* <p>
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,55,* Rules are typically loaded from resource files. These are UTF-8 encoded text files. They are systematically
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,56,* named following the pattern:
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,60, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,64," <li><b>Rules:</b> whitespace separated, double-quoted strings. There should be 4 columns to each row, and these will be interpreted as:"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,61,"* <li><b>Rules:</b> whitespace separated, double-quoted strings. There should be 4 columns to each row, and these"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,62,* will be interpreted as:
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,72, <li><b>End-of-line comments:</b> Any occurance of '//' will cause all text following on that line to be discarded as a comment.</li>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,73, <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip all content until a
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,74, line ending in '*' and '/' is found.</li>
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,70,* <li><b>End-of-line comments:</b> Any occurrence of '//' will cause all text following on that line to be discarded
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,71,* as a comment.</li>
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,72,* <li><b>Multi-line comments:</b> Any line starting with '/*' will start multi-line commenting mode. This will skip
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,73,* all content until a line ending in '*' and '/' is found.</li>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,77, </p>
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,358,"ystem.err.println(""Warining: malformed import statement: "" + rawLine);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,356,// FIXME: consider throwing an IllegalStateException like in parsePhonemeExpr
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,357,"// System.err.println(""Warning: malformed import statement: "" + rawLine);"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,366,"ystem.err.println(""Warning: malformed rule statement split into "" + parts.length + "" parts: "" + rawLine);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,365,// FIXME: consider throwing an IllegalStateException like in parsePhonemeExpr
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,366,"// System.err.println(""Warning: malformed rule statement split into "" + parts.length + "" parts: "" + rawLine);"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,497,"/ System.out.println(""Couldn't optimize regex: "" + regex);"
