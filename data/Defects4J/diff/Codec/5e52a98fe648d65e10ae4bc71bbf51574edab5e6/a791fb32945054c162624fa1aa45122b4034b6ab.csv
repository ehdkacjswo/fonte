is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,100,"yte[] decode = b64.decode(""SGVsbG{}8gV29ybGQ="");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,100,"byte[] decode = b64.decode(""SGVsbG{������}8gV29ybGQ="");"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,338,ssertTrue(Base64.isArrayByteBase64(enc));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,338,assertTrue(Base64.isBase64(enc));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,350,"ssertTrue(""\"""" + (new String(enc)) + ""\"" is Base64 data."", Base64.isArrayByteBase64(enc));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,350,"assertTrue(""\"""" + (new String(enc)) + ""\"" is Base64 data."", Base64.isBase64(enc));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,378,ssertFalse(Base64.isArrayByteBase64(new byte[]{Byte.MIN_VALUE}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,379,ssertFalse(Base64.isArrayByteBase64(new byte[]{-125}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,380,ssertFalse(Base64.isArrayByteBase64(new byte[]{-10}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,381,ssertFalse(Base64.isArrayByteBase64(new byte[]{0}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,382,"ssertFalse(Base64.isArrayByteBase64(new byte[]{64, Byte.MAX_VALUE}));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,383,ssertFalse(Base64.isArrayByteBase64(new byte[]{Byte.MAX_VALUE}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,384,ssertTrue(Base64.isArrayByteBase64(new byte[]{'A'}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,385,"ssertFalse(Base64.isArrayByteBase64(new byte[]{'A', Byte.MIN_VALUE}));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,386,"ssertTrue(Base64.isArrayByteBase64(new byte[]{'A', 'Z', 'a'}));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,387,"ssertTrue(Base64.isArrayByteBase64(new byte[]{'/', '=', '+'}));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,388,ssertFalse(Base64.isArrayByteBase64(new byte[]{'$'}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,378,assertFalse(Base64.isBase64(new byte[]{Byte.MIN_VALUE}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,379,assertFalse(Base64.isBase64(new byte[]{-125}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,380,assertFalse(Base64.isBase64(new byte[]{-10}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,381,assertFalse(Base64.isBase64(new byte[]{0}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,382,"assertFalse(Base64.isBase64(new byte[]{64, Byte.MAX_VALUE}));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,383,assertFalse(Base64.isBase64(new byte[]{Byte.MAX_VALUE}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,384,assertTrue(Base64.isBase64(new byte[]{'A'}));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,385,"assertFalse(Base64.isBase64(new byte[]{'A', Byte.MIN_VALUE}));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,386,"assertTrue(Base64.isBase64(new byte[]{'A', 'Z', 'a'}));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,387,"assertTrue(Base64.isBase64(new byte[]{'/', '=', '+'}));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,388,assertFalse(Base64.isBase64(new byte[]{'$'}));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,402,"ssertTrue(""Base64.isArrayByteBase64(whiteSpace)=true"", Base64.isArrayByteBase64(whiteSpace));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,402,"assertTrue(""Base64.isBase64(whiteSpace)=true"", Base64.isBase64(whiteSpace));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,444,isArrayByteBase64(bArray));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,444,.isBase64(bArray));
