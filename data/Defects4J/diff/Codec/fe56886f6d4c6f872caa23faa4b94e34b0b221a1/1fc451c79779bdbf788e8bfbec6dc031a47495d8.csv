is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,33,rivate final boolean doEncode;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,35,private final boolean doEncode;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,46,* {@inheritDoc}
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,48,"* @return <code>0</code> if the {@link InputStream} has reached <code>EOF</code>,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,49,* <code>1</code> otherwise
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,51,public int available() throws IOException {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,52,// Note: the logic is similar to the InflaterInputStream:
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,53,"//       as long as we have not reached EOF, indicate that there is more"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,54,"//       data available. As we do not know for sure how much data is left,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,55,//       just return 1 as a safe guess.
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,57,// use the EOF flag of the underlying codec instance
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,58,return baseNCodec.eof ? 0 : 1;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,62,* {@inheritDoc}
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,64,* @return false
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,66,@Override
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,67,public boolean markSupported() {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,68,return false; // not an easy job to support marks
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,128, {@inheritDoc}
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,130, @return false
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,132,Override
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,133,ublic boolean markSupported() {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,134,eturn false; // not an easy job to support marks
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,145,"hrow new IllegalArgumentException(""Negative skip length"");"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,161,"throw new IllegalArgumentException(""Negative skip length: "" + n);"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,169, {@inheritDoc}
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,171," @return <code>0</code> if the {@link InputStream} has reached <code>EOF</code>,"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,172, <code>1</code> otherwise
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,174,ublic int available() throws IOException {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,175,/ Note: the logic is similar to the InflaterInputStream:
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,176,"/       as long as we have not reached EOF, indicate that there is more"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,177,"/       data available. As we do not know for sure how much data is left,"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,178,/       just return 1 as a safe guess.
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,180,/ use the EOF flag of the underlying codec instance
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,181,f (baseNCodec.eof) {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,182,eturn 0;
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,183, else {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,184,eturn 1;
