is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,38, Constructs a new instance.
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,40, @deprecated Creating an instance without a {@link StringEncoder} leads to a {@link NullPointerException}. Will be
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,41,             removed in 2.0.
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,43,Deprecated
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,44,ublic StringEncoderComparator() {
False,src/java/org/apache/commons/codec/StringEncoderComparator.java,src/java/org/apache/commons/codec/StringEncoderComparator.java,45,his.stringEncoder = null; // Trying to use this will cause things to break
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,497, Tests a given byte array to see if it contains only valid characters within the Base64 alphabet. Currently the
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,498, method treats whitespace as valid.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,500, @param arrayOctet
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,501,            byte array to test
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,502, @return <code>true</code> if all bytes are valid characters in the Base64 alphabet or if the byte array is empty;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,503,"         <code>false</code>, otherwise"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,504," @deprecated 1.5 Use {@link #isBase64(byte[])}, will be removed in 2.0."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,506,Deprecated
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,507,ublic static boolean isArrayByteBase64(byte[] arrayOctet) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,508,eturn isBase64(arrayOctet);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,18,ackage org.apache.commons.codec.language;
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,20,mport org.apache.commons.codec.EncoderException;
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,21,mport org.apache.commons.codec.StringEncoder;
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,24, Encodes a string into a Caverphone 2.0 value. Delegate to a {@link Caverphone2} instance.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,26, This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,27, algorithm:
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,29, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,30, @version $Id$
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,31," @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,32," @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,33, @since 1.4
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,34," @deprecated 1.5 Replaced by {@link Caverphone2}, will be removed in 2.0."
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,36,Deprecated
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,37,ublic class Caverphone implements StringEncoder {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,40, Delegate to a {@link Caverphone2} instance to avoid code duplication.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,42,inal private Caverphone2 encoder = new Caverphone2();
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,45, Creates an instance of the Caverphone encoder
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,47,ublic Caverphone() {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,48,uper();
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,52, Encodes the given String into a Caverphone value.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,54, @param source
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,55,            String the source string
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,56, @return A caverphone code for the given String
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,58,ublic String caverphone(String source) {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,59,eturn this.encoder.encode(source);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,63, Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,64," the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,66, @param pObject
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,67,            Object to encode
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,68, @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,69,         supplied.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,70, @throws EncoderException
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,71,             if the parameter supplied is not of type java.lang.String
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,73,ublic Object encode(Object pObject) throws EncoderException {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,74,f (!(pObject instanceof String)) {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,75,"hrow new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,77,eturn this.caverphone((String) pObject);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,81, Encodes a String using the Caverphone algorithm.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,83, @param pString
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,84,            String object to encode
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,85, @return The caverphone code corresponding to the String supplied
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,87,ublic String encode(String pString) {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,88,eturn this.caverphone(pString);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,92, Tests if the caverphones of two strings are identical.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,94, @param str1
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,95,            First of two strings to compare
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,96, @param str2
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,97,            Second of two strings to compare
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,98," @return <code>true</code> if the caverphones of these strings are identical, <code>false</code> otherwise."
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,100,"ublic boolean isCaverphoneEqual(String str1, String str2) {"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,101,eturn this.caverphone(str1).equals(this.caverphone(str2));
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,84, The maximum length of a Soundex code - Soundex codes are only four characters by definition.
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,86, @deprecated This feature is not needed since the encoding size must be constant. Will be removed in 2.0.
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,88,Deprecated
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,89,rivate int maxLength = 4;
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,198, Returns the maxLength. Standard Soundex
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,200, @deprecated This feature is not needed since the encoding size must be constant. Will be removed in 2.0.
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,201, @return int
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,203,Deprecated
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,204,ublic int getMaxLength() {
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,205,eturn this.maxLength;
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,235, Sets the maxLength.
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,237, @deprecated This feature is not needed since the encoding size must be constant. Will be removed in 2.0.
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,238, @param maxLength
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,239,                  The maxLength to set
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,241,Deprecated
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,242,ublic void setMaxLength(int maxLength) {
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,243,his.maxLength = maxLength;
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,342, The <code>String</code> encoding used for decoding and encoding.
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,344, @return Returns the encoding.
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,346," @deprecated Use {@link #getDefaultCharset()}, will be removed in 2.0."
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,348,Deprecated
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,349,ublic String getEncoding() {
False,src/java/org/apache/commons/codec/net/URLCodec.java,src/java/org/apache/commons/codec/net/URLCodec.java,350,eturn this.charset;
False,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,39,Test
False,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,40,ublic void testComparatorNoArgCon() throws Exception {
False,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,src/test/org/apache/commons/codec/StringEncoderComparatorTest.java,41,ew StringEncoderComparator();
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,20,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,22,import org.apache.commons.codec.EncoderException;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,24,import org.apache.commons.codec.StringEncoderAbstractTest;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,25,import org.junit.Test;
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,26, @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,31,* @version $Id$
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,29,ublic class Caverphone2Test extends CaverphoneTest {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,34,public class Caverphone2Test extends StringEncoderAbstractTest {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,42,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,44,"* AT11111111 words: add, aid, at, art, eat, earth, head, hit, hot, hold, hard, heart, it, out, old"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,46,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,48,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,49,public void testCaverphoneRevisitedCommonCodeAT11111111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,50,"this.checkEncodingVariations(""AT11111111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,51,"""add"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,52,"""aid"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,53,"""at"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,54,"""art"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,55,"""eat"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,56,"""earth"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,57,"""head"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,58,"""hit"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,59,"""hot"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,60,"""hold"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,61,"""hard"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,62,"""heart"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,63,"""it"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,64,"""out"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,65,"""old""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,69,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,71,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,73,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,74,public void testCaverphoneRevisitedExamples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,75,"String[][] data = {{""Stevenson"", ""STFNSN1111""}, {""Peter"", ""PTA1111111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,76,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,80,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,82,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,84,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,85,public void testCaverphoneRevisitedRandomNameKLN1111111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,86,"this.checkEncodingVariations(""KLN1111111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,87,"""Cailean"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,88,"""Calan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,89,"""Calen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,90,"""Callahan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,91,"""Callan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,92,"""Callean"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,93,"""Carleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,94,"""Carlen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,95,"""Carlene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,96,"""Carlin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,97,"""Carline"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,98,"""Carlyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,99,"""Carlynn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,100,"""Carlynne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,101,"""Charlean"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,102,"""Charleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,103,"""Charlene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,104,"""Charline"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,105,"""Cherlyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,106,"""Chirlin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,107,"""Clein"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,108,"""Cleon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,109,"""Cline"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,110,"""Cohleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,111,"""Colan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,112,"""Coleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,113,"""Colene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,114,"""Colin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,115,"""Colleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,116,"""Collen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,117,"""Collin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,118,"""Colline"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,119,"""Colon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,120,"""Cullan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,121,"""Cullen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,122,"""Cullin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,123,"""Gaelan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,124,"""Galan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,125,"""Galen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,126,"""Garlan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,127,"""Garlen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,128,"""Gaulin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,129,"""Gayleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,130,"""Gaylene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,131,"""Giliane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,132,"""Gillan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,133,"""Gillian"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,134,"""Glen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,135,"""Glenn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,136,"""Glyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,137,"""Glynn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,138,"""Gollin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,139,"""Gorlin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,140,"""Kalin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,141,"""Karlan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,142,"""Karleen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,143,"""Karlen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,144,"""Karlene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,145,"""Karlin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,146,"""Karlyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,147,"""Kaylyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,148,"""Keelin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,149,"""Kellen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,150,"""Kellene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,151,"""Kellyann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,152,"""Kellyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,153,"""Khalin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,154,"""Kilan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,155,"""Kilian"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,156,"""Killen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,157,"""Killian"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,158,"""Killion"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,159,"""Klein"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,160,"""Kleon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,161,"""Kline"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,162,"""Koerlin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,163,"""Kylen"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,164,"""Kylynn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,165,"""Quillan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,166,"""Quillon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,167,"""Qulllon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,168,"""Xylon""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,172,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,174,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,176,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,177,public void testCaverphoneRevisitedRandomNameTN11111111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,178,"this.checkEncodingVariations(""TN11111111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,179,"""Dan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,180,"""Dane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,181,"""Dann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,182,"""Darn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,183,"""Daune"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,184,"""Dawn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,185,"""Ddene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,186,"""Dean"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,187,"""Deane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,188,"""Deanne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,189,"""DeeAnn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,190,"""Deeann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,191,"""Deeanne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,192,"""Deeyn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,193,"""Den"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,194,"""Dene"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,195,"""Denn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,196,"""Deonne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,197,"""Diahann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,198,"""Dian"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,199,"""Diane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,200,"""Diann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,201,"""Dianne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,202,"""Diannne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,203,"""Dine"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,204,"""Dion"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,205,"""Dione"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,206,"""Dionne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,207,"""Doane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,208,"""Doehne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,209,"""Don"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,210,"""Donn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,211,"""Doone"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,212,"""Dorn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,213,"""Down"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,214,"""Downe"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,215,"""Duane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,216,"""Dun"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,217,"""Dunn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,218,"""Duyne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,219,"""Dyan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,220,"""Dyane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,221,"""Dyann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,222,"""Dyanne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,223,"""Dyun"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,224,"""Tan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,225,"""Tann"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,226,"""Teahan"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,227,"""Ten"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,228,"""Tenn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,229,"""Terhune"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,230,"""Thain"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,231,"""Thaine"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,232,"""Thane"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,233,"""Thanh"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,234,"""Thayne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,235,"""Theone"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,236,"""Thin"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,237,"""Thorn"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,238,"""Thorne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,239,"""Thun"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,240,"""Thynne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,241,"""Tien"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,242,"""Tine"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,243,"""Tjon"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,244,"""Town"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,245,"""Towne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,246,"""Turne"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,247,"""Tyne""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,251,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,253,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,255,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,256,public void testCaverphoneRevisitedRandomNameTTA1111111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,257,"this.checkEncodingVariations(""TTA1111111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,258,"""Darda"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,259,"""Datha"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,260,"""Dedie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,261,"""Deedee"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,262,"""Deerdre"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,263,"""Deidre"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,264,"""Deirdre"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,265,"""Detta"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,266,"""Didi"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,267,"""Didier"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,268,"""Dido"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,269,"""Dierdre"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,270,"""Dieter"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,271,"""Dita"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,272,"""Ditter"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,273,"""Dodi"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,274,"""Dodie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,275,"""Dody"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,276,"""Doherty"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,277,"""Dorthea"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,278,"""Dorthy"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,279,"""Doti"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,280,"""Dotti"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,281,"""Dottie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,282,"""Dotty"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,283,"""Doty"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,284,"""Doughty"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,285,"""Douty"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,286,"""Dowdell"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,287,"""Duthie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,288,"""Tada"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,289,"""Taddeo"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,290,"""Tadeo"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,291,"""Tadio"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,292,"""Tati"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,293,"""Teador"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,294,"""Tedda"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,295,"""Tedder"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,296,"""Teddi"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,297,"""Teddie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,298,"""Teddy"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,299,"""Tedi"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,300,"""Tedie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,301,"""Teeter"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,302,"""Teodoor"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,303,"""Teodor"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,304,"""Terti"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,305,"""Theda"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,306,"""Theodor"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,307,"""Theodore"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,308,"""Theta"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,309,"""Thilda"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,310,"""Thordia"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,311,"""Tilda"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,312,"""Tildi"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,313,"""Tildie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,314,"""Tildy"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,315,"""Tita"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,316,"""Tito"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,317,"""Tjader"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,318,"""Toddie"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,319,"""Toddy"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,320,"""Torto"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,321,"""Tuddor"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,322,"""Tudor"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,323,"""Turtle"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,324,"""Tuttle"","
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,325,"""Tutto""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,329,* See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,331,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,333,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,334,public void testCaverphoneRevisitedRandomWords() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,335,"this.checkEncodingVariations(""RTA1111111"", new String[]{""rather"", ""ready"", ""writer""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,336,"this.checkEncoding(""SSA1111111"", ""social"");"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,337,"this.checkEncodingVariations(""APA1111111"", new String[]{""able"", ""appear""});"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,340,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,341,public void testEndMb() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,342,"String[][] data = {{""mb"", ""M111111111""}, {""mbmb"", ""MPM1111111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,343,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,346,// Caverphone Revisited
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,347,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,348,public void testIsCaverphoneEquals() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,349,Caverphone2 caverphone = new Caverphone2();
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,350,"Assert.assertFalse(""Caverphone encodings should not be equal"", caverphone.isEncodeEqual(""Peter"", ""Stevenson""));"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,351,"Assert.assertTrue(""Caverphone encodings should be equal"", caverphone.isEncodeEqual(""Peter"", ""Peady""));"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,354,@Test
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,355,public void testSpecificationExamples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,356,String[][] data = {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,357,"{""Peter"", ""PTA1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,358,"{""ready"", ""RTA1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,359,"{""social"", ""SSA1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,360,"{""able"", ""APA1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,361,"{""Tedder"", ""TTA1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,362,"{""Karleen"", ""KLN1111111""},"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,363,"{""Dyun"", ""TN11111111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,364,this.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,18,ackage org.apache.commons.codec.language;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,20,mport junit.framework.Assert;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,22,mport org.apache.commons.codec.EncoderException;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,23,mport org.apache.commons.codec.StringEncoder;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,24,mport org.apache.commons.codec.StringEncoderAbstractTest;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,25,mport org.junit.Test;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,28, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,29, @version $Id$
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,31,ublic class CaverphoneTest extends StringEncoderAbstractTest {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,33,Override
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,34,rotected StringEncoder createStringEncoder() {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,35,eturn new Caverphone();
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,39, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,41," AT11111111 words: add, aid, at, art, eat, earth, head, hit, hot, hold, hard, heart, it, out, old"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,43, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,45,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,46,ublic void testCaverphoneRevisitedCommonCodeAT11111111() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,47,"his.checkEncodingVariations(""AT11111111"", new String[]{"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,48,"add"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,49,"aid"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,50,"at"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,51,"art"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,52,"eat"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,53,"earth"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,54,"head"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,55,"hit"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,56,"hot"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,57,"hold"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,58,"hard"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,59,"heart"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,60,"it"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,61,"out"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,62,"old""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,66, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,68, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,70,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,71,ublic void testCaverphoneRevisitedExamples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,72,"tring[][] data = {{""Stevenson"", ""STFNSN1111""}, {""Peter"", ""PTA1111111""}};"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,73,his.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,77, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,79, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,81,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,82,ublic void testCaverphoneRevisitedRandomNameKLN1111111() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,83,"his.checkEncodingVariations(""KLN1111111"", new String[]{"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,84,"Cailean"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,85,"Calan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,86,"Calen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,87,"Callahan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,88,"Callan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,89,"Callean"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,90,"Carleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,91,"Carlen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,92,"Carlene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,93,"Carlin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,94,"Carline"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,95,"Carlyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,96,"Carlynn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,97,"Carlynne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,98,"Charlean"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,99,"Charleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,100,"Charlene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,101,"Charline"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,102,"Cherlyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,103,"Chirlin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,104,"Clein"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,105,"Cleon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,106,"Cline"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,107,"Cohleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,108,"Colan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,109,"Coleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,110,"Colene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,111,"Colin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,112,"Colleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,113,"Collen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,114,"Collin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,115,"Colline"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,116,"Colon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,117,"Cullan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,118,"Cullen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,119,"Cullin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,120,"Gaelan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,121,"Galan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,122,"Galen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,123,"Garlan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,124,"Garlen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,125,"Gaulin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,126,"Gayleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,127,"Gaylene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,128,"Giliane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,129,"Gillan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,130,"Gillian"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,131,"Glen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,132,"Glenn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,133,"Glyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,134,"Glynn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,135,"Gollin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,136,"Gorlin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,137,"Kalin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,138,"Karlan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,139,"Karleen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,140,"Karlen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,141,"Karlene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,142,"Karlin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,143,"Karlyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,144,"Kaylyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,145,"Keelin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,146,"Kellen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,147,"Kellene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,148,"Kellyann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,149,"Kellyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,150,"Khalin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,151,"Kilan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,152,"Kilian"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,153,"Killen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,154,"Killian"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,155,"Killion"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,156,"Klein"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,157,"Kleon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,158,"Kline"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,159,"Koerlin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,160,"Kylen"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,161,"Kylynn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,162,"Quillan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,163,"Quillon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,164,"Qulllon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,165,"Xylon""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,169, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,171, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,173,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,174,ublic void testCaverphoneRevisitedRandomNameTN11111111() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,175,"his.checkEncodingVariations(""TN11111111"", new String[]{"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,176,"Dan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,177,"Dane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,178,"Dann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,179,"Darn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,180,"Daune"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,181,"Dawn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,182,"Ddene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,183,"Dean"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,184,"Deane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,185,"Deanne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,186,"DeeAnn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,187,"Deeann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,188,"Deeanne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,189,"Deeyn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,190,"Den"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,191,"Dene"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,192,"Denn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,193,"Deonne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,194,"Diahann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,195,"Dian"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,196,"Diane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,197,"Diann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,198,"Dianne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,199,"Diannne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,200,"Dine"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,201,"Dion"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,202,"Dione"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,203,"Dionne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,204,"Doane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,205,"Doehne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,206,"Don"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,207,"Donn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,208,"Doone"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,209,"Dorn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,210,"Down"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,211,"Downe"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,212,"Duane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,213,"Dun"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,214,"Dunn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,215,"Duyne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,216,"Dyan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,217,"Dyane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,218,"Dyann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,219,"Dyanne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,220,"Dyun"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,221,"Tan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,222,"Tann"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,223,"Teahan"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,224,"Ten"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,225,"Tenn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,226,"Terhune"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,227,"Thain"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,228,"Thaine"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,229,"Thane"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,230,"Thanh"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,231,"Thayne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,232,"Theone"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,233,"Thin"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,234,"Thorn"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,235,"Thorne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,236,"Thun"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,237,"Thynne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,238,"Tien"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,239,"Tine"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,240,"Tjon"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,241,"Town"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,242,"Towne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,243,"Turne"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,244,"Tyne""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,248, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,250, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,252,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,253,ublic void testCaverphoneRevisitedRandomNameTTA1111111() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,254,"his.checkEncodingVariations(""TTA1111111"", new String[]{"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,255,"Darda"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,256,"Datha"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,257,"Dedie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,258,"Deedee"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,259,"Deerdre"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,260,"Deidre"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,261,"Deirdre"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,262,"Detta"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,263,"Didi"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,264,"Didier"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,265,"Dido"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,266,"Dierdre"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,267,"Dieter"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,268,"Dita"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,269,"Ditter"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,270,"Dodi"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,271,"Dodie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,272,"Dody"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,273,"Doherty"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,274,"Dorthea"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,275,"Dorthy"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,276,"Doti"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,277,"Dotti"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,278,"Dottie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,279,"Dotty"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,280,"Doty"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,281,"Doughty"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,282,"Douty"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,283,"Dowdell"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,284,"Duthie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,285,"Tada"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,286,"Taddeo"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,287,"Tadeo"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,288,"Tadio"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,289,"Tati"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,290,"Teador"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,291,"Tedda"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,292,"Tedder"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,293,"Teddi"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,294,"Teddie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,295,"Teddy"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,296,"Tedi"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,297,"Tedie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,298,"Teeter"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,299,"Teodoor"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,300,"Teodor"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,301,"Terti"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,302,"Theda"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,303,"Theodor"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,304,"Theodore"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,305,"Theta"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,306,"Thilda"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,307,"Thordia"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,308,"Tilda"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,309,"Tildi"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,310,"Tildie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,311,"Tildy"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,312,"Tita"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,313,"Tito"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,314,"Tjader"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,315,"Toddie"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,316,"Toddy"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,317,"Torto"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,318,"Tuddor"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,319,"Tudor"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,320,"Turtle"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,321,"Tuttle"","
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,322,"Tutto""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,326, See http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,328, @throws EncoderException
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,330,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,331,ublic void testCaverphoneRevisitedRandomWords() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,332,"his.checkEncodingVariations(""RTA1111111"", new String[]{""rather"", ""ready"", ""writer""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,333,"his.checkEncoding(""SSA1111111"", ""social"");"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,334,"his.checkEncodingVariations(""APA1111111"", new String[]{""able"", ""appear""});"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,337,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,338,ublic void testEndMb() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,339,"tring[][] data = {{""mb"", ""M111111111""}, {""mbmb"", ""MPM1111111""}};"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,340,his.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,343,/ Caverphone Revisited
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,344,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,345,ublic void testIsCaverphoneEquals() {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,346,averphone caverphone = new Caverphone();
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,347,"ssert.assertFalse(""Caverphone encodings should not be equal"", caverphone.isCaverphoneEqual(""Peter"", ""Stevenson""));"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,348,"ssert.assertTrue(""Caverphone encodings should be equal"", caverphone.isCaverphoneEqual(""Peter"", ""Peady""));"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,351,Test
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,352,ublic void testSpecificationExamples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,353,tring[][] data = {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,354,"""Peter"", ""PTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,355,"""ready"", ""RTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,356,"""social"", ""SSA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,357,"""able"", ""APA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,358,"""Tedder"", ""TTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,359,"""Karleen"", ""KLN1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,360,"""Dyun"", ""TN11111111""}};"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,361,his.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,282,Test
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,283,ublic void testMaxLength() throws Exception {
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,284,oundex soundex = new Soundex();
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,285,oundex.setMaxLength(soundex.getMaxLength());
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,286,"ssert.assertEquals(""S460"", this.getSoundexEncoder().encode(""Sgler""));"
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,289,Test
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,290,ublic void testMaxLengthLessThan3Fix() throws Exception {
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,291,oundex soundex = new Soundex();
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,292,oundex.setMaxLength(2);
False,src/test/org/apache/commons/codec/language/SoundexTest.java,src/test/org/apache/commons/codec/language/SoundexTest.java,293,"ssert.assertEquals(""S460"", soundex.encode(""SCHELLER""));"
False,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,49,"ssertEquals(urlCodec.getEncoding(), urlCodec.getDefaultCharset());"
True,src/test/org/apache/commons/codec/net/URLCodecTest.java,src/test/org/apache/commons/codec/net/URLCodecTest.java,49,// no tests for now.
