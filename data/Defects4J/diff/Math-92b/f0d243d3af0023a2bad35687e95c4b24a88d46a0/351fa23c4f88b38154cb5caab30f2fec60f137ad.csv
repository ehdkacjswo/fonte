is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,68, @version $Revision: 1.7 $ $Date: 2003/11/15 16:01:40 $
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,68,* @version $Revision: 1.8 $ $Date: 2004/01/11 07:26:51 $
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,73,rivate EmpiricalDistribution empiricalDistribution = null;
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,74,rivate File file = null;
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,73,protected EmpiricalDistribution empiricalDistribution = null;
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,74,protected File file = null;
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,75,protected URL url = null;
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,82,"RL url = getClass().getResource(""testData.txt"");"
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,83,"url = getClass().getResource(""testData.txt"");"
False,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,98,mpiricalDistribution.load(file);
True,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java,99,empiricalDistribution.load(url);
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,67, @version $Revision: 1.8 $ $Date: 2003/11/15 16:01:40 $
True,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,67,* @version $Revision: 1.9 $ $Date: 2004/01/11 07:26:51 $
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,82,s.setValuesFileURL(url.toExternalForm());
True,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,82,vs.setValuesFileURL(url);
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,141, Make sure exception thrown if nextReplay() is attempted
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,142, before opening replay file.
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,144,ublic void testNextReplayFail() throws Exception {
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,145,ry {
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,146,s.setMode(ValueServer.REPLAY_MODE);
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,147,s.getNext();
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,148,"ail(""Expecting IllegalStateException"");"
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,149, catch (IllegalStateException ex) {;}
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,232,tring s = vs.getValuesFileURL();
False,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,233,"ssertEquals(""valuesFileURL test"",""http://www.apache.org"",s);"
True,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,220,URL url = vs.getValuesFileURL();
True,src/test/org/apache/commons/math/random/ValueServerTest.java,src/test/org/apache/commons/math/random/ValueServerTest.java,221,"assertEquals(""valuesFileURL test"",""http://www.apache.org"",url.toString());"
