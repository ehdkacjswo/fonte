is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,36,* <li>Pascal</li>
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,85,* Create a Pascal distribution with the given number of successes and
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,86,* probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,88,* @param numberOfSuccesses the number of successes.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,89,* @param probabilityOfSuccess the probability of success
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,90,* @return a new Pascal distribution
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,92,public abstract PascalDistribution createPascalDistribution(
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,93,"int numberOfSuccesses, double probabilityOfSuccess);"
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,158,* Create a Pascal distribution with the given number of successes and
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,159,* probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,161,* @param numberOfSuccesses the number of successes.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,162,* @param probabilityOfSuccess the probability of success
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,163,* @return a new Pascal distribution
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,165,"public PascalDistribution createPascalDistribution(int numberOfSuccesses, double probabilityOfSuccess) {"
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,166,"return new PascalDistributionImpl(numberOfSuccesses, probabilityOfSuccess);"
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,2,* Copyright 2006 The Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,16,package org.apache.commons.math.distribution;
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,19,* The Pascal Distribution.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,21,* Instances of PascalDistribution objects should be created using
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,22,"* {@link DistributionFactory#createPascalDistribution(int, double)}."
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,24,* <p>
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,25,* References:
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,26,* <ul>
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,27,"* <li><a href=""http://mathworld.wolfram.com/NegativeBinomialDistribution.html"">"
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,28,* Negative Binomial Distribution</a></li>
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,29,* </ul>
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,30,* </p>
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,32,* @version $Revision:$
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,34,public interface PascalDistribution extends IntegerDistribution {
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,36,* Access the number of successes for this distribution.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,38,* @return the number of successes
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,40,int getNumberOfSuccesses();
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,43,* Access the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,45,* @return the probability of success
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,47,double getProbabilityOfSuccess();
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,50,* Change the number of successes for this distribution.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,52,* @param successes the new number of successes
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,54,void setNumberOfSuccesses(int successes);
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,57,* Change the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,59,* @param p the new probability of success
True,src/java/org/apache/commons/math/distribution/PascalDistribution.java,src/java/org/apache/commons/math/distribution/PascalDistribution.java,61,void setProbabilityOfSuccess(double p);
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,2,* Copyright 2006 The Apache Software Foundation.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,16,package org.apache.commons.math.distribution;
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,19,* Test cases for PascalDistribution.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,20,* Extends IntegerDistributionAbstractTest.  See class javadoc for
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,21,* IntegerDistributionAbstractTest for details.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,23,* @version $Revision:$ $Date:$
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,25,public class PascalDistributionTest extends IntegerDistributionAbstractTest {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,28,* Constructor for PascalDistributionTest.
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,29,* @param name
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,31,public PascalDistributionTest(String name) {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,32,super(name);
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,35,//-------------- Implementations for abstract methods -----------------------
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,37,/** Creates the default discrete distribution instance to use in tests. */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,38,public IntegerDistribution makeDistribution() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,39,"return DistributionFactory.newInstance().createPascalDistribution(10,0.70);"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,42,/** Creates the default probability density test input values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,43,public int[] makeDensityTestPoints() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,44,"return new int[] {-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,47,/** Creates the default probability density test expected values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,48,public double[] makeDensityTestValues() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,49,"return new double[] {0d, 0.02824d, 0.08474d, 0.13982d,"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,50,"0.16779d, 0.16359d, 0.1374d, 0.10306d, 0.070673d, 0.04505d, 0.02703d, 0.01540d, 0.0084};"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,53,/** Creates the default cumulative probability density test input values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,54,public int[] makeCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,55,return makeDensityTestPoints();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,58,/** Creates the default cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,59,public double[] makeCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,60,"return new double[] {0d, 0.02824d, 0.11299d, 0.25281d, 0.42060d, 0.58420d,"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,61,"0.72162d, 0.82468d, 0.89535d, 0.94041d, 0.967446d, 0.98285, 0.99125d};"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,64,/** Creates the default inverse cumulative probability test input values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,65,public double[] makeInverseCumulativeTestPoints() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,66,"return new double[] {0, 0.001d, 0.010d, 0.025d, 0.050d, 0.100d, 0.999d,"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,67,"0.990d, 0.975d, 0.950d, 0.900d, 1};"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,70,/** Creates the default inverse cumulative probability density test expected values */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,71,public int[] makeInverseCumulativeTestValues() {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,72,"return new int[] {-1, -1, -1, -1, 0, 0, 13, 10, 9, 8, 7, Integer.MAX_VALUE};"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,75,//----------------- Additional test cases ---------------------------------
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,77,/** Test degenerate case p = 0   */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,78,public void testDegenerate0() throws Exception {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,79,"setDistribution(DistributionFactory.newInstance().createPascalDistribution(5,0.0d));"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,80,"setCumulativeTestPoints(new int[] {-1, 0, 1, 5, 10 });"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,81,"setCumulativeTestValues(new double[] {0d, 0d, 0d, 0d, 0d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,82,"setDensityTestPoints(new int[] {-1, 0, 1, 10, 11});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,83,"setDensityTestValues(new double[] {0d, 0d, 0d, 0d, 0d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,84,"setInverseCumulativeTestPoints(new double[] {0.1d, 0.5d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,85,"setInverseCumulativeTestValues(new int[] {Integer.MAX_VALUE - 1, Integer.MAX_VALUE - 1});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,86,verifyDensities();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,87,verifyCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,88,verifyInverseCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,91,/** Test degenerate case p = 1   */
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,92,public void testDegenerate1() throws Exception {
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,93,"setDistribution(DistributionFactory.newInstance().createPascalDistribution(5,1.0d));"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,94,"setCumulativeTestPoints(new int[] {-1, 0, 1, 2, 5, 10 });"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,95,"setCumulativeTestValues(new double[] {0d, 1d, 1d, 1d, 1d, 1d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,96,"setDensityTestPoints(new int[] {-1, 0, 1, 2, 5, 10});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,97,"setDensityTestValues(new double[] {0d, 1d, 0d, 0d, 0d, 0d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,98,"setInverseCumulativeTestPoints(new double[] {0.1d, 0.5d});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,99,"setInverseCumulativeTestValues(new int[] {-1, -1});"
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,100,verifyDensities();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,101,verifyCumulativeProbabilities();
True,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,src/test/org/apache/commons/math/distribution/PascalDistributionTest.java,102,verifyInverseCumulativeProbabilities();
