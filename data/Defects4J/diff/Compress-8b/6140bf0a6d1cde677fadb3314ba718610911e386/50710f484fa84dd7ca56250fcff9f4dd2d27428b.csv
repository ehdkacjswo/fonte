is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,30,/** The header for each entry */
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,31,"public static final String HEADER = ""!<arch>\n"";"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,33,/** The trailer for each entry */
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java,34,"public static final String TRAILER = ""`\012"";"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,45,"inal byte[] expected = ""!<arch>\n"".getBytes();"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,45,final byte[] expected = ArArchiveEntry.HEADER.getBytes();
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,81,"inal byte[] expected = ""`\012"".getBytes();"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java,81,final byte[] expected = ArArchiveEntry.TRAILER.getBytes();
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,44,"inal String header = ""!<arch>\n"";"
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,45,ut.write(header.getBytes());
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,46,eturn header.length();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,44,byte [] header = ArArchiveEntry.HEADER.getBytes();
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,45,out.write(header);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,46,return header.length;
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,51,ut.write('\n');
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,51,out.write('\n'); // Pad byte
False,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,140,"ffset += write(""`\012"");"
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,140,offset += write(ArArchiveEntry.TRAILER);
