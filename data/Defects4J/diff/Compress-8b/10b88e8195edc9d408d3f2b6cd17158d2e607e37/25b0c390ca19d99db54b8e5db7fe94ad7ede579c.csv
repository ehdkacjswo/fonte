is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons-sandbox//compress/src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,v 1.1 2003/12/02 20:43:04 dirkv Exp $"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,4,* $Date: 2003/12/02 20:43:04 $
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,10,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,11,* reserved.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,15,* are met:
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,23,*    distribution.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,26,"*    any, must include the following acknowledgement:"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,29,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,30,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,39,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,62,package org.apache.commons.compress.bzip2;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,65,"* This package is based on the work done by Keiron Liddle, Aftex Software"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,66,* <keiron@aftexsw.com> to whom the Ant project is very grateful for his
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,67,* great code.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,71,"* Base class for both the compress and decompress classes. Holds common arrays,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,72,* and static data.
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,74,"* @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,76,interface BZip2Constants
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,78,int BASE_BLOCK_SIZE = 100000;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,79,int MAX_ALPHA_SIZE = 258;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,80,int MAX_CODE_LEN = 23;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,81,int RUNA = 0;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,82,int RUNB = 1;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,83,int N_GROUPS = 6;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,84,int G_SIZE = 50;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,85,int N_ITERS = 4;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,86,int MAX_SELECTORS = ( 2 + ( 900000 / G_SIZE ) );
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,87,int NUM_OVERSHOOT_BYTES = 20;
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,89,int[] RAND_NUMS = new int[]
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,91,"619, 720, 127, 481, 931, 816, 813, 233, 566, 247,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,92,"985, 724, 205, 454, 863, 491, 741, 242, 949, 214,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,93,"733, 859, 335, 708, 621, 574, 73, 654, 730, 472,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,94,"419, 436, 278, 496, 867, 210, 399, 680, 480, 51,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,95,"878, 465, 811, 169, 869, 675, 611, 697, 867, 561,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,96,"862, 687, 507, 283, 482, 129, 807, 591, 733, 623,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,97,"150, 238, 59, 379, 684, 877, 625, 169, 643, 105,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,98,"170, 607, 520, 932, 727, 476, 693, 425, 174, 647,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,99,"73, 122, 335, 530, 442, 853, 695, 249, 445, 515,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,100,"909, 545, 703, 919, 874, 474, 882, 500, 594, 612,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,101,"641, 801, 220, 162, 819, 984, 589, 513, 495, 799,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,102,"161, 604, 958, 533, 221, 400, 386, 867, 600, 782,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,103,"382, 596, 414, 171, 516, 375, 682, 485, 911, 276,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,104,"98, 553, 163, 354, 666, 933, 424, 341, 533, 870,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,105,"227, 730, 475, 186, 263, 647, 537, 686, 600, 224,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,106,"469, 68, 770, 919, 190, 373, 294, 822, 808, 206,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,107,"184, 943, 795, 384, 383, 461, 404, 758, 839, 887,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,108,"715, 67, 618, 276, 204, 918, 873, 777, 604, 560,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,109,"951, 160, 578, 722, 79, 804, 96, 409, 713, 940,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,110,"652, 934, 970, 447, 318, 353, 859, 672, 112, 785,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,111,"645, 863, 803, 350, 139, 93, 354, 99, 820, 908,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,112,"609, 772, 154, 274, 580, 184, 79, 626, 630, 742,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,113,"653, 282, 762, 623, 680, 81, 927, 626, 789, 125,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,114,"411, 521, 938, 300, 821, 78, 343, 175, 128, 250,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,115,"170, 774, 972, 275, 999, 639, 495, 78, 352, 126,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,116,"857, 956, 358, 619, 580, 124, 737, 594, 701, 612,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,117,"669, 112, 134, 694, 363, 992, 809, 743, 168, 974,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,118,"944, 375, 748, 52, 600, 747, 642, 182, 862, 81,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,119,"344, 805, 988, 739, 511, 655, 814, 334, 249, 515,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,120,"897, 955, 664, 981, 649, 113, 974, 459, 893, 228,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,121,"433, 837, 553, 268, 926, 240, 102, 654, 459, 51,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,122,"686, 754, 806, 760, 493, 403, 415, 394, 687, 700,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,123,"946, 670, 656, 610, 738, 392, 760, 799, 887, 653,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,124,"978, 321, 576, 617, 626, 502, 894, 679, 243, 440,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,125,"680, 879, 194, 572, 640, 724, 926, 56, 204, 700,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,126,"707, 151, 457, 449, 797, 195, 791, 558, 945, 679,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,127,"297, 59, 87, 824, 713, 663, 412, 693, 342, 606,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,128,"134, 108, 571, 364, 631, 212, 174, 643, 304, 329,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,129,"343, 97, 430, 751, 497, 314, 983, 374, 822, 928,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,130,"140, 206, 73, 263, 980, 736, 876, 478, 430, 305,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,131,"170, 514, 364, 692, 829, 82, 855, 953, 676, 246,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,132,"369, 970, 294, 750, 807, 827, 150, 790, 288, 923,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,133,"804, 378, 215, 828, 592, 281, 565, 555, 710, 82,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,134,"896, 831, 547, 261, 524, 462, 293, 465, 502, 56,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,135,"661, 821, 976, 991, 658, 869, 905, 758, 745, 193,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,136,"768, 550, 608, 933, 378, 286, 215, 979, 792, 961,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,137,"61, 688, 793, 644, 986, 403, 106, 366, 905, 644,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,138,"372, 567, 466, 434, 645, 210, 389, 550, 919, 135,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,139,"780, 773, 635, 389, 707, 100, 626, 958, 165, 504,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,140,"920, 176, 193, 713, 857, 265, 203, 50, 668, 108,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,141,"645, 990, 626, 197, 510, 357, 358, 850, 858, 364,"
True,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,src/java/org/apache/commons/compress/bzip2/BZip2Constants.java,142,"936, 638"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons-sandbox//compress/src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,v 1.1 2003/12/02 20:43:04 dirkv Exp $"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,4,* $Date: 2003/12/02 20:43:04 $
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,10,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,11,* reserved.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,15,* are met:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,23,*    distribution.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,26,"*    any, must include the following acknowledgement:"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,29,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,30,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,39,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,61,package org.apache.commons.compress.bzip2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,63,import java.io.IOException;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,64,import java.io.InputStream;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,67,"* This package is based on the work done by Keiron Liddle, Aftex Software"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,68,* <keiron@aftexsw.com> to whom the Ant project is very grateful for his
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,69,* great code.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,73,* An input stream that decompresses from the BZip2 format (without the file
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,74,* header chars) to be read as any other stream.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,76,"* @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,78,public class CBZip2InputStream
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,79,extends InputStream
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,80,implements BZip2Constants
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,82,private static final int START_BLOCK_STATE = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,83,private static final int RAND_PART_A_STATE = 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,84,private static final int RAND_PART_B_STATE = 3;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,85,private static final int RAND_PART_C_STATE = 4;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,86,private static final int NO_RAND_PART_A_STATE = 5;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,87,private static final int NO_RAND_PART_B_STATE = 6;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,88,private static final int NO_RAND_PART_C_STATE = 7;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,90,private CRC m_crc = new CRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,91,private boolean[] m_inUse = new boolean[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,92,private char[] m_seqToUnseq = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,93,private char[] m_unseqToSeq = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,94,private char[] m_selector = new char[ MAX_SELECTORS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,95,private char[] m_selectorMtf = new char[ MAX_SELECTORS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,98,* freq table collected to save a pass over the data
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,99,* during decompression.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,101,private int[] m_unzftab = new int[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,103,private int[][] m_limit = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,104,private int[][] m_base = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,105,private int[][] m_perm = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,106,private int[] m_minLens = new int[ N_GROUPS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,108,private boolean m_streamEnd;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,109,private int m_currentChar = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,111,private int m_currentState = START_BLOCK_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,112,private int m_rNToGo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,113,private int m_rTPos;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,114,private int m_tPos;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,116,private int i2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,117,private int count;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,118,private int chPrev;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,119,private int ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,120,private int j2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,121,private char z;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,123,private boolean m_blockRandomised;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,126,* always: in the range 0 .. 9.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,127,* The current block size is 100000 * this number.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,129,private int m_blockSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,130,private int m_bsBuff;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,131,private int m_bsLive;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,133,private InputStream m_input;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,135,private int m_computedBlockCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,136,private int m_computedCombinedCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,139,"* index of the last char in the block, so"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,140,* the block size == last + 1.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,142,private int m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,143,private char[] m_ll8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,144,private int m_nInUse;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,147,* index in zptr[] of original string after sorting.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,149,private int m_origPtr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,151,private int m_storedBlockCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,152,private int m_storedCombinedCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,153,private int[] m_tt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,155,public CBZip2InputStream( final InputStream input )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,157,bsSetStream( input );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,158,initialize();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,159,initBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,160,setupBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,163,private static void badBlockHeader()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,165,cadvise();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,168,private static void blockOverrun()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,170,cadvise();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,173,private static void cadvise()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,175,"System.out.println( ""CRC Error"" );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,176,//throw new CCoruptionError();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,179,private static void compressedStreamEOF()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,181,cadvise();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,184,private static void crcError()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,186,cadvise();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,189,public int read()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,191,if( m_streamEnd )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,193,return -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,195,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,197,int retChar = m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,198,switch( m_currentState )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,200,case START_BLOCK_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,201,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,202,case RAND_PART_A_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,203,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,204,case RAND_PART_B_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,205,setupRandPartB();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,206,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,207,case RAND_PART_C_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,208,setupRandPartC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,209,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,210,case NO_RAND_PART_A_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,211,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,212,case NO_RAND_PART_B_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,213,setupNoRandPartB();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,214,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,215,case NO_RAND_PART_C_STATE:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,216,setupNoRandPartC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,217,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,218,default:
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,219,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,221,return retChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,225,private void setDecompressStructureSizes( int newSize100k )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,227,if( !( 0 <= newSize100k && newSize100k <= 9 && 0 <= m_blockSize100k
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,228,&& m_blockSize100k <= 9 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,230,"// throw new IOException(""Invalid block size"");"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,233,m_blockSize100k = newSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,235,if( newSize100k == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,237,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,240,int n = BASE_BLOCK_SIZE * newSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,241,m_ll8 = new char[ n ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,242,m_tt = new int[ n ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,245,private void setupBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,247,int[] cftab = new int[ 257 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,248,char ch;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,250,cftab[ 0 ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,251,for( int i = 1; i <= 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,253,cftab[ i ] = m_unzftab[ i - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,255,for( int i = 1; i <= 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,257,cftab[ i ] += cftab[ i - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,260,for( int i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,262,ch = m_ll8[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,263,m_tt[ cftab[ ch ] ] = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,264,cftab[ ch ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,266,cftab = null;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,268,m_tPos = m_tt[ m_origPtr ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,270,count = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,271,i2 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,272,ch2 = 256;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,274,* not a char and not EOF
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,276,if( m_blockRandomised )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,278,m_rNToGo = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,279,m_rTPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,280,setupRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,282,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,284,setupNoRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,288,private void setupNoRandPartA()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,290,if( i2 <= m_last )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,292,chPrev = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,293,ch2 = m_ll8[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,294,m_tPos = m_tt[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,295,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,297,m_currentChar = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,298,m_currentState = NO_RAND_PART_B_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,299,m_crc.updateCRC( ch2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,301,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,303,endBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,304,initBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,305,setupBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,309,private void setupNoRandPartB()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,311,if( ch2 != chPrev )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,313,m_currentState = NO_RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,314,count = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,315,setupNoRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,317,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,319,count++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,320,if( count >= 4 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,322,z = m_ll8[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,323,m_tPos = m_tt[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,324,m_currentState = NO_RAND_PART_C_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,325,j2 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,326,setupNoRandPartC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,328,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,330,m_currentState = NO_RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,331,setupNoRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,336,private void setupNoRandPartC()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,338,if( j2 < z )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,340,m_currentChar = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,341,m_crc.updateCRC( ch2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,342,j2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,344,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,346,m_currentState = NO_RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,347,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,348,count = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,349,setupNoRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,353,private void setupRandPartA()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,355,if( i2 <= m_last )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,357,chPrev = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,358,ch2 = m_ll8[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,359,m_tPos = m_tt[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,360,if( m_rNToGo == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,362,m_rNToGo = RAND_NUMS[ m_rTPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,363,m_rTPos++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,364,if( m_rTPos == 512 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,366,m_rTPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,369,m_rNToGo--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,370,ch2 ^= ( ( m_rNToGo == 1 ) ? 1 : 0 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,371,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,373,m_currentChar = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,374,m_currentState = RAND_PART_B_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,375,m_crc.updateCRC( ch2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,377,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,379,endBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,380,initBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,381,setupBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,385,private void setupRandPartB()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,387,if( ch2 != chPrev )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,389,m_currentState = RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,390,count = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,391,setupRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,393,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,395,count++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,396,if( count >= 4 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,398,z = m_ll8[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,399,m_tPos = m_tt[ m_tPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,400,if( m_rNToGo == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,402,m_rNToGo = RAND_NUMS[ m_rTPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,403,m_rTPos++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,404,if( m_rTPos == 512 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,406,m_rTPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,409,m_rNToGo--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,410,z ^= ( ( m_rNToGo == 1 ) ? 1 : 0 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,411,j2 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,412,m_currentState = RAND_PART_C_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,413,setupRandPartC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,415,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,417,m_currentState = RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,418,setupRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,423,private void setupRandPartC()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,425,if( j2 < z )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,427,m_currentChar = ch2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,428,m_crc.updateCRC( ch2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,429,j2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,431,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,433,m_currentState = RAND_PART_A_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,434,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,435,count = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,436,setupRandPartA();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,440,private void getAndMoveToFrontDecode()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,442,int nextSym;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,444,int limitLast = BASE_BLOCK_SIZE * m_blockSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,445,m_origPtr = readVariableSizedInt( 24 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,447,recvDecodingTables();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,448,int EOB = m_nInUse + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,449,int groupNo = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,450,int groupPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,453,* Setting up the unzftab entries here is not strictly
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,454,"* necessary, but it does save having to do it later"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,455,"* in a separate pass, and so saves a block's worth of"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,456,* cache misses.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,458,for( int i = 0; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,460,m_unzftab[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,463,final char[] yy = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,464,for( int i = 0; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,466,yy[ i ] = (char)i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,469,m_last = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,470,int zt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,471,int zn;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,472,int zvec;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,473,int zj;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,474,groupNo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,475,groupPos = G_SIZE - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,477,zt = m_selector[ groupNo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,478,zn = m_minLens[ zt ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,479,zvec = bsR( zn );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,480,while( zvec > m_limit[ zt ][ zn ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,482,zn++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,484,while( m_bsLive < 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,486,int zzi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,487,char thech = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,488,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,490,thech = (char)m_input.read();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,492,catch( IOException e )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,494,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,496,if( thech == -1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,498,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,500,zzi = thech;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,501,m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,502,m_bsLive += 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,505,zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,506,m_bsLive--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,508,zvec = ( zvec << 1 ) | zj;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,510,nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,512,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,514,if( nextSym == EOB )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,516,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,519,if( nextSym == RUNA || nextSym == RUNB )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,521,char ch;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,522,int s = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,523,int N = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,524,do
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,526,if( nextSym == RUNA )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,528,s = s + ( 0 + 1 ) * N;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,530,else// if( nextSym == RUNB )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,532,s = s + ( 1 + 1 ) * N;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,534,N = N * 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,536,if( groupPos == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,538,groupNo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,539,groupPos = G_SIZE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,541,groupPos--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,542,zt = m_selector[ groupNo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,543,zn = m_minLens[ zt ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,544,zvec = bsR( zn );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,545,while( zvec > m_limit[ zt ][ zn ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,547,zn++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,549,while( m_bsLive < 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,551,int zzi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,552,char thech = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,553,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,555,thech = (char)m_input.read();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,557,catch( IOException e )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,559,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,561,if( thech == -1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,563,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,565,zzi = thech;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,566,m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,567,m_bsLive += 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,570,zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,571,m_bsLive--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,572,zvec = ( zvec << 1 ) | zj;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,575,nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,577,} while( nextSym == RUNA || nextSym == RUNB );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,579,s++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,580,ch = m_seqToUnseq[ yy[ 0 ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,581,m_unzftab[ ch ] += s;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,583,while( s > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,585,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,586,m_ll8[ m_last ] = ch;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,587,s--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,590,if( m_last >= limitLast )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,592,blockOverrun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,594,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,596,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,598,char tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,599,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,600,if( m_last >= limitLast )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,602,blockOverrun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,605,tmp = yy[ nextSym - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,606,m_unzftab[ m_seqToUnseq[ tmp ] ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,607,m_ll8[ m_last ] = m_seqToUnseq[ tmp ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,610,"* This loop is hammered during decompression,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,611,* hence the unrolling.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,612,* for (j = nextSym-1; j > 0; j--) yy[j] = yy[j-1];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,614,int j = nextSym - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,615,for( ; j > 3; j -= 4 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,617,yy[ j ] = yy[ j - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,618,yy[ j - 1 ] = yy[ j - 2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,619,yy[ j - 2 ] = yy[ j - 3 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,620,yy[ j - 3 ] = yy[ j - 4 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,622,for( ; j > 0; j-- )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,624,yy[ j ] = yy[ j - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,627,yy[ 0 ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,629,if( groupPos == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,631,groupNo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,632,groupPos = G_SIZE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,634,groupPos--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,635,zt = m_selector[ groupNo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,636,zn = m_minLens[ zt ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,637,zvec = bsR( zn );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,638,while( zvec > m_limit[ zt ][ zn ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,640,zn++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,642,while( m_bsLive < 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,644,char ch = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,645,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,647,ch = (char)m_input.read();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,649,catch( IOException e )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,651,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,654,m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,655,m_bsLive += 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,658,zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,659,m_bsLive--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,661,zvec = ( zvec << 1 ) | zj;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,663,nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,665,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,670,private void bsFinishedWithStream()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,672,m_input = null;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,675,private int readVariableSizedInt( final int numBits )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,677,return bsR( numBits );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,680,private char readUnsignedChar()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,682,return (char)bsR( 8 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,685,private int readInt()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,687,int u = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,688,u = ( u << 8 ) | bsR( 8 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,689,u = ( u << 8 ) | bsR( 8 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,690,u = ( u << 8 ) | bsR( 8 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,691,u = ( u << 8 ) | bsR( 8 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,692,return u;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,695,private int bsR( final int n )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,697,while( m_bsLive < n )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,699,char ch = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,700,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,702,ch = (char)m_input.read();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,704,catch( final IOException ioe )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,706,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,709,if( ch == -1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,711,compressedStreamEOF();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,714,m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,715,m_bsLive += 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,718,final int result = ( m_bsBuff >> ( m_bsLive - n ) ) & ( ( 1 << n ) - 1 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,719,m_bsLive -= n;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,720,return result;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,723,private void bsSetStream( final InputStream input )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,725,m_input = input;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,726,m_bsLive = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,727,m_bsBuff = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,730,private void complete()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,732,m_storedCombinedCRC = readInt();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,733,if( m_storedCombinedCRC != m_computedCombinedCRC )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,735,crcError();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,738,bsFinishedWithStream();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,739,m_streamEnd = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,742,private void endBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,744,m_computedBlockCRC = m_crc.getFinalCRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,746,* A bad CRC is considered a fatal error.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,748,if( m_storedBlockCRC != m_computedBlockCRC )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,750,crcError();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,753,m_computedCombinedCRC = ( m_computedCombinedCRC << 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,754,| ( m_computedCombinedCRC >>> 31 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,755,m_computedCombinedCRC ^= m_computedBlockCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,758,"private void hbCreateDecodeTables( final int[] limit,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,759,"final int[] base,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,760,"final int[] perm,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,761,"final char[] length,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,762,"final int minLen,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,763,"final int maxLen,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,764,final int alphaSize )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,766,int pp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,767,for( int i = minLen; i <= maxLen; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,769,for( int j = 0; j < alphaSize; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,771,if( length[ j ] == i )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,773,perm[ pp ] = j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,774,pp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,779,for( int i = 0; i < MAX_CODE_LEN; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,781,base[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,784,for( int i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,786,base[ length[ i ] + 1 ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,789,for( int i = 1; i < MAX_CODE_LEN; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,791,base[ i ] += base[ i - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,794,for( int i = 0; i < MAX_CODE_LEN; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,796,limit[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,799,int vec = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,800,for( int i = minLen; i <= maxLen; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,802,vec += ( base[ i + 1 ] - base[ i ] );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,803,limit[ i ] = vec - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,804,vec <<= 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,807,for( int i = minLen + 1; i <= maxLen; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,809,base[ i ] = ( ( limit[ i - 1 ] + 1 ) << 1 ) - base[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,813,private void initBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,815,final char magic1 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,816,final char magic2 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,817,final char magic3 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,818,final char magic4 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,819,final char magic5 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,820,final char magic6 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,821,if( magic1 == 0x17 && magic2 == 0x72 && magic3 == 0x45 &&
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,822,magic4 == 0x38 && magic5 == 0x50 && magic6 == 0x90 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,824,complete();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,825,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,828,if( magic1 != 0x31 || magic2 != 0x41 || magic3 != 0x59 ||
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,829,magic4 != 0x26 || magic5 != 0x53 || magic6 != 0x59 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,831,badBlockHeader();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,832,m_streamEnd = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,833,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,836,m_storedBlockCRC = readInt();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,838,if( bsR( 1 ) == 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,840,m_blockRandomised = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,842,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,844,m_blockRandomised = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,847,//        currBlockNo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,848,getAndMoveToFrontDecode();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,850,m_crc.initialiseCRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,851,m_currentState = START_BLOCK_STATE;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,854,private void initialize()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,856,final char magic3 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,857,final char magic4 = readUnsignedChar();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,858,if( magic3 != 'h' || magic4 < '1' || magic4 > '9' )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,860,bsFinishedWithStream();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,861,m_streamEnd = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,862,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,865,setDecompressStructureSizes( magic4 - '0' );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,866,m_computedCombinedCRC = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,869,private void makeMaps()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,871,m_nInUse = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,872,for( int i = 0; i < 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,874,if( m_inUse[ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,876,m_seqToUnseq[ m_nInUse ] = (char)i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,877,m_unseqToSeq[ i ] = (char)m_nInUse;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,878,m_nInUse++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,883,private void recvDecodingTables()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,885,buildInUseTable();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,886,makeMaps();
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,887,final int alphaSize = m_nInUse + 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,890,* Now the selectors
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,892,final int groupCount = bsR( 3 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,893,final int selectorCount = bsR( 15 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,894,for( int i = 0; i < selectorCount; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,896,int run = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,897,while( bsR( 1 ) == 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,899,run++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,901,m_selectorMtf[ i ] = (char)run;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,905,* Undo the MTF values for the selectors.
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,907,final char[] pos = new char[ N_GROUPS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,908,for( char v = 0; v < groupCount; v++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,910,pos[ v ] = v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,913,for( int i = 0; i < selectorCount; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,915,int v = m_selectorMtf[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,916,final char tmp = pos[ v ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,917,while( v > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,919,pos[ v ] = pos[ v - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,920,v--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,922,pos[ 0 ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,923,m_selector[ i ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,926,final char[][] len = new char[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,928,* Now the coding tables
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,930,for( int i = 0; i < groupCount; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,932,int curr = bsR( 5 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,933,for( int j = 0; j < alphaSize; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,935,while( bsR( 1 ) == 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,937,if( bsR( 1 ) == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,939,curr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,941,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,943,curr--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,946,len[ i ][ j ] = (char)curr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,951,* Create the Huffman decoding tables
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,953,for( int k = 0; k < groupCount; k++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,955,int minLen = 32;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,956,int maxLen = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,957,for( int i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,959,if( len[ k ][ i ] > maxLen )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,961,maxLen = len[ k ][ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,963,if( len[ k ][ i ] < minLen )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,965,minLen = len[ k ][ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,968,"hbCreateDecodeTables( m_limit[ k ], m_base[ k ], m_perm[ k ], len[ k ], minLen,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,969,"maxLen, alphaSize );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,970,m_minLens[ k ] = minLen;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,974,private void buildInUseTable()
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,976,final boolean[] inUse16 = new boolean[ 16 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,979,* Receive the mapping table
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,981,for( int i = 0; i < 16; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,983,if( bsR( 1 ) == 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,985,inUse16[ i ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,987,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,989,inUse16[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,993,for( int i = 0; i < 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,995,m_inUse[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,998,for( int i = 0; i < 16; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,1000,if( inUse16[ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,1002,for( int j = 0; j < 16; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,1004,if( bsR( 1 ) == 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2InputStream.java,1006,m_inUse[ i * 16 + j ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons-sandbox//compress/src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,v 1.1 2003/12/02 20:43:04 dirkv Exp $"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,4,* $Date: 2003/12/02 20:43:04 $
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,10,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,11,* reserved.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,15,* are met:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,23,*    distribution.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,26,"*    any, must include the following acknowledgement:"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,29,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,30,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,39,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,61,package org.apache.commons.compress.bzip2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,63,import java.io.IOException;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,64,import java.io.OutputStream;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,67,"* This package is based on the work done by Keiron Liddle, Aftex Software"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,68,* <keiron@aftexsw.com> to whom the Ant project is very grateful for his
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,69,* great code.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,73,* An output stream that compresses into the BZip2 format (without the file
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,74,* header chars) into another stream. TODO: Update to BZip2 1.0.1
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,76,"* @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,78,public class CBZip2OutputStream
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,79,extends OutputStream
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,80,implements BZip2Constants
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,82,private static final int LOWER_BYTE_MASK = 0x000000ff;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,83,private static final int UPPER_BYTE_MASK = 0xffffff00;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,84,private static final int SETMASK = ( 1 << 21 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,85,private static final int CLEARMASK = ( ~SETMASK );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,86,private static final int GREATER_ICOST = 15;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,87,private static final int LESSER_ICOST = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,88,private static final int SMALL_THRESH = 20;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,89,private static final int DEPTH_THRESH = 10;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,92,* If you are ever unlucky/improbable enough
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,93,"* to get a stack overflow whilst sorting,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,94,* increase the following constant and try
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,95,* again.  In practice I have never seen the
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,96,"* stack go above 27 elems, so the following"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,97,* limit seems very generous.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,99,private static final int QSORT_STACK_SIZE = 1000;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,101,private CRC m_crc = new CRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,103,private boolean[] m_inUse = new boolean[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,105,private char[] m_seqToUnseq = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,106,private char[] m_unseqToSeq = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,108,private char[] m_selector = new char[ MAX_SELECTORS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,109,private char[] m_selectorMtf = new char[ MAX_SELECTORS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,111,private int[] m_mtfFreq = new int[ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,113,private int m_currentChar = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,114,private int m_runLength;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,116,private boolean m_closed;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,119,* Knuth's increments seem to work better
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,120,* than Incerpi-Sedgewick here.  Possibly
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,121,* because the number of elems to sort is
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,122,"* usually small, typically <= 20."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,124,private int[] m_incs = new int[]
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,126,"1, 4, 13, 40, 121, 364, 1093, 3280,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,127,"9841, 29524, 88573, 265720,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,128,"797161, 2391484"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,131,private boolean m_blockRandomised;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,134,* always: in the range 0 .. 9.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,135,* The current block size is 100000 * this number.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,137,private int m_blockSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,138,private int m_bsBuff;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,139,private int m_bsLive;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,142,"* index of the last char in the block, so"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,143,* the block size == last + 1.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,145,private int m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,148,* index in zptr[] of original string after sorting.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,150,private int m_origPtr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,152,private int m_allowableBlockSize;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,154,private char[] m_block;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,156,private int m_blockCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,157,private int m_combinedCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,159,private OutputStream m_bsStream;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,160,private boolean m_firstAttempt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,161,private int[] m_ftab;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,162,private int m_nInUse;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,164,private int m_nMTF;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,165,private int[] m_quadrant;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,166,private short[] m_szptr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,167,private int m_workDone;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,170,* Used when sorting.  If too many long comparisons
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,171,"* happen, we stop sorting, randomise the block"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,172,"* slightly, and try again."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,174,private int m_workFactor;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,175,private int m_workLimit;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,176,private int[] m_zptr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,178,public CBZip2OutputStream( final OutputStream output )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,179,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,181,"this( output, 9 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,184,"public CBZip2OutputStream( final OutputStream output, final int blockSize )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,185,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,187,bsSetStream( output );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,188,m_workFactor = 50;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,190,int outBlockSize = blockSize;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,191,if( outBlockSize > 9 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,193,outBlockSize = 9;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,195,if( outBlockSize < 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,197,outBlockSize = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,199,m_blockSize100k = outBlockSize;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,200,allocateCompressStructures();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,201,initialize();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,202,initBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,205,"private static void hbMakeCodeLengths( char[] len, int[] freq,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,206,"int alphaSize, int maxLen )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,209,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,210,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,212,int nNodes;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,214,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,215,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,217,int nHeap;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,219,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,220,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,222,int n1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,224,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,225,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,227,int n2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,229,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,230,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,232,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,234,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,235,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,237,int j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,239,* Nodes and heap entries run from 1.  Entry 0
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,240,* for both the heap and nodes is a sentinel.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,242,int k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,243,boolean tooLong;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,245,int[] heap = new int[ MAX_ALPHA_SIZE + 2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,246,int[] weights = new int[ MAX_ALPHA_SIZE * 2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,247,int[] parent = new int[ MAX_ALPHA_SIZE * 2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,249,for( i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,251,weights[ i + 1 ] = ( freq[ i ] == 0 ? 1 : freq[ i ] ) << 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,254,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,256,nNodes = alphaSize;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,257,nHeap = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,259,heap[ 0 ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,260,weights[ 0 ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,261,parent[ 0 ] = -2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,263,for( i = 1; i <= alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,265,parent[ i ] = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,266,nHeap++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,267,heap[ nHeap ] = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,269,int zz;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,270,int tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,271,zz = nHeap;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,272,tmp = heap[ zz ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,273,while( weights[ tmp ] < weights[ heap[ zz >> 1 ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,275,heap[ zz ] = heap[ zz >> 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,276,zz >>= 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,278,heap[ zz ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,281,if( !( nHeap < ( MAX_ALPHA_SIZE + 2 ) ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,283,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,286,while( nHeap > 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,288,n1 = heap[ 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,289,heap[ 1 ] = heap[ nHeap ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,290,nHeap--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,292,int zz = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,293,int yy = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,294,int tmp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,295,zz = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,296,tmp = heap[ zz ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,297,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,299,yy = zz << 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,300,if( yy > nHeap )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,302,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,304,if( yy < nHeap &&
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,305,weights[ heap[ yy + 1 ] ] < weights[ heap[ yy ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,307,yy++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,309,if( weights[ tmp ] < weights[ heap[ yy ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,311,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,313,heap[ zz ] = heap[ yy ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,314,zz = yy;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,316,heap[ zz ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,318,n2 = heap[ 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,319,heap[ 1 ] = heap[ nHeap ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,320,nHeap--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,322,int zz = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,323,int yy = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,324,int tmp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,325,zz = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,326,tmp = heap[ zz ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,327,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,329,yy = zz << 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,330,if( yy > nHeap )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,332,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,334,if( yy < nHeap &&
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,335,weights[ heap[ yy + 1 ] ] < weights[ heap[ yy ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,337,yy++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,339,if( weights[ tmp ] < weights[ heap[ yy ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,341,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,343,heap[ zz ] = heap[ yy ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,344,zz = yy;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,346,heap[ zz ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,348,nNodes++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,349,parent[ n1 ] = nNodes;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,350,parent[ n2 ] = nNodes;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,352,final int v1 = weights[ n1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,353,final int v2 = weights[ n2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,354,"final int weight = calculateWeight( v1, v2 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,355,weights[ nNodes ] = weight;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,357,parent[ nNodes ] = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,358,nHeap++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,359,heap[ nHeap ] = nNodes;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,361,int zz = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,362,int tmp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,363,zz = nHeap;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,364,tmp = heap[ zz ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,365,while( weights[ tmp ] < weights[ heap[ zz >> 1 ] ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,367,heap[ zz ] = heap[ zz >> 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,368,zz >>= 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,370,heap[ zz ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,373,if( !( nNodes < ( MAX_ALPHA_SIZE * 2 ) ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,375,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,378,tooLong = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,379,for( i = 1; i <= alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,381,j = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,382,k = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,383,while( parent[ k ] >= 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,385,k = parent[ k ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,386,j++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,388,len[ i - 1 ] = (char)j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,389,if( j > maxLen )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,391,tooLong = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,395,if( !tooLong )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,397,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,400,for( i = 1; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,402,j = weights[ i ] >> 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,403,j = 1 + ( j / 2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,404,weights[ i ] = j << 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,409,"private static int calculateWeight( final int v1, final int v2 )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,411,final int upper = ( v1 & UPPER_BYTE_MASK ) + ( v2 & UPPER_BYTE_MASK );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,412,final int v1Lower = ( v1 & LOWER_BYTE_MASK );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,413,final int v2Lower = ( v2 & LOWER_BYTE_MASK );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,414,final int nnnn = ( v1Lower > v2Lower ) ? v1Lower : v2Lower;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,415,return upper | ( 1 + nnnn );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,418,private static void panic()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,420,"System.out.println( ""panic"" );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,421,//throw new CError();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,424,public void close()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,425,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,427,if( m_closed )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,429,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,432,if( m_runLength > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,434,writeRun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,436,m_currentChar = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,437,endBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,438,endCompression();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,439,m_closed = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,440,super.close();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,441,m_bsStream.close();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,444,public void finalize()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,445,throws Throwable
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,447,close();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,450,public void flush()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,451,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,453,super.flush();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,454,m_bsStream.flush();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,458,"* modified by Oliver Merkel, 010128"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,460,* @param bv Description of Parameter
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,461,* @exception java.io.IOException Description of Exception
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,463,public void write( int bv )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,464,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,466,int b = ( 256 + bv ) % 256;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,467,if( m_currentChar != -1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,469,if( m_currentChar == b )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,471,m_runLength++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,472,if( m_runLength > 254 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,474,writeRun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,475,m_currentChar = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,476,m_runLength = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,479,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,481,writeRun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,482,m_runLength = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,483,m_currentChar = b;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,486,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,488,m_currentChar = b;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,489,m_runLength++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,493,private void allocateCompressStructures()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,495,int n = BASE_BLOCK_SIZE * m_blockSize100k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,496,m_block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,497,m_quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,498,m_zptr = new int[ n ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,499,m_ftab = new int[ 65537 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,501,if( m_block == null || m_quadrant == null || m_zptr == null
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,502,|| m_ftab == null )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,504,//int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,505,"//compressOutOfMemory ( totalDraw, n );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,509,* The back end needs a place to store the MTF values
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,510,* whilst it calculates the coding tables.  We could
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,511,"* put them in the zptr array.  However, these values"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,512,"* will fit in a short, so we overlay szptr at the"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,513,"* start of zptr, in the hope of reducing the number"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,514,* of cache misses induced by the multiple traversals
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,515,* of the MTF values when calculating coding tables.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,516,* Seems to improve compression speed by about 1%.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,518,//    szptr = zptr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,520,m_szptr = new short[ 2 * n ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,523,private void bsFinishedWithStream()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,524,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,526,while( m_bsLive > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,528,int ch = ( m_bsBuff >> 24 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,529,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,531,m_bsStream.write( ch );// write 8-bit
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,533,catch( IOException e )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,535,throw e;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,537,m_bsBuff <<= 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,538,m_bsLive -= 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,542,"private void bsPutIntVS( int numBits, int c )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,543,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,545,"bsW( numBits, c );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,548,private void bsPutUChar( int c )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,549,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,551,"bsW( 8, c );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,554,private void bsPutint( int u )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,555,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,557,"bsW( 8, ( u >> 24 ) & 0xff );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,558,"bsW( 8, ( u >> 16 ) & 0xff );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,559,"bsW( 8, ( u >> 8 ) & 0xff );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,560,"bsW( 8, u & 0xff );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,563,private void bsSetStream( OutputStream f )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,565,m_bsStream = f;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,566,m_bsLive = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,567,m_bsBuff = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,570,"private void bsW( int n, int v )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,571,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,573,while( m_bsLive >= 8 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,575,int ch = ( m_bsBuff >> 24 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,576,try
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,578,m_bsStream.write( ch );// write 8-bit
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,580,catch( IOException e )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,582,throw e;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,584,m_bsBuff <<= 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,585,m_bsLive -= 8;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,587,m_bsBuff |= ( v << ( 32 - m_bsLive - n ) );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,588,m_bsLive += n;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,591,private void doReversibleTransformation()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,593,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,595,m_workLimit = m_workFactor * m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,596,m_workDone = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,597,m_blockRandomised = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,598,m_firstAttempt = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,600,mainSort();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,602,if( m_workDone > m_workLimit && m_firstAttempt )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,604,randomiseBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,605,m_workLimit = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,606,m_workDone = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,607,m_blockRandomised = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,608,m_firstAttempt = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,609,mainSort();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,612,m_origPtr = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,613,for( i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,615,if( m_zptr[ i ] == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,617,m_origPtr = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,618,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,623,if( m_origPtr == -1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,625,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,629,private void endBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,630,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,632,m_blockCRC = m_crc.getFinalCRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,633,m_combinedCRC = ( m_combinedCRC << 1 ) | ( m_combinedCRC >>> 31 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,634,m_combinedCRC ^= m_blockCRC;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,637,* sort the block and establish posn of original string
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,639,doReversibleTransformation();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,642,"* A 6-byte block header, the value chosen arbitrarily"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,643,* as 0x314159265359 :-).  A 32 bit value does not really
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,644,* give a strong enough guarantee that the value will not
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,645,* appear by chance in the compressed datastream.  Worst-case
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,646,"* probability of this event, for a 900k block, is about"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,647,"* 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,648,* For a compressed file of size 100Gb -- about 100000 blocks --
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,649,* only a 48-bit marker will do.  NB: normal compression/
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,650,* decompression do *not* rely on these statistical properties.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,651,* They are only important when trying to recover blocks from
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,652,* damaged files.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,654,bsPutUChar( 0x31 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,655,bsPutUChar( 0x41 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,656,bsPutUChar( 0x59 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,657,bsPutUChar( 0x26 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,658,bsPutUChar( 0x53 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,659,bsPutUChar( 0x59 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,662,"* Now the block's CRC, so it is in a known place."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,664,bsPutint( m_blockCRC );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,667,* Now a single bit indicating randomisation.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,669,if( m_blockRandomised )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,671,"bsW( 1, 1 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,673,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,675,"bsW( 1, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,679,"* Finally, block's contents proper."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,681,moveToFrontCodeAndSend();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,684,private void endCompression()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,685,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,688,"* Now another magic 48-bit number, 0x177245385090, to"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,689,"* indicate the end of the last block.  (sqrt(pi), if"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,690,"* you want to know.  I did want to use e, but it contains"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,691,* too much repetition -- 27 18 28 18 28 46 -- for me
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,692,* to feel statistically comfortable.  Call me paranoid.)
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,694,bsPutUChar( 0x17 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,695,bsPutUChar( 0x72 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,696,bsPutUChar( 0x45 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,697,bsPutUChar( 0x38 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,698,bsPutUChar( 0x50 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,699,bsPutUChar( 0x90 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,701,bsPutint( m_combinedCRC );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,703,bsFinishedWithStream();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,706,"private boolean fullGtU( int i1, int i2 )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,708,int k;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,709,char c1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,710,char c2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,711,int s1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,712,int s2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,714,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,715,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,716,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,718,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,720,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,721,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,723,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,724,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,725,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,727,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,729,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,730,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,732,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,733,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,734,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,736,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,738,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,739,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,741,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,742,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,743,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,745,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,747,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,748,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,750,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,751,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,752,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,754,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,756,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,757,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,759,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,760,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,761,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,763,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,765,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,766,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,768,k = m_last + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,770,do
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,772,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,773,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,774,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,776,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,778,s1 = m_quadrant[ i1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,779,s2 = m_quadrant[ i2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,780,if( s1 != s2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,782,return ( s1 > s2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,784,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,785,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,787,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,788,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,789,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,791,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,793,s1 = m_quadrant[ i1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,794,s2 = m_quadrant[ i2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,795,if( s1 != s2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,797,return ( s1 > s2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,799,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,800,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,802,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,803,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,804,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,806,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,808,s1 = m_quadrant[ i1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,809,s2 = m_quadrant[ i2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,810,if( s1 != s2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,812,return ( s1 > s2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,814,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,815,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,817,c1 = m_block[ i1 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,818,c2 = m_block[ i2 + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,819,if( c1 != c2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,821,return ( c1 > c2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,823,s1 = m_quadrant[ i1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,824,s2 = m_quadrant[ i2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,825,if( s1 != s2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,827,return ( s1 > s2 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,829,i1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,830,i2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,832,if( i1 > m_last )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,834,i1 -= m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,835,i1--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,838,if( i2 > m_last )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,840,i2 -= m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,841,i2--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,845,k -= 4;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,846,m_workDone++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,847,} while( k >= 0 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,849,return false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,852,private void generateMTFValues()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,854,char[] yy = new char[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,855,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,856,int j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,857,char tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,858,char tmp2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,859,int zPend;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,860,int wr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,861,int EOB;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,863,makeMaps();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,864,EOB = m_nInUse + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,866,for( i = 0; i <= EOB; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,868,m_mtfFreq[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,871,wr = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,872,zPend = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,873,for( i = 0; i < m_nInUse; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,875,yy[ i ] = (char)i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,878,for( i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,880,char ll_i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,882,ll_i = m_unseqToSeq[ m_block[ m_zptr[ i ] ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,884,j = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,885,tmp = yy[ j ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,886,while( ll_i != tmp )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,888,j++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,889,tmp2 = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,890,tmp = yy[ j ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,891,yy[ j ] = tmp2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,894,yy[ 0 ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,896,if( j == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,898,zPend++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,900,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,902,if( zPend > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,904,zPend--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,905,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,907,switch( zPend % 2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,909,case 0:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,910,m_szptr[ wr ] = (short)RUNA;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,911,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,912,m_mtfFreq[ RUNA ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,913,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,914,case 1:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,915,m_szptr[ wr ] = (short)RUNB;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,916,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,917,m_mtfFreq[ RUNB ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,918,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,921,if( zPend < 2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,923,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,925,zPend = ( zPend - 2 ) / 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,928,zPend = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,930,m_szptr[ wr ] = (short)( j + 1 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,931,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,932,m_mtfFreq[ j + 1 ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,936,if( zPend > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,938,zPend--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,939,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,941,switch( zPend % 2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,943,case 0:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,944,m_szptr[ wr ] = (short)RUNA;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,945,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,946,m_mtfFreq[ RUNA ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,947,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,948,case 1:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,949,m_szptr[ wr ] = (short)RUNB;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,950,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,951,m_mtfFreq[ RUNB ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,952,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,954,if( zPend < 2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,956,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,958,zPend = ( zPend - 2 ) / 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,962,m_szptr[ wr ] = (short)EOB;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,963,wr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,964,m_mtfFreq[ EOB ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,966,m_nMTF = wr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,969,"private void hbAssignCodes( int[] code, char[] length, int minLen,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,970,"int maxLen, int alphaSize )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,972,int n;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,973,int vec;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,974,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,976,vec = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,977,for( n = minLen; n <= maxLen; n++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,979,for( i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,981,if( length[ i ] == n )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,983,code[ i ] = vec;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,984,vec++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,988,vec <<= 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,992,private void initBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,994,//        blockNo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,995,m_crc.initialiseCRC();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,996,m_last = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,997,//        ch = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,999,for( int i = 0; i < 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1001,m_inUse[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1005,* 20 is just a paranoia constant
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1007,m_allowableBlockSize = BASE_BLOCK_SIZE * m_blockSize100k - 20;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1010,private void initialize()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1011,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1014,"* Write `magic' bytes h indicating file-format == huffmanised,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1015,* followed by a digit indicating blockSize100k.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1017,bsPutUChar( 'h' );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1018,bsPutUChar( '0' + m_blockSize100k );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1020,m_combinedCRC = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1023,private void mainSort()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1025,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1026,int j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1027,int ss;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1028,int sb;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1029,int[] runningOrder = new int[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1030,int[] copy = new int[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1031,boolean[] bigDone = new boolean[ 256 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1032,int c1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1033,int c2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1036,"* In the various block-sized structures, live data runs"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1037,"* from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1038,* set up the overshoot area for block.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1040,"//   if (verbosity >= 4) fprintf ( stderr, ""        sort initialise ...\n"" );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1041,for( i = 0; i < NUM_OVERSHOOT_BYTES; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1043,m_block[ m_last + i + 2 ] = m_block[ ( i % ( m_last + 1 ) ) + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1045,for( i = 0; i <= m_last + NUM_OVERSHOOT_BYTES; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1047,m_quadrant[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1050,m_block[ 0 ] = m_block[ m_last + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1052,if( m_last < 4000 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1055,"* Use simpleSort(), since the full sorting mechanism"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1056,* has quite a large constant overhead.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1058,for( i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1060,m_zptr[ i ] = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1062,m_firstAttempt = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1063,m_workDone = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1064,m_workLimit = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1065,"simpleSort( 0, m_last, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1067,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1069,for( i = 0; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1071,bigDone[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1074,for( i = 0; i <= 65536; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1076,m_ftab[ i ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1079,c1 = m_block[ 0 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1080,for( i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1082,c2 = m_block[ i + 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1083,m_ftab[ ( c1 << 8 ) + c2 ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1084,c1 = c2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1087,for( i = 1; i <= 65536; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1089,m_ftab[ i ] += m_ftab[ i - 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1092,c1 = m_block[ 1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1093,for( i = 0; i < m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1095,c2 = m_block[ i + 2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1096,j = ( c1 << 8 ) + c2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1097,c1 = c2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1098,m_ftab[ j ]--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1099,m_zptr[ m_ftab[ j ] ] = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1102,j = ( ( m_block[ m_last + 1 ] ) << 8 ) + ( m_block[ 1 ] );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1103,m_ftab[ j ]--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1104,m_zptr[ m_ftab[ j ] ] = m_last;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1107,* Now ftab contains the first loc of every small bucket.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1108,"* Calculate the running order, from smallest to largest"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1109,* big bucket.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1111,for( i = 0; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1113,runningOrder[ i ] = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1116,int vv;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1117,int h = 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1118,do
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1120,h = 3 * h + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1121,} while( h <= 256 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1122,do
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1124,h = h / 3;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1125,for( i = h; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1127,vv = runningOrder[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1128,j = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1129,while( ( m_ftab[ ( ( runningOrder[ j - h ] ) + 1 ) << 8 ]
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1130,- m_ftab[ ( runningOrder[ j - h ] ) << 8 ] ) >
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1131,( m_ftab[ ( ( vv ) + 1 ) << 8 ] - m_ftab[ ( vv ) << 8 ] ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1133,runningOrder[ j ] = runningOrder[ j - h ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1134,j = j - h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1135,if( j <= ( h - 1 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1137,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1140,runningOrder[ j ] = vv;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1142,} while( h != 1 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1146,* The main sorting loop.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1148,for( i = 0; i <= 255; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1152,"* Process big buckets, starting with the least full."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1154,ss = runningOrder[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1157,* Complete the big bucket [ss] by quicksorting
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1158,"* any unsorted small buckets [ss, j].  Hopefully"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1159,* previous pointer-scanning phases have already
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1160,"* completed many of the small buckets [ss, j], so"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1161,* we don't have to sort them at all.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1163,for( j = 0; j <= 255; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1165,sb = ( ss << 8 ) + j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1166,if( !( ( m_ftab[ sb ] & SETMASK ) == SETMASK ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1168,int lo = m_ftab[ sb ] & CLEARMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1169,int hi = ( m_ftab[ sb + 1 ] & CLEARMASK ) - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1170,if( hi > lo )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1172,"qSort3( lo, hi, 2 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1173,if( m_workDone > m_workLimit && m_firstAttempt )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1175,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1178,m_ftab[ sb ] |= SETMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1183,"* The ss big bucket is now done.  Record this fact,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1184,* and update the quadrant descriptors.  Remember to
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1185,"* update quadrants in the overshoot area too, if"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1186,"* necessary.  The ""if (i < 255)"" test merely skips"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1187,"* this updating for the last bucket processed, since"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1188,* updating for the last bucket is pointless.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1190,bigDone[ ss ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1192,if( i < 255 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1194,int bbStart = m_ftab[ ss << 8 ] & CLEARMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1195,int bbSize = ( m_ftab[ ( ss + 1 ) << 8 ] & CLEARMASK ) - bbStart;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1196,int shifts = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1198,while( ( bbSize >> shifts ) > 65534 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1200,shifts++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1203,for( j = 0; j < bbSize; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1205,int a2update = m_zptr[ bbStart + j ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1206,int qVal = ( j >> shifts );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1207,m_quadrant[ a2update ] = qVal;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1208,if( a2update < NUM_OVERSHOOT_BYTES )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1210,m_quadrant[ a2update + m_last + 1 ] = qVal;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1214,if( !( ( ( bbSize - 1 ) >> shifts ) <= 65535 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1216,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1221,* Now scan this big bucket so as to synthesise the
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1222,"* sorted order for small buckets [t, ss] for all t != ss."
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1224,for( j = 0; j <= 255; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1226,copy[ j ] = m_ftab[ ( j << 8 ) + ss ] & CLEARMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1229,for( j = m_ftab[ ss << 8 ] & CLEARMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1230,j < ( m_ftab[ ( ss + 1 ) << 8 ] & CLEARMASK ); j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1232,c1 = m_block[ m_zptr[ j ] ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1233,if( !bigDone[ c1 ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1235,m_zptr[ copy[ c1 ] ] = m_zptr[ j ] == 0 ? m_last : m_zptr[ j ] - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1236,copy[ c1 ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1240,for( j = 0; j <= 255; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1242,m_ftab[ ( j << 8 ) + ss ] |= SETMASK;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1248,private void makeMaps()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1250,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1251,m_nInUse = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1252,for( i = 0; i < 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1254,if( m_inUse[ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1256,m_seqToUnseq[ m_nInUse ] = (char)i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1257,m_unseqToSeq[ i ] = (char)m_nInUse;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1258,m_nInUse++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1263,"private char med3( char a, char b, char c )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1265,char t;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1266,if( a > b )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1268,t = a;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1269,a = b;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1270,b = t;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1272,if( b > c )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1274,t = b;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1275,b = c;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1276,c = t;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1278,if( a > b )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1280,b = a;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1282,return b;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1285,private void moveToFrontCodeAndSend()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1286,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1288,"bsPutIntVS( 24, m_origPtr );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1289,generateMTFValues();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1290,sendMTFValues();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1293,"private void qSort3( int loSt, int hiSt, int dSt )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1295,int unLo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1296,int unHi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1297,int ltLo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1298,int gtHi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1299,int med;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1300,int n;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1301,int m;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1302,int sp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1303,int lo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1304,int hi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1305,int d;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1306,StackElem[] stack = new StackElem[ QSORT_STACK_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1307,for( int count = 0; count < QSORT_STACK_SIZE; count++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1309,stack[ count ] = new StackElem();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1312,sp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1314,stack[ sp ].m_ll = loSt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1315,stack[ sp ].m_hh = hiSt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1316,stack[ sp ].m_dd = dSt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1317,sp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1319,while( sp > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1321,if( sp >= QSORT_STACK_SIZE )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1323,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1326,sp--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1327,lo = stack[ sp ].m_ll;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1328,hi = stack[ sp ].m_hh;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1329,d = stack[ sp ].m_dd;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1331,if( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1333,"simpleSort( lo, hi, d );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1334,if( m_workDone > m_workLimit && m_firstAttempt )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1336,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1338,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1341,"med = med3( m_block[ m_zptr[ lo ] + d + 1 ],"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1342,"m_block[ m_zptr[ hi ] + d + 1 ],"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1343,m_block[ m_zptr[ ( lo + hi ) >> 1 ] + d + 1 ] );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1345,unLo = lo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1346,ltLo = lo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1347,unHi = hi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1348,gtHi = hi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1350,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1352,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1354,if( unLo > unHi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1356,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1358,n = m_block[ m_zptr[ unLo ] + d + 1 ] - med;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1359,if( n == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1361,int temp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1362,temp = m_zptr[ unLo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1363,m_zptr[ unLo ] = m_zptr[ ltLo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1364,m_zptr[ ltLo ] = temp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1365,ltLo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1366,unLo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1367,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1370,if( n > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1372,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1374,unLo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1376,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1378,if( unLo > unHi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1380,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1382,n = m_block[ m_zptr[ unHi ] + d + 1 ] - med;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1383,if( n == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1385,int temp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1386,temp = m_zptr[ unHi ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1387,m_zptr[ unHi ] = m_zptr[ gtHi ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1388,m_zptr[ gtHi ] = temp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1389,gtHi--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1390,unHi--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1391,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1394,if( n < 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1396,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1398,unHi--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1400,if( unLo > unHi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1402,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1404,int temp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1405,temp = m_zptr[ unLo ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1406,m_zptr[ unLo ] = m_zptr[ unHi ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1407,m_zptr[ unHi ] = temp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1408,unLo++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1409,unHi--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1412,if( gtHi < ltLo )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1414,stack[ sp ].m_ll = lo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1415,stack[ sp ].m_hh = hi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1416,stack[ sp ].m_dd = d + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1417,sp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1418,continue;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1421,n = ( ( ltLo - lo ) < ( unLo - ltLo ) ) ? ( ltLo - lo ) : ( unLo - ltLo );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1422,"vswap( lo, unLo - n, n );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1423,m = ( ( hi - gtHi ) < ( gtHi - unHi ) ) ? ( hi - gtHi ) : ( gtHi - unHi );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1424,"vswap( unLo, hi - m + 1, m );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1426,n = lo + unLo - ltLo - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1427,m = hi - ( gtHi - unHi ) + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1429,stack[ sp ].m_ll = lo;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1430,stack[ sp ].m_hh = n;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1431,stack[ sp ].m_dd = d;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1432,sp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1434,stack[ sp ].m_ll = n + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1435,stack[ sp ].m_hh = m - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1436,stack[ sp ].m_dd = d + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1437,sp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1439,stack[ sp ].m_ll = m;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1440,stack[ sp ].m_hh = hi;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1441,stack[ sp ].m_dd = d;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1442,sp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1446,private void randomiseBlock()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1448,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1449,int rNToGo = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1450,int rTPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1451,for( i = 0; i < 256; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1453,m_inUse[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1456,for( i = 0; i <= m_last; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1458,if( rNToGo == 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1460,rNToGo = (char)RAND_NUMS[ rTPos ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1461,rTPos++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1462,if( rTPos == 512 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1464,rTPos = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1467,rNToGo--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1468,m_block[ i + 1 ] ^= ( ( rNToGo == 1 ) ? 1 : 0 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1469,// handle 16 bit signed numbers
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1470,m_block[ i + 1 ] &= 0xFF;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1472,m_inUse[ m_block[ i + 1 ] ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1476,private void sendMTFValues()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1477,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1479,char[][] len = new char[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1481,int v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1483,int t;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1485,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1487,int j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1489,int gs;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1491,int ge;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1493,int bt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1495,int bc;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1497,int iter;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1498,int nSelectors = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1499,int alphaSize;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1500,int minLen;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1501,int maxLen;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1502,int selCtr;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1503,int nGroups;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1505,alphaSize = m_nInUse + 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1506,for( t = 0; t < N_GROUPS; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1508,for( v = 0; v < alphaSize; v++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1510,len[ t ][ v ] = (char)GREATER_ICOST;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1515,* Decide how many coding tables to use
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1517,if( m_nMTF <= 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1519,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1522,if( m_nMTF < 200 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1524,nGroups = 2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1526,else if( m_nMTF < 600 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1528,nGroups = 3;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1530,else if( m_nMTF < 1200 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1532,nGroups = 4;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1534,else if( m_nMTF < 2400 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1536,nGroups = 5;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1538,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1540,nGroups = 6;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1544,* Generate an initial set of coding tables
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1546,int nPart;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1547,int remF;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1548,int tFreq;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1549,int aFreq;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1551,nPart = nGroups;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1552,remF = m_nMTF;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1553,gs = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1554,while( nPart > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1556,tFreq = remF / nPart;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1557,ge = gs - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1558,aFreq = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1559,while( aFreq < tFreq && ge < alphaSize - 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1561,ge++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1562,aFreq += m_mtfFreq[ ge ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1565,if( ge > gs && nPart != nGroups && nPart != 1
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1566,&& ( ( nGroups - nPart ) % 2 == 1 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1568,aFreq -= m_mtfFreq[ ge ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1569,ge--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1572,for( v = 0; v < alphaSize; v++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1574,if( v >= gs && v <= ge )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1576,len[ nPart - 1 ][ v ] = (char)LESSER_ICOST;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1578,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1580,len[ nPart - 1 ][ v ] = (char)GREATER_ICOST;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1584,nPart--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1585,gs = ge + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1586,remF -= aFreq;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1590,int[][] rfreq = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1591,int[] fave = new int[ N_GROUPS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1592,short[] cost = new short[ N_GROUPS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1594,* Iterate up to N_ITERS times to improve the tables.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1596,for( iter = 0; iter < N_ITERS; iter++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1598,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1600,fave[ t ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1603,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1605,for( v = 0; v < alphaSize; v++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1607,rfreq[ t ][ v ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1611,nSelectors = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1612,gs = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1613,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1617,* Set group start & end marks.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1619,if( gs >= m_nMTF )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1621,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1623,ge = gs + G_SIZE - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1624,if( ge >= m_nMTF )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1626,ge = m_nMTF - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1630,* Calculate the cost of this group as coded
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1631,* by each of the coding tables.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1633,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1635,cost[ t ] = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1638,if( nGroups == 6 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1640,short cost0 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1641,short cost1 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1642,short cost2 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1643,short cost3 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1644,short cost4 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1645,short cost5 = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1647,for( i = gs; i <= ge; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1649,short icv = m_szptr[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1650,cost0 += len[ 0 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1651,cost1 += len[ 1 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1652,cost2 += len[ 2 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1653,cost3 += len[ 3 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1654,cost4 += len[ 4 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1655,cost5 += len[ 5 ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1657,cost[ 0 ] = cost0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1658,cost[ 1 ] = cost1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1659,cost[ 2 ] = cost2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1660,cost[ 3 ] = cost3;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1661,cost[ 4 ] = cost4;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1662,cost[ 5 ] = cost5;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1664,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1666,for( i = gs; i <= ge; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1668,short icv = m_szptr[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1669,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1671,cost[ t ] += len[ t ][ icv ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1677,"* Find the coding table which is best for this group,"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1678,* and record its identity in the selector table.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1680,bc = 999999999;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1681,bt = -1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1682,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1684,if( cost[ t ] < bc )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1686,bc = cost[ t ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1687,bt = t;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1691,fave[ bt ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1692,m_selector[ nSelectors ] = (char)bt;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1693,nSelectors++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1696,* Increment the symbol frequencies for the selected table.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1698,for( i = gs; i <= ge; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1700,rfreq[ bt ][ m_szptr[ i ] ]++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1703,gs = ge + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1707,* Recompute the tables based on the accumulated frequencies.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1709,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1711,"hbMakeCodeLengths( len[ t ], rfreq[ t ], alphaSize, 20 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1715,rfreq = null;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1716,fave = null;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1717,cost = null;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1719,if( !( nGroups < 8 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1721,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1723,if( !( nSelectors < 32768 && nSelectors <= ( 2 + ( 900000 / G_SIZE ) ) ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1725,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1729,* Compute MTF values for the selectors.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1731,char[] pos = new char[ N_GROUPS ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1732,char ll_i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1733,char tmp2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1734,char tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1735,for( i = 0; i < nGroups; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1737,pos[ i ] = (char)i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1739,for( i = 0; i < nSelectors; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1741,ll_i = m_selector[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1742,j = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1743,tmp = pos[ j ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1744,while( ll_i != tmp )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1746,j++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1747,tmp2 = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1748,tmp = pos[ j ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1749,pos[ j ] = tmp2;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1751,pos[ 0 ] = tmp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1752,m_selectorMtf[ i ] = (char)j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1756,int[][] code = new int[ N_GROUPS ][ MAX_ALPHA_SIZE ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1759,* Assign actual codes for the tables.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1761,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1763,minLen = 32;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1764,maxLen = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1765,for( i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1767,if( len[ t ][ i ] > maxLen )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1769,maxLen = len[ t ][ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1771,if( len[ t ][ i ] < minLen )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1773,minLen = len[ t ][ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1776,if( maxLen > 20 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1778,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1780,if( minLen < 1 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1782,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1784,"hbAssignCodes( code[ t ], len[ t ], minLen, maxLen, alphaSize );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1788,* Transmit the mapping table.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1790,boolean[] inUse16 = new boolean[ 16 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1791,for( i = 0; i < 16; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1793,inUse16[ i ] = false;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1794,for( j = 0; j < 16; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1796,if( m_inUse[ i * 16 + j ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1798,inUse16[ i ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1803,for( i = 0; i < 16; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1805,if( inUse16[ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1807,"bsW( 1, 1 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1809,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1811,"bsW( 1, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1815,for( i = 0; i < 16; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1817,if( inUse16[ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1819,for( j = 0; j < 16; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1821,if( m_inUse[ i * 16 + j ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1823,"bsW( 1, 1 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1825,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1827,"bsW( 1, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1836,* Now the selectors.
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1838,"bsW( 3, nGroups );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1839,"bsW( 15, nSelectors );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1840,for( i = 0; i < nSelectors; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1842,for( j = 0; j < m_selectorMtf[ i ]; j++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1844,"bsW( 1, 1 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1846,"bsW( 1, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1849,for( t = 0; t < nGroups; t++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1851,int curr = len[ t ][ 0 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1852,"bsW( 5, curr );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1853,for( i = 0; i < alphaSize; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1855,while( curr < len[ t ][ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1857,"bsW( 2, 2 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1858,curr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1860,* 10
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1863,while( curr > len[ t ][ i ] )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1865,"bsW( 2, 3 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1866,curr--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1868,* 11
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1871,"bsW( 1, 0 );"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1876,"* And finally, the block data proper"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1878,selCtr = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1879,gs = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1880,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1882,if( gs >= m_nMTF )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1884,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1886,ge = gs + G_SIZE - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1887,if( ge >= m_nMTF )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1889,ge = m_nMTF - 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1891,for( i = gs; i <= ge; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1893,"bsW( len[ m_selector[ selCtr ] ][ m_szptr[ i ] ],"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1894,code[ m_selector[ selCtr ] ][ m_szptr[ i ] ] );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1897,gs = ge + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1898,selCtr++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1900,if( !( selCtr == nSelectors ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1902,panic();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1906,"private void simpleSort( int lo, int hi, int d )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1908,int i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1909,int j;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1910,int h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1911,int bigN;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1912,int hp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1913,int v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1915,bigN = hi - lo + 1;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1916,if( bigN < 2 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1918,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1921,hp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1922,while( m_incs[ hp ] < bigN )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1924,hp++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1926,hp--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1928,for( ; hp >= 0; hp-- )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1930,h = m_incs[ hp ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1932,i = lo + h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1933,while( true )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1936,* copy 1
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1938,if( i > hi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1940,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1942,v = m_zptr[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1943,j = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1944,"while( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1946,m_zptr[ j ] = m_zptr[ j - h ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1947,j = j - h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1948,if( j <= ( lo + h - 1 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1950,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1953,m_zptr[ j ] = v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1954,i++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1957,* copy 2
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1959,if( i > hi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1961,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1963,v = m_zptr[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1964,j = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1965,"while( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1967,m_zptr[ j ] = m_zptr[ j - h ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1968,j = j - h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1969,if( j <= ( lo + h - 1 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1971,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1974,m_zptr[ j ] = v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1975,i++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1978,* copy 3
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1980,if( i > hi )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1982,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1984,v = m_zptr[ i ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1985,j = i;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1986,"while( fullGtU( m_zptr[ j - h ] + d, v + d ) )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1988,m_zptr[ j ] = m_zptr[ j - h ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1989,j = j - h;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1990,if( j <= ( lo + h - 1 ) )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1992,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1995,m_zptr[ j ] = v;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1996,i++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,1998,if( m_workDone > m_workLimit && m_firstAttempt )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2000,return;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2006,"private void vswap( int p1, int p2, int n )"
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2008,int temp = 0;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2009,while( n > 0 )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2011,temp = m_zptr[ p1 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2012,m_zptr[ p1 ] = m_zptr[ p2 ];
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2013,m_zptr[ p2 ] = temp;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2014,p1++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2015,p2++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2016,n--;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2020,private void writeRun()
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2021,throws IOException
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2023,if( m_last < m_allowableBlockSize )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2025,m_inUse[ m_currentChar ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2026,for( int i = 0; i < m_runLength; i++ )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2028,m_crc.updateCRC( (char)m_currentChar );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2030,switch( m_runLength )
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2032,case 1:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2033,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2034,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2035,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2036,case 2:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2037,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2038,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2039,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2040,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2041,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2042,case 3:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2043,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2044,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2045,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2046,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2047,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2048,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2049,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2050,default:
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2051,m_inUse[ m_runLength - 4 ] = true;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2052,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2053,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2054,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2055,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2056,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2057,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2058,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2059,m_block[ m_last + 1 ] = (char)m_currentChar;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2060,m_last++;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2061,m_block[ m_last + 1 ] = (char)( m_runLength - 4 );
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2062,break;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2065,else
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2067,endBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2068,initBlock();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2069,writeRun();
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2073,private static class StackElem
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2075,int m_dd;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2076,int m_hh;
True,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,src/java/org/apache/commons/compress/bzip2/CBZip2OutputStream.java,2077,int m_ll;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons-sandbox//compress/src/java/org/apache/commons/compress/bzip2/CRC.java,v 1.1 2003/12/02 20:43:04 dirkv Exp $"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,4,* $Date: 2003/12/02 20:43:04 $
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,10,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,11,* reserved.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,15,* are met:
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,23,*    distribution.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,26,"*    any, must include the following acknowledgement:"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,29,"*    Alternately, this acknowledgement may appear in the software itself,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,30,*    if and wherever such third-party acknowledgements normally appear.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,39,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,61,package org.apache.commons.compress.bzip2;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,64,"* This package is based on the work done by Keiron Liddle, Aftex Software"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,65,* <keiron@aftexsw.com> to whom the Ant project is very grateful for his
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,66,* great code.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,70,* A simple class the hold and calculate the CRC for sanity checking of the
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,71,* data.
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,73,"* @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,75,class CRC
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,77,private static int[] CRC32_TABLE = new int[]
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,79,"0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,80,"0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,81,"0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,82,"0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,83,"0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,84,"0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,85,"0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,86,"0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,87,"0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,88,"0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,89,"0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,90,"0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,91,"0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,92,"0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,93,"0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,94,"0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,95,"0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,96,"0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,97,"0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,98,"0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,99,"0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,100,"0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,101,"0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,102,"0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,103,"0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,104,"0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,105,"0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,106,"0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,107,"0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,108,"0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,109,"0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,110,"0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,111,"0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,112,"0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,113,"0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,114,"0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,115,"0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,116,"0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,117,"0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,118,"0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,119,"0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,120,"0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,121,"0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,122,"0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,123,"0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,124,"0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,125,"0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,126,"0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,127,"0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,128,"0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,129,"0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,130,"0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,131,"0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,132,"0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,133,"0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,134,"0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,135,"0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,136,"0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,137,"0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,138,"0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,139,"0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,140,"0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,141,"0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668,"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,142,"0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4"
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,145,private int m_globalCrc;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,147,protected CRC()
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,149,initialiseCRC();
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,152,int getFinalCRC()
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,154,return ~m_globalCrc;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,157,void initialiseCRC()
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,159,m_globalCrc = 0xffffffff;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,162,void updateCRC( final int inCh )
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,164,int temp = ( m_globalCrc >> 24 ) ^ inCh;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,165,if( temp < 0 )
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,167,temp = 256 + temp;
True,src/java/org/apache/commons/compress/bzip2/CRC.java,src/java/org/apache/commons/compress/bzip2/CRC.java,169,m_globalCrc = ( m_globalCrc << 8 ) ^ CRC32_TABLE[ temp ];
