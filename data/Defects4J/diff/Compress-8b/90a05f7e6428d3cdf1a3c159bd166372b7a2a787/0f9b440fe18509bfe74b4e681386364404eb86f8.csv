is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,149,public void write(byte[] b) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,150,out.write(b);
True,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java,151,entryOffset += b.length;
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,425,/* (non-Javadoc)
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,426,* @see java.io.OutputStream#write(int)
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,428,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java,429,out.write(b);
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,247,* Writes bytes to the current tar archive entry.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,249,"* This method simply calls write( byte[], int, int )."
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,251,* @param wBuf The buffer to write to the archive.
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,252,* @throws IOException on error
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,254,public void write(byte[] wBuf) throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,src/main/java/org/apache/commons/compress/archivers/tar/TarOutputStream.java,255,"write(wBuf, 0, wBuf.length);"
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,556,* Flushes this output stream and forces any buffered output bytes
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,557,* to be written out to the stream.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,559,* @exception  IOException  if an I/O error occurs.
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,560,* @since 1.14
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,562,public void flush() throws IOException {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,563,if (out != null) {
True,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java,564,out.flush();
False,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,21,mport java.io.FilterInputStream;
False,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,24,ublic abstract class CompressorInputStream extends FilterInputStream {
True,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,23,public abstract class CompressorInputStream extends InputStream {
False,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,26,rotected CompressorInputStream(final InputStream i) {
False,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java,27,uper(i);
False,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,21,mport java.io.FilterOutputStream;
False,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,24,ublic abstract class CompressorOutputStream extends FilterOutputStream {
True,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,23,public abstract class CompressorOutputStream extends OutputStream {
False,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,26,rotected CompressorOutputStream(final OutputStream o) {
False,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/CompressorOutputStream.java,27,uper(o);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,83,private InputStream in;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,133,uper(in);
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,135,super();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java,137,this.in = in;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,275,uper(inStream);
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,381,ut.close();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,380,bsStream.close();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,400,ut.flush();
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,399,bsStream.flush();
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,520,ut = f;
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,519,bsStream = f;
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,530,ut.write(ch); // write 8-bit
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,529,bsStream.write(ch); // write 8-bit
False,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,544,ut.write(ch); // write 8-bit
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,543,bsStream.write(ch); // write 8-bit
True,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java,890,private OutputStream bsStream;
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,29,private final GZIPInputStream in;
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,30,uper(new GZIPInputStream(inputStream));
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,32,in = new GZIPInputStream(inputStream);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,35,public int read() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java,36,return in.read();
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,29,private final GZIPOutputStream out;
False,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,30,uper(new GZIPOutputStream(outputStream));
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,32,out = new GZIPOutputStream(outputStream);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,35,public void write(int b) throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,36,out.write(b);
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,39,public void close() throws IOException {
True,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java,40,out.close();
