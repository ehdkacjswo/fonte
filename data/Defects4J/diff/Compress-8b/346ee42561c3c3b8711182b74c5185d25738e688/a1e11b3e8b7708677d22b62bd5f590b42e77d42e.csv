is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,9,*   http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,19,package org.apache.commons.compress;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,21,import java.io.BufferedReader;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,22,import java.io.File;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,23,import java.io.FileReader;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,24,import java.io.IOException;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,25,import java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,27,import junit.framework.Test;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,28,import junit.framework.TestSuite;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,30,import org.apache.commons.compress.archivers.ArchiveException;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,33,* Test that can read various archive file examples.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,35,* This is a very simple implementation.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,37,"* Files must be in resources/archives, and there must be a file.txt containing"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,38,* the list of files in the archives.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,40,"* The class uses nested suites in order to be able to name the test after the file name,"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,41,* as JUnit does not allow one to change the display name of a test.
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,43,public class ArchiveReadTests extends AbstractTestCase {
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,45,final static ClassLoader classLoader = ArchiveReadTests.class.getClassLoader();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,47,private File file;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,48,private static ArrayList fileList = new ArrayList();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,50,public ArchiveReadTests(String name) {
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,51,super(name);
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,54,"private ArchiveReadTests(String name, File file){"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,55,super(name);
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,56,this.file = file;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,59,public static TestSuite suite() throws IOException{
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,60,"TestSuite suite = new TestSuite(""ArchiveReadTests"");"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,61,"File arcdir =new File(classLoader.getResource(""archives"").getFile());"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,62,assertTrue(arcdir.exists());
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,63,"File listing= new File(arcdir,""files.txt"");"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,64,"assertTrue(""files.txt is readable"",listing.canRead());"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,65,BufferedReader br = new BufferedReader(new FileReader(listing));
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,66,String line;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,67,while ((line=br.readLine())!=null){
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,68,"if (line.startsWith(""#"")){"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,69,continue;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,71,"String []fields = line.split("" "");"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,72,fileList.add(fields[1]);
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,74,br.close();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,75,File[]files=arcdir.listFiles();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,76,for (int i=0; i<files.length; i++){
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,77,final File file = files[i];
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,78,"if (file.getName().endsWith("".txt"")){"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,79,continue;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,81,// Cannot handle these tar files yet
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,82,"if (file.getName().equals(""SunOS_cAEf.tar"")"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,83,"|| file.getName().equals(""FreeBSD_pax.tar"")"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,84,"|| file.getName().equals(""SunOS_cEf.tar"")){"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,85,continue;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,87,// Appears to be the only way to give the test a variable name
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,88,TestSuite namedSuite = new TestSuite(file.getName());
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,89,"Test test = new ArchiveReadTests(""testArchive"", file);"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,90,namedSuite.addTest(test);
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,91,suite.addTest(namedSuite);
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,93,return suite;
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,96,public void testArchive() throws Exception{
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,97,ArrayList expected=(ArrayList) fileList.clone();
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,98,try {
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,99,"checkArchiveContent(file, expected);"
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,100,} catch (ArchiveException e) {
True,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,src/test/java/org/apache/commons/compress/ArchiveReadTests.java,101,"fail(""Problem checking ""+file);"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,22,mport java.io.BufferedReader;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,26,mport java.io.FileReader;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,28,mport java.util.ArrayList;
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,35,public DetectArchiverTestCase(String name) {
True,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,36,super(name);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,78,/ TODO move into separate class and create suite with one file per test
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,79,/ Scan list of archives in resources/archives directory
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,80,ublic void testArchives() throws Exception{
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,81,"ile arcdir =new File(classLoader.getResource(""archives"").getFile());"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,82,ssertTrue(arcdir.exists());
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,83,"ile listing= new File(arcdir,""files.txt"");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,84,"ssertTrue(""files.txt is readable"",listing.canRead());"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,85,ufferedReader br = new BufferedReader(new FileReader(listing));
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,86,inal ArrayList fileList = new ArrayList();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,87,tring line;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,88,hile ((line=br.readLine())!=null){
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,89,"f (line.startsWith(""#"")){"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,90,ontinue;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,92,"tring []fields = line.split("" "");"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,93,ileList.add(fields[1]);
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,95,r.close();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,96,ile[]files=arcdir.listFiles();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,97,or (int i=0; i<files.length; i++){
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,98,inal File file = files[i];
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,99,"f (file.getName().endsWith("".txt"")){"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,100,ontinue;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,102,/ Cannot handle these tar files yet
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,103,"f (file.getName().equals(""SunOS_cAEf.tar"")"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,104,"| file.getName().equals(""FreeBSD_pax.tar"")"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,105,"| file.getName().equals(""SunOS_cEf.tar"")){"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,106,ontinue;
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,108,rrayList expected=(ArrayList) fileList.clone();
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,109,ry {
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,110,"heckArchiveContent(file, expected);"
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,111, catch (ArchiveException e) {
False,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java,112,"ail(""Problem checking ""+file);"
