is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,485,* @throws IllegalArgumentException if the size is < 0
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,486,* or > {@link TarConstants#MAXSIZE} (077777777777L).
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,489,if (size > MAXSIZE || size < 0){
True,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java,490,"throw new IllegalArgumentException(""Size is out of range: ""+size);"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,99,public void testMaxFileSize(){
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,100,"TarArchiveEntry t = new TarArchiveEntry("""");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,101,t.setSize(0);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,102,t.setSize(1);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,103,try {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,104,t.setSize(-1);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,105,"fail(""Should have generated IllegalArgumentException"");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,106,} catch (IllegalArgumentException expected) {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,108,t.setSize(077777777777L);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,109,try {
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,110,t.setSize(0100000000000L);
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,111,"fail(""Should have generated IllegalArgumentException"");"
True,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java,112,} catch (IllegalArgumentException expected) {
