is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/verification/RegisteredInvocations.java,src/org/mockito/internal/verification/RegisteredInvocations.java,29,"eturn ListUtil.filter(invocations, new RemoveToString());"
True,src/org/mockito/internal/verification/RegisteredInvocations.java,src/org/mockito/internal/verification/RegisteredInvocations.java,29,"return ListUtil.filter(new LinkedList<Invocation>(invocations), new RemoveToString());"
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,5,package org.concurrentmockito;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,7,import static org.mockito.Mockito.*;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,9,import org.junit.Test;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,10,import org.mockito.Mock;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,11,import org.mockitousage.IMethods;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,12,import org.mockitoutil.TestBase;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,14,//this test exposes the problem most of the time
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,15,public class ThreadVerifiesContinuoslyInteractingMockTest extends TestBase {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,17,@Mock private IMethods mock;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,19,@Test
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,20,public void testShouldAllowVerifyingInThreads() throws Exception {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,21,for(int i = 0; i < 100; i++) {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,22,performTest();
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,26,private void performTest() throws InterruptedException {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,27,mock.simpleMethod();
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,28,final Thread[] listeners = new Thread[2];
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,29,for (int i = 0; i < listeners.length; i++) {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,30,final int x = i;
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,31,listeners[i] = new Thread() {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,32,@Override
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,33,public void run() {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,34,try {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,35,Thread.sleep(x * 10);
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,36,} catch (InterruptedException e) {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,37,throw new RuntimeException(e);
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,39,mock.simpleMethod();
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,42,listeners[i].start();
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,45,"verify(mock, atLeastOnce()).simpleMethod();"
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,47,for (int i = 0; i < listeners.length; i++) {
True,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,test/org/concurrentmockito/ThreadVerifiesContinuoslyInteractingMockTest.java,48,listeners[i].join();
