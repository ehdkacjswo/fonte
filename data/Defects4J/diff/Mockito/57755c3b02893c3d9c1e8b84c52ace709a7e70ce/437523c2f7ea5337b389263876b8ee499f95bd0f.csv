is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,1,package org.mockito.internal.creation;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,3,import org.mockito.cglib.proxy.Factory;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,4,import org.mockito.internal.creation.jmock.ClassImposterizer;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,5,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,6,import org.mockito.internal.util.StringJoiner;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,7,import org.mockito.internal.util.reflection.FieldSetter;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,8,import org.mockito.mock.MockCreationSettings;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,10,import java.io.ByteArrayInputStream;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,11,import java.io.ByteArrayOutputStream;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,12,import java.io.IOException;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,13,import java.io.InputStream;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,14,import java.io.InvalidObjectException;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,15,import java.io.NotSerializableException;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,16,import java.io.ObjectInputStream;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,17,import java.io.ObjectOutputStream;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,18,import java.io.ObjectStreamClass;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,19,import java.io.ObjectStreamException;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,20,import java.io.Serializable;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,21,import java.lang.reflect.Method;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,22,import java.util.Set;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,23,import java.util.WeakHashMap;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,26,* XXX not thread-safe prototype !!!!
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,28,* @author Brice Dutheil
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,30,public class AcrossJVMSerializationFeature implements Serializable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,31,private static final long serialVersionUID = 7411152578314420778L;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,32,"private static WeakHashMap<Object, Boolean> currentlySerializing = new WeakHashMap();"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,34,public boolean isWriteReplace(Method method) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,35,return  method.getReturnType() == Object.class
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,36,&& method.getParameterTypes().length == 0
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,37,"&& method.getName().equals(""writeReplace"");"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,41,public Object writeReplace(Object proxy) throws ObjectStreamException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,42,"// mark started flag // per thread, not per instance"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,43,// temporary loosy hack to avoid stackoverflow
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,44,if(Boolean.TRUE.equals(currentlySerializing.get(proxy))) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,45,return proxy;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,47,"currentlySerializing.put(proxy, true);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,49,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,50,return new AcrossJVMMockSerializationProxy(proxy);         // stackoverflow
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,51,} catch (IOException ioe) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,52,throw new NotSerializableException(proxy.getClass().getCanonicalName()); // TODO throw our own serialization exception
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,53,} finally {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,54,// unmark
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,55,currentlySerializing.remove(proxy);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,62,public <T> void enableSerializationAcrossJVM(MockCreationSettings<T> settings) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,63,// havin faith that this set is modifiable
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,64,settings.getExtraInterfaces().add(AcrossJVMMockitoMockSerilizable.class);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,69,* This is the serialization proxy that will encapsulate the real mock data.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,71,* It will allow deserilization of the mock in another classloader/vm through custom deserilization ObjectInputStream
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,73,public static class AcrossJVMMockSerializationProxy implements Serializable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,74,private static final long serialVersionUID = -7600267929109286514L;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,75,private byte[] serializedMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,76,private Class typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,77,private Set<Class> extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,80,public AcrossJVMMockSerializationProxy(Object proxy) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,81,MockCreationSettings mockSettings = new MockUtil().getMockHandler(proxy).getMockSettings();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,83,ByteArrayOutputStream out = new ByteArrayOutputStream();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,84,ObjectOutputStream objectOutputStream = new MockitoMockObjectOutputStream(out);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,86,objectOutputStream.writeObject(proxy);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,88,objectOutputStream.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,89,out.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,91,this.serializedMock = out.toByteArray();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,92,this.typeToMock = mockSettings.getTypeToMock();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,93,this.extraInterfaces = mockSettings.getExtraInterfaces();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,97,private Object readResolve() throws ObjectStreamException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,98,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,99,ByteArrayInputStream bis = new ByteArrayInputStream(serializedMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,100,"ObjectInputStream mockitoMockObjectInputStream = new MockitoMockObjectInputStream(bis, typeToMock, extraInterfaces);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,102,Object object = mockitoMockObjectInputStream.readObject();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,104,bis.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,105,mockitoMockObjectInputStream.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,106,return object;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,107,} catch (IOException ioe) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,108,"throw new InvalidObjectException(""For some reason mock cannot ve dematerialized : "" + ioe.toString() + ""\n"" + StringJoiner.join(ioe.getStackTrace()));"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,109,} catch (ClassNotFoundException cce) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,110,"throw new InvalidObjectException(""For some reason Mockito Mock class cannot be found : "" + cce.toString());"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,117,public static class MockitoMockObjectInputStream extends ObjectInputStream {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,118,private Class typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,119,private Set<Class> extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,121,"public MockitoMockObjectInputStream(InputStream in, Class typeToMock, Set<Class> extraInterfaces) throws IOException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,122,super(in) ;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,123,this.typeToMock = typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,124,this.extraInterfaces = extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,125,enableResolveObject(true);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,128,@Override
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,129,"protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,130,Object anObject = readObject();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,131,"if (""MockitoProxyMarker"".equals(anObject)) {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,132,ClassImposterizer.INSTANCE.canImposterise(typeToMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,133,"ClassImposterizer.INSTANCE.setConstructorsAccessible(typeToMock, true);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,134,Class<?> proxyClass = ClassImposterizer.INSTANCE.createProxyClass(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,135,"typeToMock,"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,136,extraInterfaces.toArray(new Class[extraInterfaces.size()])
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,139,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,140,"new FieldSetter(desc, desc.getClass().getDeclaredField(""name"")).set(proxyClass.getCanonicalName());"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,141,} catch (NoSuchFieldException e) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,142,e.printStackTrace();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,145,return proxyClass;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,148,return super.resolveClass(desc);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,155,public interface AcrossJVMMockitoMockSerilizable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,156,public Object writeReplace() throws java.io.ObjectStreamException;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,160,private static class MockitoMockObjectOutputStream extends ObjectOutputStream {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,161,public MockitoMockObjectOutputStream(ByteArrayOutputStream out) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,162,super(out);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,165,@Override
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,166,protected void annotateClass(Class<?> cl) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,167,if (Factory.class.isAssignableFrom(cl)) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,168,"writeObject(""MockitoProxyMarker"");"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,169,} else {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,170,"writeObject("""");"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,172,"// might be also useful later, for embedding classloader info maybe"
True,src/org/mockito/internal/creation/CglibMockMaker.java,src/org/mockito/internal/creation/CglibMockMaker.java,23,new AcrossJVMSerializationFeature().enableSerializationAcrossJVM(settings);
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,8,mport java.io.Serializable;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,9,mport java.lang.reflect.Method;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,14,mport org.mockito.invocation.Invocation;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,15,mport org.mockito.invocation.MockHandler;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,17,mport org.mockito.internal.invocation.*;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,12,import org.mockito.internal.invocation.InvocationImpl;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,13,import org.mockito.internal.invocation.MockitoMethod;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,14,import org.mockito.internal.invocation.SerializableMethod;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,18,import org.mockito.invocation.Invocation;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,19,import org.mockito.invocation.MockHandler;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,22,import java.io.Serializable;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,23,import java.lang.reflect.Method;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,44,} else if (new AcrossJVMSerializationFeature().isWriteReplace(method)) {
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,45,return new AcrossJVMSerializationFeature().writeReplace(proxy);
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,74,"rivate void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,74,"public void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {"
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,80,"rivate Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,80,"public Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,109,enhancer.setSerialVersionUID(42L);
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,8,mport java.lang.reflect.Method;
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,10,import java.io.Serializable;
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,11,import java.lang.reflect.Method;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,22,eturn method.getReturnType() == String.class && method.getParameterTypes().length == 0
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,22,return method.getReturnType() == String.class
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,23,&& method.getParameterTypes().length == 0
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,27,"eturn method.getName().equals(""equals"") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,28,"return method.getName().equals(""equals"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,29,&& method.getParameterTypes().length == 1
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,30,&& method.getParameterTypes()[0] == Object.class;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,31,"eturn method.getName().equals(""hashCode"") && method.getParameterTypes().length == 0;"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,34,"return method.getName().equals(""hashCode"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,35,&& method.getParameterTypes().length == 0;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,35,"eturn Comparable.class.isAssignableFrom(method.getDeclaringClass()) && method.getName().equals(""compareTo"")"
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,36,& method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == method.getDeclaringClass();
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,39,return Comparable.class.isAssignableFrom(method.getDeclaringClass())
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,40,"&& method.getName().equals(""compareTo"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,41,&& method.getParameterTypes().length == 1
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,42,&& method.getParameterTypes()[0] == method.getDeclaringClass();
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,1,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,3,import org.junit.Test;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,4,import org.mockito.Mockito;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,5,import org.mockitousage.IMethods;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,6,import org.mockitoutil.SimplePerRealmReloadingClassLoader;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,7,import org.mockitoutil.SimpleSerializationUtil;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,9,import java.io.ByteArrayInputStream;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,10,import java.io.FileOutputStream;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,11,import java.util.concurrent.Callable;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,15,"* Doesn't work, for now. maybe with more hacky way to tamper the outputstream, still..."
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,17,"* While investigating, I discovered that <code>ObjectOutputStream</code> will write the real class in the stream"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,18,"* through <code>writeClass</code> before the <code>writeReplace</code> (see <code>writeObject0</code>), that means"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,19,"* that the CGLIB proxy class is written in the stream anyway, unless you don't use an ObjectOutputStream directly."
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,21,* So when one use the standard <code>ObjectInputStream</code> it will read the bytestream and use the written class
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,22,"* info to lookup for it in the classloader, unfortunately this class matches the class in another classloader and"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,23,* isn't available anyway at deserialization time. Overriding <code>resolveClass</code> in a subclass of
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,24,* <code>ObjectInoutStream</code> might help though to overcome this shortcomming.
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,27,"* Yet JDK proxies are serializable, how are they doing it !? Well <code>ObjectOutputStream</code> have specific"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,28,* treatment for JDK proxy especially there <code>writeClassDesc</code> which uses an <code>ObjectStreamClass</code>
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,29,* that is initialized in his constructor with <code>Proxy.isProxy</code>
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,31,"* Note for the hacker, the class descriptor of a JDK Proxy is written with the following byte"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,32,* <code>ObjectStreamConstants.TC_PROXYCLASSDESC</code> this byte in the stream will trigger the specific overridable
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,33,"* <code>resolveProxyClass</code> (see <code>readClassDesc</code>), though yet again it means the method has to be"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,34,* overrided in the input stream.
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,36,"* TODO for the hacker, not for real... See if it is possible to tamper the BlockDataOutputStream and then simulate a writeReplace"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,37,* ... well probably don't worth it
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,40,public class AcrossClassLoaderSerializationTest {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,42,@Test
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,43,public void name() throws Exception {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,44,byte[] bytes = create_mock_and_Serialize_it();
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,46,System.out.println(new String(bytes));
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,48,"FileOutputStream outputStream = new FileOutputStream(""acrossJVM"", false);"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,49,outputStream.write(bytes);
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,50,outputStream.close();
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,52,Object the_deserialized_mock = read_stream_and_deserialize_it(bytes);
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,54,System.out.println(the_deserialized_mock);
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,57,private Object read_stream_and_deserialize_it(byte[] bytes) throws Exception {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,58,"return new SimplePerRealmReloadingClassLoader(this.getClass().getClassLoader(), reload_all())"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,59,.doInRealm(
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,60,"""org.mockitousage.basicapi.AcrossClassLoaderSerializationTest$ReadStreanAndDeserializeIt"","
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,61,"new Class[]{ byte[].class },"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,62,new Object[]{ bytes }
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,66,private byte[] create_mock_and_Serialize_it() throws Exception {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,67,"return (byte[]) new SimplePerRealmReloadingClassLoader(this.getClass().getClassLoader(), reload_all())"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,68,".doInRealm(""org.mockitousage.basicapi.AcrossClassLoaderSerializationTest$CreateMockAndSerializeIt"");"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,71,private SimplePerRealmReloadingClassLoader.ReloadClassPredicate reload_all() {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,72,return new SimplePerRealmReloadingClassLoader.ReloadClassPredicate() {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,73,public boolean acceptReloadOf(String qualifiedName) {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,74,"return qualifiedName.contains(""org.mockitousage"")"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,75,"//                        || qualifiedName.contains(""org.mockito"")"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,76,"//                        || qualifiedName.contains(""org.mockito.cglib"")"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,77,"|| qualifiedName.contains(""org.mockitoutil"");"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,83,public static class CreateMockAndSerializeIt implements Callable<byte[]> {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,84,public byte[] call() throws Exception {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,85,"IMethods mock = Mockito.mock(IMethods.class, Mockito.withSettings().serializable());"
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,86,// use MethodProxy before
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,87,//            mock.linkedListReturningMethod();
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,89,return SimpleSerializationUtil.serializeMock(mock).toByteArray();
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,94,public static class ReadStreanAndDeserializeIt implements Callable<Object> {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,95,private byte[] bytes;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,97,public ReadStreanAndDeserializeIt(byte[] bytes) {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,98,this.bytes = bytes;
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,101,public Object call() throws Exception {
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,102,ByteArrayInputStream unserialize = new ByteArrayInputStream(bytes);
True,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/basicapi/AcrossClassLoaderSerializationTest.java,103,"return SimpleSerializationUtil.deserializeMock(unserialize, IMethods.class);"
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,8,mport static org.mockito.AdditionalMatchers.*;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,9,mport static org.mockito.Matchers.*;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,10,mport static org.mockito.Mockito.*;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,19,import static org.mockito.AdditionalMatchers.aryEq;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,20,import static org.mockito.Matchers.anyInt;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,21,import static org.mockito.Matchers.eq;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,22,import static org.mockito.Matchers.matches;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,23,import static org.mockito.Mockito.atLeastOnce;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,24,import static org.mockito.Mockito.never;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,25,import static org.mockito.Mockito.verify;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,26,import static org.mockito.Mockito.verifyNoMoreInteractions;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,27,import static org.mockito.Mockito.verifyZeroInteractions;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,359,ublic void should_print_method_name_and_arguments_of_other_interactions() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,365,public void should_print_method_name_and_arguments_of_other_interactions_with_different_methods() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,380,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,381,public void should_print_method_name_and_arguments_of_other_interactions_of_same_method() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,382,try {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,383,mock.forByte((byte) 25);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,384,mock.forByte((byte) 12);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,386,verify(mock).forByte((byte) 42);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,387,fail();
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,388,} catch (WantedButNotInvoked e) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,389,System.out.println(e);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,390,"assertContains(""iMethods.forByte(42)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,391,"assertContains(""iMethods.forByte(25)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,392,"assertContains(""iMethods.forByte(12)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,396,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,397,public void test1() {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,398,AnInterface m = Mockito.mock(AnInterface.class);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,400,for (int i = 1; i <= 2; i++) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,401,m.foo(i);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,404,verify(m).foo(1);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,405,verify(m).foo(2);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,406,verify(m).foo(3); // XXX: doesn't mention the parameters of foo(1) and foo(2)
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,407,verify(m).foo(4);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,410,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,411,public void test2() {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,412,AnInterface m = Mockito.mock(AnInterface.class);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,414,for (int i = 1; i <= 4; i++) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,415,m.foo(i);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,418,verify(m).foo(1);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,419,verify(m).foo(2);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,420,verify(m).foo(5); // XXX: doesn't mention foo(4) at all
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,423,public interface AnInterface {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,424,void foo(int i);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,23,"return deserializeMock(unserialize, type);"
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,26,"public static <T> T deserializeMock(InputStream unserialize, Class<T> type) throws IOException, ClassNotFoundException {"
