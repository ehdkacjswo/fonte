is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,424,"This exception *might* occur in wrongly written multi-threaded tests."","
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,425,"Please refer to Mockito FAQ on limitations of concurrency testing."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,424,"""If you're unsure why you're getting above error read on."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,425,"""Due to the nature of the syntax above problem might occur because:"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,426,"""1. This exception *might* occur in wrongly written multi-threaded tests."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,427,"""   Please refer to Mockito FAQ on limitations of concurrency testing."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,428,"""2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - "","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,429,"""   - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method."","
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,1,package org.mockitousage.misuse;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,3,import org.junit.Test;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,4,import org.mockito.exceptions.misusing.WrongTypeOfReturnValue;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,6,import static org.junit.Assert.fail;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,7,import static org.fest.assertions.Assertions.assertThat;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,8,import static org.mockito.Mockito.*;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,10,public class SpyStubbingMisuseTest {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,12,@Test
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,13,public void nestedWhenTest() {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,14,Strategy mfoo = mock(Strategy.class);
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,15,Sampler mpoo = mock(Sampler.class);
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,16,Producer out = spy(new Producer(mfoo));
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,18,try {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,19,when(out.produce()).thenReturn(mpoo);
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,20,fail();
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,21,} catch (WrongTypeOfReturnValue e) {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,22,"assertThat(e.getMessage()).contains(""spy"").contains(""syntax"").contains(""doReturn|Throw"");"
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,26,public class Sample { }
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,28,public class Strategy {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,29,Sample getSample() {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,30,return new Sample();
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,34,public class Sampler {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,35,Sample sample;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,36,Sampler(Strategy f) {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,37,sample = f.getSample();
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,41,public class Producer {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,42,Strategy strategy;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,43,Producer(Strategy f) {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,44,strategy = f;
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,46,Sampler produce() {
True,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,test/org/mockitousage/misuse/SpyStubbingMisuseTest.java,47,return new Sampler(strategy);
