is_addition,old_file_path,new_file_path,line_num,content
False,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,23, prints useful warnings that can be helpful for debugging failed tests.
True,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,23,* prints useful warnings that can enhance testing experience.
True,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,24,* The point is that Mockito should help the tdd developer to quickly figure out if the test fails for the right reason.
True,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,25,* Then the developer can implement the functionality.
True,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,src/org/junit/mockito/ExperimentalMockitoJUnitRunner.java,26,* Also when the test fails it should be easy to figure out why the test fails.
False,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,5,/TODO javadocs
True,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,6,* DefaultConfiguration of Mockito framework
True,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,7,* <p>
True,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,8,* Currently it doesn't have many configuration options but it will probably change if future.
True,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,9,* <p>
True,src/org/mockito/DefaultMockitoConfiguration.java,src/org/mockito/DefaultMockitoConfiguration.java,10,* See javadocs for {@link IMockitoConfiguration} on info how to configure Mockito
False,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,6," Currently, configuring Mockito can help you changing {@link ReturnValues} for all mocks. ReturnValues determines the return values for unstubbed invocations."
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,6,"* In most cases you don't really need to configure Mockito. For example in case of working with legacy code,"
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,7,* when you might want to have different 'mocking style' this interface might be helpful.
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,8,* A reason of configuring Mockito might be if you disagree with the default return values mocks return.
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,9,* <p>
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,10,"* Currently, configuring Mockito can help you changing {@link ReturnValues} for all mocks."
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,11,* {@link ReturnValues} determines the return values for unstubbed invocations.
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,21,* <p>
True,src/org/mockito/IMockitoConfiguration.java,src/org/mockito/IMockitoConfiguration.java,22,* If you have comments on Mockito configuration feature don't hesitate to write to mockito@googlegroups.com
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,53,*      14. (**New**) Changing default return values of unstubbed invocations <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,54,*      15. (**New**) ExperimentalMockitoJUnitRunner to help with debugging failing tests <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,437, Typically you may get a NullPointerException because mock instances don't have fields initiated.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,439,* Typically you may get a NullPointerException because mock instances don't have fields initiated.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,441,* <h3>14. (**New**) Changing default return values of unstubbed invocations</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,443,* You can create a mock with specified strategy of for its return values.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,444,* It's quite advanced feature and typically you don't need it to write decent tests.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,445,* However it can be helpful for working with legacy systems.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,446,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,447,* Obviously return values are used only when you don't stub the method call.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,449,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,450,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,451,"*   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,452,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,454,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,455,* Read more about {@link Mockito#RETURNS_SMART_NULLS}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,456,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,457,"* Optionally, you can configure default return values using {@link IMockitoConfiguration}."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,459,* <h3>15. (**New**) ExperimentalMockitoJUnitRunner to enhance testing experience</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,461,* ExperimentalMockitoJUnitRunner initializes &#064;Mock annotated mocks and prints useful warnings that can enhance testing experience.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,462,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,463,* The point is that Mockito should help the tdd developer to quickly figure out if the test fails for the right reason.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,464,* Then the developer can implement the functionality.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,465,* Also when the test fails it should be easy to figure out why the test fails.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,466,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,467,* Read more in javadocs for ExperimentalMockitoJUnitRunner class: {@link ExperimentalMockitoJUnitRunner}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,468,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,470,"* &#064;RunWith(""ExperimentalMockitoJUnitRunner.class"")"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,471,* YourTest extends TestCase {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,473,*     &#064;Mock private List list;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,475,* </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,445, {@link ReturnValues} defines the return values of unstubbed calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,483,* {@link ReturnValues} defines the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,455, {@link ReturnValues} defines the return values of unstubbed calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,493,* {@link ReturnValues} defines the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,504, Warning: the interface of this method may change
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,506, Creates mock with a specified strategy for its return values.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,542,* Creates mock with a specified strategy for its return values.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,543,* It's quite advanced feature and typically you don't need it to write decent tests.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,544,* However it can be helpful for working with legacy systems.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,545,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,546,* Obviously return values are used only when you don't stub the method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,508, <p>This can be helpful for working with legacy systems.</p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,548,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,549,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,550,"*   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,551,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,556,* @param returnValues default return values for unstubbed methods
True,src/org/mockito/ReturnValues.java,src/org/mockito/ReturnValues.java,11,* <p>
True,src/org/mockito/ReturnValues.java,src/org/mockito/ReturnValues.java,12,"* Can be used in {@link Mockito#mock(Class, ReturnValues)} or configured globally - see: {@link IMockitoConfiguration}"
False,src/org/mockito/ReturnValues.java,src/org/mockito/ReturnValues.java,15, returns value for an unstubbed invocation
True,src/org/mockito/ReturnValues.java,src/org/mockito/ReturnValues.java,17,* return value for an unstubbed invocation
True,test/org/mockito/internal/debugging/WarningsPrinterTest.java,test/org/mockito/internal/debugging/WarningsPrinterTest.java,58,//TODO after 1.7 consider writing a warning when someone tries to mock a class that has any final methods
