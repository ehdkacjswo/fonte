is_addition,old_file_path,new_file_path,line_num,content
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,15,mport org.easymock.internal.ObjectMethodsFilter;
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,15,import org.easymock.internal.MockitoObjectMethodsFilter;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,17,mport org.easymock.internal.matchers.ArrayEquals;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,19,mport org.easymock.internal.matchers.CompareEqual;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,21,mport org.easymock.internal.matchers.EndsWith;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,24,mport org.easymock.internal.matchers.Find;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,33,mport org.easymock.internal.matchers.Same;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,34,mport org.easymock.internal.matchers.StartsWith;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,208,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,202,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,218,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,212,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,228,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,222,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,238,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,232,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,248,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,242,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,258,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,252,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,268,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,262,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,278,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,272,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,288,eportMatcher(Any.ANY);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,282,LastArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,293," Expects a comparable argument greater than or equal the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,294, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,296, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,297,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,298, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,300,ublic static <T extends Comparable<T>> T geq(Comparable<T> value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,301,eportMatcher(new GreaterOrEqual<T>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,302,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,306, Expects a byte argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,307," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,309, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,310,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,311, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,313,ublic static byte geq(byte value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,314,eportMatcher(new GreaterOrEqual<Byte>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,315,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,319, Expects a double argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,320," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,322, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,323,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,324, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,326,ublic static double geq(double value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,327,eportMatcher(new GreaterOrEqual<Double>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,328,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,332, Expects a float argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,333," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,335, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,336,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,337, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,339,ublic static float geq(float value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,340,eportMatcher(new GreaterOrEqual<Float>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,341,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,345, Expects an int argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,346," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,348, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,349,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,350, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,352,ublic static int geq(int value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,353,eportMatcher(new GreaterOrEqual<Integer>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,354,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,358, Expects a long argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,359," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,361, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,362,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,363, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,365,ublic static long geq(long value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,366,eportMatcher(new GreaterOrEqual<Long>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,367,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,371, Expects a short argument greater than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,372," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,374, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,375,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,376, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,378,ublic static short geq(short value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,379,eportMatcher(new GreaterOrEqual<Short>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,380,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,384," Expects a comparable argument less than or equal the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,385, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,387, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,388,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,389, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,391,ublic static <T extends Comparable<T>> T leq(Comparable<T> value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,392,eportMatcher(new LessOrEqual<T>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,393,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,397, Expects a byte argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,398," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,400, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,401,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,402, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,404,ublic static byte leq(byte value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,405,eportMatcher(new LessOrEqual<Byte>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,406,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,410, Expects a double argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,411," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,413, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,414,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,415, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,417,ublic static double leq(double value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,418,eportMatcher(new LessOrEqual<Double>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,419,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,423, Expects a float argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,424," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,426, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,427,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,428, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,430,ublic static float leq(float value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,431,eportMatcher(new LessOrEqual<Float>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,432,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,436, Expects an int argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,437," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,439, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,440,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,441, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,443,ublic static int leq(int value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,444,eportMatcher(new LessOrEqual<Integer>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,445,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,449, Expects a long argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,450," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,452, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,453,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,454, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,456,ublic static long leq(long value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,457,eportMatcher(new LessOrEqual<Long>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,458,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,462, Expects a short argument less than or equal to the given value. For
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,463," details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,465, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,466,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,467, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,469,ublic static short leq(short value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,470,eportMatcher(new LessOrEqual<Short>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,471,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,475," Expects a comparable argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,476, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,478, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,479,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,480, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,482,ublic static <T extends Comparable<T>> T gt(Comparable<T> value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,483,eportMatcher(new GreaterThan<T>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,484,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,488," Expects a byte argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,489, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,491, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,492,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,493, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,495,ublic static byte gt(byte value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,496,eportMatcher(new GreaterThan<Byte>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,497,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,501," Expects a double argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,502, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,504, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,505,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,506, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,508,ublic static double gt(double value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,509,eportMatcher(new GreaterThan<Double>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,510,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,514," Expects a float argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,515, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,517, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,518,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,519, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,521,ublic static float gt(float value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,522,eportMatcher(new GreaterThan<Float>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,523,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,527," Expects an int argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,528, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,530, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,531,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,532, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,534,ublic static int gt(int value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,535,eportMatcher(new GreaterThan<Integer>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,536,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,540," Expects a long argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,541, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,543, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,544,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,545, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,547,ublic static long gt(long value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,548,eportMatcher(new GreaterThan<Long>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,549,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,553," Expects a short argument greater than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,554, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,556, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,557,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,558, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,560,ublic static short gt(short value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,561,eportMatcher(new GreaterThan<Short>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,562,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,566," Expects a comparable argument less than the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,567, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,569, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,570,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,571, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,573,ublic static <T extends Comparable<T>> T lt(Comparable<T> value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,574,eportMatcher(new LessThan<T>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,575,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,579," Expects a byte argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,580, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,582, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,583,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,584, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,586,ublic static byte lt(byte value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,587,eportMatcher(new LessThan<Byte>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,588,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,592," Expects a double argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,593, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,595, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,596,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,597, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,599,ublic static double lt(double value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,600,eportMatcher(new LessThan<Double>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,601,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,605," Expects a float argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,606, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,608, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,609,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,610, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,612,ublic static float lt(float value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,613,eportMatcher(new LessThan<Float>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,614,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,618," Expects an int argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,619, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,621, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,622,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,623, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,625,ublic static int lt(int value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,626,eportMatcher(new LessThan<Integer>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,627,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,631," Expects a long argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,632, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,634, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,635,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,636, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,638,ublic static long lt(long value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,639,eportMatcher(new LessThan<Long>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,640,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,644," Expects a short argument less than the given value. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,645, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,647, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,648,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,649, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,651,ublic static short lt(short value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,652,eportMatcher(new LessThan<Short>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,653,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,657," Expects an object implementing the given class. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,658, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,660, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,661,            the accepted type.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,662, @param clazz
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,663,            the class of the accepted type.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,664, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,666,ublic static <T> T isA(Class<T> clazz) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,667,eportMatcher(new InstanceOf(clazz));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,668,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,672," Expects a string that contains the given substring. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,673, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,675, @param substring
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,676,            the substring.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,677, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,679,ublic static String contains(String substring) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,680,eportMatcher(new Contains(substring));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,681,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,685, Expects a boolean that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,687, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,688,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,689, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,690,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,691, @return <code>false</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,693,"ublic static boolean and(boolean first, boolean second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,694,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,695,eturn false;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,699, Expects a byte that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,701, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,702,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,703, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,704,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,705, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,707,"ublic static byte and(byte first, byte second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,708,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,709,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,713, Expects a char that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,715, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,716,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,717, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,718,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,719, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,721,"ublic static char and(char first, char second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,722,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,723,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,727, Expects a double that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,729, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,730,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,731, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,732,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,733, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,735,"ublic static double and(double first, double second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,736,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,737,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,741, Expects a float that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,743, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,744,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,745, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,746,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,747, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,749,"ublic static float and(float first, float second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,750,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,751,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,755, Expects an int that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,757, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,758,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,759, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,760,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,761, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,763,"ublic static int and(int first, int second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,764,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,765,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,769, Expects a long that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,771, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,772,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,773, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,774,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,775, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,777,"ublic static long and(long first, long second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,778,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,779,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,783, Expects a short that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,785, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,786,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,787, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,788,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,789, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,791,"ublic static short and(short first, short second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,792,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,793,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,797, Expects an Object that matches both given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,799, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,800,"            the type of the object, it is passed through to prevent casts."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,801, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,802,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,803, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,804,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,805, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,807,"ublic static <T> T and(T first, T second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,808,astArguments.reportAnd(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,809,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,813, Expects a boolean that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,815, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,816,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,817, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,818,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,819, @return <code>false</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,821,"ublic static boolean or(boolean first, boolean second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,822,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,823,eturn false;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,827, Expects a byte that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,829, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,830,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,831, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,832,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,833, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,835,"ublic static byte or(byte first, byte second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,836,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,837,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,841, Expects a char that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,843, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,844,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,845, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,846,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,847, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,849,"ublic static char or(char first, char second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,850,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,851,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,855, Expects a double that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,857, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,858,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,859, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,860,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,861, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,863,"ublic static double or(double first, double second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,864,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,865,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,869, Expects a float that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,871, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,872,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,873, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,874,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,875, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,877,"ublic static float or(float first, float second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,878,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,879,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,883, Expects an int that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,885, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,886,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,887, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,888,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,889, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,891,"ublic static int or(int first, int second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,892,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,893,eturn first;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,897, Expects a long that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,899, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,900,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,901, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,902,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,903, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,905,"ublic static long or(long first, long second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,906,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,907,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,911, Expects a short that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,913, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,914,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,915, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,916,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,917, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,919,"ublic static short or(short first, short second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,920,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,921,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,925, Expects an Object that matches one of the given expectations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,927, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,928,"            the type of the object, it is passed through to prevent casts."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,929, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,930,            placeholder for the first expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,931, @param second
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,932,            placeholder for the second expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,933, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,935,"ublic static <T> T or(T first, T second) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,936,astArguments.reportOr(2);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,937,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,941, Expects a boolean that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,943, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,944,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,945, @return <code>false</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,947,ublic static boolean not(boolean first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,948,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,949,eturn false;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,953, Expects a byte that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,955, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,956,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,957, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,959,ublic static byte not(byte first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,960,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,961,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,965, Expects a char that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,967, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,968,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,969, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,971,ublic static char not(char first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,972,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,973,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,977, Expects a double that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,979, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,980,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,981, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,983,ublic static double not(double first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,984,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,985,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,989, Expects a float that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,991, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,992,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,993, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,995,ublic static float not(float first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,996,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,997,eturn first;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1001, Expects an int that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1003, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1004,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1005, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1007,ublic static int not(int first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1008,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1009,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1013, Expects a long that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1015, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1016,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1017, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1019,ublic static long not(long first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1020,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1021,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1025, Expects a short that does not match the given expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1027, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1028,            placeholder for the expectation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1029, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1031,ublic static short not(short first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1032,astArguments.reportNot();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1033,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1037, Expects an Object that does not match the given expectation.
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,287,"* Expects an object implementing the given class. For details, see the"
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,288,* EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1040,"            the type of the object, it is passed through to prevent casts."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1041, @param first
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1042,            placeholder for the expectation.
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,291,*            the accepted type.
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,292,* @param clazz
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,293,*            the class of the accepted type.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1045,ublic static <T> T not(T first) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1046,astArguments.reportNot();
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,296,public static <T> T isA(Class<T> clazz) {
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,297,LastArguments.reportMatcher(new InstanceOf(clazz));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1058,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,309,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1070,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,321,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1082,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,333,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1094,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,345,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1106,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,357,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1118,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,369,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1130,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,381,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1142,eportMatcher(new Equals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,393,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1154,eportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1155,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1159," Expects a boolean array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1160," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1162, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1163,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1164, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1166,ublic static boolean[] aryEq(boolean[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1167,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1168,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1172," Expects a byte array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1173," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1175, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1176,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1177, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1179,ublic static byte[] aryEq(byte[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1180,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1181,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1185," Expects a char array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1186," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1188, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1189,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1190, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1192,ublic static char[] aryEq(char[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1193,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1194,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1198," Expects a double array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1199," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1201, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1202,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1203, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1205,ublic static double[] aryEq(double[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1206,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1207,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1211," Expects a float array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1212," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1214, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1215,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1216, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1218,ublic static float[] aryEq(float[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1219,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1220,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1224," Expects an int array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1225," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1227, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1228,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1229, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1231,ublic static int[] aryEq(int[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1232,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1233,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1237," Expects a long array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1238," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1240, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1241,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1242, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1244,ublic static long[] aryEq(long[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1245,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1246,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1250," Expects a short array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1251," have the same length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1253, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1254,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1255, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1257,ublic static short[] aryEq(short[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1258,eportMatcher(new ArrayEquals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1259,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1263," Expects an Object array that is equal to the given array, i.e. it has to"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1264," have the same type, length, and each element has to be equal."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1266, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1267,"            the type of the array, it is passed through to prevent casts."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1268, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1269,            the given arry.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1270, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1272,ublic static <T> T[] aryEq(T[] value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1273,eportMatcher(new ArrayEquals(value));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,405,LastArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1283,eportMatcher(Null.NULL);
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,415,LastArguments.reportMatcher(Null.NULL);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1293,eportMatcher(NotNull.NOT_NULL);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1294,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1298, Expects a string that contains a substring that matches the given regular
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1299," expression. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1301, @param regex
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1302,            the regular expression.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1303, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1305,ublic static String find(String regex) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1306,eportMatcher(new Find(regex));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,425,LastArguments.reportMatcher(NotNull.NOT_NULL);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1319,eportMatcher(new Matches(regex));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1320,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1324," Expects a string that starts with the given prefix. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1325, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1327, @param prefix
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1328,            the prefix.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1329, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1331,ublic static String startsWith(String prefix) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1332,eportMatcher(new StartsWith(prefix));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1333,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1337," Expects a string that ends with the given suffix. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1338, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1340, @param suffix
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1341,            the suffix.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1342, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1344,ublic static String endsWith(String suffix) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1345,eportMatcher(new EndsWith(suffix));
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,438,LastArguments.reportMatcher(new Matches(regex));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1361,"eportMatcher(new EqualsWithDelta(value, delta));"
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,454,"LastArguments.reportMatcher(new EqualsWithDelta(value, delta));"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1377,"eportMatcher(new EqualsWithDelta(value, delta));"
True,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,470,"LastArguments.reportMatcher(new EqualsWithDelta(value, delta));"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1382," Expects an Object that is the same as the given value. For details, see"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1383, the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1385, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1386,"            the type of the object, it is passed through to prevent casts."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1387, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1388,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1389, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1391,ublic static <T> T same(T value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1392,eportMatcher(new Same(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1393,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1397, Switches the given mock objects (more exactly: the controls of the mock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1398," objects) to replay mode. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1400, @param mocks
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1401,            the mock objects.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1403,ublic static void replay(Object... mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1404,or (Object mock : mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1405,lassExtensionHelper.getControl(mock).replay();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1410, Resets the given mock objects (more exactly: the controls of the mock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1411," objects). For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1413, @param mocks
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1414,            the mock objects.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1416,ublic static void reset(Object... mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1417,or (Object mock : mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1418,lassExtensionHelper.getControl(mock).reset();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1423, Verifies the given mock objects (more exactly: the controls of the mock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1424, objects).
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1426, @param mocks
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1427,            the mock objects.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1429,ublic static void verify(Object... mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1430,or (Object mock : mocks) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1431,lassExtensionHelper.getControl(mock).verify();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1436, Switches order checking of the given mock object (more exactly: the
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1437," control of the mock object) the on and off. For details, see the EasyMock"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1438, documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1440, @param mock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1441,            the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1442, @param state
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1443,"            <code>true</code> switches order checking on,"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1444,            <code>false</code> switches it off.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1446,"ublic static void checkOrder(Object mock, boolean state) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1447,lassExtensionHelper.getControl(mock).checkOrder(state);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1451, Reports an argument matcher. This method is needed to define own argument
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1452," matchers. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1454, @param matcher
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1456,ublic static void reportMatcher(IArgumentMatcher matcher) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1457,astArguments.reportMatcher(matcher);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1460,rivate static MocksControl getControl(Object mock) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1461,eturn ((ObjectMethodsFilter<MockInvocationHandler>) Proxy
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1462,getInvocationHandler(mock)).getDelegate().getControl();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1484, Expects a comparable argument equals to the given value according to their
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1485," compareTo method. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1487, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1488,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1489, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1491,ublic static <T extends Comparable<T>> T cmpEq(Comparable<T> value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1492,eportMatcher(new CompareEqual<T>(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1493,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1497, Expects an argument that will be compared using the provided comparator.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1498, The following comparison will take place:
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1499, <p>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1500," <code>comparator.compare(actual, expected) operator 0</code>"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1501, </p>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1502," For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1504, @param value the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1505, @param comparator Comparator used to compare the actual with expected value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1506, @param operator The comparison operator.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1507, @return <code>null</code>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1509,"ublic static <T> T cmp(T value, Comparator<T> comparator, LogicalOperator operator) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1510,"eportMatcher(new Compare<T>(value, comparator, operator));"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,1511,eturn null;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,25,bjectMethodsFilter<MockInvocationHandler> handler;
True,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,25,MockitoObjectMethodsFilter<MockInvocationHandler> handler;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,29,andler = (ObjectMethodsFilter) getInterceptor(mock)
True,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,29,handler = (MockitoObjectMethodsFilter) getInterceptor(mock)
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,32,andler = (ObjectMethodsFilter) Proxy
True,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,32,handler = (MockitoObjectMethodsFilter) Proxy
False,src/org/easymock/internal/ClassProxyFactory.java,src/org/easymock/internal/ClassProxyFactory.java,33,/ Dirty trick to fix ObjectMethodsFilter
True,src/org/easymock/internal/ClassProxyFactory.java,src/org/easymock/internal/ClassProxyFactory.java,33,// Dirty trick to fix MockitoObjectMethodsFilter
False,src/org/easymock/internal/ClassProxyFactory.java,src/org/easymock/internal/ClassProxyFactory.java,124,"ield methodField = retrieveField(ObjectMethodsFilter.class,"
True,src/org/easymock/internal/ClassProxyFactory.java,src/org/easymock/internal/ClassProxyFactory.java,124,"Field methodField = retrieveField(MockitoObjectMethodsFilter.class,"
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,11,ublic class ObjectMethodsFilter<T extends MockAwareInvocationHandler> implements MockAwareInvocationHandler {
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,11,//TODO rename
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,12,public class MockitoObjectMethodsFilter<T extends MockAwareInvocationHandler> implements MockAwareInvocationHandler {
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,23,"ublic ObjectMethodsFilter(Class toMock, T delegate,"
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,24,"public MockitoObjectMethodsFilter(Class toMock, T delegate,"
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/MockitoObjectMethodsFilter.java,62,/TODO unit test it or check if tested properly
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,37,"eturn proxyFactory.createProxy(toMock, new ObjectMethodsFilter("
True,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,37,"return proxyFactory.createProxy(toMock, new MockitoObjectMethodsFilter("
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,48,"eturn proxyFactory.createProxy(toMock, new ObjectMethodsFilter("
True,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,48,"return proxyFactory.createProxy(toMock, new MockitoObjectMethodsFilter("
False,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,9,mport org.easymock.internal.ObjectMethodsFilter;
True,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,9,import org.easymock.internal.MockitoObjectMethodsFilter;
False,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,22,bjectMethodsFilter<MockitoControl<T>> handler;
True,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,22,MockitoObjectMethodsFilter<MockitoControl<T>> handler;
False,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,26,andler = (ObjectMethodsFilter) getInterceptor(mock)
True,src/org/mockito/MockUtil.java,src/org/mockito/MockUtil.java,26,handler = (MockitoObjectMethodsFilter) getInterceptor(mock)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,12,"eturn proxyFactory.createProxy(classToMock, new ObjectMethodsFilter<MockitoControl>("
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,12,"return proxyFactory.createProxy(classToMock, new MockitoObjectMethodsFilter<MockitoControl>("
False,test/org/easymock/CompareToTest.java,test/org/easymock/ComparableMatchersTest.java,15,ublic class CompareToTest {
True,test/org/easymock/CompareToTest.java,test/org/easymock/ComparableMatchersTest.java,15,public class ComparableMatchersTest {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,7,mport static org.junit.Assert.*;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,8,import static org.junit.Assert.*;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,9,import static org.mockito.Mockito.stub;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,10,mport java.math.*;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,11,mport java.util.*;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,11,import java.math.BigDecimal;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,12,import java.util.HashMap;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,13,mport org.easymock.internal.matchers.*;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,15,mport org.mockito.Mockito;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,16,mport org.mockito.exceptions.MockVerificationAssertionError;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,18,mport static org.mockito.Mockito.*;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,15,import org.mockito.*;
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,16,import static org.mockito.Matchers.*;
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,21,ublic class UsingMatchersTest {
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,19,public class MatchersTest {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,29,Test
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,30,ublic void shouldScreamWhenMatchersAreInvalid() {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,31,"ock.simpleMethodWithArgument(not(eq(""asd"")));"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,32,ry {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,33,"ock.simpleMethodWithArgument(not(""jkl""));"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,34,ail();
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,35, catch (IllegalStateException e) {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,36,"ssertEquals(""no matchers found."", e.getMessage());"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,38,ry {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,39,"ock.simpleMethodWithArgument(or(eq(""jkl""), ""asd""));"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,40,ail();
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,41, catch (IllegalStateException e) {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,42,"ssertEquals(""2 matchers expected, 1 recorded."", e.getMessage());"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,44,ry {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,45,"ock.threeArgumentMethod(1, ""asd"", eq(""asd""));"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,46,ail();
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,47, catch (IllegalStateException e) {
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,48,"ssertEquals(""3 matchers expected, 1 recorded."", e.getMessage());"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,86,"tub(mock.oneArg(or(eq((byte) 1), eq((byte) 2)))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,87,"tub(mock.oneArg(or(eq((char) 1), eq((char) 2)))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,88,"tub(mock.oneArg(or(eq((double) 1), eq((double) 2)))).andReturn(""3"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,89,"tub(mock.oneArg(or(eq((float) 1), eq((float) 2)))).andReturn(""4"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,90,"tub(mock.oneArg(or(eq((int) 1), eq((int) 2)))).andReturn(""5"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,91,"tub(mock.oneArg(or(eq((long) 1), eq((long) 2)))).andReturn(""6"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,92,"tub(mock.oneArg(or(eq((short) 1), eq((short) 2)))).andReturn(""7"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,93,"tub(mock.oneArg(or(eq(""asd""), eq(""jkl"")))).andReturn(""8"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,94,"tub(mock.oneArg(or(eq(this.getClass()), eq(Object.class)))).andReturn(""9"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,61,"stub(mock.oneArg(Matchers.or(eq((byte) 1), eq((byte) 2)))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,62,"stub(mock.oneArg(Matchers.or(eq((char) 1), eq((char) 2)))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,63,"stub(mock.oneArg(Matchers.or(eq((double) 1), eq((double) 2)))).andReturn(""3"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,64,"stub(mock.oneArg(Matchers.or(eq((float) 1), eq((float) 2)))).andReturn(""4"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,65,"stub(mock.oneArg(Matchers.or(eq((int) 1), eq((int) 2)))).andReturn(""5"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,66,"stub(mock.oneArg(Matchers.or(eq((long) 1), eq((long) 2)))).andReturn(""6"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,67,"stub(mock.oneArg(Matchers.or(eq((short) 1), eq((short) 2)))).andReturn(""7"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,68,"stub(mock.oneArg(Matchers.or(eq(""asd""), eq(""jkl"")))).andReturn(""8"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,69,"stub(mock.oneArg(Matchers.or(eq(this.getClass()), eq(Object.class)))).andReturn(""9"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,117,"tub(mock.oneArg(not(eq(false)))).andReturn(""0"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,118,"tub(mock.oneArg(not(eq((byte) 1)))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,119,"tub(mock.oneArg(not(eq('a')))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,120,"tub(mock.oneArg(not(eq((double) 1)))).andReturn(""3"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,121,"tub(mock.oneArg(not(eq((float) 1)))).andReturn(""4"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,122,"tub(mock.oneArg(not(eq((int) 1)))).andReturn(""5"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,123,"tub(mock.oneArg(not(eq((long) 1)))).andReturn(""6"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,124,"tub(mock.oneArg(not(eq((short) 1)))).andReturn(""7"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,125,"tub(mock.oneArg(not(contains(""a"")))).andReturn(""8"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,126,"tub(mock.oneArg(not(isA(Class.class)))).andReturn(""9"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,92,"stub(mock.oneArg(Matchers.not(eq(false)))).andReturn(""0"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,93,"stub(mock.oneArg(Matchers.not(eq((byte) 1)))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,94,"stub(mock.oneArg(Matchers.not(eq('a')))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,95,"stub(mock.oneArg(Matchers.not(eq((double) 1)))).andReturn(""3"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,96,"stub(mock.oneArg(Matchers.not(eq((float) 1)))).andReturn(""4"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,97,"stub(mock.oneArg(Matchers.not(eq((int) 1)))).andReturn(""5"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,98,"stub(mock.oneArg(Matchers.not(eq((long) 1)))).andReturn(""6"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,99,"stub(mock.oneArg(Matchers.not(eq((short) 1)))).andReturn(""7"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,100,"stub(mock.oneArg(Matchers.not(contains(""a"")))).andReturn(""8"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,101,"stub(mock.oneArg(Matchers.not(isA(Class.class)))).andReturn(""9"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,238,"tub(mock.oneArg(cmpEq(new BigDecimal(""1.5"")))).andReturn(""0"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,213,"stub(mock.oneArg(Matchers.cmpEq(new BigDecimal(""1.5"")))).andReturn(""0"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,275,"tub(mock.oneArray(aryEq(new boolean[] { true, false, false }))).andReturn(""0"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,276,"tub(mock.oneArray(aryEq(new byte[] { 1 }))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,277,"tub(mock.oneArray(aryEq(new char[] { 1 }))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,278,"tub(mock.oneArray(aryEq(new double[] { 1 }))).andReturn(""3"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,279,"tub(mock.oneArray(aryEq(new float[] { 1 }))).andReturn(""4"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,280,"tub(mock.oneArray(aryEq(new int[] { 1 }))).andReturn(""5"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,281,"tub(mock.oneArray(aryEq(new long[] { 1 }))).andReturn(""6"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,282,"tub(mock.oneArray(aryEq(new short[] { 1 }))).andReturn(""7"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,283,"tub(mock.oneArray(aryEq(new String[] { ""Test"" }))).andReturn(""8"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,284,"tub(mock.oneArray(aryEq(new Object[] { ""Test"", new Integer(4) }))).andReturn(""9"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,250,"stub(mock.oneArray(Matchers.aryEq(new boolean[] { true, false, false }))).andReturn(""0"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,251,"stub(mock.oneArray(Matchers.aryEq(new byte[] { 1 }))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,252,"stub(mock.oneArray(Matchers.aryEq(new char[] { 1 }))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,253,"stub(mock.oneArray(Matchers.aryEq(new double[] { 1 }))).andReturn(""3"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,254,"stub(mock.oneArray(Matchers.aryEq(new float[] { 1 }))).andReturn(""4"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,255,"stub(mock.oneArray(Matchers.aryEq(new int[] { 1 }))).andReturn(""5"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,256,"stub(mock.oneArray(Matchers.aryEq(new long[] { 1 }))).andReturn(""6"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,257,"stub(mock.oneArray(Matchers.aryEq(new short[] { 1 }))).andReturn(""7"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,258,"stub(mock.oneArray(Matchers.aryEq(new String[] { ""Test"" }))).andReturn(""8"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,259,"stub(mock.oneArray(Matchers.aryEq(new Object[] { ""Test"", new Integer(4) }))).andReturn(""9"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,359,"tub(mock.oneArg(or(eq(7), eq(9)))).andReturn(""7 or 9"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,334,"stub(mock.oneArg(Matchers.or(eq(7), eq(9)))).andReturn(""7 or 9"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,369,"tub(mock.threeArgumentMethod(eq(1), not(isNull()), eq(""""))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,344,"stub(mock.threeArgumentMethod(eq(1), Matchers.not(isNull()), eq(""""))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,378,"tub(mock.threeArgumentMethod(eq(1), not(notNull()), eq(""""))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,353,"stub(mock.threeArgumentMethod(eq(1), Matchers.not(notNull()), eq(""""))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,387,"tub(mock.oneArg(find(""([a-z]+)\\d""))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,362,"stub(mock.oneArg(Matchers.find(""([a-z]+)\\d""))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,415,"tub(mock.oneArg(startsWith(""ab""))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,416,"tub(mock.oneArg(startsWith(""bc""))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,390,"stub(mock.oneArg(Matchers.startsWith(""ab""))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,391,"stub(mock.oneArg(Matchers.startsWith(""bc""))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,425,"tub(mock.oneArg(endsWith(""ab""))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,426,"tub(mock.oneArg(endsWith(""bc""))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,400,"stub(mock.oneArg(Matchers.endsWith(""ab""))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,401,"stub(mock.oneArg(Matchers.endsWith(""bc""))).andReturn(""2"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,464,"tub(mock.oneArg(same(one))).andReturn(""1"");"
False,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,465,"tub(mock.oneArg(same(two))).andReturn(""2"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,439,"stub(mock.oneArg(Matchers.same(one))).andReturn(""1"");"
True,test/org/easymock/UsingMatchersTest.java,test/org/easymock/MatchersTest.java,440,"stub(mock.oneArg(Matchers.same(two))).andReturn(""2"");"
False,test/org/easymock/ConstraintsToStringTest.java,test/org/easymock/MatchersToStringTest.java,17,ublic class ConstraintsToStringTest {
True,test/org/easymock/ConstraintsToStringTest.java,test/org/easymock/MatchersToStringTest.java,17,public class MatchersToStringTest {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,1,ackage org.easymock;
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,3,mport org.easymock.IMocksControl;
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,4,mport org.junit.Test;
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,6,mport static org.easymock.EasyMock.*;
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,9,/TODO change this test so it asserts nice exception messages and method name is displayed
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,10,ublic class NameTest {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,11,Test
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,12,ublic void nameForMock() {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,13,"Methods mock = createMock(""mock"", IMethods.class);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,14,ock.simpleMethod();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,15,eplay(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,16,ry {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,17,erify(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,18, catch (AssertionError expected) {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,19,tring actualMessage = expected.getMessage();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,20,"tring expectedMessage = ""\n  Expectation failure on verify:\n    mock.simpleMethod(): expected: 1, actual: 0"";"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,21,"ssertEquals(expectedMessage, actualMessage);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,24,Test
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,25,ublic void nameForStrictMock() {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,26,"Methods mock = createStrictMock(""mock"", IMethods.class);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,27,ock.simpleMethod();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,28,eplay(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,29,ry {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,30,erify(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,31, catch (AssertionError expected) {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,32,tring actualMessage = expected.getMessage();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,33,"tring expectedMessage = ""\n  Expectation failure on verify:\n    mock.simpleMethod(): expected: 1, actual: 0"";"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,34,"ssertEquals(expectedMessage, actualMessage);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,37,Test
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,38,ublic void nameForNiceMock() {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,39,"Methods mock = createNiceMock(""mock"", IMethods.class);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,40,ock.simpleMethod();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,41,eplay(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,42,ry {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,43,erify(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,44, catch (AssertionError expected) {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,45,tring actualMessage = expected.getMessage();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,46,"tring expectedMessage = ""\n  Expectation failure on verify:\n    mock.simpleMethod(): expected: 1, actual: 0"";"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,47,"ssertEquals(expectedMessage, actualMessage);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,50,Test
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,51,ublic void nameForMocksControl() {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,52,MocksControl control = createControl();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,53,"Methods mock = control.createMock(""mock"", IMethods.class);"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,54,ock.simpleMethod();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,55,eplay(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,56,ry {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,57,erify(mock);
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,58, catch (AssertionError expected) {
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,59,tring actualMessage = expected.getMessage();
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,60,"tring expectedMessage = ""\n  Expectation failure on verify:\n    mock.simpleMethod(): expected: 1, actual: 0"";"
False,test/org/easymock/NameTest.java,test/org/easymock/NameTest.java,61,"ssertEquals(expectedMessage, actualMessage);"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,1,package org.easymock;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,3,import org.junit.*;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,4,import org.mockito.Mockito;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,5,import org.mockito.exceptions.MockVerificationAssertionError;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,7,import static org.mockito.Mockito.*;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,8,import static org.junit.Assert.*;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,10,public class NiceMessagesWhenVerificationFailsTest {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,12,private IMethods mock;
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,14,@Before
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,15,public void setup() {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,16,mock = Mockito.mock(IMethods.class);
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,19,@Ignore
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,20,@Test
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,21,public void shouldPrintMethodName() {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,22,try {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,23,verify(mock).simpleMethod();
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,24,} catch (MockVerificationAssertionError expected) {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,25,String actualMessage = expected.getMessage();
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,26,"String expectedMessage = ""\n  Method not invoked: IMethods.simpleMethod()"";"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,27,"assertEquals(expectedMessage, actualMessage);"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,31,@Ignore
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,32,@Test
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,33,public void shouldPrintMethodNameAndArguments() {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,34,try {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,35,"verify(mock).threeArgumentMethod(12, new Object(), ""some string"");"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,36,} catch (MockVerificationAssertionError expected) {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,37,String actualMessage = expected.getMessage();
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,38,"String expectedMessage = ""\n  Method not invoked: IMethods.threeArgumentMethod(12, id1234123, \""some string\"")"";"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,39,"assertEquals(expectedMessage, actualMessage);"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,43,@Ignore
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,44,@Test
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,45,public void shouldPrintFirstUnexpectedInvocation() {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,46,mock.oneArg(true);
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,47,"mock.threeArgumentMethod(1, ""2"", ""3"");"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,48,try {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,49,verifyNoMoreInteractions(mock);
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,50,} catch (MockVerificationAssertionError expected) {
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,51,String actualMessage = expected.getMessage();
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,52,"String expectedMessage = ""\n  No interactions expected but found: IMethods.oneArg(true)"";"
True,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,test/org/easymock/NiceMessagesWhenVerificationFailsTest.java,53,"assertEquals(expectedMessage, actualMessage);"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,5,ackage org.easymock;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,10,mport org.easymock.internal.ReplayState;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,11,mport org.junit.Before;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,12,mport org.junit.Test;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,14,ublic class UsageStrictMockTest {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,15,rivate IMethods mock;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,17,Before
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,18,ublic void setup() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,19,ock = createStrictMock(IMethods.class);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,20,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,21,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,22,eplay(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,25,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,26,ublic void orderedCallsSucces() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,27,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,28,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,29,erify(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,32,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,33,ublic void unorderedCallsFailure() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,34,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,35,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,36,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,37, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,38,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,40,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,41,"ail(""unordered calls accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,45,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,46,ublic void tooManyCallsFailure() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,47,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,48,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,50,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,51,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,52,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,53, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,54,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,56,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,57,"ail(""too many calls accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,61,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,62,ublic void tooFewCallsFailure() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,63,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,64,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,65,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,66,erify(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,67, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,68,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,69,"ssertTrue(""stack trace must be filled in"", Util.getStackTrace("
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,70,xpected).indexOf(ReplayState.class.getName()) == -1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,72,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,73,"ail(""too few calls accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,77,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,78,ublic void differentMethods() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,80,eset(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,82,ock.booleanReturningMethod(0);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,83,xpectLastCall().andReturn(true);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,84,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,85,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,86,"xpectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,87,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,88,xpectLastCall().atLeastOnce();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,90,eplay(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,91,"ssertEquals(true, mock.booleanReturningMethod(0));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,92,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,94,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,95,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,96,erify(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,97, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,98,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,99,ssertEquals(
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,100,"\n  Expectation failure on verify:"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,101," ""\n    simpleMethod(): expected: 1, actual: 1"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,102," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 0"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,103," ""\n    simpleMethod(): expected: at least 1, actual: 0"","
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,104,xpected.getMessage());
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,106,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,107,"ail(""too few calls accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,110,"ssertEquals(false, mock.booleanReturningMethod(1));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,112,ailed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,113,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,114,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,115, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,116,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,117,ssertEquals(
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,118,"\n  Unexpected method call simpleMethod():"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,119," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 1"","
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,120,xpected.getMessage());
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,122,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,123,"ail(""wrong call accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,127,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,128,ublic void range() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,130,eset(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,132,ock.booleanReturningMethod(0);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,133,xpectLastCall().andReturn(true);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,134,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,135,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,136,"xpectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,137,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,138,xpectLastCall().atLeastOnce();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,139,xpect(mock.booleanReturningMethod(1)).andReturn(false);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,141,eplay(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,143,ock.booleanReturningMethod(0);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,144,ock.simpleMethod();
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,146,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,147,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,148,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,150,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,152,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,153,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,154, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,155,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,156,ssertEquals(
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,157,"\n  Unexpected method call booleanReturningMethod(1):"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,158," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 3 (+1)"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,159," ""\n    simpleMethod(): expected: at least 1, actual: 0"","
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,160,xpected.getMessage());
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,162,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,163,"ail(""too many calls accepted"");"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,167,Test
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,168,ublic void stubBehavior() {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,169,eset(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,171,ock.booleanReturningMethod(1);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,172,xpectLastCall().andReturn(true).andReturn(false).andReturn(true);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,173,ock.booleanReturningMethod(anyInt());
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,174,xpectLastCall().andStubReturn(true);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,176,eplay(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,178,"ssertEquals(true, mock.booleanReturningMethod(2));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,179,"ssertEquals(true, mock.booleanReturningMethod(3));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,180,"ssertEquals(true, mock.booleanReturningMethod(1));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,181,"ssertEquals(false, mock.booleanReturningMethod(1));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,182,"ssertEquals(true, mock.booleanReturningMethod(3));"
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,184,oolean failed = false;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,185,ry {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,186,erify(mock);
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,187, catch (AssertionError expected) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,188,ailed = true;
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,189,ssertEquals(
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,190,"\n  Expectation failure on verify:"""
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,191," ""\n    booleanReturningMethod(1): expected: 3, actual: 2"","
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,192,xpected.getMessage());
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,194,f (!failed) {
False,test/org/easymock/UsageStrictMockTest.java,test/org/easymock/UsageStrictMockTest.java,195,"ail(""too few calls accepted"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,5,ackage org.easymock;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,10,mport org.junit.Before;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,11,mport org.junit.Test;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,13,ublic class UsageTest {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,15,Methods mock;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,17,Before
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,18,ublic void setup() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,19,ock = createMock(IMethods.class);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,22,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,23,ublic void exactCallCountByLastCall() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,24,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,25,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,27,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,28,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,30,oolean failed = false;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,31,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,32,ock.oneArg(false);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,33, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,34,ailed = true;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,36,f (!failed)
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,37,"ail(""expected AssertionError"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,40,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,41,ublic void openCallCountByLastCall() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,42,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,43,atLeastOnce();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,45,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,47,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,48,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,49,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,52,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,53,ublic void exactCallCountByLastThrowable() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,54,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,55,andThrow(new IndexOutOfBoundsException());
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,57,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,59,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,60,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,62,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,63,ock.oneArg(false);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,64,ail();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,65, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,68,oolean failed = true;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,69,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,70,ock.oneArg(false);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,71,ailed = false;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,72, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,74,f (!failed)
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,75,"ail(""expected AssertionError"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,78,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,79,ublic void openCallCountByLastThrowable() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,80,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,81,andThrow(new IndexOutOfBoundsException()).atLeastOnce();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,83,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,85,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,86,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,88,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,89,ock.oneArg(false);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,90, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,92,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,93,ock.oneArg(false);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,94, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,98,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,99,ublic void moreThanOneArgument() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,100,"xpect(mock.threeArgumentMethod(1, ""2"", ""3"")).andReturn(""Test"")"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,101,times(2);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,103,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,105,"ssertEquals(""Test"", mock.threeArgumentMethod(1, ""2"", ""3""));"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,107,oolean failed = true;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,108,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,109,erify(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,110,ailed = false;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,111, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,112,ssertEquals(
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,113,"\n  Expectation failure on verify:"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,114," ""\n    threeArgumentMethod(1, \""2\"", \""3\""): expected: 2, actual: 1"","
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,115,xpected.getMessage());
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,117,f (!failed) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,118,"ail(""exception expected"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,122,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,123,ublic void wrongArguments() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,124,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,125,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,127,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,128,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,129,ail();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,130, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,131,ssertEquals(
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,132,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,133," ""\n    simpleMethodWithArgument(\""3\""): expected: 1, actual: 0"","
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,134,xpected.getMessage());
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,139,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,140,ublic void summarizeSameObjectArguments() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,141,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,142,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,143,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,145,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,146,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,147,ail();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,148, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,149,ssertEquals(
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,150,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,151," ""\n    simpleMethodWithArgument(\""3\""): expected: 2, actual: 0"","
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,152,xpected.getMessage());
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,157,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,158,ublic void argumentsOrdered() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,159,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,160,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,161,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,162,"ock.simpleMethodWithArgument(""0"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,163,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,164,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,166,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,167,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,168,"ail(""exception expected"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,169, catch (AssertionError expected) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,170,ssertEquals(
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,171,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,172," ""\n    simpleMethodWithArgument(\""4\""): expected: 1, actual: 0"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,173," ""\n    simpleMethodWithArgument(\""3\""): expected: 1, actual: 0"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,174," ""\n    simpleMethodWithArgument(\""2\""): expected: 1, actual: 0"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,175," ""\n    simpleMethodWithArgument(\""0\""): expected: 1, actual: 0"""
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,176," ""\n    simpleMethodWithArgument(\""1\""): expected: 1, actual: 0"","
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,177,xpected.getMessage());
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,182,Test
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,183,ublic void mixingOrderedAndUnordered() {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,184,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,185,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,186,"heckOrder(mock, true);"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,187,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,188,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,189,"heckOrder(mock, false);"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,190,"ock.simpleMethodWithArgument(""6"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,191,"ock.simpleMethodWithArgument(""7"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,192,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,194,eplay(mock);
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,196,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,197,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,199,oolean failed = false;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,200,ry {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,201,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,202, catch (AssertionError e) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,203,ailed = true;
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,205,f (!failed) {
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,206,ail();
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,209,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,210,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,211,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,212,"ock.simpleMethodWithArgument(""6"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,213,"ock.simpleMethodWithArgument(""7"");"
False,test/org/easymock/UsageTest.java,test/org/easymock/UsageTest.java,215,erify(mock);
True,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,8,import static org.mockito.Matchers.*;
False,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,12,mport org.mockito.Mockito;
True,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,13,import org.mockito.*;
False,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,37,erify(mock).oneArg(same(one));
True,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,38,verify(mock).oneArg(Matchers.same(one));
False,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,41,erify(mock).oneArg(same(three));
True,test/org/easymock/VerificationUsingMatchersTest.java,test/org/easymock/VerificationUsingMatchersTest.java,42,verify(mock).oneArg(Matchers.same(three));
False,test/org/mockito/usage/BasicStubbingTest.java,test/org/mockito/usage/BasicStubbingTest.java,5,mport static org.mockito.util.Matchers.contains;
True,test/org/mockito/usage/BasicStubbingTest.java,test/org/mockito/usage/BasicStubbingTest.java,5,import static org.mockito.util.JUnitMatchers.contains;
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,94,Test
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,95,ublic void easyMockNotVerify() throws Exception {
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,96,ist mock = EasyMock.createMock(List.class);
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,97,/        mock.clear();
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,98,asyMock.replay(mock);
False,test/org/mockito/usage/BasicVerificationTest.java,test/org/mockito/usage/BasicVerificationTest.java,100,asyMock.verify(mock);
False,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,12,mport org.mockito.Mockito;
True,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,12,import org.mockito.*;
False,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,51,"ock.simpleMethodWithArgument(not(eq(""asd"")));"
True,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,51,"mock.simpleMethodWithArgument(Matchers.not(eq(""asd"")));"
False,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,53,"ock.simpleMethodWithArgument(not(""jkl""));"
True,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,53,"mock.simpleMethodWithArgument(Matchers.not(""jkl""));"
False,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,60,"ock.simpleMethodWithArgument(or(eq(""jkl""), ""asd""));"
True,test/org/mockito/usage/InvalidUseOfMatchersTest.java,test/org/mockito/usage/InvalidUseOfMatchersTest.java,60,"mock.simpleMethodWithArgument(Matchers.or(eq(""jkl""), ""asd""));"
False,test/org/mockito/util/Matchers.java,test/org/mockito/util/JUnitMatchers.java,10,ublic class Matchers {
True,test/org/mockito/util/Matchers.java,test/org/mockito/util/JUnitMatchers.java,10,public class JUnitMatchers {
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,8,Test
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,9,ublic void easyMockRocks() {
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,10,rticleCalculator mockCalculator = EasyMock.createMock(ArticleCalculator.class);
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,11,rticleDatabase mockDatabase = EasyMock.createMock(ArticleDatabase.class);
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,13,"rticleManager articleManager = new ArticleManager(mockCalculator, mockDatabase);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,15,"asyMock.expect(mockCalculator.countArticles(""Guardian"")).andReturn(12);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,16,"asyMock.expect(mockCalculator.countArticlesInPolish(""Guardian"")).andReturn(5);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,18,"ockDatabase.updateNumberOfArticles(""Guardian"", 12);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,19,"ockDatabase.updateNumberOfPolishArticles(""Guardian"", 5);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,20,"ockDatabase.updateNumberOfEnglishArticles(""Guardian"", 7);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,22,"asyMock.replay(mockCalculator, mockDatabase);"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,24,"rticleManager.updateArticleCounters(""Guardian"");"
False,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,test/org/mockito/vs/easymock/MockitoVsEasyMockTest.java,26,"asyMock.verify(mockCalculator, mockDatabase);"
