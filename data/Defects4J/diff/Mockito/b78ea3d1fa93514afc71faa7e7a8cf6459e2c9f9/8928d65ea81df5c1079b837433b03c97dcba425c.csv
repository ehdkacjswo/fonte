is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,5,package org.mockitousage.bugs;
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,9,import org.junit.Ignore;
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,10,import org.junit.Test;
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,11,import org.mockitoutil.TestBase;
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,13,public class CovariantOverrideTest extends TestBase {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,15,public static interface ReturnsObject {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,16,Object callMe();
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,19,public static interface ReturnsString extends ReturnsObject {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,20,// Java 5 covariant override of method from parent interface
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,21,String callMe();
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,24,@Test
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,25,public void returnFoo1() {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,26,ReturnsObject mock = mock(ReturnsObject.class);
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,27,"when(mock.callMe()).thenReturn(""foo"");"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,28,"assertEquals(""foo"", mock.callMe()); // Passes"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,31,@Test
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,32,public void returnFoo2() {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,33,ReturnsString mock = mock(ReturnsString.class);
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,34,"when(mock.callMe()).thenReturn(""foo"");"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,35,"assertEquals(""foo"", mock.callMe()); // Passes"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,38,@Test
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,39,public void returnFoo3() {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,40,ReturnsObject mock = mock(ReturnsString.class);
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,41,"when(mock.callMe()).thenReturn(""foo"");"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,42,"assertEquals(""foo"", mock.callMe()); // Passes"
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,45,@Ignore//TODO: not yet implemented
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,46,@Test
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,47,public void returnFoo4() {
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,48,ReturnsString mock = mock(ReturnsString.class);
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,49,mock.callMe(); // covariant override not generated
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,50,ReturnsObject mock2 = mock; // Switch to base type to call covariant override
True,test/org/mockitousage/bugs/CovariantOverrideTest.java,test/org/mockitousage/bugs/CovariantOverrideTest.java,51,verify(mock2).callMe(); // Fails: java.lang.AssertionError: expected:<foo> but was:<null>
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,5,package org.mockitousage.bugs;
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,7,import org.junit.Ignore;
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,8,import org.junit.runner.RunWith;
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,9,import org.mockito.runners.MockitoJUnitRunner;
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,10,import org.mockitoutil.TestBase;
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,12,//TODO before final 1.8
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,13,@Ignore
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,14,@RunWith(MockitoJUnitRunner.class)
True,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,test/org/mockitousage/bugs/MockitoRunnerBreaksWhenNoTestMethodsTest.java,15,public class MockitoRunnerBreaksWhenNoTestMethodsTest extends TestBase {}
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,11,import org.junit.Ignore;
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,16,import org.mockitousage.IMethods;
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,143,//TODO: not yet implemented
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,144,@Ignore
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,145,@Test
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,146,public void shouldCaptureInt() {
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,147,//given
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,148,IMethods mock = mock(IMethods.class);
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,149,ArgumentCaptor<Integer> argument = new ArgumentCaptor<Integer>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,151,//when
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,152,mock.intArgumentMethod(10);
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,154,//then
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,155,verify(mock).intArgumentMethod(argument.capture());
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,156,"assertEquals(10, (int) argument.getValue());"
