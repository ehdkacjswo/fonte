is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,324,"Mockito cannot mock primitives or final classes like: "","
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,325,lazz.toString()
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,324,"""Cannot mock/spy "" + clazz.toString(),"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,325,"""Mockito cannot mock/spy following:"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,326,"""  - final classes"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,327,"""  - anonymous classes"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,328,"""  - primitive types"""
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,46,eturn !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,46,return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers()) && !type.isAnonymousClass();
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,16,import org.mockito.exceptions.base.MockitoException;
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,157,interface Foo {}
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,159,@Test
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,160,public void shouldDealWithAnonymousClasses() {
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,161,try {
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,162,spy(new Foo() {});
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,163,fail();
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,164,} catch (MockitoException e) {
True,test/org/mockitousage/SpyingOnRealObjectsTest.java,test/org/mockitousage/SpyingOnRealObjectsTest.java,165,"assertThat(e.getMessage(), contains(""cannot mock""));"
