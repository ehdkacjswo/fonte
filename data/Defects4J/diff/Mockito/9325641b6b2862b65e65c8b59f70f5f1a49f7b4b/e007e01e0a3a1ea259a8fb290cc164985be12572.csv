is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,10,import java.lang.reflect.Constructor;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,12,import java.lang.reflect.InvocationTargetException;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,69,ockSettings settings = withSettings()
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,70,useConstructor()
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,71,defaultAnswer(Mockito.CALLS_REAL_METHODS)
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,72,name(field.getName());
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,73,f (field.getType().getEnclosingClass() != null
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,74,& !Modifier.isStatic(field.getType().getModifiers())
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,75,& field.getType().getEnclosingClass().isInstance(testInstance)) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,76,ettings.outerInstance(testInstance);
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,78,"ield.set(testInstance, Mockito.mock(field.getType(), settings));"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,71,"field.set(testInstance, newSpyInstance(testInstance, field));"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,75,} catch (InstantiationException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,76,"throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,77,} catch (InvocationTargetException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,78,"throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,84,"private static Object newSpyInstance(Object testInstance, Field field)"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,85,"throws InstantiationException, IllegalAccessException, InvocationTargetException {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,86,MockSettings settings = withSettings()
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,87,.defaultAnswer(Mockito.CALLS_REAL_METHODS)
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,88,.name(field.getName());
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,89,Class<?> type = field.getType();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,90,if (type.isInterface()) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,91,"return Mockito.mock(type,settings.useConstructor());"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,93,try {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,94,if (!Modifier.isStatic(type.getModifiers())) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,95,Class<?> enclosing = type.getEnclosingClass();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,96,if (enclosing != null) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,97,if (!enclosing.isInstance(testInstance)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,98,"throw new MockitoException(""Cannot spy inner "" + type);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,100,if (Modifier.isPrivate(type.getDeclaredConstructor(enclosing).getModifiers())) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,101,"throw new MockitoException(""Cannot spy inner "" + type + "" with private constructor"");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,103,"return Mockito.mock(type, settings"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,104,.useConstructor()
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,105,.outerInstance(testInstance));
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,108,Constructor<?> constructor = type.getDeclaredConstructor();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,109,if (Modifier.isPrivate(constructor.getModifiers())) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,110,constructor.setAccessible(true);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,111,"return Mockito.mock(type, settings"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,112,.spiedInstance(constructor.newInstance()));
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,113,} else {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,114,"return Mockito.mock(type, settings.useConstructor());"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,116,} catch (NoSuchMethodException noDefaultConstructor) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,117,"throw new MockitoException(""0-arg constructor is required to spy "" + type);"
False,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,134,rivate static class CustomListener implements InvocationListener {
False,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,135,ustomListener() {}
True,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,test/org/mockito/internal/handler/InvocationNotifierHandlerTest.java,134,private static class CustomListener implements InvocationListener {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,8,import org.junit.Rule;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,10,import org.junit.rules.ExpectedException;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,30,estedClassWithoutDefinedConstructor staticTypeWithoutDefinedConstructor;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,32,NestedClassWithoutDefinedConstructor staticTypeWithoutDefinedConstructor;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,34,@Rule public final ExpectedException shouldThrow = ExpectedException.none();
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,68,"ssertions.assertThat(e.getMessage()).contains(""Unable to create mock instance"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,72,"Assertions.assertThat(e.getMessage()).contains(""0-arg constructor is required"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,142,@Test
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,143,public void shouldReportWhenInnerClassNotEnclosedByTestInstance() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,144,class Outer {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,145,class Inner {}
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,147,class WithSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,148,@Spy private Outer.Inner inner;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,150,shouldThrow.expect(MockitoException.class);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,151,"shouldThrow.expectMessage(""Cannot spy inner class "");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,152,MockitoAnnotations.initMocks(new WithSpy());
False,test/org/mockitousage/basicapi/MockingDetailsTest.java,test/org/mockitousage/basicapi/MockingDetailsTest.java,19,rivate static class TestClass{
False,test/org/mockitousage/basicapi/MockingDetailsTest.java,test/org/mockitousage/basicapi/MockingDetailsTest.java,20,estClass() {}
True,test/org/mockitousage/basicapi/MockingDetailsTest.java,test/org/mockitousage/basicapi/MockingDetailsTest.java,19,private static class TestClass{
