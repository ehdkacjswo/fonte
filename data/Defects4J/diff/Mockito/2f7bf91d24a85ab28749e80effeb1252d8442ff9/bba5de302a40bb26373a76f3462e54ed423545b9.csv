is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,1,package org.mockito.internal;
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,3,import org.mockito.exceptions.Exceptions;
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,5,public class MissingInvocationVerifier implements Verifier {
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,7,"public void verify(RegisteredInvocations registeredInvocations, InvocationMatcher wanted, VerifyingMode mode) {"
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,8,int actualCount = registeredInvocations.countActual(wanted);
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,9,Integer wantedCount = mode.wantedCount();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,10,boolean atLeastOnce = mode.atLeastOnceMode();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,12,if ((atLeastOnce || wantedCount == 1) && actualCount == 0) {
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,13,"reportMissingInvocationError(registeredInvocations, wanted);"
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,17,"private void reportMissingInvocationError(RegisteredInvocations registeredInvocations, InvocationMatcher wanted) {"
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,18,Invocation actual = registeredInvocations.findActualInvocation(wanted);
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,20,if (actual != null) {
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,21,"reportDiscrepancy(wanted, actual);"
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,22,} else {
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,23,Exceptions.wantedButNotInvoked(wanted.toString());
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,27,"private void reportDiscrepancy(InvocationMatcher wantedInvocation, Invocation actualInvocation) {"
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,28,String wanted = wantedInvocation.toString();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,29,String actual = actualInvocation.toString();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,30,if (wanted.equals(actual)) {
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,31,wanted = wantedInvocation.getInvocation().toStringWithArgumentTypes();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,32,actual = actualInvocation.toStringWithArgumentTypes();
True,src/org/mockito/internal/MissingInvocationVerifier.java,src/org/mockito/internal/MissingInvocationVerifier.java,35,"Exceptions.wantedInvocationDiffersFromActual(wanted, actual, actualInvocation.getStackTrace());"
False,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,23,erifyingRecorder = new VerifyingRecorder<T>();
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,23,"verifyingRecorder = new VerifyingRecorder<T>(new OrderOfInvocationsVerifier(), new MissingInvocationVerifier(), new NumberOfInvocationsVerifier());"
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,1,package org.mockito.internal;
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,3,import org.mockito.exceptions.Exceptions;
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,4,import org.mockito.exceptions.parents.HasStackTrace;
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,6,public class NumberOfInvocationsVerifier implements Verifier {
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,8,"public void verify(RegisteredInvocations registeredInvocations, InvocationMatcher wanted, VerifyingMode mode) {"
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,9,if (mode.orderOfInvocationsMatters() || mode.atLeastOnceMode()) {
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,10,return;
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,13,int actualCount = registeredInvocations.countActual(wanted);
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,14,Integer wantedCount = mode.wantedCount();
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,16,if (actualCount < wantedCount) {
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,17,HasStackTrace lastInvocation = registeredInvocations.getLastInvocationStackTrace(wanted);
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,18,"Exceptions.tooLittleActualInvocations(wantedCount, actualCount, wanted.toString(), lastInvocation);"
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,19,} else if (actualCount > wantedCount) {
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,20,"HasStackTrace firstUndesired = registeredInvocations.getFirstUndesiredInvocationStackTrace(wanted, mode);"
True,src/org/mockito/internal/NumberOfInvocationsVerifier.java,src/org/mockito/internal/NumberOfInvocationsVerifier.java,21,"Exceptions.tooManyActualInvocations(wantedCount, actualCount, wanted.toString(), firstUndesired);"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,1,package org.mockito.internal;
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,3,import java.util.List;
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,5,import org.mockito.exceptions.Exceptions;
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,7,public class OrderOfInvocationsVerifier implements Verifier {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,9,"public void verify(RegisteredInvocations registeredInvocations, InvocationMatcher wanted, VerifyingMode mode) {"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,10,if (!mode.orderOfInvocationsMatters()) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,11,return;
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,14,List<InvocationChunk> chunks = registeredInvocations.unverifiedInvocationChunks(mode);
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,16,if (mode.wantedCountIsZero() && !chunks.isEmpty() && wanted.matches(chunks.get(0).getInvocation())) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,17,"Exceptions.numberOfInvocationsDiffers(0, chunks.get(0).getCount(), wanted.toString());"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,18,} else if (mode.wantedCountIsZero()) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,19,return;
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,22,if (chunks.isEmpty()) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,23,Exceptions.wantedButNotInvoked(wanted.toString());
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,26,if (!wanted.matches(chunks.get(0).getInvocation())) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,27,"reportStrictOrderDiscrepancy(wanted, chunks.get(0).getInvocation());"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,30,if (!mode.atLeastOnceMode() && chunks.get(0).getCount() != mode.wantedCount()) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,31,"Exceptions.numberOfInvocationsDiffers(mode.wantedCount(), chunks.get(0).getCount(), wanted.toString());"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,35,"private void reportStrictOrderDiscrepancy(InvocationMatcher wantedInvocation, Invocation actualInvocation) {"
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,36,String wanted = wantedInvocation.toString();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,37,String actual = actualInvocation.toString();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,38,boolean sameMocks = wantedInvocation.getInvocation().getMock().equals(actualInvocation.getMock());
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,39,boolean sameMethods = wanted.equals(actual);
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,40,if (sameMethods && !sameMocks) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,41,wanted = wantedInvocation.toStringWithSequenceNumber();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,42,actual = actualInvocation.toStringWithSequenceNumber();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,43,} else if (sameMethods) {
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,44,wanted = wantedInvocation.getInvocation().toStringWithArgumentTypes();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,45,actual = actualInvocation.toStringWithArgumentTypes();
True,src/org/mockito/internal/OrderOfInvocationsVerifier.java,src/org/mockito/internal/OrderOfInvocationsVerifier.java,48,"Exceptions.strictlyWantedInvocationDiffersFromActual(wanted, actual, actualInvocation.getStackTrace());"
True,src/org/mockito/internal/Verifier.java,src/org/mockito/internal/Verifier.java,1,package org.mockito.internal;
True,src/org/mockito/internal/Verifier.java,src/org/mockito/internal/Verifier.java,3,public interface Verifier {
True,src/org/mockito/internal/Verifier.java,src/org/mockito/internal/Verifier.java,5,"void verify(RegisteredInvocations registeredInvocations, InvocationMatcher wanted, VerifyingMode mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,7,mport java.util.*;
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,7,import java.util.List;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,9,mport org.mockito.exceptions.*;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,10,mport org.mockito.exceptions.parents.HasStackTrace;
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,9,import org.mockito.exceptions.Exceptions;
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,14,private final Verifier[] verifiers;
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,16,public VerifyingRecorder(Verifier ... verifiers) {
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,17,this.verifiers = verifiers;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,20,ublic List<Invocation> getRegisteredInvocations() {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,21,eturn registeredInvocations.all();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,28,"ublic void verify(InvocationMatcher wanted, VerifyingMode mode) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,29,"heckOrderOfInvocations(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,30,"heckForMissingInvocation(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,31,"heckForWrongNumberOfInvocations(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,32,"egisteredInvocations.markInvocationsAsVerified(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,35,"rivate void checkForMissingInvocation(InvocationMatcher wanted, VerifyingMode mode) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,36,nt actualCount = registeredInvocations.countActual(wanted);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,37,nteger wantedCount = mode.wantedCount();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,38,oolean atLeastOnce = mode.atLeastOnceMode();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,40,f ((atLeastOnce || wantedCount == 1) && actualCount == 0) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,41,eportMissingInvocationError(wanted);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,45,"oid checkForWrongNumberOfInvocations(InvocationMatcher wanted, VerifyingMode mode) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,46,f (mode.orderOfInvocationsMatters() || mode.atLeastOnceMode()) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,47,eturn;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,50,nt actualCount = registeredInvocations.countActual(wanted);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,51,nteger wantedCount = mode.wantedCount();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,53,f (actualCount < wantedCount) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,54,asStackTrace lastInvocation = registeredInvocations.getLastInvocationStackTrace(wanted);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,55,"xceptions.tooLittleActualInvocations(wantedCount, actualCount, wanted.toString(), lastInvocation);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,56, else if (actualCount > wantedCount) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,57,"asStackTrace firstUndesired = registeredInvocations.getFirstUndesiredInvocationStackTrace(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,58,"xceptions.tooManyActualInvocations(wantedCount, actualCount, wanted.toString(), firstUndesired);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,62,rivate void reportMissingInvocationError(InvocationMatcher wanted) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,63,nvocation actual = registeredInvocations.findActualInvocation(wanted);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,65,f (actual != null) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,66,"eportDiscrepancy(wanted, actual);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,67, else {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,68,xceptions.wantedButNotInvoked(wanted.toString());
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,28,public List<Invocation> getRegisteredInvocations() {
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,29,return registeredInvocations.all();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,72,"rivate void reportDiscrepancy(InvocationMatcher wantedInvocation, Invocation actualInvocation) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,73,tring wanted = wantedInvocation.toString();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,74,tring actual = actualInvocation.toString();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,75,f (wanted.equals(actual)) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,76,anted = wantedInvocation.getInvocation().toStringWithArgumentTypes();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,77,ctual = actualInvocation.toStringWithArgumentTypes();
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,32,"public void verify(InvocationMatcher wanted, VerifyingMode mode) {"
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,33,for (Verifier v : verifiers) {
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,34,"v.verify(registeredInvocations, wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,80,"xceptions.wantedInvocationDiffersFromActual(wanted, actual, actualInvocation.getStackTrace());"
True,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,36,"registeredInvocations.markInvocationsAsVerified(wanted, mode);"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,83,"rivate void reportStrictOrderDiscrepancy(InvocationMatcher wantedInvocation, Invocation actualInvocation) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,84,tring wanted = wantedInvocation.toString();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,85,tring actual = actualInvocation.toString();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,86,oolean sameMocks = wantedInvocation.getInvocation().getMock().equals(actualInvocation.getMock());
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,87,oolean sameMethods = wanted.equals(actual);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,88,f (sameMethods && !sameMocks) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,89,anted = wantedInvocation.toStringWithSequenceNumber();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,90,ctual = actualInvocation.toStringWithSequenceNumber();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,91, else if (sameMethods) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,92,anted = wantedInvocation.getInvocation().toStringWithArgumentTypes();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,93,ctual = actualInvocation.toStringWithArgumentTypes();
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,96,"xceptions.strictlyWantedInvocationDiffersFromActual(wanted, actual, actualInvocation.getStackTrace());"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,99,/TODO Cyclomatic Complexity = 10 :|
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,100,"rivate void checkOrderOfInvocations(InvocationMatcher wanted, VerifyingMode mode) {"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,101,f (!mode.orderOfInvocationsMatters()) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,102,eturn;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,105,ist<InvocationChunk> chunks = registeredInvocations.unverifiedInvocationChunks(mode);
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,107,f (mode.wantedCountIsZero() && !chunks.isEmpty() && wanted.matches(chunks.get(0).getInvocation())) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,108,"xceptions.numberOfInvocationsDiffers(0, chunks.get(0).getCount(), wanted.toString());"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,109, else if (mode.wantedCountIsZero()) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,110,eturn;
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,113,f (chunks.isEmpty()) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,114,xceptions.wantedButNotInvoked(wanted.toString());
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,117,f (!wanted.matches(chunks.get(0).getInvocation())) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,118,"eportStrictOrderDiscrepancy(wanted, chunks.get(0).getInvocation());"
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,121,f (!mode.atLeastOnceMode() && chunks.get(0).getCount() != mode.wantedCount()) {
False,src/org/mockito/internal/VerifyingRecorder.java,src/org/mockito/internal/VerifyingRecorder.java,122,"xceptions.numberOfInvocationsDiffers(mode.wantedCount(), chunks.get(0).getCount(), wanted.toString());"
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,11,mport org.junit.Test;
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,11,import org.junit.*;
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,15,ublic class VerifyingRecorderTest extends RequiresValidState {
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,15,public class NumberOfInvocationsVerifierTest extends RequiresValidState {
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,17,private NumberOfInvocationsVerifier verifier;
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,19,@Before
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,20,public void setup() {
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,21,verifier = new NumberOfInvocationsVerifier();
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,19,nvocationMatcher invocation = new InvocationMatcher(new InvocationBuilder().toInvocation());
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,20,erifyingRecorder behavior = new VerifyingRecorder();
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,25,"ehavior.checkForWrongNumberOfInvocations(invocation, inOrder);"
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,29,"verifier.verify(null, null, inOrder);"
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,30,nvocationMatcher invocation = new InvocationMatcher(new InvocationBuilder().toInvocation());
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,31,erifyingRecorder behavior = new VerifyingRecorder();
False,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,35,"ehavior.checkForWrongNumberOfInvocations(invocation, inOrder);"
True,test/org/mockito/internal/VerifyingRecorderTest.java,test/org/mockito/internal/NumberOfInvocationsVerifierTest.java,36,"verifier.verify(null, null, inOrder);"
False,test/org/mockitousage/MultiThreadedTest.java,test/org/mockitousage/MultiThreadedTest.java,34,"erifyingRecorderTest.class,"
True,test/org/mockitousage/MultiThreadedTest.java,test/org/mockitousage/MultiThreadedTest.java,34,"NumberOfInvocationsVerifierTest.class,"
