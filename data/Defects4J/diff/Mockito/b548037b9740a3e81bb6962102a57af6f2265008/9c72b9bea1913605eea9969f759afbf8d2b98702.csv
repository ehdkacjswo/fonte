is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,96,"hrow new MockitoException(""If you are mocking an inner class please ensure the instance of the outer class is supplied via withSettings().outerInstance()"""
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,97," ""\nThe outer class is: '"" + enclosing.getSimpleName() + ""'"");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,96,"throw new MockitoException(""@Spy annotation can only initialize inner classes declared in the test. """
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,97,"+ ""Inner class: '"" + type.getSimpleName() + ""', """
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,98,"+ ""outer class: '"" + enclosing.getSimpleName() + ""'."");"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,99,/TODO SF find out if it is useful
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,100,/	        		if (Modifier.isPrivate(type.getDeclaredConstructor(enclosing).getModifiers())) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,101,/                        throw new AssertionError();
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,102,"/	        			throw new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName() + ""'. """
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,103,"/                                + ""Cannot spy inner type '"" + type.getSimpleName() + ""' because it has private constructor."");"
False,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,29,"ssertEquals(""Unable to create mock instance of 'SomeClass2'.\n"" +"
True,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,29,"assertEquals(""Unable to create instance of 'SomeClass2'.\n"" +"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,166,houldThrow.expect(MockitoException.class);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,167,"houldThrow.expectMessage(""outer class is supplied via withSettings().outerInstance()"");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,168,ockitoAnnotations.initMocks(new WithSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,166,try {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,167,MockitoAnnotations.initMocks(new WithSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,168,fail();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,169,} catch (MockitoException e) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,170,"assertContains(""@Spy annotation can only initialize inner classes"", e.getMessage());"
