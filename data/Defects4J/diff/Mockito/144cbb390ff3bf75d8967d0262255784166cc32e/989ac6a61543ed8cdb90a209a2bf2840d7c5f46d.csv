is_addition,old_file_path,new_file_path,line_num,content
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,16,rivate BaseInteface mock;
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,18,rivate class BaseMessage {}
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,20,rivate class Message extends BaseMessage {}
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,16,private Super mock;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,18,private void setMockWithDowncast(Super mock) {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,19,this.mock = mock;
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,22,rivate interface BaseInteface {
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,23,ublic void print(BaseMessage message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,22,private interface Super {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,23,public void print(Object message);
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,26,rivate interface DerivedInterface extends BaseInteface {
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,27,ublic void print(Message message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,26,private interface Sub extends Super {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,27,public void print(String message);
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,30,rivate void print(BaseMessage message) {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,30,private void print(Object message) {
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,36,erivedInterface derivedMock = mock(DerivedInterface.class);
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,37,ock = derivedMock;
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,38,essage message = new Message();
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,39,rint(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,36,Sub sub = mock(Sub.class);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,37,setMockWithDowncast(sub);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,38,"print(""Hello"");"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,41,erify(derivedMock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,40,"verify(sub).print(""Hello"");"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,48,"Wanted: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$Message)"" +"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,49,"\n"" +"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,50,"Actual: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$BaseMessage)"";"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,47,"""Wanted: Sub.print(class java.lang.String)"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,48,"""\n"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,49,"""Actual: Sub.print(class java.lang.Object)"";"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,58,erivedInterface derivedMock = mock(DerivedInterface.class);
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,59,ock = derivedMock;
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,60,essage message = new Message();
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,61,rint(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,57,Sub sub = mock(Sub.class);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,58,setMockWithDowncast(sub);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,59,"print(""Hello"");"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,64,trictly.verify(derivedMock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,62,"strictly.verify(sub).print(""Hello"");"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,71,"Wanted: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$Message)"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,69,"""Wanted: Sub.print(class java.lang.String)"" +"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,73,"Actual: DerivedInterface.print(class org.mockito.usage.binding.IncorectBindingPuzzleFixedTest$BaseMessage)"";"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,71,"""Actual: Sub.print(class java.lang.Object)"";"
