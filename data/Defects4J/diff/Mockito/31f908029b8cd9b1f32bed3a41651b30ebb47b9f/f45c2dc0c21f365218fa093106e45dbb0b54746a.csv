is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,9,mport org.mockito.invocation.InvocationOnMock;
False,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,10,mport org.mockito.stubbing.Answer;
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,7,import java.io.Serializable;
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,8,import java.lang.reflect.Modifier;
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,10,import org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer;
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,11,import org.mockito.invocation.InvocationOnMock;
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,12,import org.mockito.stubbing.Answer;
False,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,35,ublic Object answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,37,public Object answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,38,if (Modifier.isAbstract(invocation.getMethod().getModifiers())) {
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,39,return new GloballyConfiguredAnswer().answer(invocation);
False,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,3,mport org.junit.Ignore;
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,3,import java.util.List;
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,103,static abstract class AbstractThing {
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,104,abstract String name();
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,105,String fullName() {
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,106,"return ""abstract "" + name();"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,110,@Test
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,111,public void abstractMethodReturnsDefault() {
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,112,AbstractThing thing = spy(AbstractThing.class);
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,113,"assertEquals(""abstract null"", thing.fullName());"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,116,@Test
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,117,public void abstractMethodStubbed() {
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,118,AbstractThing thing = spy(AbstractThing.class);
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,119,"when(thing.name()).thenReturn(""me"");"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,120,"assertEquals(""abstract me"", thing.fullName());"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,123,@Test
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,124,public void testCallsRealInterfaceMethod() {
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,125,"List<String> list = mock(List.class, withSettings().defaultAnswer(CALLS_REAL_METHODS));"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,126,assertNull(list.get(1));
