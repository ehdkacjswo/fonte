is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,9,mport java.lang.reflect.ParameterizedType;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,10,mport java.lang.reflect.Type;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,20,import org.mockito.internal.util.reflection.GenericMaster;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,27,"@SuppressWarnings(""unchecked"")"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,76,ype generic = field.getGenericType();
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,77,f (generic != null && generic instanceof ParameterizedType) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,78,ype actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,79,eturn ArgumentCaptor.forClass(typeToClass(actual));
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,81,eturn ArgumentCaptor.forClass(Object.class);
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,84,rivate Class typeToClass(Type actual) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,85,f (actual.equals(Double.class)) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,86,eturn Double.class;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,88,eturn Object.class;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,76,Class cls = new GenericMaster().getGenericType(field);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,77,return ArgumentCaptor.forClass(cls);
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,4,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,5,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,7,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,8,public class GenericMaster {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,11,* Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,13,* @param field
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,14,* @return
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,16,public Class getGenericType(Field field) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,17,Type generic = field.getGenericType();
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,18,if (generic != null && generic instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,19,Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,20,return (Class) actual;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,23,return Object.class;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,5,import java.lang.reflect.Field;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,6,import java.util.List;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,7,import java.util.Map;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,8,import java.util.Set;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,10,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,12,public class GenericMasterTest {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,14,GenericMaster m = new GenericMaster();
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,16,List<String> one;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,17,Set<Integer> two;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,18,"Map<Double, String> map;"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,19,String nonGeneric;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,21,@Test
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,22,public void shouldFindGenericClass() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,23,"assertEquals(m.getGenericType(field(""one"")), String.class);"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,24,"assertEquals(m.getGenericType(field(""two"")), Integer.class);"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,25,"assertEquals(m.getGenericType(field(""map"")), Double.class);"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,28,@Test
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,29,public void shouldGetObjectForNonGeneric() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,30,"assertEquals(m.getGenericType(field(""nonGeneric"")), Object.class);"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,33,"private Field field(String fieldName) throws SecurityException, NoSuchFieldException {"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,34,return this.getClass().getDeclaredField(fieldName);
True,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,20,void moreFun(int howMuch);
True,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,36,@Captor ArgumentCaptor<Integer> intCaptor;
True,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,38,@Test
True,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,39,public void shouldAutoboxAllPrimitives() {
True,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,test/org/mockitousage/bugs/CaptorAnnotationAutoboxingTest.java,40,"verify(fun, never()).moreFun(intCaptor.capture());"
