is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,62,rivate boolean isOverloaded(Invocation actual) {
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,63,/TODO unit
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,64,eturn invocation.getMock().equals(actual.getMock())
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,65,& invocation.getMethod().getName().equals(actual.getMethod().getName())
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,66,& !invocation.getMethod().equals(actual.getMethod());
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,84, and if arguments are the same cannot be overloaded
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,77,* and: if arguments are the same cannot be overloaded
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,90,oolean methodNameEquals = wantedMethodName.equals(currentMethodName);
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,91,oolean isUnverified = !candidate.isVerified();
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,92,oolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,93,oolean overloadedButSameArgs = isOverloaded(candidate) && argumentsMatch(candidate);
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,83,final boolean methodNameEquals = wantedMethodName.equals(currentMethodName);
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,84,final boolean isUnverified = !candidate.isVerified();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,85,final boolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,86,final boolean methodEquals = invocation.getMethod().equals(candidate.getMethod());
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,87,final boolean overloadedButSameArgs = !methodEquals && argumentsMatch(candidate);
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,8,import static org.mockito.util.ExtraMatchers.*;
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,9,mport java.util.Arrays;
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,16,"@SuppressWarnings(""unchecked"")"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,27,"tackTraceElement elementOne = new StackTraceElement(""MethodInterceptorFilter"", ""intercept"", ""MethodInterceptorFilter.java"", 49);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,28,asStackTrace trace = new HasStackTraceStub(elementOne);
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,28,"HasStackTrace exception = new TraceBuilder().methods(""intercept"").toTrace();"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,29,"List<StackTraceElement> cause = new TraceBuilder().methods(""foo"").toTraceList();"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,30,"tackTraceElement elementTwo = new StackTraceElement(""Mockito"", ""other"", ""Mockito.java"", 90);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,31,ist<StackTraceElement> cause = Arrays.asList(elementTwo);
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,31,"remover.remove(exception, cause);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,33,"emover.remove(trace, cause);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,35,"ssertEquals(1, trace.getStackTrace().length);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,36,"ssertEquals(elementOne, trace.getStackTrace()[0]);"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,37,"/TODO decent arrays equal please, the same in STFT"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,33,"assertThat(exception, hasOnlyThoseMethodsInStackTrace(""intercept""));"
False,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,40,"/TODO even though this stuff is tested on functional level, I want some more tests here - the unit test should be complete"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,36,@Test
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,37,public void testShouldRemoveCommonStackTracePart() {
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,38,"HasStackTrace exception = new TraceBuilder().methods(""intercept"", ""handle"", ""foo"", ""bar"").toTrace();"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,39,"List<StackTraceElement> cause = new TraceBuilder().methods(""intercept"", ""handle"", ""hello"", ""world"").toTraceList();"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,41,"remover.remove(exception, cause);"
True,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,test/org/mockito/exceptions/base/CommonStackTraceRemoverTest.java,43,"assertThat(exception, hasOnlyThoseMethodsInStackTrace(""bar"", ""foo""));"
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,5,package org.mockito.exceptions.base;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,7,import java.util.Collections;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,8,import java.util.LinkedList;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,9,import java.util.List;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,11,public class TraceBuilder {
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,13,private String[] methods;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,15,public TraceBuilder methods(String ... methods) {
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,16,this.methods = methods;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,17,return this;
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,20,public HasStackTrace toTrace() {
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,21,List<StackTraceElement> trace = toTraceList();
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,22,return new HasStackTraceStub(trace.toArray(new StackTraceElement[methods.length]));
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,25,public List<StackTraceElement> toTraceList() {
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,26,List<StackTraceElement> trace = new LinkedList<StackTraceElement>();
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,27,for (String method : methods) {
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,28,"trace.add(new StackTraceElement(""SomeClass"", method, ""SomeClass.java"", 50));"
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,30,Collections.reverse(trace);
True,test/org/mockito/exceptions/base/TraceBuilder.java,test/org/mockito/exceptions/base/TraceBuilder.java,31,return trace;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,17,import org.mockito.exceptions.base.HasStackTrace;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,26,//    public static <T> Matcher<HasStackTrace> hasOnlyThoseMethodsInStackTrace(final String ... methods) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,27,//        return new BaseMatcher<List<StackTraceElement>>() {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,30,public static <T> Matcher hasOnlyThoseMethodsInStackTrace(final String ... methods) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,31,return new BaseMatcher() {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,32,public boolean matches(Object traceElements) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,33,final List<StackTraceElement> trace;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,34,if (traceElements instanceof List) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,35,trace = (List<StackTraceElement>) traceElements;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,36,} else if (traceElements instanceof HasStackTrace) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,37,trace = Arrays.asList(((HasStackTrace) traceElements).getStackTrace());
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,38,} else {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,39,"throw new RuntimeException(""this matcher cannot deal with object provided: "" + traceElements);"
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,42,if (trace.size() != methods.length) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,43,return false;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,46,for (int i = 0; i < trace.size(); i++) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,47,if (!trace.get(i).getMethodName().equals(methods[i])) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,48,return false;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,52,return true;
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,55,public void describeTo(Description desc) {
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,56,"desc.appendText(""has only those methods in stack trace: "");"
True,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,57,desc.appendValue(methods);
True,test/org/mockitousage/StackTrackeChangingTest.java,test/org/mockitousage/StackTrackeChangingTest.java,37,//TODO hasOnlyThoseMethods stuff
