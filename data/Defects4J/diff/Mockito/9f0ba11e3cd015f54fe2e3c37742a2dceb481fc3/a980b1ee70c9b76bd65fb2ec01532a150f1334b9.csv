is_addition,old_file_path,new_file_path,line_num,content
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,5,ackage org.easymock;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,8, A convenience implementation of {@link ArgumentsMatcher}. A subclass that
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,9, does not redefine any method will behave like
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,10, {@link MockControl#EQUALS_MATCHER}.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,12," @deprecated Since EasyMock 2.0, <code>ArgumentsMatcher</code>s are only supported"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,13, for the legacy <code>MockControl</code>. For mock objects generated by the methods
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,14," on <code>EasyMock</code>, there are per-argument matchers available. For more"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,15," information, see the EasyMock documentation."
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,17,ublic abstract class AbstractMatcher implements ArgumentsMatcher {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,20, Checks whether an expected argument matches an actual argument; the method
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,21, is used by
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,22," {@link AbstractMatcher#matches(Object[], Object[])}. The arguments"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,23, provided to this method are always not <code>null</code>.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,25, @param expected
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,26,            the expected argument.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,27, @param actual
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,28,            the actual argument.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,29," @return true if the arguments match, false otherwise."
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,31,"rotected boolean argumentMatches(Object expected, Object actual) {"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,32,eturn expected.equals(actual);
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,36," Converts an argument to a String, used by"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,37, {@link AbstractMatcher#toString(Object[])}.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,39, @param argument
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,40,            the argument to convert to a String.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,41, @return a <code>String</code> representation of the argument.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,43,rotected String argumentToString(Object argument) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,44,f (argument instanceof String) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,45,"eturn ""\"""" + argument + ""\"""";"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,47,"eturn """" + argument;"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,51, Checks whether an expected argument array matches an actual argument array.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,52, This convenience implementation uses
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,53," <code>argumentMatches(Object, Object)</code> to check whether arguments"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,54," pairs match. If all the arguments match, true is returned, otherwise"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,55," false. In two cases, <code>argumentMatches(Object, Object)</code> is"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,56," not called: If both argument arrays are null, they match; if one and only"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,57," one is null, they do not match."
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,59, @param expected
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,60,            the expected arguments.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,61, @param actual
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,62,            the actual arguments.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,63," @return true if the arguments match, false otherwise."
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,65,"ublic boolean matches(Object[] expected, Object[] actual) {"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,66,f (expected == actual) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,67,eturn true;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,69,f (expected == null || actual == null) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,70,eturn false;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,72,f (expected.length != actual.length) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,73,eturn false;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,75,or (int i = 0; i < expected.length; i++) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,76,bject expectedObject = expected[i];
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,77,bject actualObject = actual[i];
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,79,f (expectedObject == null && actualObject == null) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,80,ontinue;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,83,f (expectedObject == null && actualObject != null) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,84,eturn false;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,87,f (expectedObject != null && actualObject == null) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,88,eturn false;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,91,"f (!argumentMatches(expectedObject, actualObject)) {"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,92,eturn false;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,95,eturn true;
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,99, Returns a string representation of the matcher. This convenience
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,100, implementation calls {@link AbstractMatcher#argumentToString(Object)}
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,101, for every argument in the given array and returns the string representations
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,102, of the arguments separated by commas.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,104, @param arguments
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,105,            the arguments to be used in the string representation.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,106, @return a string representation of the matcher.
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,108,ublic String toString(Object[] arguments) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,109,f (arguments == null)
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,110,rguments = new Object[0];
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,112,tringBuffer result = new StringBuffer();
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,114,or (int i = 0; i < arguments.length; i++) {
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,115,f (i > 0)
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,116,"esult.append("", "");"
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,117,esult.append(argumentToString(arguments[i]));
False,src/org/easymock/AbstractMatcher.java,src/org/easymock/AbstractMatcher.java,119,eturn result.toString();
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,5,ackage org.easymock;
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,8, A comparison function that is used to match arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,10, @see MockControl#setDefaultMatcher
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,11, @see MockControl#setMatcher
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,12, @see MockControl#EQUALS_MATCHER
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,13, @see MockControl#ARRAY_MATCHER
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,14, @see MockControl#ALWAYS_MATCHER
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,16," @deprecated Since EasyMock 2.0, <code>ArgumentsMatcher</code>s are only supported"
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,17, for the legacy <code>MockControl</code>. For mock objects generated by the methods
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,18," on <code>EasyMock</code>, there are per-argument matchers available. For more"
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,19," information, see the EasyMock documentation."
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,21,ublic interface ArgumentsMatcher {
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,24, Matches two arrays of arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,26, @param expected
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,27,            the expected arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,28, @param actual
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,29,            the actual arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,30," @return true if the arguments match, false otherwise."
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,32,"oolean matches(Object[] expected, Object[] actual);"
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,35, Returns a string representation of the arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,37, @param arguments
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,38,            the arguments to be used in the string representation.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,39, @return a string representation of the arguments.
False,src/org/easymock/ArgumentsMatcher.java,src/org/easymock/ArgumentsMatcher.java,41,tring toString(Object[] arguments);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,2," Copyright (c) 2003-2006 OFFIS, Henri Tremblay."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,5,ackage org.easymock;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,7,mport java.lang.reflect.Proxy;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,8,mport java.util.Comparator;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,10,mport org.easymock.internal.ClassExtensionHelper;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,11,mport org.easymock.internal.LastControl;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,12,mport org.easymock.internal.MockInvocationHandler;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,13,mport org.easymock.internal.MocksControl;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,14,mport org.mockito.internal.*;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,15,mport org.mockito.internal.matchers.*;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,16,mport org.mockito.matchers.*;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,18,ublic class EasyMock {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,21," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,22, is enabled by default.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,24, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,25,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,26, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,27,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,28,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,29, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,31,ublic static <T> T createStrictMock(Class<T> toMock) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,32,eturn createStrictControl().createMock(toMock);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,36," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,37, is enabled by default.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,38, @param name the name of the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,39, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,40,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,41,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,42, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,43,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,44, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,45, @throws IllegalArgumentException if the name is not a valid Java identifier.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,47,"ublic static <T> T createStrictMock(String name, Class<T> toMock) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,48,"eturn createStrictControl().createMock(name, toMock);"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,52," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,53, is disabled by default.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,55, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,56,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,57, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,58,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,59,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,60, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,62,ublic static <T> T createMock(Class<T> toMock) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,63,eturn createControl().createMock(toMock);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,67," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,68, is disabled by default.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,69, @param name the name of the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,70, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,71,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,72,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,74, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,75,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,76, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,77, @throws IllegalArgumentException if the name is not a valid Java identifier.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,79,"ublic static <T> T createMock(String name, Class<T> toMock) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,80,"eturn createControl().createMock(name, toMock);"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,84," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,85," is disabled by default, and the mock object will return <code>0</code>,"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,86, <code>null</code> or <code>false</code> for unexpected invocations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,88, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,89,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,90, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,91,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,92,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,93, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,95,ublic static <T> T createNiceMock(Class<T> toMock) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,96,eturn createNiceControl().createMock(toMock);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,100," Creates a mock object that implements the given interface, order checking"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,101," is disabled by default, and the mock object will return <code>0</code>,"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,102, <code>null</code> or <code>false</code> for unexpected invocations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,103, @param name the name of the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,104, @param toMock
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,105,            the class of the interface that the mock object should
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,106,            implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,108, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,109,            the interface that the mock object should implement.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,110, @return the mock object.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,111, @throws IllegalArgumentException if the name is not a valid Java identifier.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,113,"ublic static <T> T createNiceMock(String name, Class<T> toMock) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,114,"eturn createNiceControl().createMock(name, toMock);"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,118," Creates a control, order checking is enabled by default."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,120, @return the control.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,122,ublic static IMocksControl createStrictControl() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,123,eturn new MocksControl(MocksControl.MockType.STRICT);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,127," Creates a control, order checking is disabled by default."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,129, @return the control.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,131,ublic static IMocksControl createControl() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,132,eturn new MocksControl(MocksControl.MockType.DEFAULT);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,136," Creates a control, order checking is disabled by default, and the mock"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,137," objects created by this control will return <code>0</code>,"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,138, <code>null</code> or <code>false</code> for unexpected invocations.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,140, @return the control.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,142,ublic static IMocksControl createNiceControl() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,143,eturn new MocksControl(MocksControl.MockType.NICE);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,147, Returns the expectation setter for the last expected invocation in the
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,148, current thread.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,150, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,151,            the parameter is used to transport the type to the
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,152,            ExpectationSetter. It allows writing the expected call as
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,153,"            argument, i.e."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,154,"            <code>expect(mock.getName()).andReturn(""John Doe"")<code>."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,156, @return the expectation setter.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,158,"SuppressWarnings(""unchecked"")"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,159,ublic static <T> IExpectationSetters<T> expect(T value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,160,eturn getControlForLastCall();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,164, Returns the expectation setter for the last expected invocation in the
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,165, current thread. This method is used for expected invocations on void
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,166, methods.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,168, @return the expectation setter.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,170,"SuppressWarnings(""unchecked"")"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,171,ublic static IExpectationSetters<Object> expectLastCall() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,172,eturn getControlForLastCall();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,175,rivate static IExpectationSetters getControlForLastCall() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,176,ocksControl lastControl = LastControl.lastControl();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,177,f (lastControl == null) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,178,"hrow new IllegalStateException(""no last call on a mock available"");"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,180,eturn lastControl;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,184," Expects any boolean argument. For details, see the EasyMock"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,185, documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,187, @return <code>false</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,189,ublic static boolean anyBoolean() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,190,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,191,eturn false;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,195," Expects any byte argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,197, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,199,ublic static byte anyByte() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,200,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,201,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,205," Expects any char argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,207, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,209,ublic static char anyChar() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,210,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,211,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,215," Expects any int argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,217, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,219,ublic static int anyInt() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,220,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,221,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,225," Expects any long argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,227, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,229,ublic static long anyLong() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,230,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,231,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,235," Expects any float argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,237, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,239,ublic static float anyFloat() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,240,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,241,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,245," Expects any double argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,247, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,249,ublic static double anyDouble() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,250,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,251,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,255," Expects any short argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,257, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,259,ublic static short anyShort() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,260,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,261,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,265," Expects any Object argument. For details, see the EasyMock documentation."
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,267, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,269,ublic static Object anyObject() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,270,astArguments.reportMatcher(Any.ANY);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,271,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,275," Expects an object implementing the given class. For details, see the"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,276, EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,278, @param <T>
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,279,            the accepted type.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,280, @param clazz
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,281,            the class of the accepted type.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,282, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,284,ublic static <T> T isA(Class<T> clazz) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,285,astArguments.reportMatcher(new InstanceOf(clazz));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,286,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,290, Expects a boolean that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,292, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,293,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,294, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,296,ublic static boolean eq(boolean value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,297,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,298,eturn false;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,302, Expects a byte that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,304, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,305,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,306, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,308,ublic static byte eq(byte value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,309,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,310,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,314, Expects a char that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,316, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,317,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,318, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,320,ublic static char eq(char value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,321,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,322,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,326, Expects a double that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,328, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,329,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,330, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,332,ublic static double eq(double value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,333,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,334,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,338, Expects a float that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,340, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,341,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,342, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,344,ublic static float eq(float value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,345,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,346,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,350, Expects an int that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,352, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,353,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,354, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,356,ublic static int eq(int value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,357,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,358,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,362, Expects a long that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,364, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,365,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,366, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,368,ublic static long eq(long value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,369,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,370,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,374, Expects a short that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,376, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,377,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,378, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,380,ublic static short eq(short value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,381,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,382,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,386, Expects an Object that is equal to the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,388, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,389,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,390, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,392,ublic static <T> T eq(T value) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,393,astArguments.reportMatcher(new Equals(value));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,394,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,398, Expects null.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,400, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,402,ublic static Object isNull() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,403,astArguments.reportMatcher(Null.NULL);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,404,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,408, Expects not null.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,410, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,412,ublic static Object notNull() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,413,astArguments.reportMatcher(NotNull.NOT_NULL);
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,414,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,418," Expects a string that matches the given regular expression. For details,"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,419, see the EasyMock documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,421, @param regex
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,422,            the regular expression.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,423, @return <code>null</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,425,ublic static String matches(String regex) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,426,astArguments.reportMatcher(new Matches(regex));
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,427,eturn null;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,431, Expects a double that has an absolute difference to the given value that
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,432," is less than the given delta. For details, see the EasyMock"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,433, documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,435, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,436,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,437, @param delta
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,438,            the given delta.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,439, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,441,"ublic static double eq(double value, double delta) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,442,"astArguments.reportMatcher(new EqualsWithDelta(value, delta));"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,443,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,447, Expects a float that has an absolute difference to the given value that
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,448," is less than the given delta. For details, see the EasyMock"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,449, documentation.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,451, @param value
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,452,            the given value.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,453, @param delta
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,454,            the given delta.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,455, @return <code>0</code>.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,457,"ublic static float eq(float value, float delta) {"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,458,"astArguments.reportMatcher(new EqualsWithDelta(value, delta));"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,459,eturn 0;
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,463," Returns the arguments of the current mock method call, if inside an"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,464," <code>IAnswer</code> callback - be careful here, reordering parameters of"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,465, method changes the semantics of your tests.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,467, @return the arguments of the current mock method call.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,468, @throws IllegalStateException
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,469,             if called outside of <code>IAnswer</code> callbacks.
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,471,ublic static Object[] getCurrentArguments() {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,472,bject[] result = LastArguments.getCurrentArguments();
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,473,f (result == null) {
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,474,hrow new IllegalStateException(
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,475,"current arguments are only available when executing callback methods"");"
False,src/org/easymock/EasyMock.java,src/org/easymock/EasyMock.java,477,eturn result;
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,5,ackage org.easymock;
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,7,mport org.mockito.internal.*;
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,10, Allows setting expectations for an associated expected invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,11, Implementations of this interface are returned by
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,12," {@link EasyMock#expect(Object)}, and by {@link EasyMock#expectLastCall()}."
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,14,ublic interface IExpectationSetters<T> {
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,17, Sets a return value that will be returned for the expected invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,19, @param value
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,20,            the value to return.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,21, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,23,ExpectationSetters<T> andReturn(T value);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,26, Sets a throwable that will be thrown for the expected invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,28, @param throwable
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,29,            the throwable to throw.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,30, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,32,ExpectationSetters<T> andThrow(Throwable throwable);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,35, Sets an object that will be used to calculate the answer for the expected
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,36," invocation (either return a value, or throw an exception)."
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,38, @param answer
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,39,            the object used to answer the invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,40, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,42,ExpectationSetters<T> andAnswer(IAnswer<T> answer);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,45, Sets a stub return value that will be returned for the expected
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,46, invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,48, @param value
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,49,            the value to return.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,51,oid andStubReturn(T value);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,54, Sets a stub throwable that will be thrown for the expected invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,56, @param throwable
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,57,            the throwable to throw.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,59,oid andStubThrow(Throwable throwable);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,62, Sets a stub object that will be used to calculate the answer for the
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,63," expected invocation (either return a value, or throw an exception)."
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,65, @param answer
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,66,            the object used to answer the invocation.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,68,oid andStubAnswer(IAnswer<T> answer);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,71, Sets stub behavior for the expected invocation (this is needed for void
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,72, methods).
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,74,oid asStub();
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,77, Expect the last invocation <code>count</code> times.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,79, @param count
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,80,            the number of invocations expected.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,81, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,83,ExpectationSetters<T> times(int count);
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,86, Expect the last invocation between <code>min</code> and
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,87, <code>max</code> times.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,89, @param min
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,90,            the minimum number of invocations expected.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,91, @param max
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,92,            the maximum number of invocations expected.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,93, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,95,"ExpectationSetters<T> times(int min, int max);"
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,98, Expect the last invocation once. This is default in EasyMock.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,100, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,102,ExpectationSetters<T> once();
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,105, Expect the last invocation at least once.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,107, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,109,ExpectationSetters<T> atLeastOnce();
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,112, Expect the last invocation any times.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,114, @return this object to allow method call chaining.
False,src/org/easymock/IExpectationSetters.java,src/org/easymock/IExpectationSetters.java,116,ExpectationSetters<T> anyTimes();
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,5,ackage org.easymock;
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,8, Controls all the mock objects created by it.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,9," For details, see the EasyMock documentation."
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,11,ublic interface IMocksControl extends IExpectationSetters {
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,13, Creates a mock object that implements the given interface.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,14, @param <T> the interface that the mock object should implement.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,15, @param toMock the class of the interface that the mock object should implement.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,16, @return the mock object.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,18,T> T createMock(Class<T> toMock);
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,21, Creates a mock object that implements the given interface.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,22, @param name the name of the mock object .
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,23, @param toMock the class of the interface that the mock object should implement.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,24, @param <T> the interface that the mock object should implement.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,25, @return the mock object.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,26, @throws IllegalArgumentException if the name is not a valid Java identifier.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,28,"T> T createMock(String name, Class<T> toMock);"
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,31, Removes all expectations for the mock objects of this control.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,33,oid reset();
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,36, Switches the control from record mode to replay mode.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,38,oid replay();
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,41, Verifies that all expectations were met.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,43,oid verify();
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,46, Switches order checking on and off.
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,47," @param state <code>true</code> switches order checking on, <code>false</code> switches it off."
False,src/org/easymock/IMocksControl.java,src/org/easymock/IMocksControl.java,49,oid checkOrder(boolean state);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,2," Copyright (c) 2003-2006 OFFIS, Henri Tremblay."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,5,ackage org.easymock;
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,7,mport static org.easymock.internal.ClassExtensionHelper.getInterceptor;
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,9,mport java.lang.reflect.Method;
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,11,mport org.easymock.internal.MocksControl;
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,14, Instances of <code>MockClassControl</code> control the behavior of their
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,15," associated mock objects. For more information, see the EasyMock"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,16, documentation.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,18," @see <a href=""http://www.easymock.org/"">EasyMock</a>"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,19, @deprecated Use org.easymock.classextension.EasyMock instead
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,21,ublic class MockClassControl<T> extends MockControl<T> {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,24, Creates a mock control object for the specified class or interface. The
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,25, {@link MockClassControl}and its associated mock object will not check
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,26, the order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,27, object will lead to an <code>AssertionFailedError</code>.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,29, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,30,            the class to mock.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,31, @return the mock control (which is a {@link MockClassControl}instance)
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,33,ublic static <T> MockControl<T> createControl(Class<T> classToMock) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,34,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,35,"MocksControl) EasyMock.createControl(),"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,36,lassToMock);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,40, Same as {@link #createControl(Class)}but allows to pass a list of
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,41, methods to mock. All the other methods won't be. It means that if these
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,42," methods are called, their real code will be executed."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,44, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,45,            the class to mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,46, @param mockedMethods
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,47,"            Methods to be mocked. If null, all methods will be mocked."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,48, @return the mock control
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,50,"ublic static <T> MockClassControl<T> createControl(Class<T> classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,51,ethod[] mockedMethods) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,52,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,53,"MocksControl) EasyMock.createControl(),"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,54,"lassToMock, mockedMethods);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,58, Creates a mock control object for the specified class or interface. The
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,59, {@link MockClassControl}and its associated mock object will check the
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,60, order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,61, object will lead to an <code>AssertionFailedError</code>.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,63, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,64,            the class to mock.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,65, @return the mock control (which is a {@link MockClassControl}instance)
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,67,ublic static <T> MockControl<T> createStrictControl(Class<T> classToMock) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,68,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,69,MocksControl) EasyMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,70,"createStrictControl(), classToMock);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,74, Same as {@link #createStrictControl(Class)}but allows to pass a list of
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,75, methods to mock. All the other methods won't be. It means that if these
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,76," methods are called, their real code will be executed."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,78, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,79,            the class to mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,80, @param mockedMethods
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,81,"            Methods to be mocked. If null, all methods will be mocked."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,82, @return the mock control
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,84,ublic static <T> MockClassControl<T> createStrictControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,85,"lass<T> classToMock, Method[] mockedMethods) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,86,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,87,MocksControl) EasyMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,88,"createStrictControl(), classToMock, mockedMethods);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,92, Creates a mock control object for the specified class or interface. The
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,93, {@link MockClassControl}and its associated mock object will check not
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,94, the order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,95," object will return an empty value (0, null, false)."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,97, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,98,            the class to mock.
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,99, @return the mock control (which is a {@link MockClassControl}instance)
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,101,ublic static <T> MockControl<T> createNiceControl(Class<T> classToMock) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,102,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,103,"MocksControl) EasyMock.createNiceControl(),"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,104,lassToMock);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,108," Same as {@link #createNiceControl(Class, Method[])}but allows to pass a"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,109, list of methods to mock. All the other methods won't be. It means that if
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,110," these methods are called, their real code will be executed."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,112, @param classToMock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,113,            the class to mock
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,114, @param mockedMethods
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,115,"            Methods to be mocked. If null, all methods will be mocked."
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,116, @return the mock control
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,118,ublic static <T> MockClassControl<T> createNiceControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,119,"lass<T> classToMock, Method[] mockedMethods) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,120,eturn new MockClassControl<T>(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,121,"MocksControl) EasyMock.createNiceControl(),"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,122,"lassToMock, mockedMethods);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,126, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,127,             are now ignored. Just use {@link #createControl(Class)}
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,129,"ublic static <T> MockClassControl<T> createControl(Class<T> classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,130,"lass[] constructorTypes, Object[] constructorArgs) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,131,eturn (MockClassControl<T>) createControl(classToMock);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,135, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,136,             are now ignored. Just use
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,137,"             {@link #createControl(Class, Method[])}"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,139,"ublic static <T> MockClassControl<T> createControl(Class<T> classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,140,"lass[] constructorTypes, Object[] constructorArgs,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,141,ethod[] mockedMethods) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,142,"eturn (MockClassControl<T>) createControl(classToMock, mockedMethods);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,146, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,147,             are now ignored. Just use {@link #createStrictControl(Class)}
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,149,ublic static <T> MockClassControl<T> createStrictControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,150,"lass<T> classToMock, Class[] constructorTypes,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,151,bject[] constructorArgs) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,152,eturn (MockClassControl<T>) createStrictControl(classToMock);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,156, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,157,             are now ignored. Just use
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,158,"             {@link #createStrictControl(Class, Method[])}"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,160,ublic static <T> MockClassControl<T> createStrictControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,161,"lass<T> classToMock, Class[] constructorTypes,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,162,"bject[] constructorArgs, Method[] mockedMethods) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,163,"eturn (MockClassControl<T>) createStrictControl(classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,164,ockedMethods);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,168, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,169,             are now ignored. Just use {@link #createNiceControl(Class)}
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,171,ublic static <T> MockClassControl<T> createNiceControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,172,"lass<T> classToMock, Class[] constructorTypes,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,173,bject[] constructorArgs) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,174,eturn (MockClassControl<T>) createNiceControl(classToMock);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,178, @deprecated No need to pick a constructor anymore. Constructor arguments
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,179,             are now ignored. Just use
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,180,"             {@link #createNiceControl(Class, Method[])}"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,182,ublic static <T> MockClassControl<T> createNiceControl(
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,183,"lass<T> classToMock, Class[] constructorTypes,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,184,"bject[] constructorArgs, Method[] mockedMethods) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,185,"eturn (MockClassControl<T>) createNiceControl(classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,186,ockedMethods);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,189,"rivate MockClassControl(MocksControl ctrl, Class<T> classToMock,"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,190,ethod[] mockedMethods) {
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,191,"uper(ctrl, classToMock);"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,192,/ Set the mocked methods on the interceptor
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,193,etInterceptor(getMock()).setMockedMethods(mockedMethods);
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,196,"rivate MockClassControl(MocksControl ctrl, Class<T> classToMock) {"
False,src/org/easymock/MockClassControl.java,src/org/easymock/MockClassControl.java,197,"uper(ctrl, classToMock);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,5,ackage org.easymock;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,7,mport static org.easymock.EasyMock.expect;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,9,mport org.easymock.internal.AlwaysMatcher;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,10,mport org.easymock.internal.ArrayMatcher;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,11,mport org.easymock.internal.EqualsMatcher;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,12,mport org.easymock.internal.MocksControl;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,13,mport org.easymock.internal.Range;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,16, A <code>MockControl</code> object controls the behavior of its associated
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,17," mock object. For more information, see the EasyMock documentation."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,19," @deprecated Since EasyMock 2.0, static methods on <code>EasyMock</code> are"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,20, used to create and control mock objects.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,22,ublic class MockControl<T> {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,23,rivate final T mock;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,25,rivate final MocksControl ctrl;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,27,"rotected MockControl(MocksControl ctrl, Class<T> toMock) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,28,his.ctrl = ctrl;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,29,his.mock = ctrl.createMock(toMock);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,33, Creates a mock control object for the specified interface. The
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,34, <code>MockControl</code> and its associated mock object will not check
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,35, the order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,36, object will lead to an <code>AssertionError</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,38, @param toMock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,39,            the class of the interface to mock.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,40, @return the mock control.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,42,ublic static <T> MockControl<T> createControl(Class<T> toMock) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,43,"eturn new MockControl<T>((MocksControl) EasyMock.createControl(),"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,44,oMock);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,48, Creates a mock control object for the specified interface. The
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,49, <code>MockControl</code> and its associated mock object will check the
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,50, order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,51, object will lead to an <code>AssertionError</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,53, @param toMock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,54,            the class of the interface to mock.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,55, @return the mock control.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,57,ublic static <T> MockControl<T> createStrictControl(Class<T> toMock) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,58,eturn new MockControl<T>(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,59,"MocksControl) EasyMock.createStrictControl(), toMock);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,63, Creates a mock control object for the specified interface. The
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,64, <code>MockControl</code> and its associated mock object will not check
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,65, the order of expected method calls. An unexpected method call on the mock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,66," object will return an empty value (0, null, false)."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,68, @param toMock
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,69,            the class of the interface to mock.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,70, @return the mock control.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,72,ublic static <T> MockControl<T> createNiceControl(Class<T> toMock) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,73,"eturn new MockControl<T>((MocksControl) EasyMock.createNiceControl(),"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,74,oMock);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,78, Returns the mock object.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,80, @return the mock object of this control
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,82,ublic T getMock() {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,83,eturn mock;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,87, Resets the mock control and the mock object to the state directly after
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,88, creation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,90,ublic final void reset() {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,91,trl.reset();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,95, Switches the mock object from record state to replay state. For more
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,96," information, see the EasyMock documentation."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,98, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,99,             if the mock object already is in replay state.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,101,ublic void replay() {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,102,trl.replay();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,106," Verifies that all expectations have been met. For more information, see"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,107, the EasyMock documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,109, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,110,             if the mock object is in record state.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,111, @throws AssertionError
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,112,             if any expectation has not been met.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,114,ublic void verify() {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,115,trl.verify();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,119," Records that the mock object will expect the last method call once, and"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,120, will react by returning silently.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,122, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,123,"                if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,124,"                called on the mock object before, or if the last method"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,125,                called on the mock was no void method.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,127,ublic void setVoidCallable() {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,128,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,129,"method call on the mock needed before setting void callable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,130,once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,134," Records that the mock object will expect the last method call once, and"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,135, will react by throwing the provided Throwable.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,137, @param throwable
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,138,            the Throwable to throw.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,139, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,140,                if the mock object is in replay state or if no method was
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,141,                called on the mock object before.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,142, @exception IllegalArgumentException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,143,                if the last method called on the mock cannot throw the
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,144,                provided Throwable.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,145, @exception NullPointerException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,146,                if throwable is null.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,148,ublic void setThrowable(Throwable throwable) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,149,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,150,"method call on the mock needed before setting Throwable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,151,andThrow(throwable).once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,155," Records that the mock object will expect the last method call once, and"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,156, will react by returning the provided return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,158, @param value
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,159,            the return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,160, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,161,"             if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,162,             called on the mock object before. or if the last method
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,163,             called on the mock does not return <code>boolean</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,165,ublic void setReturnValue(Object value) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,166,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,167,"method call on the mock needed before setting return value"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,168,andReturn(value).once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,172, Records that the mock object will expect the last method call a fixed
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,173," number of times, and will react by returning silently."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,175, @param times
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,176,            the number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,177, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,178,"                if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,179,"                called on the mock object before, or if the last method"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,180,                called on the mock was no void method.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,182,ublic void setVoidCallable(int times) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,183,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,184,"method call on the mock needed before setting void callable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,185,times(times);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,189, Records that the mock object will expect the last method call a fixed
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,190," number of times, and will react by throwing the provided Throwable."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,192, @param throwable
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,193,            the Throwable to throw.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,194, @param times
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,195,            the number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,196, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,197,                if the mock object is in replay state or if no method was
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,198,                called on the mock object before.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,199, @exception IllegalArgumentException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,200,                if the last method called on the mock cannot throw the
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,201,                provided Throwable.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,202, @exception NullPointerException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,203,                if throwable is null.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,205,"ublic void setThrowable(Throwable throwable, int times) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,206,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,207,"method call on the mock needed before setting Throwable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,208,andThrow(throwable).times(times);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,212, Records that the mock object will expect the last method call a fixed
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,213," number of times, and will react by returning the provided return value."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,215, @param value
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,216,            the return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,217, @param times
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,218,            the number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,219, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,220,"             if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,221,             called on the mock object before. or if the last method
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,222,             called on the mock does not return <code>boolean</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,224,"ublic void setReturnValue(Object value, int times) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,225,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,226,"method call on the mock needed before setting return value"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,227,andReturn(value).times(times);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,231, Records that the mock object will expect the last method call a fixed
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,232," number of times, and will react by returning the provided return value."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,234, @param value
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,235,            the return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,236, @param range
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,237,            the number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,238, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,239,"             if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,240,             called on the mock object before. or if the last method
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,241,             called on the mock does not return <code>boolean</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,243,"ublic void setReturnValue(Object value, Range range) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,244,ExpectationSetters setter = expectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,245,"method call on the mock needed before setting return value"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,246,andReturn(value);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,247,"allWithConvertedRange(setter, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,251, Sets the ArgumentsMatcher for the last method called on the mock object.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,252, The matcher must be set before any behavior for the method is defined.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,254, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,255,"             if called in replay state, or if no method was called on the"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,256,             mock object before.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,258,ublic void setMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,259,trl.setLegacyMatcher(matcher);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,263, Records that the mock object will expect the last method call between
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,264," <code>minCount</code> and <code>maxCount</code> times, and will react"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,265, by returning silently.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,267, @param minCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,268,            the minimum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,269, @param maxCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,270,            the maximum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,271, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,272,"                if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,273,"                called on the mock object before, or if the last method"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,274,                called on the mock was no void method.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,276,"ublic void setVoidCallable(int minCount, int maxCount) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,277,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,278,"method call on the mock needed before setting void callable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,279,"times(minCount, maxCount);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,282,ublic void setVoidCallable(Range range) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,283,"ExpectationSetters setter = expectLastCall(""method call on the mock needed before setting void callable"");"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,284,"allWithConvertedRange(setter, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,288, Records that the mock object will expect the last method call between
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,289," <code>minCount</code> and <code>maxCount</code> times, and will react"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,290, by throwing the provided Throwable.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,292, @param throwable
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,293,            the Throwable to throw.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,294, @param minCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,295,            the minimum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,296, @param maxCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,297,            the maximum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,298, @exception IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,299,                if the mock object is in replay state or if no method was
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,300,                called on the mock object before.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,301, @exception IllegalArgumentException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,302,                if the last method called on the mock cannot throw the
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,303,                provided Throwable.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,304, @exception NullPointerException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,305,                if throwable is null.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,307,"ublic void setThrowable(Throwable throwable, int minCount, int maxCount) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,308,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,309,"method call on the mock needed before setting Throwable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,310,"andThrow(throwable).times(minCount, maxCount);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,313,"ublic void setThrowable(Throwable throwable, Range range) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,314,ExpectationSetters setter = expectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,315,"method call on the mock needed before setting Throwable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,316,andThrow(throwable);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,317,"allWithConvertedRange(setter, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,321, Records that the mock object will expect the last method call between
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,322," <code>minCount</code> and <code>maxCount</code> times, and will react"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,323, by returning the provided return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,325, @param value
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,326,            the return value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,327, @param minCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,328,            the minimum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,329, @param maxCount
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,330,            the maximum number of times that the call is expected.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,331, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,332,"             if the mock object is in replay state, if no method was"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,333,             called on the mock object before. or if the last method
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,334,             called on the mock does not return <code>boolean</code>.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,336,"ublic void setReturnValue(Object value, int minCount, int maxCount) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,337,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,338,"method call on the mock needed before setting return value"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,339,"andReturn(value).times(minCount, maxCount);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,343, Exactly one call.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,345,ublic static final Range ONE = MocksControl.ONCE;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,348, One or more calls.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,350,ublic static final Range ONE_OR_MORE = MocksControl.AT_LEAST_ONCE;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,353, Zero or more calls.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,355,ublic static final Range ZERO_OR_MORE = MocksControl.ZERO_OR_MORE;
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,358, Matches if each expected argument is equal to the corresponding actual
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,359, argument.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,361,ublic static final ArgumentsMatcher EQUALS_MATCHER = new EqualsMatcher();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,364, Matches always.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,366,ublic static final ArgumentsMatcher ALWAYS_MATCHER = new AlwaysMatcher();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,369, Matches if each expected argument is equal to the corresponding actual
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,370, argument for non-array arguments; array arguments are compared with the
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,371, appropriate <code>java.util.Arrays.equals()</code> -method.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,373,ublic static final ArgumentsMatcher ARRAY_MATCHER = new ArrayMatcher();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,376, Sets the default ArgumentsMatcher for all methods of the mock object. The
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,377, matcher must be set before any behavior is defined on the mock object.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,379, @throws IllegalStateException
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,380,"             if called in replay state, or if any behavior is already"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,381,             defined on the mock object.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,383,ublic void setDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,384,trl.setLegacyDefaultMatcher(matcher);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,388," Same as {@link MockControl#setReturnValue(Object)}. For explanation, see"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,389," ""Convenience Methods for Return Values"" in the EasyMock documentation."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,391, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,392,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,394,"ublic <V1, V2 extends V1> void expectAndReturn(V1 ignored, V2 value) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,395,asyMock.expectLastCall().andReturn(value).once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,398,"ublic void expectAndReturn(int ignored, int value) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,399,"his.expectAndReturn((Object) ignored, (Object) value);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,403," Same as {@link MockControl#setReturnValue(Object, Range)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,404," explanation, see ""Convenience Methods for Return Values"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,405, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,407, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,408,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,410,"ublic <V1, V2 extends V1> void expectAndReturn(V1 ignored, V2 value,"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,411,ange range) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,412,ExpectationSetters expectAndReturn = EasyMock.expectLastCall()
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,413,andReturn(value);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,414,"allWithConvertedRange(expectAndReturn, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,417,"ublic void expectAndReturn(int ignored, int value, Range range) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,418,"his.expectAndReturn((Object) ignored, (Object) value, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,422," Same as {@link MockControl#setReturnValue(Object, int)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,423," explanation, see ""Convenience Methods for Return Values"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,424, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,426, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,427,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,429,"ublic <V1, V2 extends V1> void expectAndReturn(V1 ignored, V2 value,"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,430,nt count) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,431,asyMock.expectLastCall().andReturn(value).times(count);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,434,"ublic void expectAndReturn(int ignored, int value, int count) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,435,"his.expectAndReturn((Object) ignored, (Object) value, count);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,439," Same as {@link MockControl#setReturnValue(Object, int, int)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,440," explanation, see ""Convenience Methods for Return Values"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,441, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,443, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,444,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,446,"ublic <V1, V2 extends V1> void expectAndReturn(V1 ignored, V2 value,"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,447,"nt min, int max) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,448,"asyMock.expectLastCall().andReturn(value).times(min, max);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,451,"ublic void expectAndReturn(int ignored, int value, int min, int max) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,452,"his.expectAndReturn((Object) ignored, (Object) value, min, max);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,456," Same as {@link MockControl#setThrowable(Throwable)}. For explanation,"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,457," see ""Convenience Methods for Throwables"" in the EasyMock documentation."
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,459, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,460,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,462,"ublic void expectAndThrow(Object ignored, Throwable throwable) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,463,asyMock.expect(ignored).andThrow(throwable).once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,467," Same as {@link MockControl#setThrowable(Throwable, Range)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,468," explanation, see ""Convenience Methods for Throwables"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,469, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,471, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,472,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,474,"ublic void expectAndThrow(Object ignored, Throwable throwable, Range range) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,475,ExpectationSetters setter = EasyMock.expect(ignored).andThrow(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,476,hrowable);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,477,"allWithConvertedRange(setter, range);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,481," Same as {@link MockControl#setThrowable(Throwable, int)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,482," explanation, see ""Convenience Methods for Throwables"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,483, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,485, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,486,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,488,"ublic void expectAndThrow(Object ignored, Throwable throwable, int count) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,489,xpect(ignored).andThrow(throwable).times(count);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,493," Same as {@link MockControl#setThrowable(Throwable, int, int)}. For"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,494," explanation, see ""Convenience Methods for Throwables"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,495, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,497, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,498,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,500,"ublic void expectAndThrow(Object ignored, Throwable throwable, int min,"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,501,nt max) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,502,"xpect(ignored).andThrow(throwable).times(min, max);"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,506, Same as {@link MockControl#setDefaultReturnValue(Object)}. For
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,507," explanation, see ""Convenience Methods for Return Values"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,508, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,510, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,511,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,513,"ublic <V1, V2 extends V1> void expectAndDefaultReturn(V1 ignored, V2 value) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,514,asyMock.expectLastCall().andStubReturn(value);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,518, Same as {@link MockControl#setDefaultThrowable(Throwable)}. For
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,519," explanation, see ""Convenience Methods for Throwables"" in the EasyMock"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,520, documentation.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,522, @param ignored
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,523,            an ignored value.
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,525,"ublic void expectAndDefaultThrow(Object ignored, Throwable throwable) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,526,xpectLastCall(
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,527,"method call on the mock needed before setting default Throwable"")"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,528,andStubThrow(throwable);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,531,rivate IExpectationSetters<Object> expectLastCall(String failureMessage) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,532,ry {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,533,eturn EasyMock.expectLastCall();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,534, catch (IllegalStateException e) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,535,hrow new IllegalStateException(failureMessage);
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,539,"rivate void callWithConvertedRange(IExpectationSetters setter, Range range) {"
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,540,f (range == ONE) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,541,etter.once();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,542, else if (range == ONE_OR_MORE) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,543,etter.atLeastOnce();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,544, else if (range == ZERO_OR_MORE) {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,545,etter.anyTimes();
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,546, else {
False,src/org/easymock/MockControl.java,src/org/easymock/MockControl.java,547,"hrow new IllegalArgumentException(""Unexpected Range"");"
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,7,mport org.easymock.AbstractMatcher;
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,9,ublic class AlwaysMatcher extends AbstractMatcher {
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,10,"ublic boolean matches(Object[] expected, Object[] actual) {"
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,11,eturn true;
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,14,rotected String argumentToString(Object argument) {
False,src/org/easymock/internal/AlwaysMatcher.java,src/org/easymock/internal/AlwaysMatcher.java,15,"eturn ""<any>"";"
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,7,mport org.easymock.AbstractMatcher;
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,8,mport org.mockito.internal.matchers.ArrayEquals;
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,10,ublic class ArrayMatcher extends AbstractMatcher {
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,11,ublic String argumentToString(Object argument) {
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,12,tringBuffer result = new StringBuffer();
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,13,ew ArrayEquals(argument).appendTo(result);
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,14,eturn result.toString();
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,17,"ublic boolean argumentMatches(Object expected, Object actual) {"
False,src/org/easymock/internal/ArrayMatcher.java,src/org/easymock/internal/ArrayMatcher.java,18,eturn new ArrayEquals(expected).matches(actual);
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,7,ublic class AssertionErrorWrapper extends RuntimeException {
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,8,rivate final AssertionError error;
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,10,ublic AssertionErrorWrapper(AssertionError error) {
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,11,his.error = error;
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,14,ublic AssertionError getAssertionError() {
False,src/org/easymock/internal/AssertionErrorWrapper.java,src/org/easymock/internal/AssertionErrorWrapper.java,15,eturn error;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,2," Copyright (c) 2003-2006 OFFIS, Henri Tremblay."
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,7,mport java.lang.reflect.Proxy;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,9,mport net.sf.cglib.proxy.Enhancer;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,10,mport net.sf.cglib.proxy.Factory;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,12,mport org.mockito.internal.*;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,13,mport org.mockito.internal.ClassProxyFactory.MockMethodInterceptor;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,15,ublic final class ClassExtensionHelper {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,17,rivate ClassExtensionHelper() {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,20,ublic static MockMethodInterceptor getInterceptor(Object mock) {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,21,actory factory = (Factory) mock;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,22,eturn (MockMethodInterceptor) factory.getCallback(0);
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,25,ublic static MocksControl getControl(Object mock) {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,26,ockitoObjectMethodsFilter<MockInvocationHandler> handler;
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,28,ry {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,29,f (Enhancer.isEnhanced(mock.getClass())) {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,30,andler = (MockitoObjectMethodsFilter) getInterceptor(mock)
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,31,getHandler();
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,32, else if (Proxy.isProxyClass(mock.getClass())) {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,33,andler = (MockitoObjectMethodsFilter) Proxy
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,34,getInvocationHandler(mock);
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,35, else {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,36,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,37,"Not a mock: "" + mock.getClass().getName()));"
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,40,eturn handler.getDelegate().getControl();
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,41, catch (ClassCastException e) {
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,42,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/ClassExtensionHelper.java,src/org/easymock/internal/ClassExtensionHelper.java,43,"Not a mock: "" + mock.getClass().getName()));"
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,7,mport org.easymock.AbstractMatcher;
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,9,"SuppressWarnings(""deprecation"")"
False,src/org/easymock/internal/EqualsMatcher.java,src/org/easymock/internal/EqualsMatcher.java,10,ublic class EqualsMatcher extends AbstractMatcher {
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,7,mport org.mockito.internal.*;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,9,ublic class ExpectedInvocationAndResult {
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,10,xpectedInvocation expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,12,esult result;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,14,"ublic ExpectedInvocationAndResult(ExpectedInvocation expectedInvocation,"
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,15,esult result) {
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,16,his.expectedInvocation = expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,17,his.result = result;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,20,ublic ExpectedInvocation getExpectedInvocation() {
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,21,eturn expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,24,ublic Result getResult() {
False,src/org/easymock/internal/ExpectedInvocationAndResult.java,src/org/easymock/internal/ExpectedInvocationAndResult.java,25,eturn result;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,7,mport org.mockito.internal.ExpectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,9,ublic class ExpectedInvocationAndResults {
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,10,xpectedInvocation expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,12,esults results;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,14,"ublic ExpectedInvocationAndResults(ExpectedInvocation expectedInvocation,"
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,15,esults results) {
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,16,his.expectedInvocation = expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,17,his.results = results;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,20,ublic ExpectedInvocation getExpectedInvocation() {
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,21,eturn expectedInvocation;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,24,ublic Results getResults() {
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,25,eturn results;
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,28,Override
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,29,ublic String toString() {
False,src/org/easymock/internal/ExpectedInvocationAndResults.java,src/org/easymock/internal/ExpectedInvocationAndResults.java,30,"eturn expectedInvocation.toString() + "": "" + results.toString();"
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,7,mport java.lang.reflect.Method;
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,9,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,11,ublic interface ILegacyMatcherMethods {
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,13,oid setDefaultMatcher(ArgumentsMatcher matcher);
False,src/org/easymock/internal/ILegacyMatcherMethods.java,src/org/easymock/internal/ILegacyMatcherMethods.java,15,"oid setMatcher(Method method, ArgumentsMatcher matcher);"
False,src/org/easymock/internal/ILegacyMethods.java,src/org/easymock/internal/ILegacyMethods.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ILegacyMethods.java,src/org/easymock/internal/ILegacyMethods.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ILegacyMethods.java,src/org/easymock/internal/ILegacyMethods.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ILegacyMethods.java,src/org/easymock/internal/ILegacyMethods.java,7,ublic interface ILegacyMethods extends ILegacyMatcherMethods {
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,7,mport org.mockito.internal.*;
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,9,ublic interface IMocksBehavior extends ILegacyMatcherMethods {
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,11,/ record
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,12,"oid addExpected(ExpectedInvocation expected, Result result, Range count);"
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,14,"oid addStub(ExpectedInvocation expected, Result result);"
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,16,oid checkOrder(boolean value);
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,18,/ replay
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,19,esult addActual(Invocation invocation);
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,21,/ verify
False,src/org/easymock/internal/IMocksBehavior.java,src/org/easymock/internal/IMocksBehavior.java,22,oid verify();
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,7,mport org.mockito.internal.*;
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,9,ublic interface IMocksControlState extends ILegacyMethods {
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,11,bject invoke(Invocation invocation) throws Throwable;
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,13,oid assertRecordState();
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,15,oid andReturn(Object value);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,17,oid andThrow(Throwable throwable);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,19,oid andAnswer(IAnswer answer);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,21,oid andStubReturn(Object value);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,23,oid andStubThrow(Throwable throwable);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,25,oid andStubAnswer(IAnswer answer);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,27,oid asStub();
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,29,oid times(Range range);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,31,oid checkOrder(boolean value);
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,33,oid replay();
False,src/org/easymock/internal/IMocksControlState.java,src/org/easymock/internal/IMocksControlState.java,35,oid verify();
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,7,mport java.util.*;
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,9,mport org.mockito.internal.matchers.*;
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,11,ublic class LastControl {
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,12,rivate static final ThreadLocal<MocksControl> threadToControl = new ThreadLocal<MocksControl>();
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,14,ublic static synchronized void reportLastControl(MocksControl control) {
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,15,f (control != null) {
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,16,hreadToControl.set(control);
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,17, else {
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,18,hreadToControl.remove();
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,22,ublic static synchronized MocksControl lastControl() {
False,src/org/easymock/internal/LastControl.java,src/org/easymock/internal/LastControl.java,23,eturn threadToControl.get();
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,7,mport java.lang.reflect.Method;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,8,mport java.util.HashMap;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,9,mport java.util.Map;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,11,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,12,mport org.easymock.MockControl;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,13,mport org.mockito.internal.RuntimeExceptionWrapper;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,15,ublic class LegacyMatcherProvider {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,17,rivate ArgumentsMatcher defaultMatcher;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,19,rivate boolean defaultMatcherSet;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,21,"rivate Map<Method, ArgumentsMatcher> matchers = new HashMap<Method, ArgumentsMatcher>();"
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,23,ublic ArgumentsMatcher getMatcher(Method method) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,24,f (!matchers.containsKey(method)) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,25,f (!defaultMatcherSet) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,26,etDefaultMatcher(MockControl.EQUALS_MATCHER);
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,28,"atchers.put(method, defaultMatcher);"
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,30,eturn matchers.get(method);
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,33,ublic void setDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,34,f (defaultMatcherSet) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,35,hrow new RuntimeExceptionWrapper(
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,36,ew IllegalStateException(
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,37,"default matcher can only be set once directly after creation of the MockControl""));"
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,39,efaultMatcher = matcher;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,40,efaultMatcherSet = true;
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,43,"ublic void setMatcher(Method method, ArgumentsMatcher matcher) {"
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,44,f (matchers.containsKey(method) && matchers.get(method) != matcher) {
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,45,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,46,"for method """
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,47, method.getName()
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,49," (method.getParameterTypes().length == 0 ? """""
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,51," ""), a matcher has already been set""));"
False,src/org/easymock/internal/LegacyMatcherProvider.java,src/org/easymock/internal/LegacyMatcherProvider.java,53,"atchers.put(method, matcher);"
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,7,mport java.lang.reflect.InvocationHandler;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,8,mport java.lang.reflect.Method;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,10,mport org.mockito.internal.*;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,12,"ublic class MockInvocationHandler implements InvocationHandler, MockAwareInvocationHandler {"
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,14,rotected final MocksControl control;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,16,ublic MockInvocationHandler(MocksControl control) {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,17,his.control = control;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,20,"ublic Object invoke(Object proxy, Method method, Object[] args)"
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,21,hrows Throwable {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,22,ry {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,23,f (control.getState() instanceof RecordState) {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,24,astControl.reportLastControl(control);
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,26,eturn control.getState().invoke(
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,27,"ew Invocation(proxy, method, args));"
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,28, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,29,hrow e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,30, catch (AssertionErrorWrapper e) {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,31,hrow e.getAssertionError().fillInStackTrace();
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,32, catch (ThrowableWrapper t) {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,33,hrow t.getThrowable().fillInStackTrace();
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,37,ublic MocksControl getControl() {
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,38,eturn control;
False,src/org/easymock/internal/MockInvocationHandler.java,src/org/easymock/internal/MockInvocationHandler.java,41,ublic void setMock(Object mock) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,7,mport java.lang.reflect.Method;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,8,mport java.util.ArrayList;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,9,mport java.util.List;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,11,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,12,mport org.easymock.MockControl;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,13,mport org.mockito.internal.*;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,15,ublic class MocksBehavior implements IMocksBehavior {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,17,rivate final List<UnorderedBehavior> behaviorLists = new ArrayList<UnorderedBehavior>();
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,19,rivate List<ExpectedInvocationAndResult> stubResults = new ArrayList<ExpectedInvocationAndResult>();
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,21,rivate final boolean nice;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,23,rivate boolean checkOrder;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,25,rivate int position = 0;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,27,ublic MocksBehavior(boolean nice) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,28,his.nice = nice;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,31,"ublic final void addStub(ExpectedInvocation expected, Result result) {"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,32,"tubResults.add(new ExpectedInvocationAndResult(expected, result));"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,35,"ublic void addExpected(ExpectedInvocation expected, Result result,"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,36,ange count) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,37,ddBehaviorListIfNecessary(expected);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,38,"astBehaviorList().addExpected(expected, result, count);"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,41,rivate final Result getStubResult(Invocation actual) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,42,or (ExpectedInvocationAndResult each : stubResults) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,43,f (each.getExpectedInvocation().matches(actual)) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,44,eturn each.getResult();
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,47,eturn null;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,50,rivate void addBehaviorListIfNecessary(ExpectedInvocation expected) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,51,f (behaviorLists.isEmpty()
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,52,"| !lastBehaviorList().allowsExpectedInvocation(expected,"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,53,heckOrder)) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,54,ehaviorLists.add(new UnorderedBehavior(checkOrder));
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,58,rivate UnorderedBehavior lastBehaviorList() {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,59,eturn behaviorLists.get(behaviorLists.size() - 1);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,62,ublic final Result addActual(Invocation actual) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,63,nt tempPosition = position;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,64,"tring errorMessage = """";"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,65,hile (position < behaviorLists.size()) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,66,esult result = behaviorLists.get(position).addActual(actual);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,67,f (result != null) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,68,eturn result;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,70,rrorMessage += behaviorLists.get(position).toString(actual);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,71,f (!behaviorLists.get(position).verify()) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,72,reak;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,74,osition++;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,76,esult stubOrNice = getStubResult(actual);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,77,f (stubOrNice == null && nice) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,78,tubOrNice = Result.createReturnResult(ToTypeMappings.emptyReturnValueFor(actual.getMethod().getReturnType()));
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,80,f (stubOrNice != null) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,81,osition = tempPosition;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,82,eturn stubOrNice;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,84,hrow new AssertionErrorWrapper(new AssertionError(
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,85,"\n  Unexpected method call """
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,86," actual.toString() + "":"""
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,87, errorMessage.toString()));
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,90,ublic void verify() {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,91,oolean verified = true;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,92,tringBuffer errorMessage = new StringBuffer();
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,94,"or (UnorderedBehavior behaviorList : behaviorLists.subList(position,"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,95,ehaviorLists.size())) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,96,rrorMessage.append(behaviorList.toString());
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,97,f (!behaviorList.verify()) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,98,erified = false;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,101,f (verified) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,102,eturn;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,105,hrow new AssertionErrorWrapper(new AssertionError(
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,106,"\n  Expectation failure on verify:"" + errorMessage.toString()));"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,109,ublic void checkOrder(boolean value) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,110,his.checkOrder = value;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,113,rivate LegacyMatcherProvider legacyMatcherProvider;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,115,ublic LegacyMatcherProvider getLegacyMatcherProvider() {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,116,f (legacyMatcherProvider == null) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,117,egacyMatcherProvider = new LegacyMatcherProvider();
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,119,eturn legacyMatcherProvider;
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,122,ublic void setDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,123,etLegacyMatcherProvider().setDefaultMatcher(matcher);
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,126,"ublic void setMatcher(Method method, ArgumentsMatcher matcher) {"
False,src/org/easymock/internal/MocksBehavior.java,src/org/easymock/internal/MocksBehavior.java,127,"etLegacyMatcherProvider().setMatcher(method, matcher);"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,7,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,8,mport org.easymock.IExpectationSetters;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,9,mport org.easymock.IMocksControl;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,10,mport org.mockito.internal.*;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,12,ublic class MocksControl implements IMocksControl {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,14,rivate IMocksControlState state;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,16,rivate IMocksBehavior behavior;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,18,ublic enum MockType {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,19,"ICE, DEFAULT, STRICT"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,22,rivate MockType type;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,24,ublic MocksControl(MockType type) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,25,his.type = type;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,26,eset();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,29,ublic IMocksControlState getState() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,30,eturn state;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,33,ublic <T> T createMock(Class<T> toMock) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,34,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,35,tate.assertRecordState();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,36,lassProxyFactory<T> proxyFactory = new ClassProxyFactory<T>();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,37,"eturn proxyFactory.createProxy(toMock, new MockitoObjectMethodsFilter("
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,38,"oMock, new MockInvocationHandler(this), null));"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,39, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,40,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,44,"ublic <T> T createMock(String name, Class<T> toMock) {"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,45,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,46,tate.assertRecordState();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,47,lassProxyFactory<T> proxyFactory = new ClassProxyFactory<T>();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,48,"eturn proxyFactory.createProxy(toMock, new MockitoObjectMethodsFilter("
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,49,"oMock, new MockInvocationHandler(this), name));"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,50, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,51,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,55,ublic final void reset() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,56,ehavior = new MocksBehavior(type == MockType.NICE);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,57,ehavior.checkOrder(type == MockType.STRICT);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,58,tate = new RecordState(behavior);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,59,astControl.reportLastControl(null);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,62,ublic void replay() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,63,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,64,tate.replay();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,65,tate = new ReplayState(behavior);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,66,astControl.reportLastControl(null);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,67, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,68,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,72,ublic void verify() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,73,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,74,tate.verify();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,75, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,76,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,77, catch (AssertionErrorWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,78,hrow (AssertionError) e.getAssertionError().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,82,ublic void checkOrder(boolean value) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,83,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,84,tate.checkOrder(value);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,85, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,86,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,90,/ methods from IBehaviorSetters
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,92,ublic IExpectationSetters andReturn(Object value) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,93,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,94,tate.andReturn(value);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,95,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,96, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,97,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,101,ublic IExpectationSetters andThrow(Throwable throwable) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,102,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,103,tate.andThrow(throwable);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,104,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,105, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,106,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,110,ublic IExpectationSetters andAnswer(IAnswer answer) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,111,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,112,tate.andAnswer(answer);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,113,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,114, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,115,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,119,ublic void andStubReturn(Object value) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,120,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,121,tate.andStubReturn(value);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,122, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,123,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,127,ublic void andStubThrow(Throwable throwable) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,128,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,129,tate.andStubThrow(throwable);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,130, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,131,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,135,ublic void andStubAnswer(IAnswer answer) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,136,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,137,tate.andStubAnswer(answer);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,138, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,139,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,143,ublic void asStub() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,144,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,145,tate.asStub();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,146, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,147,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,151,ublic IExpectationSetters times(int times) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,152,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,153,tate.times(new Range(times));
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,154,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,155, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,156,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,160,"ublic IExpectationSetters times(int min, int max) {"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,161,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,162,"tate.times(new Range(min, max));"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,163,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,164, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,165,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,169,ublic IExpectationSetters once() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,170,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,171,tate.times(ONCE);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,172,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,173, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,174,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,178,ublic IExpectationSetters atLeastOnce() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,179,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,180,tate.times(AT_LEAST_ONCE);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,181,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,182, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,183,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,187,ublic IExpectationSetters anyTimes() {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,188,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,189,tate.times(ZERO_OR_MORE);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,190,eturn this;
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,191, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,192,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,197, Exactly one call.
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,199,ublic static final Range ONCE = new Range(1);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,202, One or more calls.
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,204,"ublic static final Range AT_LEAST_ONCE = new Range(1, Integer.MAX_VALUE);"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,207, Zero or more calls.
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,209,"ublic static final Range ZERO_OR_MORE = new Range(0, Integer.MAX_VALUE);"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,211,ublic void setLegacyDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,212,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,213,tate.setDefaultMatcher(matcher);
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,214, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,215,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,219,ublic void setLegacyMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,220,ry {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,221,"tate.setMatcher(null, matcher);"
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,222, catch (RuntimeExceptionWrapper e) {
False,src/org/easymock/internal/MocksControl.java,src/org/easymock/internal/MocksControl.java,223,hrow (RuntimeException) e.getRuntimeException().fillInStackTrace();
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,7,mport org.mockito.internal.RuntimeExceptionWrapper;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,9,ublic class Range {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,10,rivate int minimum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,12,rivate int maximum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,14,ublic Range(int count) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,15,"his(count, count);"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,18,"ublic Range(int minimum, int maximum) {"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,19,f (!(minimum <= maximum)) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,20,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,21,"minimum must be <= maximum""));"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,24,f (!(minimum >= 0)) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,25,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,26,"minimum must be >= 0""));"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,29,f (!(maximum >= 1)) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,30,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,31,"maximum must be >= 1""));"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,33,his.minimum = minimum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,34,his.maximum = maximum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,37,ublic boolean hasFixedCount() {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,38,eturn minimum == maximum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,41,ublic int getMaximum() {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,42,eturn maximum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,45,ublic int getMinimum() {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,46,eturn minimum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,49,ublic String toString() {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,50,f (hasFixedCount()) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,51,"eturn """" + minimum;"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,52, else if (hasOpenCount()) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,53,"eturn ""at least "" + minimum;"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,54, else {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,55,"eturn ""between "" + minimum + "" and "" + maximum;"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,59,ublic String expectedAndActual(int count) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,60,"eturn ""expected: "" + this.toString() + "", actual: "" + count;"
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,63,ublic boolean contains(int count) {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,64,eturn minimum <= count && count <= maximum;
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,67,ublic boolean hasOpenCount() {
False,src/org/easymock/internal/Range.java,src/org/easymock/internal/Range.java,68,eturn maximum == Integer.MAX_VALUE;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,7,mport java.lang.reflect.Method;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,8,mport java.util.*;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,10,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,11,mport org.easymock.MockControl;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,12,mport org.mockito.internal.*;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,13,mport org.mockito.internal.matchers.IArgumentMatcher;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,15,ublic class RecordState implements IMocksControlState {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,17,rotected ExpectedInvocation lastInvocation;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,19,rotected boolean lastInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,21,rotected Result lastResult;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,23,rotected IMocksBehavior behavior;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,25,ublic RecordState(IMocksBehavior behavior) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,26,his.behavior = behavior;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,29,ublic void assertRecordState() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,32,ublic java.lang.Object invoke(Invocation invocation) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,33,loseMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,34,ist<IArgumentMatcher> lastMatchers = LastArguments.pullMatchers();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,35,"astInvocation = new ExpectedInvocation(invocation, lastMatchers);"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,36,astInvocationUsed = false;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,37,eturn ToTypeMappings.emptyReturnValueFor(invocation.getMethod().getReturnType());
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,40,ublic void replay() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,41,loseMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,42,f (LastArguments.pullMatchers() != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,43,"hrow new IllegalStateException(""matcher calls were used outside expectations"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,47,ublic void verify() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,48,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,49,"calling verify is not allowed in record state""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,52,ublic void andReturn(Object value) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,53,"equireMethodCall(""return value"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,54,alue = convertNumberClassIfNeccessary(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,55,equireAssignable(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,56,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,57,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,59,astResult = Result.createReturnResult(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,62,ublic void andThrow(Throwable throwable) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,63,"equireMethodCall(""Throwable"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,64,equireValidThrowable(throwable);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,65,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,66,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,68,astResult = Result.createThrowResult(throwable);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,71,ublic void andAnswer(IAnswer answer) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,72,"equireMethodCall(""answer"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,73,equireValidAnswer(answer);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,74,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,75,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,77,astResult = Result.createAnswerResult(answer);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,80,ublic void andStubReturn(Object value) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,81,"equireMethodCall(""stub return value"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,82,alue = convertNumberClassIfNeccessary(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,83,equireAssignable(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,84,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,85,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,87,"ehavior.addStub(lastInvocation, Result.createReturnResult(value));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,88,astInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,91,ublic void asStub() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,92,"equireMethodCall(""stub behavior"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,93,equireVoidMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,94,"ehavior.addStub(lastInvocation, Result.createReturnResult(null));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,95,astInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,98,ublic void andStubThrow(Throwable throwable) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,99,"equireMethodCall(""stub Throwable"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,100,equireValidThrowable(throwable);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,101,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,102,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,104,"ehavior.addStub(lastInvocation, Result.createThrowResult(throwable));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,105,astInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,108,ublic void andStubAnswer(IAnswer answer) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,109,"equireMethodCall(""stub answer"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,110,equireValidAnswer(answer);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,111,f (lastResult != null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,112,imes(MocksControl.ONCE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,114,"ehavior.addStub(lastInvocation, Result.createAnswerResult(answer));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,115,astInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,118,ublic void times(Range range) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,119,"equireMethodCall(""times"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,120,equireLastResultOrVoidMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,122,"ehavior.addExpected(lastInvocation, lastResult != null ? lastResult"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,123," Result.createReturnResult(null), range);"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,124,astInvocationUsed = true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,125,astResult = null;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,128,"rotected Object createNumberObject(Object value, Class returnType) {"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,129,f (!(value instanceof Number)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,130,eturn value;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,132,umber number = (Number) value;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,133,f (returnType.equals(Byte.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,134,eturn number.byteValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,135, else if (returnType.equals(Short.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,136,eturn number.shortValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,137, else if (returnType.equals(Character.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,138,eturn (char) number.intValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,139, else if (returnType.equals(Integer.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,140,eturn number.intValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,141, else if (returnType.equals(Long.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,142,eturn number.longValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,143, else if (returnType.equals(Float.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,144,eturn number.floatValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,145, else if (returnType.equals(Double.TYPE)) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,146,eturn number.doubleValue();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,147, else {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,148,eturn number;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,152,rotected Object convertNumberClassIfNeccessary(Object o) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,153,lass returnType = lastInvocation.getMethod().getReturnType();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,154,"eturn createNumberObject(o, returnType);"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,157,rotected void closeMethod() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,158,f (lastInvocationUsed && lastResult == null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,159,eturn;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,161,f (!isLastResultOrVoidMethod()) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,162,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,163,"missing behavior definition for the preceeding method call """
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,164, lastInvocation.toString()));
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,166,his.times(MockControl.ONE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,169,rotected void requireMethodCall(String failMessage) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,170,f (lastInvocation == null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,171,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,172,"method call on the mock needed before setting """
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,173, failMessage));
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,177,rotected void requireAssignable(Object returnValue) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,178,f (lastMethodIsVoidMethod()) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,179,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,180,"void method cannot return a value""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,182,f (returnValue == null) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,183,eturn;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,185,lass<?> returnedType = lastInvocation.getMethod().getReturnType();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,186,f (returnedType.isPrimitive()) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,187,eturnedType = null;//ToTypeMappings.primitiveToWrapperType.get(returnedType);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,189,f (!returnedType.isAssignableFrom(returnValue.getClass())) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,190,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,191,"incompatible return value type""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,195,rotected void requireValidThrowable(Throwable throwable) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,196,f (throwable == null)
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,197,hrow new RuntimeExceptionWrapper(new NullPointerException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,198,"null cannot be thrown""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,199,f (isValidThrowable(throwable))
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,200,eturn;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,202,hrow new RuntimeExceptionWrapper(new IllegalArgumentException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,203,"last method called on mock cannot throw """
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,204, throwable.getClass().getName()));
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,207,rotected void requireValidAnswer(IAnswer answer) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,208,f (answer == null)
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,209,hrow new RuntimeExceptionWrapper(new NullPointerException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,210,"answer object must not be null""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,213,rotected void requireLastResultOrVoidMethod() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,214,f (isLastResultOrVoidMethod()) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,215,eturn;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,217,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,218,"last method called on mock is not a void method""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,221,rotected void requireVoidMethod() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,222,f (lastMethodIsVoidMethod()) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,223,eturn;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,225,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,226,"last method called on mock is not a void method""));"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,229,rotected boolean isLastResultOrVoidMethod() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,230,eturn lastResult != null || lastMethodIsVoidMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,233,rotected boolean lastMethodIsVoidMethod() {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,234,lass returnType = lastInvocation.getMethod().getReturnType();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,235,eturn returnType.equals(Void.TYPE);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,238,rotected boolean isValidThrowable(Throwable throwable) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,239,f (throwable instanceof RuntimeException) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,240,eturn true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,242,f (throwable instanceof Error) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,243,eturn true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,245,lass<?>[] exceptions = lastInvocation.getMethod().getExceptionTypes();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,246,lass<?> throwableClass = throwable.getClass();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,247,or (Class<?> exception : exceptions) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,248,f (exception.isAssignableFrom(throwableClass))
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,249,eturn true;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,251,eturn false;
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,254,ublic void checkOrder(boolean value) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,255,loseMethod();
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,256,ehavior.checkOrder(value);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,259,ublic void setDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,260,ehavior.setDefaultMatcher(matcher);
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,263,"ublic void setMatcher(Method method, ArgumentsMatcher matcher) {"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,264,"equireMethodCall(""matcher"");"
False,src/org/easymock/internal/RecordState.java,src/org/easymock/internal/RecordState.java,265,"ehavior.setMatcher(lastInvocation.getMethod(), matcher);"
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,7,mport java.lang.reflect.Method;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,9,mport org.easymock.ArgumentsMatcher;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,10,mport org.mockito.internal.*;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,12,ublic class ReplayState implements IMocksControlState {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,14,rivate IMocksBehavior behavior;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,16,ublic ReplayState(IMocksBehavior behavior) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,17,his.behavior = behavior;
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,20,ublic Object invoke(Invocation invocation) throws Throwable {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,21,esult result = behavior.addActual(invocation);
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,22,astArguments.pushCurrentArguments(invocation.getArguments());
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,23,ry {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,24,ry {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,25,eturn result.answer();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,26, catch (Throwable t) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,27,hrow new ThrowableWrapper(t);
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,29, finally {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,30,astArguments.popCurrentArguments();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,34,ublic void verify() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,35,ehavior.verify();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,38,ublic void replay() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,39,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,42,ublic void callback(Runnable runnable) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,43,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,46,ublic void checkOrder(boolean value) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,47,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,50,ublic void andReturn(Object value) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,51,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,54,ublic void andThrow(Throwable throwable) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,55,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,58,ublic void andAnswer(IAnswer answer) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,59,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,62,ublic void andStubReturn(Object value) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,63,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,66,ublic void andStubThrow(Throwable throwable) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,67,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,70,ublic void andStubAnswer(IAnswer answer) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,71,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,74,ublic void asStub() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,75,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,78,ublic void times(Range range) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,79,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,82,"ublic void setMatcher(Method method, ArgumentsMatcher matcher) {"
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,83,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,86,ublic void setDefaultMatcher(ArgumentsMatcher matcher) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,87,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,90,ublic void setDefaultReturnValue(Object value) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,91,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,94,ublic void setDefaultThrowable(Throwable throwable) {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,95,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,98,ublic void setDefaultVoidCallable() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,99,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,102,rivate void throwWrappedIllegalStateException() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,103,hrow new RuntimeExceptionWrapper(new IllegalStateException(
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,104,"This method must not be called in replay state.""));"
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,107,ublic void assertRecordState() {
False,src/org/easymock/internal/ReplayState.java,src/org/easymock/internal/ReplayState.java,108,hrowWrappedIllegalStateException();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,7,mport java.util.ArrayList;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,8,mport java.util.LinkedList;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,9,mport java.util.List;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,11,mport org.mockito.internal.*;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,13,ublic class Results {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,15,rivate int callCount;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,17,rivate LinkedList<Range> ranges = new LinkedList<Range>();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,19,rivate List<Result> results = new ArrayList<Result>();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,21,"ublic void add(Result result, Range range) {"
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,22,f (!ranges.isEmpty()) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,23,ange lastRange = ranges.getLast();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,24,f (!lastRange.hasFixedCount())
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,25,hrow new RuntimeExceptionWrapper(
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,26,ew IllegalStateException(
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,27,"last method called on mock already has a non-fixed count set.""));"
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,29,anges.add(range);
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,30,esults.add(result);
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,33,ublic Result next() {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,34,nt currentPosition = 0;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,35,or (int i = 0; i < ranges.size(); i++) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,36,ange interval = ranges.get(i);
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,37,f (interval.hasOpenCount()) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,38,allCount += 1;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,39,eturn results.get(i);
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,41,urrentPosition += interval.getMaximum();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,42,f (currentPosition > callCount) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,43,allCount += 1;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,44,eturn results.get(i);
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,47,eturn null;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,50,ublic boolean hasValidCallCount() {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,51,eturn getMainInterval().contains(getCallCount());
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,54,Override
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,55,ublic String toString() {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,56,eturn getMainInterval().expectedAndActual(getCallCount());
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,59,rivate Range getMainInterval() {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,60,"nt min = 0, max = 0;"
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,62,or (Range interval : ranges) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,63,in += interval.getMinimum();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,64,f (interval.hasOpenCount() || max == Integer.MAX_VALUE) {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,65,ax = Integer.MAX_VALUE;
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,66, else {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,67,ax += interval.getMaximum();
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,71,"eturn new Range(min, max);"
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,74,ublic int getCallCount() {
False,src/org/easymock/internal/Results.java,src/org/easymock/internal/Results.java,75,eturn callCount;
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,7,ublic class ThrowableWrapper extends Throwable {
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,8,rivate final Throwable throwable;
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,10,ublic ThrowableWrapper(final Throwable throwable) {
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,11,his.throwable = throwable;
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,14,ublic Throwable getThrowable() {
False,src/org/easymock/internal/ThrowableWrapper.java,src/org/easymock/internal/ThrowableWrapper.java,15,eturn throwable;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,3, This program is made available under the terms of the MIT License.
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,5,ackage org.easymock.internal;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,7,mport java.util.ArrayList;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,8,mport java.util.List;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,10,mport org.mockito.internal.*;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,12,ublic class UnorderedBehavior {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,14,rivate final List<ExpectedInvocationAndResults> results = new ArrayList<ExpectedInvocationAndResults>();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,16,rivate final boolean checkOrder;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,18,ublic UnorderedBehavior(boolean checkOrder) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,19,his.checkOrder = checkOrder;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,22,"ublic void addExpected(ExpectedInvocation expected, Result result,"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,23,ange count) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,24,or (ExpectedInvocationAndResults entry : results) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,25,f (entry.getExpectedInvocation().equals(expected)) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,26,"ntry.getResults().add(result, count);"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,27,eturn;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,30,esults list = new Results();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,31,"ist.add(result, count);"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,32,"esults.add(new ExpectedInvocationAndResults(expected, list));"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,35,ublic Result addActual(Invocation actual) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,36,or (ExpectedInvocationAndResults entry : results) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,37,f (!entry.getExpectedInvocation().matches(actual)) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,38,ontinue;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,40,esult result = entry.getResults().next();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,41,f (result != null) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,42,eturn result;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,45,eturn null;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,48,ublic boolean verify() {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,49,or (ExpectedInvocationAndResults entry : results) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,50,f (!entry.getResults().hasValidCallCount()) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,51,eturn false;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,54,eturn true;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,57,Override
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,58,ublic String toString() {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,59,eturn toString(null);
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,62,ublic String toString(Invocation invocation) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,63,tringBuffer result = new StringBuffer();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,64,or (ExpectedInvocationAndResults entry : results) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,65,oolean unordered = !checkOrder;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,66,oolean validCallCount = entry.getResults().hasValidCallCount();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,67,oolean match = invocation != null
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,68,& entry.getExpectedInvocation().matches(invocation);
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,70,f (unordered && validCallCount && !match) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,71,ontinue;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,73,"esult.append(""\n    "" + entry.toString());"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,74,f (match) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,75,"esult.append("" (+1)"");"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,78,eturn result.toString();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,81,"ublic boolean allowsExpectedInvocation(ExpectedInvocation expected,"
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,82,oolean checkOrder) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,83,f (this.checkOrder != checkOrder) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,84,eturn false;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,85, else if (results.isEmpty() || !this.checkOrder) {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,86,eturn true;
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,87, else {
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,88,xpectedInvocation lastMethodCall = results.get(results.size() - 1)
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,89,getExpectedInvocation();
False,src/org/easymock/internal/UnorderedBehavior.java,src/org/easymock/internal/UnorderedBehavior.java,90,eturn lastMethodCall.equals(expected);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,1,package org.mockito;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,3,import org.mockito.internal.LastArguments;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,4,import org.mockito.internal.matchers.*;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,6,public class CoolMatchers {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,8,"* Expects any boolean argument. For details, see the EasyMock"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,9,* documentation.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,11,* @return <code>false</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,13,public static boolean anyBoolean() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,14,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,15,return false;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,19,"* Expects any byte argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,21,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,23,public static byte anyByte() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,24,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,25,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,29,"* Expects any char argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,31,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,33,public static char anyChar() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,34,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,35,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,39,"* Expects any int argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,41,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,43,public static int anyInt() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,44,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,45,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,49,"* Expects any long argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,51,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,53,public static long anyLong() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,54,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,55,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,59,"* Expects any float argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,61,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,63,public static float anyFloat() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,64,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,65,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,69,"* Expects any double argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,71,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,73,public static double anyDouble() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,74,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,75,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,79,"* Expects any short argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,81,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,83,public static short anyShort() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,84,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,85,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,89,"* Expects any Object argument. For details, see the EasyMock documentation."
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,91,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,93,public static Object anyObject() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,94,LastArguments.reportMatcher(Any.ANY);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,95,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,99,"* Expects an object implementing the given class. For details, see the"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,100,* EasyMock documentation.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,102,* @param <T>
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,103,*            the accepted type.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,104,* @param clazz
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,105,*            the class of the accepted type.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,106,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,108,public static <T> T isA(Class<T> clazz) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,109,LastArguments.reportMatcher(new InstanceOf(clazz));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,110,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,114,* Expects a boolean that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,116,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,117,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,118,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,120,public static boolean eq(boolean value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,121,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,122,return false;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,126,* Expects a byte that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,128,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,129,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,130,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,132,public static byte eq(byte value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,133,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,134,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,138,* Expects a char that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,140,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,141,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,142,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,144,public static char eq(char value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,145,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,146,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,150,* Expects a double that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,152,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,153,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,154,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,156,public static double eq(double value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,157,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,158,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,162,* Expects a float that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,164,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,165,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,166,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,168,public static float eq(float value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,169,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,170,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,174,* Expects an int that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,176,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,177,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,178,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,180,public static int eq(int value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,181,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,182,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,186,* Expects a long that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,188,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,189,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,190,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,192,public static long eq(long value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,193,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,194,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,198,* Expects a short that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,200,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,201,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,202,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,204,public static short eq(short value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,205,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,206,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,210,* Expects an Object that is equal to the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,212,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,213,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,214,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,216,public static <T> T eq(T value) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,217,LastArguments.reportMatcher(new Equals(value));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,218,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,222,* Expects null.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,224,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,226,public static Object isNull() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,227,LastArguments.reportMatcher(Null.NULL);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,228,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,232,* Expects not null.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,234,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,236,public static Object notNull() {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,237,LastArguments.reportMatcher(NotNull.NOT_NULL);
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,238,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,242,"* Expects a string that matches the given regular expression. For details,"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,243,* see the EasyMock documentation.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,245,* @param regex
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,246,*            the regular expression.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,247,* @return <code>null</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,249,public static String matches(String regex) {
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,250,LastArguments.reportMatcher(new Matches(regex));
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,251,return null;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,255,* Expects a double that has an absolute difference to the given value that
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,256,"* is less than the given delta. For details, see the EasyMock"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,257,* documentation.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,259,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,260,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,261,* @param delta
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,262,*            the given delta.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,263,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,265,"public static double eq(double value, double delta) {"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,266,"LastArguments.reportMatcher(new EqualsWithDelta(value, delta));"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,267,return 0;
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,271,* Expects a float that has an absolute difference to the given value that
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,272,"* is less than the given delta. For details, see the EasyMock"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,273,* documentation.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,275,* @param value
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,276,*            the given value.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,277,* @param delta
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,278,*            the given delta.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,279,* @return <code>0</code>.
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,281,"public static float eq(float value, float delta) {"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,282,"LastArguments.reportMatcher(new EqualsWithDelta(value, delta));"
True,src/org/mockito/CoolMatchers.java,src/org/mockito/CoolMatchers.java,283,return 0;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,7,ublic class Mockito {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,7,public class Mockito extends CoolMatchers {
False,test/org/mockito/InvocationTest.java,test/org/mockito/InvocationTest.java,11,mport org.easymock.internal.*;
False,test/org/mockito/internal/ExpectedInvocationTest.java,test/org/mockito/internal/ExpectedInvocationTest.java,8,mport org.easymock.internal.*;
False,test/org/mockito/sample/MockitoSampleTest.java,test/org/mockito/sample/MockitoSampleTest.java,2,mport org.easymock.EasyMock;
False,test/org/mockito/usage/matchers/ComparableMatchersTest.java,test/org/mockito/usage/matchers/ComparableMatchersTest.java,11,mport org.easymock.internal.matchers.*;
False,test/org/mockito/usage/matchers/ComparableMatchersTest.java,test/org/mockito/usage/matchers/ComparableMatchersTest.java,14,mport org.mockito.matchers.*;
False,test/org/mockito/usage/matchers/InvalidUseOfMatchersTest.java,test/org/mockito/usage/matchers/InvalidUseOfMatchersTest.java,7,mport static org.easymock.EasyMock.*;
True,test/org/mockito/usage/matchers/InvalidUseOfMatchersTest.java,test/org/mockito/usage/matchers/InvalidUseOfMatchersTest.java,7,import static org.mockito.Mockito.*;
False,test/org/mockito/usage/matchers/MatchersTest.java,test/org/mockito/usage/matchers/MatchersTest.java,7,mport static org.easymock.EasyMock.*;
True,test/org/mockito/usage/matchers/MatchersTest.java,test/org/mockito/usage/matchers/MatchersTest.java,7,import static org.mockito.Mockito.*;
False,test/org/mockito/usage/matchers/MatchersToStringTest.java,test/org/mockito/usage/matchers/MatchersToStringTest.java,12,mport org.easymock.internal.matchers.*;
False,test/org/mockito/usage/verification/BasicVerificationTest.java,test/org/mockito/usage/verification/BasicVerificationTest.java,8,mport org.easymock.EasyMock;
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,7,mport org.easymock.EasyMock;
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,25,erify(list).add(EasyMock.anyObject());
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,26,"erify(list).add(EasyMock.anyInt(), EasyMock.eq(""test two""));"
True,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,24,verify(list).add(anyObject());
True,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,25,"verify(list).add(anyInt(), eq(""test two""));"
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,28,"erify(map).put(EasyMock.anyObject(), EasyMock.anyObject());"
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,29,"erify(map).put(EasyMock.eq(""test two""), EasyMock.eq(200));"
True,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,27,"verify(map).put(anyObject(), anyObject());"
True,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,28,"verify(map).put(eq(""test two""), eq(200));"
False,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,51,"erify(map, 2).put(EasyMock.anyObject(), EasyMock.anyInt());"
True,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationOnMultipleMocksUsingMatchersTest.java,50,"verify(map, 2).put(anyObject(), anyInt());"
False,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,10,mport static org.mockito.Mockito.verify;
True,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,test/org/mockito/usage/verification/VerificationUsingMatchersTest.java,9,import static org.mockito.Mockito.*;
