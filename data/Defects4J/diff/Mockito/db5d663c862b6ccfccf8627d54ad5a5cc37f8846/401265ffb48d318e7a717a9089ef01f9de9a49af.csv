is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,5,ackage org.mockito.internal.invocation;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,7,mport java.util.LinkedList;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,8,mport java.util.List;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,10,ublic class Chunker {
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,13," creates chunks of objects based on equality and consecutive factor, e.g:"
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,14, <p>
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,15," if objects are [1,1,2,1,1] then there are 3 chunks: [1,1] [2] [1,1]"
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,17,"ublic <T> List<ObjectsChunk<T>> chunk(List<T> objects, ChunksDistributor<T> distributor) {"
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,18,inkedList<ObjectsChunk<T>> chunks = new LinkedList<ObjectsChunk<T>>();
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,19, previous = null;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,20,or (T current : objects) {
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,21,f (previous == null) {
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,22,hunks.add(new ObjectsChunk<T>(current));
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,23,revious = current;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,24,ontinue;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,27,"f (distributor.isSameChunk(previous, current)) {"
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,28,hunks.getLast().addObject(current);
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,29, else {
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,30,hunks.add(new ObjectsChunk<T>(current));
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,33,revious = current;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,36,eturn chunks;
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,39,tatic interface ChunksDistributor<T> {
False,src/org/mockito/internal/invocation/Chunker.java,src/org/mockito/internal/invocation/Chunker.java,40,"oolean isSameChunk(T previous, T current);"
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,1,ackage org.mockito.internal.invocation;
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,3,mport java.util.LinkedList;
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,4,mport java.util.List;
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,6,ublic class ObjectsChunk<T> {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,8,inkedList<T> objects = new LinkedList<T>();
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,10,ublic ObjectsChunk() {}
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,12,ublic ObjectsChunk(T object) {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,13,bjects.add(object);
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,16,ublic void addObject(T object) {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,17,bjects.add(object);
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,20,ublic T getObject() {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,21,eturn objects.getFirst();
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,24,ublic List<T> getObjects() {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,25,eturn objects;
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,28,ublic int getSize() {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,29,eturn objects.size();
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,32,ublic boolean isEmpty() {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,33,eturn getSize() == 0;
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,36,Override
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,37,ublic String toString() {
False,src/org/mockito/internal/invocation/ObjectsChunk.java,src/org/mockito/internal/invocation/ObjectsChunk.java,38,"eturn ""Chunk size: "" + getSize() + "", objects: "" + objects;"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,5,ackage org.mockito.internal.invocation;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,7,mport static java.util.Arrays.*;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,8,mport static org.junit.Assert.*;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,9,mport static org.mockito.util.ExtraMatchers.*;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,11,mport java.util.Collections;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,12,mport java.util.List;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,14,mport org.junit.Before;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,15,mport org.junit.Test;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,16,mport org.mockito.RequiresValidState;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,18,ublic class ChunkerTest extends RequiresValidState {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,20,rivate final class EqualityBasedDistributor implements Chunker.ChunksDistributor<Integer> {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,21,"ublic boolean isSameChunk(Integer previous, Integer current) {"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,22,eturn previous.equals(current);
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,26,rivate Chunker chunker;
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,28,Before
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,29,ublic void setup() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,30,hunker = new Chunker();
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,33,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,34,ublic void shouldChunkObjectLists() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,35,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 2, 3), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,36,"ssertEquals(3, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,37,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,38,"ssertThat(chunked.get(1).getObjects(), collectionHasExactlyInOrder(2));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,39,"ssertThat(chunked.get(2).getObjects(), collectionHasExactlyInOrder(3));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,42,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,43,ublic void shouldChunkObjectListsAndFindDuplicates() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,44,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 1, 1, 2, 2, 3, 3, 3, 3), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,45,"ssertEquals(3, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,46,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1, 1, 1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,47,"ssertThat(chunked.get(1).getObjects(), collectionHasExactlyInOrder(2, 2));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,48,"ssertThat(chunked.get(2).getObjects(), collectionHasExactlyInOrder(3, 3, 3, 3));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,51,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,52,ublic void shouldChunkWhenDuplicatesOnEdges() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,53,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 1, 2, 3, 3), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,54,"ssertEquals(3, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,55,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1, 1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,56,"ssertThat(chunked.get(1).getObjects(), collectionHasExactlyInOrder(2));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,57,"ssertThat(chunked.get(2).getObjects(), collectionHasExactlyInOrder(3, 3));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,60,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,61,ublic void shouldChunkWhenDuplicatesInTheMiddle() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,62,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 2, 2, 3), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,63,"ssertEquals(3, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,64,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,65,"ssertThat(chunked.get(1).getObjects(), collectionHasExactlyInOrder(2, 2));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,66,"ssertThat(chunked.get(2).getObjects(), collectionHasExactlyInOrder(3));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,69,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,70,ublic void shouldNotMergeDuplicatesThatAreNotConsecutive() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,71,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 1, 2, 1, 1, 1), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,72,"ssertEquals(3, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,73,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1, 1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,74,"ssertThat(chunked.get(1).getObjects(), collectionHasExactlyInOrder(2));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,75,"ssertThat(chunked.get(2).getObjects(), collectionHasExactlyInOrder(1, 1, 1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,78,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,79,ublic void shouldCreateSingleChunkForOneElementList() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,80,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,81,"ssertEquals(1, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,82,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,85,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,86,ublic void shouldCreateSingleChunkOfSizeTwo() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,87,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(asList(1, 1), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,88,"ssertEquals(1, chunked.size());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,89,"ssertThat(chunked.get(0).getObjects(), collectionHasExactlyInOrder(1, 1));"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,92,Test
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,93,ublic void shouldCreateEmptyChunks() throws Exception {
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,94,"ist<ObjectsChunk<Integer>> chunked = chunker.chunk(Collections.<Integer>emptyList(), new EqualityBasedDistributor());"
False,test/org/mockito/internal/invocation/ChunkerTest.java,test/org/mockito/internal/invocation/ChunkerTest.java,95,"ssertEquals(0, chunked.size());"
False,test/org/mockito/internal/invocation/InvocationBuilder.java,test/org/mockito/internal/invocation/InvocationBuilder.java,87,ublic InvocationBuilder otherMethod() {
False,test/org/mockito/internal/invocation/InvocationBuilder.java,test/org/mockito/internal/invocation/InvocationBuilder.java,88,"eturn this.method(""otherMethod"");"
False,test/org/mockito/internal/progress/VerificationModeBuilder.java,test/org/mockito/internal/progress/VerificationModeBuilder.java,22,ublic VerificationModeBuilder atLeastOnce() {
False,test/org/mockito/internal/progress/VerificationModeBuilder.java,test/org/mockito/internal/progress/VerificationModeBuilder.java,23,imes = null;
False,test/org/mockito/internal/progress/VerificationModeBuilder.java,test/org/mockito/internal/progress/VerificationModeBuilder.java,24,eturn this;
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,41,ublic static <T> Matcher<String> containsString(final String text) {
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,42,eturn new BaseMatcher<String>() {
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,43,ublic boolean matches(Object string) {
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,44,eturn ((String) string).contains(text);
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,46,ublic void describeTo(Description desc) {
False,test/org/mockito/util/ExtraMatchers.java,test/org/mockito/util/ExtraMatchers.java,47,"esc.appendText(""string doesn't contain "" + text);"
