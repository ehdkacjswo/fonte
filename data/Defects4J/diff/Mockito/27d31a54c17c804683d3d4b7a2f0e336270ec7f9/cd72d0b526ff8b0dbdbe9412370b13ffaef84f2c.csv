is_addition,old_file_path,new_file_path,line_num,content
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,14,import java.io.File;
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,20,rivate final Project project;
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,21,private final File workDir;
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,23,"itNotesBuilder(Project project, String authTokenEnvVar) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,25,* @param workDir the working directory for external processes execution (for example: git log)
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,26,* @param authTokenEnvVar the env var that holds the GitHub auth token
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,28,"GitNotesBuilder(File workDir, String authTokenEnvVar) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,29,this.workDir = workDir;
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,25,his.project = project;
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,28,"ublic String buildNotes(String fromRevision, String toRevision) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,33,"public String buildNotes(String version, String fromRevision, String toRevision) {"
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,31,ontributionsProvider contributionsProvider = Vcs.getGitProvider(Exec.getGradleProcessRunner(project));
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,36,ContributionsProvider contributionsProvider = Vcs.getGitProvider(Exec.getProcessRunner(workDir));
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,37,"eturn new NotesPrinter().printNotes(project.getVersion().toString(), new Date(), contributions, improvements);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,42,"return new NotesPrinter().printNotes(version, new Date(), contributions, improvements);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,7,import java.io.File;
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,15, @param project the Gradle project
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,17,* @param workDir working directory for executing external processes like 'git log'
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,18,"ublic static NotesBuilder gitHubNotesBuilder(Project project, String authTokenEnvVar) {"
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,19,"eturn new GitNotesBuilder(project, authTokenEnvVar);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,20,"public static NotesBuilder gitHubNotesBuilder(File workDir, String authTokenEnvVar) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,21,"return new GitNotesBuilder(workDir, authTokenEnvVar);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,4,* Builds the release notes text
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,11,* @param version the version of the release we're building the notes
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,11,"tring buildNotes(String fromRevision, String toRevision);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,15,"String buildNotes(String version, String fromRevision, String toRevision);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,3,mport org.gradle.api.Project;
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,3,import java.io.File;
False,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,7,ublic static ProcessRunner getGradleProcessRunner(Project project) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,8,eturn new GradleProcessRunner(project);
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,7,public static ProcessRunner getProcessRunner(File workDir) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,8,return new DefaultProcessRunner(workDir);
False,buildSrc/src/main/groovy/org/mockito/release/notes/improvements/GitHubAuthToken.java,buildSrc/src/main/groovy/org/mockito/release/notes/improvements/GitHubAuthToken.java,16,"hrow new ReleaseNotesException(""Environmental variable '"" + envVariableName + ""' is missing."");"
True,buildSrc/src/main/groovy/org/mockito/release/notes/improvements/GitHubAuthToken.java,buildSrc/src/main/groovy/org/mockito/release/notes/improvements/GitHubAuthToken.java,16,"throw new ReleaseNotesException(""Environmental variable '"" + envVariableName + ""' is missing."", null);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,5,ublic ReleaseNotesException(String message) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,6,uper(message);
True,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,5,"public ReleaseNotesException(String message, Throwable cause) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,buildSrc/src/main/groovy/org/mockito/release/notes/util/ReleaseNotesException.java,6,"super(message, cause);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/versions/FromNotesContent.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/FromNotesContent.java,24,"hrow new ReleaseNotesException(""Unable to parse previous version from release notes content: "" + releaseNotesContent);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/FromNotesContent.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/FromNotesContent.java,24,"throw new ReleaseNotesException(""Unable to parse previous version from release notes content: "" + releaseNotesContent, null);"
