is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/MockFactory.java,src/org/mockito/internal/MockFactory.java,33,/TODO still... why is this needed?
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,24,lass Super<T> {
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,24,private class Super<T> {
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,30,lass Sub extends Super<String> {
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,30,private class Sub extends Super<String> {
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,37,Super mock;
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,39,private void setMockWithDownCast(Super mock) {
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,40,this.mock = mock;
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,43,private void say(String string) {
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,44,mock.say(string);
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,50,/mock has to detect it and do the polymorphic call: Sub.say(Object)
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,51,uper s = mock(Sub.class);
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,53,".say(""Hello"");"
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,55,"erify(s).say(""Hello"");"
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,58,Test
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,59,ublic void shouldVerifyCorrectlyWhenBridgeMethodIsNotCalled() throws Exception {
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,60,"/no problem here, no polymorphic call"
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,60,//mock has to detect it and do the super.say()
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,61,//see MockFactory.java
False,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,63,".say(""Hello"");"
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,63,setMockWithDownCast(s);
True,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,test/org/mockito/usage/binding/BridgeMethodPuzzleTest.java,64,"say(""Hello"");"
