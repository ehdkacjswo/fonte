is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,22,ublic class ToTypeMappings {
True,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,22,public class EmptyReturnValues {
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,24,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,25,"rotected static Map<Class, Class> primitiveToWrapperType = new HashMap<Class, Class>();"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,27,tatic {
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,28,"rimitiveToWrapperType.put(Boolean.TYPE, Boolean.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,29,"rimitiveToWrapperType.put(Byte.TYPE, Byte.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,30,"rimitiveToWrapperType.put(Short.TYPE, Short.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,31,"rimitiveToWrapperType.put(Character.TYPE, Character.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,32,"rimitiveToWrapperType.put(Integer.TYPE, Integer.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,33,"rimitiveToWrapperType.put(Long.TYPE, Long.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,34,"rimitiveToWrapperType.put(Float.TYPE, Float.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,35,"rimitiveToWrapperType.put(Double.TYPE, Double.class);"
False,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,38,ublic static Object emptyReturnValueFor(Class<?> type) {
True,src/org/mockito/internal/ToTypeMappings.java,src/org/mockito/internal/EmptyReturnValues.java,24,public static Object emptyValueFor(Class<?> type) {
False,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,30,eturn ToTypeMappings.emptyReturnValueFor(method.getReturnType());
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,30,return EmptyReturnValues.emptyValueFor(method.getReturnType());
False,src/org/mockito/internal/StubbedInvocation.java,src/org/mockito/internal/StubbedInvocationMatcher.java,8,ublic class StubbedInvocation extends InvocationMatcher {
True,src/org/mockito/internal/StubbedInvocation.java,src/org/mockito/internal/StubbedInvocationMatcher.java,7,public class StubbedInvocationMatcher extends InvocationMatcher {
False,src/org/mockito/internal/StubbedInvocation.java,src/org/mockito/internal/StubbedInvocationMatcher.java,12,"ublic StubbedInvocation(InvocationMatcher invocation, Result result) {"
True,src/org/mockito/internal/StubbedInvocation.java,src/org/mockito/internal/StubbedInvocationMatcher.java,11,"public StubbedInvocationMatcher(InvocationMatcher invocation, Result result) {"
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,10,rivate LinkedList<StubbedInvocation> stubbed = new LinkedList<StubbedInvocation>();
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,10,private LinkedList<StubbedInvocationMatcher> stubbed = new LinkedList<StubbedInvocationMatcher>();
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,13,public void setInvocationForPotentialStubbing(InvocationMatcher invocation) {
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,14,this.invocationForStubbing = invocation;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,24,ublic void addVoidMethodForThrowable(InvocationMatcher invocationWithMatchers) {
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,25,his.invocationForStubbing = invocationWithMatchers;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,26,his.addThrowable(throwableForVoidMethod);
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,27,hrowableForVoidMethod = null;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,32,"tubbed.addFirst(new StubbedInvocation(invocationForStubbing, result));"
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,30,"stubbed.addFirst(new StubbedInvocationMatcher(invocationForStubbing, result));"
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,36,or (StubbedInvocation s : stubbed) {
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,34,for (StubbedInvocationMatcher s : stubbed) {
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,42,eturn ToTypeMappings.emptyReturnValueFor(wanted.getMethod().getReturnType());
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,40,return EmptyReturnValues.emptyValueFor(wanted.getMethod().getReturnType());
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,43,public void addThrowableForVoidMethod(Throwable throwable) {
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,44,throwableForVoidMethod = throwable;
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,47,public boolean hasThrowableForVoidMethod() {
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,48,return throwableForVoidMethod != null;
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,51,public void addVoidMethodForThrowable(InvocationMatcher voidMethodInvocationMatcher) {
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,52,invocationForStubbing = voidMethodInvocationMatcher;
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,53,addThrowable(throwableForVoidMethod);
True,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,54,throwableForVoidMethod = null;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,73,ublic void setInvocationForPotentialStubbing(InvocationMatcher invocation) {
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,74,his.invocationForStubbing = invocation;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,77,ublic void addThrowableForVoidMethod(Throwable throwable) {
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,78,hrowableForVoidMethod = throwable;
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,81,ublic boolean hasThrowableForVoidMethod() {
False,src/org/mockito/internal/Stubber.java,src/org/mockito/internal/Stubber.java,82,eturn throwableForVoidMethod != null;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,5,package org.mockito.internal;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,7,import static org.junit.Assert.*;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,9,import java.util.*;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,11,import org.junit.Test;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,12,import org.mockito.util.RequiresValidState;
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,14,public class EmptyReturnValuesTest extends RequiresValidState {
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,16,"@SuppressWarnings(""unchecked"")"
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,17,@Test public void shouldReturnEmptyCollectionsOrNullForNonCollections() {
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,18,assertTrue(((Collection)EmptyReturnValues.emptyValueFor(Collection.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,20,assertTrue(((Set)EmptyReturnValues.emptyValueFor(Set.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,21,assertTrue(((SortedSet)EmptyReturnValues.emptyValueFor(SortedSet.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,22,assertTrue(((HashSet)EmptyReturnValues.emptyValueFor(HashSet.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,23,assertTrue(((TreeSet)EmptyReturnValues.emptyValueFor(TreeSet.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,24,assertTrue(((LinkedHashSet)EmptyReturnValues.emptyValueFor(LinkedHashSet.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,26,assertTrue(((List)EmptyReturnValues.emptyValueFor(List.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,27,assertTrue(((ArrayList)EmptyReturnValues.emptyValueFor(ArrayList.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,28,assertTrue(((LinkedList)EmptyReturnValues.emptyValueFor(LinkedList.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,30,assertTrue(((Map)EmptyReturnValues.emptyValueFor(Map.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,31,assertTrue(((SortedMap)EmptyReturnValues.emptyValueFor(SortedMap.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,32,assertTrue(((HashMap)EmptyReturnValues.emptyValueFor(HashMap.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,33,assertTrue(((TreeMap)EmptyReturnValues.emptyValueFor(TreeMap.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,34,assertTrue(((LinkedHashMap)EmptyReturnValues.emptyValueFor(LinkedHashMap.class)).isEmpty());
True,test/org/mockito/internal/EmptyReturnValuesTest.java,test/org/mockito/internal/EmptyReturnValuesTest.java,36,assertNull(EmptyReturnValues.emptyValueFor(String.class));
False,test/org/mockito/internal/InvocationBuilder.java,test/org/mockito/internal/InvocationBuilder.java,69,ublic InvocationMatcher toMatchingInvocation() {
True,test/org/mockito/internal/InvocationBuilder.java,test/org/mockito/internal/InvocationBuilder.java,69,public InvocationMatcher toInvocationMatcher() {
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,3,mport org.junit.Test;
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,5,import org.junit.*;
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,7,mport static org.junit.Assert.*;
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,11,private Stubber s;
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,13,@Before
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,14,public void setup() {
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,15,s = new Stubber();
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,16,s.setInvocationForPotentialStubbing(new InvocationBuilder().toInvocationMatcher());
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,17,MockitoState.instance().stubbingStarted();
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,13,tubber s = new Stubber();
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,14,.setInvocationForPotentialStubbing(new InvocationBuilder().toMatchingInvocation());
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,16,ockitoState.instance().stubbingStarted();
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,27,tubber s = new Stubber();
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,28,.setInvocationForPotentialStubbing(new InvocationBuilder().toMatchingInvocation());
False,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,30,ockitoState.instance().stubbingStarted();
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,36,@Test
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,37,public void shouldGetResultsForMethods() throws Throwable {
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,38,"Invocation simpleMethod = new InvocationBuilder().method(""simpleMethod"").toInvocation();"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,39,s.setInvocationForPotentialStubbing(new InvocationMatcher(simpleMethod));
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,40,"s.addReturnValue(""simpleMethod"");"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,42,"Invocation differentMethod = new InvocationBuilder().method(""differentMethod"").toInvocation();"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,43,s.setInvocationForPotentialStubbing(new InvocationMatcher(differentMethod));
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,44,s.addThrowable(new IllegalStateException());
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,46,"assertEquals(""simpleMethod"", s.resultFor(simpleMethod));"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,48,try {
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,49,s.resultFor(differentMethod);
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,50,fail();
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,51,} catch (IllegalStateException e) {}
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,54,@Test
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,55,public void shouldGetEmptyResultIfMethodsDontMatch() throws Throwable {
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,56,"Invocation simpleMethod = new InvocationBuilder().method(""simpleMethod"").toInvocation();"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,57,s.setInvocationForPotentialStubbing(new InvocationMatcher(simpleMethod));
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,58,"s.addReturnValue(""simpleMethod"");"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,60,"Invocation differentMethod = new InvocationBuilder().method(""differentMethod"").toInvocation();"
True,test/org/mockito/internal/StubberTest.java,test/org/mockito/internal/StubberTest.java,62,"assertEquals(null, s.resultFor(differentMethod));"
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,5,ackage org.mockito.internal;
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,7,mport static org.junit.Assert.*;
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,9,mport java.util.*;
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,11,mport org.junit.Test;
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,12,mport org.mockito.util.RequiresValidState;
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,14,ublic class ToTypeMappingsTest extends RequiresValidState {
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,16,"SuppressWarnings(""unchecked"")"
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,17,Test public void shouldReturnEmptyCollectionsOrNullForNonCollections() {
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,18,ssertTrue(((Collection)ToTypeMappings.emptyReturnValueFor(Collection.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,20,ssertTrue(((Set)ToTypeMappings.emptyReturnValueFor(Set.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,21,ssertTrue(((SortedSet)ToTypeMappings.emptyReturnValueFor(SortedSet.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,22,ssertTrue(((HashSet)ToTypeMappings.emptyReturnValueFor(HashSet.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,23,ssertTrue(((TreeSet)ToTypeMappings.emptyReturnValueFor(TreeSet.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,24,ssertTrue(((LinkedHashSet)ToTypeMappings.emptyReturnValueFor(LinkedHashSet.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,26,ssertTrue(((List)ToTypeMappings.emptyReturnValueFor(List.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,27,ssertTrue(((ArrayList)ToTypeMappings.emptyReturnValueFor(ArrayList.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,28,ssertTrue(((LinkedList)ToTypeMappings.emptyReturnValueFor(LinkedList.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,30,ssertTrue(((Map)ToTypeMappings.emptyReturnValueFor(Map.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,31,ssertTrue(((SortedMap)ToTypeMappings.emptyReturnValueFor(SortedMap.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,32,ssertTrue(((HashMap)ToTypeMappings.emptyReturnValueFor(HashMap.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,33,ssertTrue(((TreeMap)ToTypeMappings.emptyReturnValueFor(TreeMap.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,34,ssertTrue(((LinkedHashMap)ToTypeMappings.emptyReturnValueFor(LinkedHashMap.class)).isEmpty());
False,test/org/mockito/internal/ToTypeMappingsTest.java,test/org/mockito/internal/ToTypeMappingsTest.java,36,ssertNull(ToTypeMappings.emptyReturnValueFor(String.class));
False,test/org/mockitousage/IMethods.java,test/org/mockitousage/IMethods.java,56,oolean simpleMethod();
True,test/org/mockitousage/IMethods.java,test/org/mockitousage/IMethods.java,56,String simpleMethod();
False,test/org/mockitousage/IMethods.java,test/org/mockitousage/IMethods.java,58,oid differentMethod();
True,test/org/mockitousage/IMethods.java,test/org/mockitousage/IMethods.java,58,String differentMethod();
False,test/org/mockitousage/MultiThreadedTest.java,test/org/mockitousage/MultiThreadedTest.java,38,"oTypeMappingsTest.class,"
True,test/org/mockitousage/MultiThreadedTest.java,test/org/mockitousage/MultiThreadedTest.java,38,"EmptyReturnValuesTest.class,"
