is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,5,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,7,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,9,public class Whitebox {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,11,"public static Object getInternalState(Object target, String field) {"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,12,Class<?> c = target.getClass();
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,13,try {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,14,"Field f = getFieldFromHierarchy(c, field);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,15,f.setAccessible(true);
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,16,return f.get(target);
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,17,} catch (Exception e) {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,18,"throw new RuntimeException(""Unable to set internal state on a private field. Please report to mockito mailing list."", e);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,22,"public static void setInternalState(Object target, String field, Object value) {"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,23,Class<?> c = target.getClass();
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,24,try {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,25,"Field f = getFieldFromHierarchy(c, field);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,26,f.setAccessible(true);
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,27,"f.set(target, value);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,28,} catch (Exception e) {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,29,"throw new RuntimeException(""Unable to set internal state on a private field. Please report to mockito mailing list."", e);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,33,"private static Field getFieldFromHierarchy(Class<?> clazz, String field) {"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,34,"Field f = getField(clazz, field);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,35,while (f == null && clazz != Object.class) {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,36,clazz = clazz.getSuperclass();
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,37,"f = getField(clazz, field);"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,39,if (f == null) {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,40,throw new RuntimeException(
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,41,"""You want me to set value to this field: '"" + field +"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,42,"""' on this class: '"" + clazz.getSimpleName() +"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,43,"""' but this field is not declared withing hierarchy of this class!"");"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,45,return f;
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,48,"private static Field getField(Class<?> clazz, String field) {"
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,49,try {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,50,return clazz.getDeclaredField(field);
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,51,} catch (NoSuchFieldException e) {
True,src/org/mockito/internal/util/reflection/Whitebox.java,src/org/mockito/internal/util/reflection/Whitebox.java,52,return null;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,5,package org.mockito.runners;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,7,import org.junit.runner.Description;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,8,import org.junit.runner.Runner;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,9,import org.junit.runner.notification.Failure;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,10,import org.junit.runner.notification.RunListener;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,11,import org.junit.runner.notification.RunNotifier;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,12,import org.mockito.internal.debugging.DebuggingInfo;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,13,import org.mockito.internal.progress.MockingProgress;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,14,import org.mockito.internal.progress.ThreadSafeMockingProgress;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,15,import org.mockito.internal.runners.RunnerFactory;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,16,import org.mockito.internal.runners.RunnerImpl;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,17,import org.mockito.internal.util.reflection.Whitebox;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,20,* Experimental implementation that suppose to improve tdd/testing experience.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,21,* Don't hesitate to send feedback to mockito@googlegroups.com
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,22,* <b>It is very likely it will change in the next version!</b>
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,23,* <p>
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,24,* This runner does exactly what {@link MockitoJUnitRunner} does but also
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,25,* adds extra Mocktio hints to the exception message.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,26,* The point is that Mockito should help the tdd developer to quickly figure out if the test fails for the right reason and track the reason.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,27,* <p>
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,28,* The implemntation is pretty hacky - it uses brute force of reflection to modify the exception message and add extra mockito hints.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,29,* You've been warned.
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,30,* <p>
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,31,* Do you think it is useful or not? Drop us an email at mockito@googlegroups.com
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,33,public class VerboseMockitoJUnitRunner extends Runner {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,35,private RunnerImpl runner;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,37,public VerboseMockitoJUnitRunner(Class<?> klass) {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,38,"this(klass, new RunnerFactory().create(klass));"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,41,"VerboseMockitoJUnitRunner(Class<?> klass, RunnerImpl runnerImpl) {"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,42,this.runner = runnerImpl;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,45,@Override
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,46,public void run(RunNotifier notifier) {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,47,MockingProgress progress = new ThreadSafeMockingProgress();
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,48,DebuggingInfo debuggingInfo = progress.getDebuggingInfo();
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,50,"beforeRun(notifier, debuggingInfo);"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,52,runner.run(notifier);
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,54,afterRun(debuggingInfo);
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,57,private void afterRun(final DebuggingInfo debuggingInfo) {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,58,debuggingInfo.clearData();
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,61,"private void beforeRun(RunNotifier notifier, final DebuggingInfo debuggingInfo) {"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,62,debuggingInfo.collectData();
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,64,//a listener that changes the failure's exception in a very hacky way...
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,65,RunListener listener = new RunListener() {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,66,@Override public void testFailure(final Failure failure) throws Exception {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,67,"Throwable throwable = (Throwable) Whitebox.getInternalState(failure, ""fThrownException"");"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,69,String newMessage = throwable.getMessage();
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,70,"newMessage += ""\n"" + debuggingInfo.getWarnings();"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,72,"Whitebox.setInternalState(throwable, ""detailMessage"", newMessage);"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,76,notifier.addFirstListener(listener);
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,79,@Override
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,80,public Description getDescription() {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,81,return runner.getDescription();
True,test/org/mockito/internal/util/reflection/DummyClassForTests.java,test/org/mockito/internal/util/reflection/DummyClassForTests.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/DummyClassForTests.java,test/org/mockito/internal/util/reflection/DummyClassForTests.java,3,public class DummyClassForTests extends DummyParentClassForTests {
True,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,3,public class DummyParentClassForTests {
True,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,5,"@SuppressWarnings(""unused"")//I know, I know. We're doing nasty reflection hacks here..."
True,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,test/org/mockito/internal/util/reflection/DummyParentClassForTests.java,6,private String somePrivateField;
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,5,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,7,public class WhiteboxTest {
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,9,@Test
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,10,public void shouldSetInternalStateOnHierarchy() {
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,11,//given
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,12,DummyClassForTests dummy = new DummyClassForTests();
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,13,//when
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,14,"Whitebox.setInternalState(dummy, ""somePrivateField"", ""cool!"");"
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,15,//then
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,16,"Object internalState = org.powermock.reflect.Whitebox.getInternalState(dummy, ""somePrivateField"");"
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,17,"assertEquals(""cool!"", internalState);"
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,20,@Test
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,21,public void shouldGetInternalStateFromHierarchy() {
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,22,//given
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,23,DummyClassForTests dummy = new DummyClassForTests();
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,24,"org.powermock.reflect.Whitebox.setInternalState(dummy, ""somePrivateField"", ""boo!"");"
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,25,//when
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,26,"Object internalState = Whitebox.getInternalState(dummy, ""somePrivateField"");"
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,27,//then
True,test/org/mockito/internal/util/reflection/WhiteboxTest.java,test/org/mockito/internal/util/reflection/WhiteboxTest.java,28,"assertEquals(""boo!"", internalState);"
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,5,package org.mockitousage.junitrunner;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,7,import java.util.List;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,9,import org.junit.Test;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,10,import org.junit.runner.RunWith;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,11,import org.mockito.Mock;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,12,import org.mockito.runners.VerboseMockitoJUnitRunner;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,13,import org.mockitoutil.TestBase;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,15,@RunWith(VerboseMockitoJUnitRunner.class)
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,16,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,17,public class VerboseJUnitRunnerTest extends TestBase {
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,19,@Mock private List list;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,20,@Mock private List listTwo;
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,22,@Test
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,23,public void shouldInitMocksUsingRunner() {
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,24,//given
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,25,"//        when(list.get(0)).thenReturn(""Igor"");"
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,27,"//        assertEquals(""Igor"", list.get(1));"
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,29,//when
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,30,//        executeSystem(0);
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,32,//then
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,33,"//        verify(listTwo).add(""Igor"");"
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,36,private void executeSystem(int idx) {
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,37,Object first = list.get(idx + 1);
True,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,test/org/mockitousage/junitrunner/VerboseJUnitRunnerTest.java,38,listTwo.add(first);
