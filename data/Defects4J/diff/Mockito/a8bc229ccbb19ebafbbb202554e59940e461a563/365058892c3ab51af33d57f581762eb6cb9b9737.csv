is_addition,old_file_path,new_file_path,line_num,content
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,10,mport java.util.List;
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,51,lass Base {}
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,52,lass Sub extends Base {}
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,54,nterface Generic {
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,55,ist<Base> getList();
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,58,Test
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,59,ublic void shouldAllowStubbingWithSubtypes() throws Exception {
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,60,eneric mockTwo = mock(Generic.class);
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,62,ist<Sub> subs = null;
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,63,/can I somehow avoid a cast here:
False,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,64,hen(mockTwo.getList()).thenReturn((List) subs);
