is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,23,* <p/>
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,27,* <p/>
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,31,* <p/>
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,36,* <p/>
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,56,"assertNotInterface(instance, field.getType());"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,68, catch (MockitoException e) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,69,hrow e;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,71,"hrow new MockitoException(""Problems initiating @Spy annotated field '"" + field.getName() + ""'"", e);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,70,"throw new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName() + ""'.\n"" + e.getMessage(), e);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,76,"private static void assertNotInterface(Object testInstance, Class<?> type) {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,77,type = testInstance != null? testInstance.getClass() : type;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,78,if (type.isInterface()) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,79,"throw new MockitoException(""Type '"" + type.getSimpleName() + ""' is an interface and it cannot be spied on."");"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,78,"hrows InstantiationException, IllegalAccessException, InvocationTargetException {"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,79,ockSettings settings = withSettings()
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,80,defaultAnswer(Mockito.CALLS_REAL_METHODS)
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,81,name(field.getName());
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,82,lass<?> type = field.getType();
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,83,f (type.isInterface()) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,84,"eturn Mockito.mock(type,settings.useConstructor());"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,86,ry {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,87,f (!Modifier.isStatic(type.getModifiers())) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,88,lass<?> enclosing = type.getEnclosingClass();
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,89,f (enclosing != null) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,90,f (!enclosing.isInstance(testInstance)) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,91,"hrow new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName() + ""'."""
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,92," ""\nIf you are mocking an inner class please ensure the instance of the outer class is supplied via withSettings().outerInstance()"""
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,93," ""\nThe outer class is: '"" + enclosing.getSimpleName() + ""'"");"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,95,/TODO SF find out if it is useful
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,84,"throws InstantiationException, IllegalAccessException, InvocationTargetException {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,85,MockSettings settings = withSettings()
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,86,.defaultAnswer(Mockito.CALLS_REAL_METHODS)
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,87,.name(field.getName());
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,88,Class<?> type = field.getType();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,89,if (type.isInterface()) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,90,"return Mockito.mock(type, settings.useConstructor());"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,92,if (!Modifier.isStatic(type.getModifiers())) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,93,Class<?> enclosing = type.getEnclosingClass();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,94,if (enclosing != null) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,95,if (!enclosing.isInstance(testInstance)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,96,"throw new MockitoException(""If you are mocking an inner class please ensure the instance of the outer class is supplied via withSettings().outerInstance()"""
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,97,"+ ""\nThe outer class is: '"" + enclosing.getSimpleName() + ""'"");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,99,//TODO SF find out if it is useful
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,101,"eturn Mockito.mock(type, settings"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,102,useConstructor()
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,103,outerInstance(testInstance));
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,106,onstructor<?> constructor = type.getDeclaredConstructor();
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,107,f (Modifier.isPrivate(constructor.getModifiers())) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,108,onstructor.setAccessible(true);
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,109,"eturn Mockito.mock(type, settings"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,110,spiedInstance(constructor.newInstance()));
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,111, else {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,112,"eturn Mockito.mock(type, settings.useConstructor());"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,114, catch (NoSuchMethodException noDefaultConstructor) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,115,"hrow new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName()"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,116," ""'. Please ensure that the type '"" + type.getSimpleName()  + ""' has 0-arg constructor."");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,105,"return Mockito.mock(type, settings"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,106,.useConstructor()
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,107,.outerInstance(testInstance));
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,110,Constructor<?> constructor;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,111,try {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,112,constructor = type.getDeclaredConstructor();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,113,} catch (NoSuchMethodException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,114,"throw new MockitoException(""Please ensure that the type '"" + type.getSimpleName() + ""' has 0-arg constructor."");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,117,if (Modifier.isPrivate(constructor.getModifiers())) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,118,constructor.setAccessible(true);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,119,"return Mockito.mock(type, settings"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,120,.spiedInstance(constructor.newInstance()));
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,121,} else {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,122,"return Mockito.mock(type, settings.useConstructor());"
False,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,37,"eturn new InstantationException(""Unable to create mock instance of '"""
False,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,38," cls.getSimpleName() + ""'.\nPlease ensure that the outer instance has correct type and that the target class has parameter-less constructor."", e);"
True,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,37,"return new InstantationException(""Unable to create instance of '"""
True,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,38,"+ cls.getSimpleName() + ""'.\nPlease ensure that the outer instance has correct type and that the target class has 0-arg constructor."", e);"
False,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,56, catch (Exception e) {
False,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,57,"hrow new InstantationException(""Unable to create mock instance of '"""
False,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,58," cls.getSimpleName() + ""'.\nPlease ensure it has parameter-less constructor."", e);"
True,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,56,} catch (Throwable t) {
True,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,57,"throw new InstantationException(""Unable to create instance of '"""
True,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,src/org/mockito/internal/creation/instance/ConstructorInstantiator.java,58,"+ cls.getSimpleName() + ""'.\nPlease ensure it has 0-arg constructor which invokes cleanly."", t);"
False,src/org/mockito/internal/creation/instance/InstantationException.java,src/org/mockito/internal/creation/instance/InstantationException.java,3,ublic class InstantationException extends RuntimeException {
True,src/org/mockito/internal/creation/instance/InstantationException.java,src/org/mockito/internal/creation/instance/InstantationException.java,3,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/creation/instance/InstantationException.java,src/org/mockito/internal/creation/instance/InstantationException.java,5,public class InstantationException extends MockitoException {
False,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,30,"Please ensure it has parameter-less constructor."", e.getMessage());"
True,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,test/org/mockito/internal/creation/instance/ConstructorInstantiatorTest.java,30,"""Please ensure it has 0-arg constructor which invokes cleanly."", e.getMessage());"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,17,mport java.util.AbstractList;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,18,mport java.util.ArrayList;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,19,mport java.util.Arrays;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,20,mport java.util.List;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,17,import java.util.*;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,22,mport static org.mockito.Mockito.doReturn;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,23,mport static org.mockito.Mockito.when;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,19,import static org.mockito.Mockito.*;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,38,ublic void shouldInitSpies() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,34,public void should_init_spy_by_instance() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,46,ublic void shouldInitSpyIfNestedStaticClass() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,47,ssertNotNull(staticTypeWithNoArgConstructor);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,48,ssertNotNull(staticTypeWithoutDefinedConstructor);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,41,public void should_init_spy_and_automatically_create_instance() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,42,"when(staticTypeWithNoArgConstructor.toString()).thenReturn(""x"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,43,"when(staticTypeWithoutDefinedConstructor.toString()).thenReturn(""y"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,44,"assertEquals(""x"", staticTypeWithNoArgConstructor.toString());"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,45,"assertEquals(""y"", staticTypeWithoutDefinedConstructor.toString());"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,52,ublic void spyInterface() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,49,public void should_prevent_spying_on_interfaces() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,55,try {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,56,MockitoAnnotations.initMocks(withSpy);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,57,fail();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,58,} catch (MockitoException e) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,59,"Assertions.assertThat(e.getMessage()).contains(""is an interface and it cannot be spied on"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,63,@Test
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,64,public void should_allow_spying_on_interfaces_when_instance_is_concrete() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,65,class WithSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,66,@Spy List<String> list = new LinkedList<String>();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,69,WithSpy withSpy = new WithSpy();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,70,//when
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,59,"ssertEquals(0, withSpy.list.size());"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,60,/TODO SF prevent
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,73,//then
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,74,"verify(withSpy.list, never()).clear();"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,64,ublic void shouldReportWhenNoArgConstructor() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,78,public void should_report_when_no_arg_less_constructor() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,79,ublic void shouldReportWhenConstructorThrows() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,93,public void should_report_when_constructor_is_explosive() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,94,ublic void spyAbstractClass() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,108,public void should_spy_abstract_class() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,110,ublic void spyInnerClass() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,124,public void should_spy_inner_class() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,140,ublic void shouldResetSpies() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,154,public void should_reset_spy() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,145,ublic void shouldReportWhenInnerClassNotEnclosedByTestInstance() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,159,public void should_report_when_encosing_instance_is_needed() throws Exception {
False,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,3,mport java.util.List;
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,9,import java.util.List;
False,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,66,"ssertContains(""Please ensure it has parameter-less constructor"", e.getCause().getMessage());"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,66,"assertContains(""0-arg constructor"", e.getCause().getMessage());"
False,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,79,"ssertContains(""Please ensure that the outer instance has correct type and that the target class has parameter-less constructor"", e.getCause().getMessage());"
True,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,test/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java,79,"assertContains(""Please ensure that the outer instance has correct type and that the target class has 0-arg constructor."", e.getCause().getMessage());"
