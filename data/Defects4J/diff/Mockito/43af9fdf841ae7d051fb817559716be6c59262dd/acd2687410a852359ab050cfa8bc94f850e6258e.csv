is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,16,import org.mockito.verification.After;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,18,import org.mockito.verification.VerificationAfterDelay;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2048, interaction rather than fails immediately if had not already happened. May be useful for testing in concurrent
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2050,* interaction rather than fails immediately if has not already happened. May be useful for testing in concurrent
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2053,"* This differs from {@link Mockito#after after()} in that after() will wait the full period, unless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2054,"* the final test result is known early (e.g. if a never() fails), whereas timeout() will stop early as soon"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2055,"* as verification passes, producing different behaviour when used with times(2), for example, which can pass"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2056,"* and then later fail. In that case, timeout would pass as soon as times(2) passes, whereas after would run until"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2057,"* times(2) failed, and then fail."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2058,* <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2060,   //passes when someMethod() is called <b>*exactly*</b> 2 times within given time span
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2068,*   //passes as soon as someMethod() has been called 2 times before the given timeout
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2063,   //passes when someMethod() is called <b>*at least*</b> 2 times within given time span
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2071,*   //equivalent: this also passes as soon as someMethod() has been called 2 times before the given timeout
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2073, @param millis - time span in millisecond
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2081,* @param millis - time span in milliseconds
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2090,* Allows verifying over a given period. It causes a verify to wait for a specified period of time for a desired
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2091,* interaction rather than failing immediately if has not already happened. May be useful for testing in concurrent
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2092,* conditions.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2093,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2094,"* This differs from {@link Mockito#timeout timeout()} in that after() will wait the full period, whereas timeout()"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2095,"* will stop early as soon as verification passes, producing different behaviour when used with times(2), for example,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2096,"* which can pass and then later fail. In that case, timeout would pass as soon as times(2) passes, whereas after would"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2097,"* run the full time, which point it will fail, as times(2) has failed."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2098,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2099,* It feels this feature should be used rarely - figure out a better way of testing your multi-threaded system
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2100,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2101,* Not yet implemented to work with InOrder verification.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2102,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2103,"*   //passes after 100ms, if someMethod() has only been called once at that time."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2104,"*   verify(mock, after(100)).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2105,*   //above is an alias to:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2106,"*   verify(mock, after(100).times(1)).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2108,*   //passes if someMethod() is called <b>*exactly*</b> 2 times after the given timespan
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2109,"*   verify(mock, after(100).times(2)).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2111,*   //passes if someMethod() has not been called after the given timespan
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2112,"*   verify(mock, after(100).never()).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2114,*   //verifies someMethod() after a given time span using given verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2115,*   //useful only if you have your own custom verification modes.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2116,"*   verify(mock, new After(100, yourOwnVerificationMode)).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2117,* </code></pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2119,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2121,* @param millis - time span in milliseconds
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2123,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2125,public static VerificationAfterDelay after(int millis) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2126,"return new After(millis, VerificationModeFactory.times(1));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2091," //Oups, someone forgot thenReturn() part:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2139,"* //Oops, someone forgot thenReturn() part:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2094," //Oups, someone put the verified method call inside verify() where it should be outside:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2142,"* //Oops, someone put the verified method call inside verify() where it should be outside:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2097," //Oups, someone has used EasyMock for too long and forgot to specify the method to verify:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2145,"* //Oops, someone has used EasyMock for too long and forgot to specify the method to verify:"
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,6,package org.mockito.internal.verification;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,8,import org.mockito.internal.verification.api.VerificationData;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,9,import org.mockito.verification.VerificationMode;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,11,public class VerificationAfterDelayImpl implements VerificationMode {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,13,private int delayMillis;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,14,private VerificationMode delegate;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,16,"public VerificationAfterDelayImpl(int delayMillis, VerificationMode delegate) {"
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,17,this.delayMillis = delayMillis;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,18,this.delegate = delegate;
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,21,public void verify(VerificationData data) {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,22,long startTime = System.currentTimeMillis();
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,23,while (System.currentTimeMillis() - startTime <= delayMillis) {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,24,try {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,25,Thread.sleep(delayMillis);
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,26,} catch (InterruptedException ie) {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,27,// Oops. Try again.
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,31,delegate.verify(data);
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,34,public int getDelay() {
True,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,src/org/mockito/internal/verification/VerificationAfterDelayImpl.java,35,return delayMillis;
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,1,package org.mockito.verification;
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,3,import org.mockito.internal.verification.VerificationAfterDelayImpl;
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,6,public class After extends VerificationWrapper<VerificationAfterDelayImpl> implements VerificationAfterDelay {
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,9,* See the javadoc for {@link VerificationAfterDelay}
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,10,* <p>
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,11,"* Typically, you won't use this class explicitly. Instead use timeout() method on Mockito class."
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,12,* See javadoc for {@link VerificationWithTimeout}
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,14,"public After(int delayMillis, VerificationMode verificationMode) {"
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,15,"super(new VerificationAfterDelayImpl(delayMillis, verificationMode));"
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,18,@Override
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,19,protected VerificationMode copySelfWithNewVerificationMode(VerificationMode verificationMode) {
True,src/org/mockito/verification/After.java,src/org/mockito/verification/After.java,20,"return new After(wrappedVerification.getDelay(), verificationMode);"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,6,package org.mockito.verification;
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,8,import org.mockito.Mockito;
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,12,"* VerificationAfterDelay is a {@link VerificationMode} that allows combining existing verification modes with an initial delay, e.g."
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,13,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,14,"* verify(mock, after(100).atMost(5)).foo();"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,16,"* verify(mock, after(100).never()).bar();"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,18,"* verify(mock, after(200).atLeastOnce()).baz();"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,19,* </code></pre>
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,21,* This is similar to {@link VerificationWithTimeout timeout()} except the assertion will not terminate until
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,22,"* the full time has elapsed (whereas timeout() will also stop if the condition is true at any point, as is"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,23,* typically the case with never() etc initially).
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,25,* <p>
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,26,"* See examples in javadoc for {@link Mockito#verify(Object, VerificationMode)}"
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,29,public interface VerificationAfterDelay extends VerificationMode {
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,32,* Verifies that there are exactly N invocations during the given period.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,34,public VerificationMode times(int wantedNumberOfInvocations);
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,37,* Allows verification that there are no invocations at any point during the given period.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,39,public VerificationMode never();
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,42,* Verifies that there is at least 1 invocation during the given period.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,44,public VerificationMode atLeastOnce();
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,47,* Verifies that there is are least N invocations during the given period.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,49,public VerificationMode atLeast(int minNumberOfInvocations);
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,52,* Verifies that there is are most N invocations during the given period.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,54,public VerificationMode atMost(int maxNumberOfInvocations);
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,57,* Verifies that there the given method is invoked and is the only method invoked.
True,src/org/mockito/verification/VerificationAfterDelay.java,src/org/mockito/verification/VerificationAfterDelay.java,59,public VerificationMode only();
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,21,"* This is similar to {@link VerificationAfterDelay after()} except this assertion will immediately pass if it becomes true at any point,"
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,22,* whereas after() will wait the full period. Assertions which are consistently expected to be initially true and potentially become false are
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,23,"* deprecated below, and after() should be used instead."
False,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,42, Validation with timeout combined with never simply does not make sense...
False,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,43, The test would have passed immediately in the concurrent environment
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,46,"* Validation with timeout combined with never simply does not make sense, as never() will typically immediately pass,"
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,47,* and therefore not wait the timeout. The behaviour you may be looking for is actually provided by after().never().
False,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,87, Validation with timeout combined with atMost simply does not make sense...
False,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,88, The test would have passed immediately in the concurrent environment
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,91,"* Validation with timeout combined with never simply does not make sense, as atMost() will typically immediately pass,"
True,src/org/mockito/verification/VerificationWithTimeout.java,src/org/mockito/verification/VerificationWithTimeout.java,92,* and therefore not wait the timeout. The behaviour you may be looking for is actually provided by after().atMost().
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,2,* Copyright (c) 2007 Mockito contributors This program is made available under the terms of the MIT License.
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,5,package org.mockitousage.verification;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,7,import static org.mockito.Mockito.after;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,8,import static org.mockito.Mockito.times;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,9,import static org.mockito.Mockito.verify;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,11,import java.util.LinkedList;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,12,import java.util.List;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,14,import org.junit.After;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,15,import org.junit.Rule;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,16,import org.junit.Test;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,17,import org.junit.rules.ExpectedException;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,18,import org.mockito.Mock;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,19,import org.mockito.exceptions.base.MockitoAssertionError;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,20,import org.mockitoutil.TestBase;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,22,public class VerificationAfterDelayTest extends TestBase {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,24,@Rule
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,25,public ExpectedException expected = ExpectedException.none();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,27,@Mock
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,28,private List<String> mock;
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,30,private List<Exception> exceptions = new LinkedList<Exception>();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,32,@After
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,33,public void teardown() {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,34,// making sure there are no threading related exceptions
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,35,assertTrue(exceptions.isEmpty());
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,38,@Test
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,39,public void shouldVerifyNormallyWithSpecificTimes() throws Exception {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,40,// given
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,41,Thread t = waitAndExerciseMock(20);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,43,// when
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,44,t.start();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,46,// then
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,47,"verify(mock, after(50).times(1)).clear();"
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,50,@Test
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,51,public void shouldVerifyNormallyWithAtLeast() throws Exception {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,52,// given
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,53,Thread t = waitAndExerciseMock(20);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,55,// when
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,56,t.start();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,58,// then
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,59,"verify(mock, after(100).atLeast(1)).clear();"
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,62,@Test
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,63,public void shouldFailVerificationWithWrongTimes() throws Exception {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,64,// given
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,65,Thread t = waitAndExerciseMock(20);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,67,// when
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,68,t.start();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,70,// then
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,71,"verify(mock, times(0)).clear();"
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,73,expected.expect(MockitoAssertionError.class);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,74,"verify(mock, after(50).times(2)).clear();"
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,77,@Test
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,78,public void shouldWaitTheFullTime() throws Exception {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,79,// given
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,80,Thread t = waitAndExerciseMock(50);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,82,// when
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,83,t.start();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,85,// then
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,86,long startTime = System.currentTimeMillis();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,87,"verify(mock, after(100).atMost(1)).clear();"
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,88,assertTrue(System.currentTimeMillis() - startTime >= 100);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,91,private Thread waitAndExerciseMock(final int sleep) {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,92,Thread t = new Thread() {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,94,@Override
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,95,public void run() {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,96,try {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,97,Thread.sleep(sleep);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,98,} catch (InterruptedException e) {
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,99,exceptions.add(e);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,100,throw new RuntimeException(e);
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,102,mock.clear();
True,test/org/mockitousage/verification/VerificationAfterDelayTest.java,test/org/mockitousage/verification/VerificationAfterDelayTest.java,105,return t;
