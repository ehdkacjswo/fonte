is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,34,"nhancer.registerCallbacks(mockClass, new Callback[] { filter });"
True,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,36,mock.setCallbacks(new Callback[] { filter });
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,86,"/ This call is required. Cglib has some ""magic code"" making sure a"
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,87,/ callback is used by only one instance of a given class. So only the
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,88,/ instance created right after registering the callback will get it.
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,89,"/ However, this is done in the construtor which I'm bypassing to"
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,90,/ allow class instantiation without calling a constructor.
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,91,"/ Fortunatly, the ""magic code"" is also called in getCallback which is"
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,92,/ why I'm calling it here mock.getCallback(0);
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,94,ock.getCallback(0);
