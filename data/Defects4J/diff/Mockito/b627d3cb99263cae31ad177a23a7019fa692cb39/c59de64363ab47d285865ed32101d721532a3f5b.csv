is_addition,old_file_path,new_file_path,line_num,content
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,59,"eturn (name != null) ? name : ""EasyMock for "" + mockType(proxy);"
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,59,"return (name != null) ? name : ""Mock for "" + mockType(proxy);"
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,65,eturn proxy.getClass().getInterfaces()[0].toString();
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,65,return proxy.getClass().getInterfaces()[0].getSimpleName();
False,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,67,eturn proxy.getClass().getSuperclass().toString();
True,src/org/easymock/internal/ObjectMethodsFilter.java,src/org/easymock/internal/ObjectMethodsFilter.java,67,return proxy.getClass().getSuperclass().getSimpleName();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,9,mport java.lang.reflect.Method;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,12,mport org.easymock.internal.MockInvocationHandler;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,13,mport org.easymock.internal.ObjectMethodsFilter;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,14,mport org.junit.*;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,16,ublic class ObjectMethodsTest {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,17,rivate MockControl<EmptyInterface> control;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,19,rivate EmptyInterface mock;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,21,rivate interface EmptyInterface {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,24,Before
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,25,ublic void setup() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,26,ontrol = MockControl.createControl(EmptyInterface.class);
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,27,ock = control.getMock();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,30,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,31,ublic void equalsBeforeActivation() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,32,"ssertEquals(mock, mock);"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,33,ssertTrue(!mock.equals(null));
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,36,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,37,ublic void equalsAfterActivation() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,38,ontrol.replay();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,39,"ssertEquals(mock, mock);"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,40,ssertTrue(!mock.equals(null));
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,43,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,44,ublic void testHashCode() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,45,nt hashCodeBeforeActivation = mock.hashCode();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,46,ontrol.replay();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,47,nt hashCodeAfterActivation = mock.hashCode();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,48,"ssertEquals(hashCodeBeforeActivation, hashCodeAfterActivation);"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,51,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,52,ublic void toStringBeforeActivation() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,53,"ssertEquals(""EasyMock for "" + EmptyInterface.class.toString(), mock"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,54,toString());
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,57,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,58,ublic void toStringAfterActivation() {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,59,ontrol.replay();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,60,"ssertEquals(""EasyMock for "" + EmptyInterface.class.toString(), mock"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,61,toString());
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,64,rivate static class MockedClass {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,67,rivate static class DummyProxy extends MockedClass {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,70,"/ if the class is no Proxy, ObjectMethodFilter should use the"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,71,/ superclasses' name. This is needed for the class extension.
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,72,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,73,ublic void toStringForClasses() throws Throwable {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,74,"bjectMethodsFilter filter = new ObjectMethodsFilter(Object.class, null, null);"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,75,"ethod toString = Object.class.getMethod(""toString"", new Class[0]);"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,76,"ssertEquals(""EasyMock for "" + MockedClass.class.toString(), filter"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,77,"invoke(new DummyProxy(), toString, new Object[0]));"
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,80,Ignore
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,81,Test
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,82,ublic void whatHappensWhenClassToMockIsAnonymous() throws Exception {
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,83,ail();
False,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,2," Copyright (c) 2003-2006 OFFIS, Henri Tremblay."
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,2,* Copyright (c) 2007 Szczepan Faber
False,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,8,mport static org.junit.Assert.assertThat;
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,8,import static org.junit.Assert.*;
False,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,11,mport org.mockito.Mockito;
False,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,13,ublic class MockitoProvidesObjectMethodsTest {
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,12,public class ReplacingObjectMethodsTest {
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,56,private interface DummyInterface {}
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,57,private class DummyClass {}
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,59,@Test
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,60,public void shouldProvideMockyImplementationOfToString() {
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,61,"assertEquals(""Mock for DummyClass"", Mockito.mock(DummyClass.class).toString());"
True,test/org/mockito/MockitoProvidesObjectMethodsTest.java,test/org/mockito/ReplacingObjectMethodsTest.java,62,"assertEquals(""Mock for DummyInterface"", Mockito.mock(DummyInterface.class).toString());"
