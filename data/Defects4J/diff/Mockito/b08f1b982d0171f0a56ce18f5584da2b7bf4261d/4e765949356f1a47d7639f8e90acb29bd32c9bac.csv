is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/MockitoControl.java,src/org/mockito/MockitoControl.java,29,ockitoOperations.reportControlForStubbing(this);
True,src/org/mockito/MockitoControl.java,src/org/mockito/MockitoControl.java,29,MockitoOperations.reportLastControlForStubbing(this);
False,src/org/mockito/MockitoOperations.java,src/org/mockito/MockitoOperations.java,15,ublic static synchronized void reportControlForStubbing(MockitoControl mockitoControl) {
True,src/org/mockito/MockitoOperations.java,src/org/mockito/MockitoOperations.java,15,public static synchronized void reportLastControlForStubbing(MockitoControl mockitoControl) {
False,src/org/mockito/exceptions/MockVerificationAssertionError.java,src/org/mockito/exceptions/MockVerificationAssertionError.java,3,mport java.util.*;
False,src/org/mockito/exceptions/MockVerificationAssertionError.java,src/org/mockito/exceptions/MockVerificationAssertionError.java,10,ist<StackTraceElement> filteredStackTrace = new LinkedList<StackTraceElement>();
False,src/org/mockito/exceptions/MockVerificationAssertionError.java,src/org/mockito/exceptions/MockVerificationAssertionError.java,11,or(StackTraceElement trace : getStackTrace()) {
False,src/org/mockito/exceptions/MockVerificationAssertionError.java,src/org/mockito/exceptions/MockVerificationAssertionError.java,13,/            filteredStackTrace
False,test/org/easymock/tests2/AnswerTest.java,test/org/easymock/tests/AnswerTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/AnswerTest.java,test/org/easymock/tests/AnswerTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/AnswerTest.java,test/org/easymock/tests/AnswerTest.java,11,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/CallbackAndArgumentsTest.java,test/org/easymock/tests/CallbackAndArgumentsTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/CallbackAndArgumentsTest.java,test/org/easymock/tests/CallbackAndArgumentsTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/CallbackAndArgumentsTest.java,test/org/easymock/tests/CallbackAndArgumentsTest.java,11,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/CallbackTest.java,test/org/easymock/tests/CallbackTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/CallbackTest.java,test/org/easymock/tests/CallbackTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/CallbackTest.java,test/org/easymock/tests/CallbackTest.java,11,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/CompareToTest.java,test/org/easymock/tests/CompareToTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/CompareToTest.java,test/org/easymock/tests/CompareToTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/ConstraintsToStringTest.java,test/org/easymock/tests/ConstraintsToStringTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/ConstraintsToStringTest.java,test/org/easymock/tests/ConstraintsToStringTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,7,ublic interface IVarArgs {
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,8,"ublic void withVarargsString(int value, String... s);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,10,"ublic void withVarargsObject(int value, Object... o);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,12,"ublic void withVarargsBoolean(int value, boolean... b);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,14,"ublic void withVarargsByte(int value, byte... b);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,16,"ublic void withVarargsChar(int value, char... c);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,18,"ublic void withVarargsDouble(int value, double... d);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,20,"ublic void withVarargsFloat(int value, float... f);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,22,"ublic void withVarargsInt(int value, int... i);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,24,"ublic void withVarargsLong(int value, long... l);"
False,test/org/easymock/tests/IVarArgs.java,test/org/easymock/tests/IVarArgs.java,26,"ublic void withVarargsShort(int value, short... s);"
False,test/org/easymock/tests2/NameTest.java,test/org/easymock/tests/NameTest.java,1,ackage org.easymock.tests2;
True,test/org/easymock/tests2/NameTest.java,test/org/easymock/tests/NameTest.java,1,package org.easymock.tests;
False,test/org/easymock/tests2/NameTest.java,test/org/easymock/tests/NameTest.java,4,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/StubTest.java,test/org/easymock/tests/StubTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/StubTest.java,test/org/easymock/tests/StubTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/StubTest.java,test/org/easymock/tests/StubTest.java,10,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/UsageConstraintsTest.java,test/org/easymock/tests/UsageConstraintsTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/UsageConstraintsTest.java,test/org/easymock/tests/UsageConstraintsTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,14, Same as UsageExpectAndReturnTest except that each mocked method is called
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,15, twice to make sure the defaulting works fine.
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,17, @author Henri Tremblay
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,19,ublic class UsageExpectAndDefaultReturnTest {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,20,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,22,rivate IMethods mock;
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,24,Before
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,25,ublic void setup() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,26,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,27,ock = control.getMock();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,30,Test
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,31,ublic void booleanType() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,32,"ontrol.expectAndDefaultReturn(mock.booleanReturningMethod(4), true);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,33,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,34,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,35,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,36,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,39,Test
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,40,ublic void longType() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,41,"ontrol.expectAndDefaultReturn(mock.longReturningMethod(4), 12l);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,42,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,43,"ssertEquals(12l, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,44,"ssertEquals(12l, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,45,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,48,Test
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,49,ublic void floatType() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,50,"ontrol.expectAndDefaultReturn(mock.floatReturningMethod(4), 12f);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,51,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,52,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,53,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,54,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,57,Test
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,58,ublic void doubleType() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,59,"ontrol.expectAndDefaultReturn(mock.doubleReturningMethod(4), 12.0);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,60,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,61,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,62,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,63,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,66,Test
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,67,ublic void objectType() {
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,68,"ontrol.expectAndDefaultReturn(mock.objectReturningMethod(4), ""12"");"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,69,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,70,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,71,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,test/org/easymock/tests/UsageExpectAndDefaultReturnTest.java,72,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,10,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,11,mport org.junit.Before;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,12,mport org.junit.Test;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,15, Same as UsageExpectAndThrowTest except that each mocked method is called
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,16, twice to make sure the defaulting works fine.
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,18, @author Henri Tremblay
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,20,ublic class UsageExpectAndDefaultThrowTest {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,21,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,23,rivate IMethods mock;
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,25,rivate static RuntimeException EXCEPTION = new RuntimeException();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,27,Before
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,28,ublic void setup() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,29,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,30,ock = control.getMock();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,33,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,34,ublic void booleanType() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,35,ontrol
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,36,"expectAndDefaultThrow(mock.booleanReturningMethod(4),"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,37,XCEPTION);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,38,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,39,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,40,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,41,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,42, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,43,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,45,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,46,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,47,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,48, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,49,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,51,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,54,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,55,ublic void longType() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,56,"ontrol.expectAndDefaultThrow(mock.longReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,57,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,58,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,59,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,60,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,61, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,62,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,64,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,65,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,66,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,67, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,68,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,70,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,73,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,74,ublic void floatType() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,75,"ontrol.expectAndDefaultThrow(mock.floatReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,76,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,77,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,78,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,79,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,80, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,81,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,83,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,84,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,85,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,86, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,87,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,89,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,92,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,93,ublic void doubleType() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,94,"ontrol.expectAndDefaultThrow(mock.doubleReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,95,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,96,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,97,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,98,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,99, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,100,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,102,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,103,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,104,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,105, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,106,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,108,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,111,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,112,ublic void object() {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,113,"ontrol.expectAndDefaultThrow(mock.objectReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,114,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,115,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,116,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,117,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,118, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,119,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,121,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,122,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,123,ail();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,124, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,125,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,127,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,130,Test
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,131,ublic void throwableAndDefaultThrowable() throws Exception {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,133,"ock.oneArg(""1"");"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,135,xpectLastCall().andThrow(new IllegalArgumentException());
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,136,ontrol.setDefaultThrowable(new IllegalStateException());
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,138,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,140,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,141,"ock.oneArg(""1"");"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,142, catch (IllegalArgumentException ignored) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,144,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,145,"ock.oneArg(""1"");"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,146, catch (IllegalStateException ignored) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,148,ry {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,149,"ock.oneArg(""2"");"
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,150, catch (IllegalStateException ignored) {
False,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,test/org/easymock/tests/UsageExpectAndDefaultThrowTest.java,152,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,13,ublic class UsageExpectAndReturnTest {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,14,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,16,rivate IMethods mock;
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,18,Before
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,19,ublic void setup() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,20,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,21,ock = control.getMock();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,24,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,25,ublic void booleanType() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,26,"ontrol.expectAndReturn(mock.booleanReturningMethod(4), true);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,27,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,28,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,29,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,32,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,33,ublic void longType() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,34,"ontrol.expectAndReturn(mock.longReturningMethod(4), 12l);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,35,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,36,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,37,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,40,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,41,ublic void floatType() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,42,"ontrol.expectAndReturn(mock.floatReturningMethod(4), 12f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,43,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,44,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,45,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,48,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,49,ublic void doubleType() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,50,"ontrol.expectAndReturn(mock.doubleReturningMethod(4), 12.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,51,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,52,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,53,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,56,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,57,ublic void object() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,58,"ontrol.expectAndReturn(mock.objectReturningMethod(4), ""12"");"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,59,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,60,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,61,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,64,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,65,ublic void booleanAndRange() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,66,"ontrol.expectAndReturn(mock.booleanReturningMethod(4), true,"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,67,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,68,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,69,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,70,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,73,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,74,ublic void longAndRange() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,75,"ontrol.expectAndReturn(mock.longReturningMethod(4), 12l,"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,76,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,77,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,78,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,79,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,82,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,83,ublic void floatAndRange() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,84,"ontrol.expectAndReturn(mock.floatReturningMethod(4), 12f,"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,85,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,86,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,87,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,88,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,91,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,92,ublic void doubleAndRange() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,93,"ontrol.expectAndReturn(mock.doubleReturningMethod(4), 12.0,"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,94,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,95,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,96,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,97,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,100,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,101,ublic void objectAndRange() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,102,"ontrol.expectAndReturn(mock.objectReturningMethod(4), ""12"","
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,103,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,104,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,105,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,106,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,109,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,110,ublic void booleanAndCount() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,111,"ontrol.expectAndReturn(mock.booleanReturningMethod(4), true, 2);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,112,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,113,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,114,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,115,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,118,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,119,ublic void longAndCount() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,120,"ontrol.expectAndReturn(mock.longReturningMethod(4), 12l, 2);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,121,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,122,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,123,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,124,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,127,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,128,ublic void floatAndCount() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,129,"ontrol.expectAndReturn(mock.floatReturningMethod(4), 12f, 2);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,130,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,131,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,132,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,133,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,136,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,137,ublic void doubleAndCount() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,138,"ontrol.expectAndReturn(mock.doubleReturningMethod(4), 12.0, 2);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,139,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,140,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,141,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,142,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,145,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,146,ublic void objectAndCount() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,147,"ontrol.expectAndReturn(mock.objectReturningMethod(4), ""12"", 2);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,148,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,149,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,150,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,151,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,154,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,155,ublic void booleanAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,156,"ontrol.expectAndReturn(mock.booleanReturningMethod(4), true, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,157,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,158,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,159,"ssertEquals(true, mock.booleanReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,160,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,163,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,164,ublic void longAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,165,"ontrol.expectAndReturn(mock.longReturningMethod(4), 12l, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,166,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,167,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,168,"ssertEquals((long) 12, mock.longReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,169,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,172,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,173,ublic void floatAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,174,"ontrol.expectAndReturn(mock.floatReturningMethod(4), 12f, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,175,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,176,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,177,"ssertEquals(12f, mock.floatReturningMethod(4), 0f);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,178,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,181,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,182,ublic void doubleAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,183,"ontrol.expectAndReturn(mock.doubleReturningMethod(4), 12.0, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,184,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,185,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,186,"ssertEquals(12.0, mock.doubleReturningMethod(4), 0.0);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,187,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,190,Test
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,191,ublic void objectAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,192,"ontrol.expectAndReturn(mock.objectReturningMethod(4), ""12"", 2, 3);"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,193,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,194,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,195,"ssertEquals(""12"", mock.objectReturningMethod(4));"
False,test/org/easymock/tests/UsageExpectAndReturnTest.java,test/org/easymock/tests/UsageExpectAndReturnTest.java,196,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,13,ublic class UsageExpectAndThrowTest {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,14,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,16,rivate IMethods mock;
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,18,rivate static RuntimeException EXCEPTION = new RuntimeException();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,20,Before
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,21,ublic void setup() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,22,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,23,ock = control.getMock();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,26,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,27,ublic void booleanType() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,28,"ontrol.expectAndThrow(mock.booleanReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,29,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,30,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,31,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,32,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,33, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,34,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,36,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,39,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,40,ublic void longType() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,41,"ontrol.expectAndThrow(mock.longReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,42,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,43,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,44,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,45,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,46, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,47,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,49,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,52,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,53,ublic void floatType() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,54,"ontrol.expectAndThrow(mock.floatReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,55,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,56,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,57,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,58,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,59, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,60,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,62,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,65,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,66,ublic void doubleType() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,67,"ontrol.expectAndThrow(mock.doubleReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,68,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,69,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,70,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,71,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,72, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,73,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,75,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,78,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,79,ublic void object() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,80,"ontrol.expectAndThrow(mock.objectReturningMethod(4), EXCEPTION);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,81,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,82,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,83,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,84,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,85, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,86,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,88,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,91,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,92,ublic void booleanAndRange() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,93,"ontrol.expectAndThrow(mock.booleanReturningMethod(4), EXCEPTION,"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,94,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,95,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,96,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,97,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,98,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,99, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,100,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,102,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,105,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,106,ublic void longAndRange() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,107,"ontrol.expectAndThrow(mock.longReturningMethod(4), EXCEPTION,"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,108,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,109,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,110,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,111,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,112,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,113, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,114,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,116,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,119,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,120,ublic void floatAndRange() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,121,"ontrol.expectAndThrow(mock.floatReturningMethod(4), EXCEPTION,"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,122,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,123,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,124,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,125,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,126,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,127, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,128,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,130,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,133,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,134,ublic void doubleAndRange() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,135,"ontrol.expectAndThrow(mock.doubleReturningMethod(4), EXCEPTION,"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,136,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,137,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,138,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,139,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,140,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,141, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,142,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,144,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,147,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,148,ublic void objectAndRange() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,149,"ontrol.expectAndThrow(mock.objectReturningMethod(4), EXCEPTION,"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,150,ockControl.ONE);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,151,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,152,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,153,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,154,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,155, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,156,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,158,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,161,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,162,ublic void booleanAndCount() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,163,"ontrol.expectAndThrow(mock.booleanReturningMethod(4), EXCEPTION, 2);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,164,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,165,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,166,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,167,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,168, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,169,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,171,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,172,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,173,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,174, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,175,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,177,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,180,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,181,ublic void longAndCount() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,182,"ontrol.expectAndThrow(mock.longReturningMethod(4), EXCEPTION, 2);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,183,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,184,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,185,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,186,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,187, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,188,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,190,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,191,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,192,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,193, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,194,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,196,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,199,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,200,ublic void floatAndCount() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,201,"ontrol.expectAndThrow(mock.floatReturningMethod(4), EXCEPTION, 2);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,202,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,203,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,204,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,205,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,206, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,207,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,209,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,210,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,211,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,212, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,213,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,215,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,218,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,219,ublic void doubleAndCount() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,220,"ontrol.expectAndThrow(mock.doubleReturningMethod(4), EXCEPTION, 2);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,221,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,222,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,223,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,224,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,225, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,226,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,228,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,229,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,230,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,231, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,232,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,234,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,237,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,238,ublic void objectAndCount() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,239,"ontrol.expectAndThrow(mock.objectReturningMethod(4), EXCEPTION, 2);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,240,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,241,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,242,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,243,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,244, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,245,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,247,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,248,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,249,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,250, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,251,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,253,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,256,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,257,ublic void booleanAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,258,"ontrol.expectAndThrow(mock.booleanReturningMethod(4), EXCEPTION, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,259,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,260,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,261,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,262,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,263, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,264,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,266,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,267,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,268,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,269, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,270,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,272,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,273,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,274,ock.booleanReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,275,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,276, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,277,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,279,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,282,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,283,ublic void longAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,284,"ontrol.expectAndThrow(mock.longReturningMethod(4), EXCEPTION, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,285,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,286,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,287,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,288,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,289, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,290,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,292,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,293,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,294,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,295, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,296,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,298,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,299,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,300,ock.longReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,301,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,302, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,303,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,305,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,308,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,309,ublic void floatAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,310,"ontrol.expectAndThrow(mock.floatReturningMethod(4), EXCEPTION, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,311,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,312,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,313,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,314,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,315, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,316,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,318,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,319,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,320,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,321, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,322,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,324,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,325,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,326,ock.floatReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,327,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,328, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,329,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,331,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,334,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,335,ublic void doubleAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,336,"ontrol.expectAndThrow(mock.doubleReturningMethod(4), EXCEPTION, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,337,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,338,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,339,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,340,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,341, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,342,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,344,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,345,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,346,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,347, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,348,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,350,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,351,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,352,ock.doubleReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,353,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,354, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,355,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,357,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,360,Test
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,361,ublic void objectAndMinMax() {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,362,"ontrol.expectAndThrow(mock.objectReturningMethod(4), EXCEPTION, 2, 3);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,363,ontrol.replay();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,364,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,365,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,366,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,367, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,368,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,370,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,371,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,372,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,373, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,374,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,376,ontrol.verify();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,377,ry {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,378,ock.objectReturningMethod(4);
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,379,ail();
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,380, catch (RuntimeException exception) {
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,381,"ssertSame(EXCEPTION, exception);"
False,test/org/easymock/tests/UsageExpectAndThrowTest.java,test/org/easymock/tests/UsageExpectAndThrowTest.java,383,ontrol.verify();
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,13,ublic class UsageFloatingPointReturnValueTest {
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,14,ockControl<IMethods> control;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,16,Methods mock;
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,18,Before
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,19,ublic void setup() {
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,20,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,21,ock = control.getMock();
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,24,Test
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,25,ublic void returnFloat() {
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,26,ock.floatReturningMethod(0);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,27,ontrol.setReturnValue(25.0F);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,28,ontrol.setDefaultReturnValue(34.0F);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,30,ontrol.replay();
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,32,"ssertEquals(25.0F, mock.floatReturningMethod(0), 0.0F);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,33,"ssertEquals(34.0F, mock.floatReturningMethod(-4), 0.0F);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,34,"ssertEquals(34.0F, mock.floatReturningMethod(12), 0.0F);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,36,ontrol.verify();
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,39,Test
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,40,ublic void returnDouble() {
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,41,ock.doubleReturningMethod(0);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,42,ontrol.setReturnValue(25.0);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,43,ontrol.setDefaultReturnValue(34.0);
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,45,ontrol.replay();
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,47,"ssertEquals(25.0, mock.doubleReturningMethod(0), 0.0);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,48,"ssertEquals(34.0, mock.doubleReturningMethod(-4), 0.0);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,49,"ssertEquals(34.0, mock.doubleReturningMethod(12), 0.0);"
False,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,test/org/easymock/tests/UsageFloatingPointReturnValueTest.java,51,ontrol.verify();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,13,ublic class UsageLongCompatibleReturnValueTest {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,14,ockControl<IMethods> control;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,16,Methods mock;
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,18,Before
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,19,ublic void setup() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,20,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,21,ock = control.getMock();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,24,Test
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,25,ublic void returnByte() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,26,ock.byteReturningMethod(0);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,27,ontrol.setReturnValue(25);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,28,ontrol.setDefaultReturnValue(34);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,30,ontrol.replay();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,32,"ssertEquals((byte) 25, mock.byteReturningMethod(0));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,33,"ssertEquals((byte) 34, mock.byteReturningMethod(-4));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,34,"ssertEquals((byte) 34, mock.byteReturningMethod(12));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,36,ontrol.verify();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,39,Test
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,40,ublic void returnShort() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,41,ock.shortReturningMethod(0);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,42,ontrol.setReturnValue(25);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,43,ontrol.setDefaultReturnValue(34);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,45,ontrol.replay();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,47,"ssertEquals((short) 25, mock.shortReturningMethod(0));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,48,"ssertEquals((short) 34, mock.shortReturningMethod(-4));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,49,"ssertEquals((short) 34, mock.shortReturningMethod(12));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,51,ontrol.verify();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,54,Test
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,55,ublic void returnChar() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,56,ock.charReturningMethod(0);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,57,ontrol.setReturnValue(25);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,58,ontrol.setDefaultReturnValue(34);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,60,ontrol.replay();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,62,"ssertEquals((char) 25, mock.charReturningMethod(0));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,63,"ssertEquals((char) 34, mock.charReturningMethod(-4));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,64,"ssertEquals((char) 34, mock.charReturningMethod(12));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,66,ontrol.verify();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,69,Test
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,70,ublic void returnInt() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,71,ock.intReturningMethod(0);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,72,ontrol.setReturnValue(25);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,73,ontrol.setDefaultReturnValue(34);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,75,ontrol.replay();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,77,"ssertEquals(25, mock.intReturningMethod(0));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,78,"ssertEquals(34, mock.intReturningMethod(-4));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,79,"ssertEquals(34, mock.intReturningMethod(12));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,81,ontrol.verify();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,84,Test
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,85,ublic void returnLong() {
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,86,ock.longReturningMethod(0);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,87,ontrol.setReturnValue(25);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,88,ontrol.setDefaultReturnValue(34);
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,90,ontrol.replay();
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,92,"ssertEquals((long) 25, mock.longReturningMethod(0));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,93,"ssertEquals((long) 34, mock.longReturningMethod(-4));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,94,"ssertEquals((long) 34, mock.longReturningMethod(12));"
False,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,test/org/easymock/tests/UsageLongCompatibleReturnValueTest.java,96,ontrol.verify();
False,test/org/easymock/tests2/UsageMatchersTest.java,test/org/easymock/tests/UsageMatchersTest.java,5,ackage org.easymock.tests2;
True,test/org/easymock/tests2/UsageMatchersTest.java,test/org/easymock/tests/UsageMatchersTest.java,5,package org.easymock.tests;
False,test/org/easymock/tests2/UsageMatchersTest.java,test/org/easymock/tests/UsageMatchersTest.java,9,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,13,ublic class UsageOverloadedDefaultValueTest {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,14,ockControl<IMethods> control;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,16,Methods mock;
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,18,Before
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,19,ublic void setup() {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,20,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,21,ock = control.getMock();
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,24,Test
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,25,ublic void overloading() {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,27,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,28,"ontrol.setReturnValue(""true"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,29,"ontrol.setDefaultReturnValue(""false"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,31,ock.oneArg((byte) 0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,32,"ontrol.setReturnValue(""byte 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,33,"ontrol.setDefaultReturnValue(""byte 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,35,ock.oneArg((short) 0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,36,"ontrol.setReturnValue(""short 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,37,"ontrol.setDefaultReturnValue(""short 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,39,ock.oneArg((char) 0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,40,"ontrol.setReturnValue(""char 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,41,"ontrol.setDefaultReturnValue(""char 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,43,ock.oneArg(0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,44,"ontrol.setReturnValue(""int 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,45,"ontrol.setDefaultReturnValue(""int 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,47,ock.oneArg((long) 0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,48,"ontrol.setReturnValue(""long 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,49,"ontrol.setDefaultReturnValue(""long 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,51,ock.oneArg((float) 0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,52,"ontrol.setReturnValue(""float 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,53,"ontrol.setDefaultReturnValue(""float 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,55,ock.oneArg(0.0);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,56,"ontrol.setReturnValue(""double 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,57,"ontrol.setDefaultReturnValue(""double 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,59,"ock.oneArg(""Object 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,60,"ontrol.setReturnValue(""String 0"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,61,"ontrol.setDefaultReturnValue(""String 1"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,63,ontrol.replay();
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,65,"ssertEquals(""true"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,66,"ssertEquals(""false"", mock.oneArg(false));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,68,"ssertEquals(""byte 0"", mock.oneArg((byte) 0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,69,"ssertEquals(""byte 1"", mock.oneArg((byte) 1));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,71,"ssertEquals(""short 0"", mock.oneArg((short) 0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,72,"ssertEquals(""short 1"", mock.oneArg((short) 1));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,74,"ssertEquals(""char 0"", mock.oneArg((char) 0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,75,"ssertEquals(""char 1"", mock.oneArg((char) 1));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,77,"ssertEquals(""int 0"", mock.oneArg(0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,78,"ssertEquals(""int 1"", mock.oneArg(1));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,80,"ssertEquals(""long 0"", mock.oneArg((long) 0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,81,"ssertEquals(""long 1"", mock.oneArg((long) 1));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,83,"ssertEquals(""float 0"", mock.oneArg((float) 0.0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,84,"ssertEquals(""float 1"", mock.oneArg((float) 1.0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,86,"ssertEquals(""double 0"", mock.oneArg(0.0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,87,"ssertEquals(""double 1"", mock.oneArg(1.0));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,89,"ssertEquals(""String 0"", mock.oneArg(""Object 0""));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,90,"ssertEquals(""String 1"", mock.oneArg(""Object 1""));"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,92,ontrol.verify();
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,95,Test
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,96,ublic void defaultThrowable() {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,98,"ock.oneArg(""Object"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,99,untimeException expected = new RuntimeException();
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,100,ontrol.setDefaultThrowable(expected);
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,102,ontrol.replay();
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,104,ry {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,105,"ock.oneArg(""Something else"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,106,"ail(""runtime exception expected"");"
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,107, catch (RuntimeException expectedException) {
False,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,test/org/easymock/tests/UsageOverloadedDefaultValueTest.java,108,"ssertSame(expected, expectedException);"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,13,ublic class UsageOverloadedMethodTest {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,15,ockControl<IMethods> controller;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,17,Methods mock;
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,19,Before
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,20,ublic void setup() {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,21,ontroller = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,22,ock = controller.getMock();
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,25,Test
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,26,ublic void overloading() {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,28,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,29,"ontroller.setReturnValue(""true"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,30,ock.oneArg(false);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,31,"ontroller.setReturnValue(""false"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,33,ock.oneArg((byte) 0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,34,"ontroller.setReturnValue(""byte 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,35,ock.oneArg((byte) 1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,36,"ontroller.setReturnValue(""byte 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,38,ock.oneArg((short) 0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,39,"ontroller.setReturnValue(""short 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,40,ock.oneArg((short) 1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,41,"ontroller.setReturnValue(""short 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,43,ock.oneArg((char) 0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,44,"ontroller.setReturnValue(""char 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,45,ock.oneArg((char) 1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,46,"ontroller.setReturnValue(""char 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,48,ock.oneArg(0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,49,"ontroller.setReturnValue(""int 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,50,ock.oneArg(1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,51,"ontroller.setReturnValue(""int 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,53,ock.oneArg((long) 0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,54,"ontroller.setReturnValue(""long 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,55,ock.oneArg((long) 1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,56,"ontroller.setReturnValue(""long 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,58,ock.oneArg((float) 0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,59,"ontroller.setReturnValue(""float 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,60,ock.oneArg((float) 1);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,61,"ontroller.setReturnValue(""float 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,63,ock.oneArg(0.0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,64,"ontroller.setReturnValue(""double 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,65,ock.oneArg(1.0);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,66,"ontroller.setReturnValue(""double 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,68,"ock.oneArg(""Object 0"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,69,"ontroller.setReturnValue(""1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,70,"ock.oneArg(""Object 1"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,71,"ontroller.setReturnValue(""2"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,73,ontroller.replay();
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,75,"ssertEquals(""true"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,76,"ssertEquals(""false"", mock.oneArg(false));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,78,"ssertEquals(""byte 0"", mock.oneArg((byte) 0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,79,"ssertEquals(""byte 1"", mock.oneArg((byte) 1));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,81,"ssertEquals(""short 0"", mock.oneArg((short) 0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,82,"ssertEquals(""short 1"", mock.oneArg((short) 1));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,84,"ssertEquals(""char 0"", mock.oneArg((char) 0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,85,"ssertEquals(""char 1"", mock.oneArg((char) 1));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,87,"ssertEquals(""int 0"", mock.oneArg(0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,88,"ssertEquals(""int 1"", mock.oneArg(1));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,90,"ssertEquals(""long 0"", mock.oneArg((long) 0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,91,"ssertEquals(""long 1"", mock.oneArg((long) 1));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,93,"ssertEquals(""float 0"", mock.oneArg((float) 0.0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,94,"ssertEquals(""float 1"", mock.oneArg((float) 1.0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,96,"ssertEquals(""double 1"", mock.oneArg(1.0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,97,"ssertEquals(""double 0"", mock.oneArg(0.0));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,99,"ssertEquals(""1"", mock.oneArg(""Object 0""));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,100,"ssertEquals(""2"", mock.oneArg(""Object 1""));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,102,ontroller.verify();
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,105,Test
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,106,ublic void nullReturnValue() {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,108,"ock.oneArg(""Object"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,109,ontroller.setReturnValue(null);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,111,ontroller.replay();
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,113,"ssertNull(mock.oneArg(""Object""));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,117,Test
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,118,ublic void moreThanOneResultAndOpenCallCount() {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,119,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,120,"ontroller.setReturnValue(""First Result"", 4);"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,121,"ontroller.setReturnValue(""Second Result"", 2);"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,122,"ontroller.setThrowable(new RuntimeException(""Third Result""), 3);"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,123,"ontroller.setReturnValue(""Following Result"", MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,125,ontroller.replay();
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,127,"ssertEquals(""First Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,128,"ssertEquals(""First Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,129,"ssertEquals(""First Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,130,"ssertEquals(""First Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,132,"ssertEquals(""Second Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,133,"ssertEquals(""Second Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,135,ry {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,136,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,137,"ail(""expected exception"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,138, catch (RuntimeException expected) {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,139,"ssertEquals(""Third Result"", expected.getMessage());"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,142,ry {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,143,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,144,"ail(""expected exception"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,145, catch (RuntimeException expected) {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,146,"ssertEquals(""Third Result"", expected.getMessage());"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,149,ry {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,150,ock.oneArg(true);
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,151,"ail(""expected exception"");"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,152, catch (RuntimeException expected) {
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,153,"ssertEquals(""Third Result"", expected.getMessage());"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,156,"ssertEquals(""Following Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,157,"ssertEquals(""Following Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,158,"ssertEquals(""Following Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,159,"ssertEquals(""Following Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,160,"ssertEquals(""Following Result"", mock.oneArg(true));"
False,test/org/easymock/tests/UsageOverloadedMethodTest.java,test/org/easymock/tests/UsageOverloadedMethodTest.java,162,ontroller.verify();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,9,mport java.util.Iterator;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,12,mport org.easymock.internal.Range;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,13,mport org.junit.Before;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,14,mport org.junit.Test;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,16,ublic class UsageRangeTest {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,18,rivate Iterator mock;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,20,rivate MockControl<Iterator> control;
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,22,Before
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,23,ublic void setup() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,24,ontrol = MockControl.createStrictControl(Iterator.class);
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,25,ock = control.getMock();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,28,Test
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,29,ublic void zeroOrMoreNoCalls() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,30,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,31,"ontrol.setReturnValue(false, MockControl.ZERO_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,32,ontrol.replay();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,33,ontrol.verify();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,36,Test
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,37,ublic void zeroOrMoreOneCall() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,38,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,39,"ontrol.setReturnValue(false, MockControl.ZERO_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,40,ontrol.replay();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,41,ssertFalse(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,42,ontrol.verify();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,45,Test
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,46,ublic void zeroOrMoreThreeCalls() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,47,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,48,"ontrol.setReturnValue(false, MockControl.ZERO_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,49,ontrol.replay();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,50,ssertFalse(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,51,ssertFalse(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,52,ssertFalse(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,53,ontrol.verify();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,56,Test
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,57,ublic void combination() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,58,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,59,"ontrol.setReturnValue(true, MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,60,ock.next();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,61,"ontrol.setReturnValue(""1"");"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,63,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,64,"ontrol.setReturnValue(true, MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,65,ock.next();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,66,"ontrol.setReturnValue(""2"");"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,68,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,69,"ontrol.setReturnValue(false, MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,71,ontrol.replay();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,73,ssertTrue(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,74,ssertTrue(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,75,ssertTrue(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,77,"ssertEquals(""1"", mock.next());"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,79,ry {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,80,ock.next();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,81,ail();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,82, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,85,ssertTrue(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,87,"ssertEquals(""2"", mock.next());"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,89,ssertFalse(mock.hasNext());
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,91,ontrol.verify();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,95,Test
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,96,ublic void withIllegalOwnRange() {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,97,ock.hasNext();
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,98,ry {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,99,"ontrol.setReturnValue(true, new Range(2, 7));"
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,100, catch (IllegalArgumentException e) {
False,test/org/easymock/tests/UsageRangeTest.java,test/org/easymock/tests/UsageRangeTest.java,101,"ssertEquals(""Unexpected Range"", e.getMessage());"
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,7,import static org.easymock.EasyMock.*;
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,15,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,21,ontrol = MockControl.createStrictControl(IMethods.class);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,22,ock = control.getMock();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,19,mock = createStrictMock(IMethods.class);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,27,ontrol.replay();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,30,Test
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,31,ublic void verify() {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,32,ontrol.reset();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,33,ontrol.replay();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,34,ontrol.verify();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,22,replay(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,42,ontrol.verify();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,29,verify(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,79,ontrol.verify();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,66,verify(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,93,ontrol.reset();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,80,reset(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,96,ontrol.setReturnValue(true);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,83,expectLastCall().andReturn(true);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,99,"ontrol.setReturnValue(false, 2, 3);"
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,86,"expectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,101,ontrol.setVoidCallable(MockControl.ONE_OR_MORE);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,88,expectLastCall().atLeastOnce();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,103,ontrol.replay();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,90,replay(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,109,ontrol.verify();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,96,verify(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,143,ontrol.reset();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,130,reset(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,146,ontrol.setReturnValue(true);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,133,expectLastCall().andReturn(true);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,149,"ontrol.setReturnValue(false, 2, 3);"
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,136,"expectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,151,ontrol.setVoidCallable(MockControl.ONE_OR_MORE);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,152,ock.booleanReturningMethod(1);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,153,ontrol.setReturnValue(false);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,138,expectLastCall().atLeastOnce();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,139,expect(mock.booleanReturningMethod(1)).andReturn(false);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,155,ontrol.replay();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,141,replay(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,182,ublic void defaultBehavior() {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,183,ontrol.reset();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,168,public void stubBehavior() {
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,169,reset(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,186,ontrol.setReturnValue(true);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,187,ontrol.setReturnValue(false);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,188,ontrol.setReturnValue(true);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,189,ontrol.setDefaultReturnValue(true);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,172,expectLastCall().andReturn(true).andReturn(false).andReturn(true);
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,173,mock.booleanReturningMethod(anyInt());
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,174,expectLastCall().andStubReturn(true);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,191,ontrol.replay();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,176,replay(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,201,ontrol.verify();
True,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,186,verify(mock);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,214,Test
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,215,ublic void unexpectedCallWithArray() {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,216,ontrol.reset();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,217,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,218,"ock.arrayMethod(new String[] { ""Test"", ""Test 2"" });"
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,219,ontrol.replay();
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,220,oolean failed = false;
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,221,"tring[] strings = new String[] { ""Test"" };"
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,222,ry {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,223,ock.arrayMethod(strings);
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,224, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,225,ailed = true;
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,226,ssertEquals(
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,227,"\n  Unexpected method call arrayMethod("""
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,228, strings.toString()
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,230," ""\n    arrayMethod([\""Test\"", \""Test 2\""]): expected: 1, actual: 0"","
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,231,xpected.getMessage());
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,233,f (!failed) {
False,test/org/easymock/tests/UsageStrictMockTest.java,test/org/easymock/tests/UsageStrictMockTest.java,234,"ail(""exception expected"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,7,import static org.easymock.EasyMock.*;
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,15,ockControl<IMethods> control;
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,21,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,22,ock = control.getMock();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,19,mock = createMock(IMethods.class);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,27,ock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,28,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,29,"ontrol.setReturnValue(""Test2"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,31,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,24,"expect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,25,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,48,ock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,49,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,50,"ontrol.setReturnValue(""Test2"", MockControl.ONE_OR_MORE);"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,42,"expect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,43,.atLeastOnce();
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,52,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,45,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,61,ock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,62,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,63,"ontrol.setReturnValue(""Test2"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,64,"ontrol.setThrowable(new IndexOutOfBoundsException(), 1);"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,54,"expect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,55,.andThrow(new IndexOutOfBoundsException());
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,66,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,57,replay(mock);
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,64,fail();
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,78,ry {
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,79,ock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,80, catch (IndexOutOfBoundsException expected) {
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,70,mock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,91,ock.oneArg(false);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,92,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,93,"ontrol.setReturnValue(""Test2"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,94,"ontrol.setThrowable(new IndexOutOfBoundsException(),"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,95,ockControl.ONE_OR_MORE);
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,80,"expect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,81,.andThrow(new IndexOutOfBoundsException()).atLeastOnce();
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,97,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,83,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,114,"ock.threeArgumentMethod(1, ""2"", ""3"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,115,"ontrol.setReturnValue(""Test"", 2);"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,100,"expect(mock.threeArgumentMethod(1, ""2"", ""3"")).andReturn(""Test"")"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,101,.times(2);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,117,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,103,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,123,ontrol.verify();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,109,verify(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,136,Test
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,137,ublic void unexpectedCallWithArray() {
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,138,ontrol.reset();
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,139,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,140,ontrol.replay();
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,141,oolean failed = false;
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,142,"tring[] strings = new String[] { ""Test"" };"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,143,ry {
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,144,ock.arrayMethod(strings);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,145, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,146,ailed = true;
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,147,"ssertEquals(""\n  Unexpected method call arrayMethod("""
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,148," strings.toString() + ""):"", expected.getMessage());"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,150,f (!failed) {
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,151,"ail(""exception expected"");"
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,159,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,125,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,177,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,143,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,198,ontrol.replay();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,164,replay(mock);
False,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,202,ail();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,168,"fail(""exception expected"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,182,@Test
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,183,public void mixingOrderedAndUnordered() {
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,184,"mock.simpleMethodWithArgument(""2"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,185,"mock.simpleMethodWithArgument(""1"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,186,"checkOrder(mock, true);"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,187,"mock.simpleMethodWithArgument(""3"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,188,"mock.simpleMethodWithArgument(""4"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,189,"checkOrder(mock, false);"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,190,"mock.simpleMethodWithArgument(""6"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,191,"mock.simpleMethodWithArgument(""7"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,192,"mock.simpleMethodWithArgument(""5"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,194,replay(mock);
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,196,"mock.simpleMethodWithArgument(""1"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,197,"mock.simpleMethodWithArgument(""2"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,199,boolean failed = false;
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,200,try {
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,201,"mock.simpleMethodWithArgument(""4"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,202,} catch (AssertionError e) {
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,203,failed = true;
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,205,if (!failed) {
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,206,fail();
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,209,"mock.simpleMethodWithArgument(""3"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,210,"mock.simpleMethodWithArgument(""4"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,211,"mock.simpleMethodWithArgument(""5"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,212,"mock.simpleMethodWithArgument(""6"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,213,"mock.simpleMethodWithArgument(""7"");"
True,test/org/easymock/tests/UsageTest.java,test/org/easymock/tests/UsageTest.java,215,verify(mock);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,9,mport java.io.IOException;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,12,mport org.junit.Before;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,13,mport org.junit.Test;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,15,ublic class UsageThrowableTest {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,17,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,19,rivate IMethods mock;
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,21,Before
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,22,ublic void setup() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,23,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,24,ock = control.getMock();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,27,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,28,ublic void noUpperLimit() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,29,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,30,ontrol.setVoidCallable(MockControl.ONE_OR_MORE);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,31,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,32,ontrol.replay();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,33,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,34,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,35,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,36,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,37,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,38,ontrol.verify();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,41,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,42,ublic void throwRuntimeException() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,43,estThrowUncheckedException(new RuntimeException());
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,46,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,47,ublic void throwSubclassOfRuntimeException() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,48,estThrowUncheckedException(new RuntimeException() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,52,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,53,ublic void throwError() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,54,estThrowUncheckedException(new Error());
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,57,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,58,ublic void throwSubclassOfError() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,59,estThrowUncheckedException(new Error() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,63,rivate void testThrowUncheckedException(Throwable throwable) {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,64,ock.throwsNothing(true);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,65,"ontrol.setReturnValue(""true"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,66,ock.throwsNothing(false);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,67,ontrol.setThrowable(throwable);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,69,ontrol.replay();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,71,ry {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,72,ock.throwsNothing(false);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,73,"ail(""Trowable expected"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,74, catch (Throwable expected) {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,75,"ssertSame(throwable, expected);"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,78,"ssertEquals(""true"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,81,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,82,ublic void throwCheckedException() throws IOException {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,83,estThrowCheckedException(new IOException());
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,86,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,87,ublic void throwSubclassOfCheckedException() throws IOException {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,88,estThrowCheckedException(new IOException() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,92,rivate void testThrowCheckedException(IOException expected)
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,93,hrows IOException {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,94,ry {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,95,ock.throwsIOException(0);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,96,"ontrol.setReturnValue(""Value 0"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,97,ock.throwsIOException(1);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,98,ontrol.setThrowable(expected);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,99,ock.throwsIOException(2);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,100,"ontrol.setReturnValue(""Value 2"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,101, catch (IOException e) {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,102,"ail(""Unexpected Exception"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,105,ontrol.replay();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,107,"ssertEquals(""Value 0"", mock.throwsIOException(0));"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,108,"ssertEquals(""Value 2"", mock.throwsIOException(2));"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,110,ry {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,111,ock.throwsIOException(1);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,112,"ail(""IOException expected"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,113, catch (IOException expectedException) {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,114,"ssertSame(expectedException, expected);"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,118,Test
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,119,ublic void throwAfterReturnValue() {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,120,ock.throwsNothing(false);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,121,"ontrol.setReturnValue("""");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,122,untimeException expectedException = new RuntimeException();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,123,ontrol.setThrowable(expectedException);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,125,ontrol.replay();
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,127,"ssertEquals("""", mock.throwsNothing(false));"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,129,ry {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,130,ock.throwsNothing(false);
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,131,"ail(""RuntimeException expected"");"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,132, catch (RuntimeException actualException) {
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,133,"ssertSame(expectedException, actualException);"
False,test/org/easymock/tests/UsageThrowableTest.java,test/org/easymock/tests/UsageThrowableTest.java,136,ontrol.verify();
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,10,mport org.junit.Test;
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,12,ublic class UsageUnorderedTest {
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,14,ublic interface Interface {
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,15,oid method(int number);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,18,Test
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,19,ublic void message() {
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,20,ockControl<Interface> control = MockControl
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,21,createControl(Interface.class);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,22,nterface mock = control.getMock();
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,24,ock.method(0);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,25,ontrol.setMatcher(MockControl.ALWAYS_MATCHER);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,26,ontrol.setVoidCallable(1);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,27,ock.method(0);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,28,ontrol.setVoidCallable(2);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,29,ock.method(1);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,31,ontrol.replay();
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,33,ock.method(6);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,34,ock.method(7);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,35,ock.method(1);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,36,ock.method(25);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,38,ry {
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,39,ock.method(42);
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,40,ail();
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,41, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,42,"ssertEquals(""\n  Unexpected method call method(42):"""
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,43," ""\n    method(<any>): expected: 3, actual: 3 (+1)"""
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,44," ""\n    method(<any>): expected: 1, actual: 1 (+1)"","
False,test/org/easymock/tests/UsageUnorderedTest.java,test/org/easymock/tests/UsageUnorderedTest.java,45,xpected.getMessage());
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,7,mport java.lang.reflect.InvocationHandler;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,8,mport java.lang.reflect.Method;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,9,mport java.lang.reflect.Proxy;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,12,mport org.junit.Before;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,13,mport org.junit.Test;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,15,ublic class UsageVarargTest {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,17,ockControl<IVarArgs> control;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,19,VarArgs mock;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,21,Before
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,22,ublic void setup() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,23,ontrol = MockControl.createStrictControl(IVarArgs.class);
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,24,ock = control.getMock();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,27,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,28,ublic void varargObjectAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,29,"ock.withVarargsString(1, ""1"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,30,"ock.withVarargsString(2, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,31,"ock.withVarargsString(2, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,32,"ock.withVarargsObject(3, ""1"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,33,"ock.withVarargsObject(4, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,35,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,36,"ock.withVarargsString(1, ""1"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,37,"ock.withVarargsString(2, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,38,"ock.withVarargsString(2, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,39,"ock.withVarargsObject(3, ""1"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,40,"ock.withVarargsObject(4, ""1"", ""2"");"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,41,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,44,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,45,ublic void varargBooleanAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,46,"ock.withVarargsBoolean(1, true);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,47,"ock.withVarargsBoolean(2, true, false);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,49,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,50,"ock.withVarargsBoolean(1, true);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,51,"ock.withVarargsBoolean(2, true, false);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,52,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,55,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,56,ublic void varargByteAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,57,"ock.withVarargsByte(1, (byte) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,58,"ock.withVarargsByte(2, (byte) 1, (byte) 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,60,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,61,"ock.withVarargsByte(1, (byte) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,62,"ock.withVarargsByte(2, (byte) 1, (byte) 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,63,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,66,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,67,ublic void varargCharAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,68,"ock.withVarargsChar(1, 'a');"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,69,"ock.withVarargsChar(1, 'a', 'b');"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,71,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,72,"ock.withVarargsChar(1, 'a');"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,73,"ock.withVarargsChar(1, 'a', 'b');"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,74,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,77,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,78,ublic void varargDoubleAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,79,"ock.withVarargsDouble(1, 1.0d);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,80,"ock.withVarargsDouble(1, 1.0d, 2.0d);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,82,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,83,"ock.withVarargsDouble(1, 1.0d);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,84,"ock.withVarargsDouble(1, 1.0d, 2.0d);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,85,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,88,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,89,ublic void varargFloatAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,90,"ock.withVarargsFloat(1, 1.0f);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,91,"ock.withVarargsFloat(1, 1.0f, 2.0f);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,93,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,94,"ock.withVarargsFloat(1, 1.0f);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,95,"ock.withVarargsFloat(1, 1.0f, 2.0f);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,96,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,99,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,100,ublic void varargIntAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,101,"ock.withVarargsInt(1, 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,102,"ock.withVarargsInt(1, 1, 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,104,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,105,"ock.withVarargsInt(1, 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,106,"ock.withVarargsInt(1, 1, 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,107,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,110,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,111,ublic void varargLongAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,112,"ock.withVarargsLong(1, (long) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,113,"ock.withVarargsLong(1, 1, 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,115,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,116,"ock.withVarargsLong(1, (long) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,117,"ock.withVarargsLong(1, 1, 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,118,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,121,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,122,ublic void varargShortAccepted() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,123,"ock.withVarargsShort(1, (short) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,124,"ock.withVarargsShort(1, (short) 1, (short) 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,126,ontrol.replay();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,127,"ock.withVarargsShort(1, (short) 1);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,128,"ock.withVarargsShort(1, (short) 1, (short) 2);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,129,ontrol.verify();
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,132,Test
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,133,ublic void varargAcceptedIfArrayIsGiven() {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,134,"VarArgs object = (IVarArgs) Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), new Class[] { IVarArgs.class }, new InvocationHandler() {"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,136,"ublic Object invoke(Object proxy, Method method, Object[] args)"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,137,hrows Throwable {
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,138,eturn null;
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,141,bject.withVarargsObject(1);
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,142,"bject.withVarargsObject(1, (Object) null);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,143,"bject.withVarargsObject(1, (Object[]) null);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,144,"bject.withVarargsObject(1, (Object[]) new Object[0] );"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,145,"bject.withVarargsObject(1, false);"
False,test/org/easymock/tests/UsageVarargTest.java,test/org/easymock/tests/UsageVarargTest.java,146,"bject.withVarargsObject(1, new boolean[] {true, false});"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,9,mport java.io.IOException;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,12,mport org.easymock.internal.ReplayState;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,13,mport org.junit.Before;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,14,mport org.junit.Test;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,16,ublic class UsageVerifyTest {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,17,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,19,rivate IMethods mock;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,21,Before
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,22,ublic void setup() {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,23,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,24,ock = control.getMock();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,27,Test
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,28,ublic void twoReturns() {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,29,ock.throwsNothing(true);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,30,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,31,"ontrol.setReturnValue(""Test2"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,33,ontrol.replay();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,35,"ssertEquals(""Test"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,37,oolean failed = true;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,39,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,40,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,41,ailed = false;
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,42, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,43,"ssertEquals(""\n  Expectation failure on verify:"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,44," ""\n    throwsNothing(true): expected: 2, actual: 1"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,45,xpected.getMessage());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,46,"ssertTrue(""stack trace must be filled in"", Util.getStackTrace("
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,47,xpected).indexOf(ReplayState.class.getName()) == -1);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,50,f (!failed)
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,51,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,53,"ssertEquals(""Test2"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,55,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,57,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,58,ock.throwsNothing(true);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,59,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,60, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,61,"ssertEquals(""\n  Unexpected method call throwsNothing(true):"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,62," ""\n    throwsNothing(true): expected: 2, actual: 2 (+1)"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,63,xpected.getMessage());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,67,Test
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,68,ublic void atLeastTwoReturns() {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,69,ock.throwsNothing(true);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,70,"ontrol.setReturnValue(""Test"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,71,"ontrol.setReturnValue(""Test2"", MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,73,ontrol.replay();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,75,"ssertEquals(""Test"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,77,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,78,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,79,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,80, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,82,ssertEquals(
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,83,"\n  Expectation failure on verify:"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,84," ""\n    throwsNothing(true): expected: at least 2, actual: 1"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,85,xpected.getMessage());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,88,"ssertEquals(""Test2"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,89,"ssertEquals(""Test2"", mock.throwsNothing(true));"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,91,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,94,Test
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,95,ublic void twoThrows() throws IOException {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,96,ock.throwsIOException(0);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,97,ontrol.setThrowable(new IOException());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,98,ontrol.setThrowable(new IOException());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,99,ock.throwsIOException(1);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,100,ontrol.setThrowable(new IOException());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,102,ontrol.replay();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,104,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,105,ock.throwsIOException(0);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,106,"ail(""IOException expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,107, catch (IOException expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,110,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,111,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,112,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,113, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,114,"ssertEquals(""\n  Expectation failure on verify:"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,115," ""\n    throwsIOException(0): expected: 2, actual: 1"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,116," ""\n    throwsIOException(1): expected: 1, actual: 0"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,117,xpected.getMessage());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,120,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,121,ock.throwsIOException(0);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,122,"ail(""IOException expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,123, catch (IOException expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,126,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,127,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,128,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,129, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,130,"ssertEquals(""\n  Expectation failure on verify:"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,131," ""\n    throwsIOException(1): expected: 1, actual: 0"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,132,xpected.getMessage());
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,135,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,136,ock.throwsIOException(1);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,137,"ail(""IOException expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,138, catch (IOException expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,141,ontrol.verify();
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,143,ry {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,144,ock.throwsIOException(0);
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,145,"ail(""AssertionError expected"");"
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,146, catch (AssertionError expected) {
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,147,ssertEquals(
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,148,"\n  Unexpected method call throwsIOException(0):"""
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,149," ""\n    throwsIOException(0): expected: 2, actual: 2 (+1)"","
False,test/org/easymock/tests/UsageVerifyTest.java,test/org/easymock/tests/UsageVerifyTest.java,150,xpected.getMessage());
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,2,* Copyright (c) 2007 Szczepan Faber
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,5,package org.easymock.tests;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,7,import static org.mockito.Mockito.*;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,8,import static org.junit.Assert.*;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,10,import java.util.ArrayList;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,12,import org.junit.*;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,13,import org.mockito.Mockito;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,14,import org.mockito.exceptions.MockVerificationAssertionError;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,16,public class UsingVarargsTest {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,18,private interface IVarArgs {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,19,"public void withStringVarargs(int value, String... s);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,20,"public void withObjectVarargs(int value, Object... o);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,21,"public void withBooleanVarargs(int value, boolean... b);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,24,IVarArgs mock;
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,26,@Before
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,27,public void setup() {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,28,mock = Mockito.mock(IVarArgs.class);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,31,@Test
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,32,public void shouldVerifyStringVarargs() {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,33,mock.withStringVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,34,"mock.withStringVarargs(2, ""1"", ""2"", ""3"");"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,35,"mock.withStringVarargs(3, ""1"", ""2"", ""3"", ""4"");"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,37,verify(mock).withStringVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,38,"verify(mock).withStringVarargs(2, ""1"", ""2"", ""3"");"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,39,try {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,40,"verify(mock).withStringVarargs(2, ""1"", ""2"", ""79"", ""4"");"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,41,fail();
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,42,} catch (MockVerificationAssertionError e) {}
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,45,@Test
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,46,public void shouldVerifyObjectVarargs() {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,47,mock.withObjectVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,48,"mock.withObjectVarargs(2, ""1"", new ArrayList<Object>(), new Integer(1));"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,49,"mock.withObjectVarargs(3, new Integer(1));"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,51,verify(mock).withObjectVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,52,"verify(mock).withObjectVarargs(2, ""1"", new ArrayList<Object>(), new Integer(1));"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,53,try {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,54,verifyNoMoreInteractions(mock);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,55,fail();
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,56,} catch (MockVerificationAssertionError e) {}
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,59,@Test
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,60,public void shouldVerifyBooleanVarargs() {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,61,mock.withBooleanVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,62,"mock.withBooleanVarargs(2, true, false, true);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,63,"mock.withBooleanVarargs(3, true, true, true);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,65,verify(mock).withBooleanVarargs(1);
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,66,"verify(mock).withBooleanVarargs(2, true, false, true);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,67,try {
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,68,"verify(mock).withBooleanVarargs(3, true, true, true, true);"
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,69,fail();
True,test/org/easymock/tests/UsingVarargsTest.java,test/org/easymock/tests/UsingVarargsTest.java,70,} catch (MockVerificationAssertionError e) {}
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,5,ackage org.easymock.tests2;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,10,mport org.easymock.internal.ReplayState;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,11,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,12,mport org.easymock.tests.Util;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,13,mport org.junit.Before;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,14,mport org.junit.Test;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,16,ublic class UsageStrictMockTest {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,17,rivate IMethods mock;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,19,Before
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,20,ublic void setup() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,21,ock = createStrictMock(IMethods.class);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,22,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,23,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,24,eplay(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,27,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,28,ublic void orderedCallsSucces() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,29,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,30,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,31,erify(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,34,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,35,ublic void unorderedCallsFailure() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,36,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,37,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,38,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,39, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,40,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,42,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,43,"ail(""unordered calls accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,47,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,48,ublic void tooManyCallsFailure() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,49,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,50,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,52,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,53,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,54,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,55, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,56,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,58,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,59,"ail(""too many calls accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,63,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,64,ublic void tooFewCallsFailure() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,65,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,66,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,67,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,68,erify(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,69, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,70,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,71,"ssertTrue(""stack trace must be filled in"", Util.getStackTrace("
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,72,xpected).indexOf(ReplayState.class.getName()) == -1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,74,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,75,"ail(""too few calls accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,79,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,80,ublic void differentMethods() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,82,eset(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,84,ock.booleanReturningMethod(0);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,85,xpectLastCall().andReturn(true);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,86,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,87,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,88,"xpectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,89,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,90,xpectLastCall().atLeastOnce();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,92,eplay(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,93,"ssertEquals(true, mock.booleanReturningMethod(0));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,94,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,96,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,97,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,98,erify(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,99, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,100,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,101,ssertEquals(
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,102,"\n  Expectation failure on verify:"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,103," ""\n    simpleMethod(): expected: 1, actual: 1"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,104," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 0"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,105," ""\n    simpleMethod(): expected: at least 1, actual: 0"","
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,106,xpected.getMessage());
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,108,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,109,"ail(""too few calls accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,112,"ssertEquals(false, mock.booleanReturningMethod(1));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,114,ailed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,115,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,116,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,117, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,118,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,119,ssertEquals(
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,120,"\n  Unexpected method call simpleMethod():"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,121," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 1"","
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,122,xpected.getMessage());
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,124,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,125,"ail(""wrong call accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,129,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,130,ublic void range() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,132,eset(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,134,ock.booleanReturningMethod(0);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,135,xpectLastCall().andReturn(true);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,136,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,137,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,138,"xpectLastCall().andReturn(false).times(2, 3);"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,139,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,140,xpectLastCall().atLeastOnce();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,141,xpect(mock.booleanReturningMethod(1)).andReturn(false);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,143,eplay(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,145,ock.booleanReturningMethod(0);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,146,ock.simpleMethod();
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,148,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,149,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,150,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,152,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,154,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,155,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,156, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,157,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,158,ssertEquals(
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,159,"\n  Unexpected method call booleanReturningMethod(1):"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,160," ""\n    booleanReturningMethod(1): expected: between 2 and 3, actual: 3 (+1)"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,161," ""\n    simpleMethod(): expected: at least 1, actual: 0"","
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,162,xpected.getMessage());
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,164,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,165,"ail(""too many calls accepted"");"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,169,Test
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,170,ublic void stubBehavior() {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,171,eset(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,173,ock.booleanReturningMethod(1);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,174,xpectLastCall().andReturn(true).andReturn(false).andReturn(true);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,175,ock.booleanReturningMethod(anyInt());
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,176,xpectLastCall().andStubReturn(true);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,178,eplay(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,180,"ssertEquals(true, mock.booleanReturningMethod(2));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,181,"ssertEquals(true, mock.booleanReturningMethod(3));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,182,"ssertEquals(true, mock.booleanReturningMethod(1));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,183,"ssertEquals(false, mock.booleanReturningMethod(1));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,184,"ssertEquals(true, mock.booleanReturningMethod(3));"
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,186,oolean failed = false;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,187,ry {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,188,erify(mock);
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,189, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,190,ailed = true;
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,191,ssertEquals(
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,192,"\n  Expectation failure on verify:"""
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,193," ""\n    booleanReturningMethod(1): expected: 3, actual: 2"","
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,194,xpected.getMessage());
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,196,f (!failed) {
False,test/org/easymock/tests2/UsageStrictMockTest.java,test/org/easymock/tests2/UsageStrictMockTest.java,197,"ail(""too few calls accepted"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,5,ackage org.easymock.tests2;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,10,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,11,mport org.junit.Before;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,12,mport org.junit.Test;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,14,ublic class UsageTest {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,16,Methods mock;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,18,Before
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,19,ublic void setup() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,20,ock = createMock(IMethods.class);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,23,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,24,ublic void exactCallCountByLastCall() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,25,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,26,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,28,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,29,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,31,oolean failed = false;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,32,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,33,ock.oneArg(false);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,34, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,35,ailed = true;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,37,f (!failed)
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,38,"ail(""expected AssertionError"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,41,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,42,ublic void openCallCountByLastCall() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,43,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,44,atLeastOnce();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,46,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,48,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,49,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,50,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,53,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,54,ublic void exactCallCountByLastThrowable() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,55,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,56,andThrow(new IndexOutOfBoundsException());
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,58,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,60,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,61,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,63,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,64,ock.oneArg(false);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,65,ail();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,66, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,69,oolean failed = true;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,70,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,71,ock.oneArg(false);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,72,ailed = false;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,73, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,75,f (!failed)
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,76,"ail(""expected AssertionError"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,79,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,80,ublic void openCallCountByLastThrowable() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,81,"xpect(mock.oneArg(false)).andReturn(""Test"").andReturn(""Test2"")"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,82,andThrow(new IndexOutOfBoundsException()).atLeastOnce();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,84,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,86,"ssertEquals(""Test"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,87,"ssertEquals(""Test2"", mock.oneArg(false));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,89,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,90,ock.oneArg(false);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,91, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,93,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,94,ock.oneArg(false);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,95, catch (IndexOutOfBoundsException expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,99,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,100,ublic void moreThanOneArgument() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,101,"xpect(mock.threeArgumentMethod(1, ""2"", ""3"")).andReturn(""Test"")"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,102,times(2);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,104,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,106,"ssertEquals(""Test"", mock.threeArgumentMethod(1, ""2"", ""3""));"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,108,oolean failed = true;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,109,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,110,erify(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,111,ailed = false;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,112, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,113,ssertEquals(
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,114,"\n  Expectation failure on verify:"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,115," ""\n    threeArgumentMethod(1, \""2\"", \""3\""): expected: 2, actual: 1"","
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,116,xpected.getMessage());
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,118,f (!failed) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,119,"ail(""exception expected"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,123,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,124,ublic void wrongArguments() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,125,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,126,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,128,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,129,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,130,ail();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,131, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,132,ssertEquals(
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,133,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,134," ""\n    simpleMethodWithArgument(\""3\""): expected: 1, actual: 0"","
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,135,xpected.getMessage());
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,140,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,141,ublic void summarizeSameObjectArguments() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,142,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,143,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,144,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,146,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,147,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,148,ail();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,149, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,150,ssertEquals(
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,151,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,152," ""\n    simpleMethodWithArgument(\""3\""): expected: 2, actual: 0"","
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,153,xpected.getMessage());
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,158,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,159,ublic void argumentsOrdered() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,160,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,161,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,162,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,163,"ock.simpleMethodWithArgument(""0"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,164,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,165,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,167,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,168,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,169,"ail(""exception expected"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,170, catch (AssertionError expected) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,171,ssertEquals(
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,172,"\n  Unexpected method call simpleMethodWithArgument(\""5\""):"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,173," ""\n    simpleMethodWithArgument(\""4\""): expected: 1, actual: 0"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,174," ""\n    simpleMethodWithArgument(\""3\""): expected: 1, actual: 0"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,175," ""\n    simpleMethodWithArgument(\""2\""): expected: 1, actual: 0"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,176," ""\n    simpleMethodWithArgument(\""0\""): expected: 1, actual: 0"""
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,177," ""\n    simpleMethodWithArgument(\""1\""): expected: 1, actual: 0"","
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,178,xpected.getMessage());
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,183,Test
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,184,ublic void mixingOrderedAndUnordered() {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,185,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,186,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,187,"heckOrder(mock, true);"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,188,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,189,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,190,"heckOrder(mock, false);"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,191,"ock.simpleMethodWithArgument(""6"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,192,"ock.simpleMethodWithArgument(""7"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,193,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,195,eplay(mock);
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,197,"ock.simpleMethodWithArgument(""1"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,198,"ock.simpleMethodWithArgument(""2"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,200,oolean failed = false;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,201,ry {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,202,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,203, catch (AssertionError e) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,204,ailed = true;
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,206,f (!failed) {
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,207,ail();
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,210,"ock.simpleMethodWithArgument(""3"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,211,"ock.simpleMethodWithArgument(""4"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,212,"ock.simpleMethodWithArgument(""5"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,213,"ock.simpleMethodWithArgument(""6"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,214,"ock.simpleMethodWithArgument(""7"");"
False,test/org/easymock/tests2/UsageTest.java,test/org/easymock/tests2/UsageTest.java,216,erify(mock);
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,21,ockitoOperations.reportControlForStubbing(null);
True,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,21,MockitoOperations.reportLastControlForStubbing(null);
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,9,import java.lang.reflect.*;
False,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,19,ublic void shouldReturnAllKindsOfPrimitives() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,20,public void shouldReturnAllKindsOfPrimitives() throws Exception {
False,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,22,/this is mainly to prove that cglib enchanted thing works properly
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,23,//this is mainly to prove that cglib-enchanted-thing works properly
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,24,//and returns primitive value rather than throw NullPointerException
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,25,//If we used java.lang.reflect.Proxy NullPointerException will bang
