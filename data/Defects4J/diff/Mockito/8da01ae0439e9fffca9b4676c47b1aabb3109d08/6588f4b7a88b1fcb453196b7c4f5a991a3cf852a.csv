is_addition,old_file_path,new_file_path,line_num,content
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,1,package org.mockito.release.notes;
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,3,import org.gradle.api.Project;
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,4,import org.mockito.release.notes.versions.PreviousVersion;
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,5,import org.mockito.release.notes.versions.PreviousVersionFromFile;
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,7,import java.io.File;
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,10,* Release notes services
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,12,class Notes {
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,15,* Release notes build based on git and GitHub.
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,17,* @param project the Gradle project
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,18,* @param authTokenEnvVar env variable name that holds the GitHub auth token
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,20,"NotesBuilder gitHubNotesBuilder(Project project, String authTokenEnvVar) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,21,"return new GitNotesBuilder(project, authTokenEnvVar);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,25,* Provides previous version information based on the release notes file
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,27,PreviousVersion previousVersion(File releaseNotesFile) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,28,return new PreviousVersionFromFile(releaseNotesFile);
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,1,package org.mockito.release.notes;
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,3,import java.io.File;
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,5,public interface NotesBuilder {
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,8,* Updates release notes in specified file. The 'from' revision is extracted from the file. The 'to' revision needs to be supplied
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,10,* @param notesFile the file to update
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,11,* @param toRevision git revision (can be tag name or HEAD)
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,13,"void updateNotes(File notesFile, String toRevision);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,1,ackage org.mockito.release.notes;
False,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,4, Provides previous version of the library.
False,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,6,ublic interface PreviousVersionProvider {
False,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,9, The previous version
False,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/PreviousVersionProvider.java,11,tring getPreviousVersion();
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,1,ackage org.mockito.release.notes;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,3,mport org.mockito.release.notes.vcs.ContributionSet;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,5,mport java.io.File;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,7,ublic interface ReleaseNotesBuilder {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,10, Updates release notes in specified file. The 'from' revision is extracted from the file. The 'to' revision needs to be supplied
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,12, @param notesFile the file to update
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,13, @param toRevision git revision (can be tag name or HEAD)
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,15,"oid updateNotes(File notesFile, String toRevision);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,18," Returns contributions between two revisions. Revisions can also be tag names or HEAD, etc."
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,20, @param fromRevision start revision
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,21, @param toRevision end revision
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,22," @return the contribution set, never null"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,24,"ontributionSet getContributionsBetween(String fromRevision, String toRevision);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,1,ackage org.mockito.release.notes;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,3,mport org.gradle.api.GradleException;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,4,mport org.gradle.api.Project;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,5,mport org.mockito.release.notes.internal.*;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,6,mport org.mockito.release.notes.PreviousVersionFromFile;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,8,mport java.io.File;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,9,mport java.util.Collection;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,10,mport java.util.Collections;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,11,mport java.util.List;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,12,mport java.util.Map;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,14,lass ReleaseNotesServices {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,16,rivate final Project project;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,17,rivate String gitHubToken;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,18,rivate String ignorePattern;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,19,"rivate Map<String, String> labelToHeaderMapping = Collections.emptyMap();"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,20,rivate List<String> labelsToIgnore = Collections.emptyList();
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,21,rivate String headerForOtherImprovements;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,23,eleaseNotesServices(Project project) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,24,his.project = project;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,27,eleaseNotesBuilder createBuilder() {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,28,ollection<String> labelsToShowSeparately = labelToHeaderMapping.keySet();
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,29,"mprovementSetSegregator segregator = new ImprovementSetSegregator(labelsToShowSeparately, labelsToIgnore);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,30,"mprovementsPrinter improvementsPrinter = new ImprovementsPrinter(segregator, labelToHeaderMapping, headerForOtherImprovements);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,31,f (gitHubToken == null) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,32,"hrow new GradleException(""GitHub token not provided"");"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,34,"eturn new DefaultReleaseNotesBuilder(project, gitHubToken, ignorePattern, improvementsPrinter);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,37,/TODO SF interface
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,38,eleaseNotesServices gitHubToken(String gitHubToken) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,39,his.gitHubToken = gitHubToken;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,40,eturn this;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,43,/TODO: MZ: Not needed when labelsToIgnore are used
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,44,eleaseNotesServices ignoreImprovementsMatching(String pattern) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,45,his.ignorePattern = pattern;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,46,eturn this;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,49,eleaseNotesServices ignoreImprovementsWithLabels(List<String> labelsToIgnore) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,50,his.labelsToIgnore = labelsToIgnore;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,51,eturn this;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,54,"eleaseNotesServices showSeparatelyImprovementsWithLabelMappings(Map<String, String> labelToHeaderMapping) {"
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,55,his.labelToHeaderMapping = labelToHeaderMapping;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,56,eturn this;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,59,eleaseNotesServices headerForOtherImprovements(String headerForOtherImprovements) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,60,his.headerForOtherImprovements = headerForOtherImprovements;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,61,eturn this;
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,64,reviousVersionProvider getPreviousVersionProvider(File releaseNotesFile) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesServices.java,65,eturn new PreviousVersionFromFile(releaseNotesFile);
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,1,package org.mockito.release.notes.versions;
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,4,* Provides the previous version.
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,6,public interface PreviousVersion {
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,9,* The previous version
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/PreviousVersion.java,11,String getPreviousVersion();
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,1,package org.mockito.release.notes.versions;
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,3,import java.io.File;
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,6,* Version services
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,8,public class Versions {
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,11,* Provides a way to retrieve previous version based on the content of the release notes file.
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,13,PreviousVersion previousFromNotesFile(File releaseNotesFile) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,buildSrc/src/main/groovy/org/mockito/release/notes/versions/Versions.java,14,return new PreviousVersionFromFile(releaseNotesFile);
