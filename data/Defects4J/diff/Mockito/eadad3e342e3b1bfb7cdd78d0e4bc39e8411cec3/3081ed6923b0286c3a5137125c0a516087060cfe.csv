is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,55, //Let's import Mockito statically so that code looks clearer
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,55,* //Let's import Mockito statically so that the code looks clearer
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93, //Stubbed invocations <b>are verified implicitly</b>. The execution flow of your own code does it completely <b>for free</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94," //Although it is possible to verify a stubbed invocation, in majority of cases <b>it's not necessary</b>:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93,"* //Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94,* //If your code cares what get(0) returns then something else breaks (often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,95,"* //If your code doesn't care what get(0) returns then it should not be stubbed. Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,112, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,113," Although it is possible to verify a stubbed invocation, in majority"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,114, of cases it's not necessary: Let's say you've stubbed foo.bar()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,115," method. If your code cares what value foo.bar() returns, something"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,116, else will fail if you forget to call foo.bar(). Hence you don't have
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,117, to verify() it. It's  (e.g. it's just redundant). Not convinced? See
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,118," <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a></li>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,255," Some users who did a lot of classical, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,249,"* Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,350, {@link Mockito#doThrow(Throwable)} replaces the {@link Mockito#stubVoid(Object)} method for stubbing voids.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,344,* {@link Mockito#doThrow(Throwable)} replaces the {@link Mockito#stubVoid(Object)} method for stubbing voids.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,345,* The main reason is improved readability and consistency with the family of doAnswer() methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,368,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,369,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,370,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,371,"* Spying on real objects is associated with ""partial mocking"" concept."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,432, Remember that naming mocks is not a solution for complex test/code which uses too many mocks.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,431,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,432,* Beware that naming mocks is not a solution for complex code which uses too many mocks or collaborators. In that case we recommend merciless refactoring.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,447, Creates a spy of the real object. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,447,* Creates a spy of the real object. The spy calls <b>real</b> methods unless they are stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,448,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,449,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,450,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,451,"* Spying on real objects is associated with ""partial mocking"" concept."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,452,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,453,* Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,471, <h3>IMPORTANT</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,477,* <h4>Important gotcha on spying real objects!</h4>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,489, @param <T>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,529," Although it is possible to verify a stubbed invocation, in majority"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,530, of cases it's not necessary: Let's say you've stubbed foo.bar()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,531," method. If your code cares what value foo.bar() returns, something"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,532, else will fail if you forget to call foo.bar(). Hence you don't have
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,533, to verify() it (e.g. it's just redundant). Not convinced? See
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,534," <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,534,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,535,* Let's say you've stubbed foo.bar().
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,536,* If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,537,* If your code doesn't care what get(0) returns then it should not be stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,538,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,567," Although it is possible to verify a stubbed invocation, in majority"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,568, of cases it's not necessary. Let's say you've stubbed foo.bar()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,569," method. If your code cares what value foo.bar() returns, something"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,570, else will fail if you forget to call foo.bar(). Hence you don't have
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,571, to verify() it (e.g. it's just redundant). Not convinced? See
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,572," <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,571,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,572,* Let's say you've stubbed foo.bar().
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,573,* If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,574,* If your code doesn't care what get(0) returns then it should not be stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,575,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,625," Some users who did a lot of classical, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,628,"* Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,11, Stubs with return value or exception. E.g:
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,11,* Stubs a method call with return value or an exception. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,35, Stub mock object with given return value. E.g:
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,35,* Set a return value for the stubbed method. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,49, Stub mock object with throwable that will be thrown on method invocation. E.g:
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,49,* Set a Throwable to be thrown when the stubbed method is called. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,66, Stub mock object with a custom answer. E.g:
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,66,* Set a generic Answer for the stubbed method. E.g:
