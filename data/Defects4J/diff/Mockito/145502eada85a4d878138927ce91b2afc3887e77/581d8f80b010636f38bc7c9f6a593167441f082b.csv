is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,3,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,4,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,5,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,6,import java.util.HashMap;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,7,import java.util.Map;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,10,* Represents a class augmented to a Parameterized Type
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,12,class ClassEnhancedToParameterizedType implements ParameterizedType {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,13,private Class<?> clazz;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,16,* Represents actual type variables resolved for current class.
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,18,"private Map<TypeVariable, Type> allActualTypeParameters = new HashMap<TypeVariable, Type>();"
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,20,ClassEnhancedToParameterizedType(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,21,this.clazz = clazz;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,22,readActualTypeParametersOnDeclaringClass();
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,25,private void readActualTypeParametersOnDeclaringClass() {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,26,registerTypeVariablesOn(clazz);
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,27,registerTypeVariablesOn(clazz.getGenericSuperclass());
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,28,for (Type genericInterface : clazz.getGenericInterfaces()) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,29,registerTypeVariablesOn(genericInterface);
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,33,private void registerTypeVariablesOn(Type classType) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,34,if (!(classType instanceof ParameterizedType)) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,35,return;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,37,ParameterizedType parameterizedType = (ParameterizedType) classType;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,38,TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,39,Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,40,for (int i = 0; i < actualTypeArguments.length; i++) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,41,Type actualTypeArgument = actualTypeArguments[i];
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,42,TypeVariable typeParameter = typeParameters[i];
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,44,"allActualTypeParameters.put(typeParameter, actualTypeArgument);"
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,45,"GenericTypeInfo.logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + actualTypeArgument + ""' }"");"
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,49,private void registerTypeVariablesOn(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,50,TypeVariable[] typeParameters = clazz.getTypeParameters();
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,51,for (TypeVariable typeParameter : typeParameters) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,52,"allActualTypeParameters.put(typeParameter, boundsOf(typeParameter));"
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,53,"GenericTypeInfo.logger.log(""For '"" + clazz.getCanonicalName() + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,57,private Type boundsOf(TypeVariable typeParameter) {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,58,return new GenericTypeInfo.TypeVariableUpperBounds(typeParameter);
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,63,public Type[] getActualTypeArguments() {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,66,return new Type[0];  //To change body of implemented methods use File | Settings | File Templates.
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,69,public Type getRawType() {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,70,return clazz;
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,73,public Type getOwnerType() {
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,74,// TODO
True,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,75,return null;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,35,rivate final Class<?> onClass;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,35,private final Type clazz;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,43,"rivate GenericTypeInfo(Type typeToSolve, Class<?> onClass, Map<TypeVariable, Type> typeVariables) {"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,43,"private GenericTypeInfo(Type typeToSolve, Class<?> sourceType, Map<TypeVariable, Type> typeVariables) {"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,45,his.onClass = onClass;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,45,this.clazz = sourceType;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,47,eadActualTypeParametersOnDeclaringClass();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,47,"throw new UnsupportedOperationException(""code under (re)factoring"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,105,rivate void readActualTypeParametersOnDeclaringClass() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,106,egisterTypeVariablesOn(onClass);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,107,egisterTypeVariablesOn(onClass.getGenericSuperclass());
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,108,or (Type genericInterface : onClass.getGenericInterfaces()) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,109,egisterTypeVariablesOn(genericInterface);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,113,rivate void registerTypeVariablesOn(Type classType) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,114,f (!(classType instanceof ParameterizedType)) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,115,eturn;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,117,arameterizedType parameterizedType = (ParameterizedType) classType;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,118,ypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,119,ype[] actualTypeArguments = parameterizedType.getActualTypeArguments();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,120,or (int i = 0; i < actualTypeArguments.length; i++) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,121,ype actualTypeArgument = actualTypeArguments[i];
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,122,ypeVariable typeParameter = typeParameters[i];
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,124,"ypeVariables.put(typeParameter, actualTypeArgument);"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,125,"ogger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + actualTypeArgument + ""' }"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,129,rivate void registerTypeVariablesOn(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,130,ypeVariable[] typeParameters = clazz.getTypeParameters();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,131,or (TypeVariable typeParameter : typeParameters) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,132,"ypeVariables.put(typeParameter, boundsOf(typeParameter));"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,133,"ogger.log(""For '"" + clazz.getCanonicalName() + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,137,rivate Type boundsOf(TypeVariable typeParameter) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,138,eturn new TypeVariableUpperBounds(typeParameter.getBounds());
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,157,eturn !(onClass != null ? !onClass.equals(that.onClass) : that.onClass != null) && typeToSolve.equals(that.typeToSolve);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,121,return !(clazz != null ? !clazz.equals(that.clazz) : that.clazz != null) && typeToSolve.equals(that.typeToSolve);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,163,esult = 31 * result + (onClass != null ? onClass.hashCode() : 0);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,127,result = 31 * result + (clazz != null ? clazz.hashCode() : 0);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,187,rivate final Type firstBound;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,188,rivate final Type[] interfaceBounds;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,151,private TypeVariable typeVariable;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,191,ublic TypeVariableUpperBounds(Type[] bounds) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,192,"his.firstBound = bounds[0]; // either a class or an interface, always present"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,193,his.interfaceBounds = new Type[bounds.length - 1]; // JLS says only interfaces from here
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,194,"ystem.arraycopy(bounds, 1, interfaceBounds, 0, bounds.length - 1);"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,154,public TypeVariableUpperBounds(TypeVariable typeVariable) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,155,this.typeVariable = typeVariable;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,198,eturn firstBound;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,159,"return typeVariable.getBounds()[0]; // either a class or an interface, always present"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,163,// JLS says only interfaces from here (typeVar extends AClass_0 & I_1 & I_2 & etc)
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,164,Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,165,"System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,208,"b.append(""{firstBound="").append(firstBound);"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,209,"b.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds));"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,172,"sb.append(""{firstBound="").append(firstBound());"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,173,"sb.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,180,public static ParameterizedType asParameterizedType(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,181,return new ClassEnhancedToParameterizedType(clazz);
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,3,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,5,import java.util.List;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,6,import java.util.Map;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,7,import java.util.Set;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,9,import static org.fest.assertions.Assertions.assertThat;
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,11,public class ClassEnhancedToParameterizedTypeTest {
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,13,interface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,14,E get();
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,16,interface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,17,E get();
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,19,interface ListOfNumbers extends List<Number> {}
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,20,interface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,22,"interface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,24,@Test
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,25,public void can_get_raw_type() throws Exception {
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,26,assertThat(new ClassEnhancedToParameterizedType(ListOfAnyNumbers.class).getRawType()).isEqualTo(ListOfAnyNumbers.class);
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,27,assertThat(new ClassEnhancedToParameterizedType(ListOfNumbers.class).getRawType()).isEqualTo(ListOfNumbers.class);
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,28,assertThat(new ClassEnhancedToParameterizedType(MapWithNestedGenerics.class).getRawType()).isEqualTo(MapWithNestedGenerics.class);
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,31,@Test
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,32,public void can_read_actual_type_parameters() throws Exception {
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,33,"// interface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,34,// => [0] K = Comparable<K> & Cloneable
True,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,35,// => [1] V = Set<Number>
