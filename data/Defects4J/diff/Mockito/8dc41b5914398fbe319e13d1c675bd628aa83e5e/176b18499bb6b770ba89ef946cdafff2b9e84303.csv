is_addition,old_file_path,new_file_path,line_num,content
False,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/ReleaseNotesBuilder.java,3,mport org.mockito.release.notes.internal.ContributionSet;
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,1,package org.mockito.release.notes.exec;
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,3,import org.gradle.api.Project;
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,5,public class Exec {
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,7,public static ProcessRunner getGradleProcessRunner(Project project) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/Exec.java,8,return new GradleProcessRunner(project);
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,1,package org.mockito.release.notes.exec;
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,4,* Provides ways to execute external processes
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,6,public interface ProcessRunner {
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,9,* Executes given command line and returns the output.
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,11,* @param commandLine to execute
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,12,* @return combined error and standard output.
True,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,buildSrc/src/main/groovy/org/mockito/release/notes/exec/ProcessRunner.java,14,String run(String ... commandLine);
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,1,ackage org.mockito.release.notes.internal;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,3,mport java.util.LinkedList;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,4,mport java.util.List;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,7, Contribution of given author
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,9,lass Contribution {
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,10,"/email identifies the contributor, author alias not necessarily"
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,11,inal String email;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,12,inal String author;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,13,inal List<GitCommit> commits = new LinkedList<GitCommit>();
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,15,ontribution(GitCommit commit) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,16,mail = commit.email;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,17,uthor = commit.author;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,18,ommits.add(commit);
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,21,oid add(GitCommit commit) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,22,ssert email.equals(commit.email);
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,23,ommits.add(commit);
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,26,ublic String toString() {
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/Contribution.java,27,"eturn author + "":"" + commits.size();"
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,1,ackage org.mockito.release.notes.internal;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,3,lass GitCommit {
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,4,tring email;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,5,tring author;
False,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/internal/GitCommit.java,6,tring message;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,3,public interface Commit {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,4,String getEmail();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,5,String getAuthor();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Commit.java,6,String getMessage();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,3,import java.util.Collection;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,5,public interface Contribution {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Contribution.java,6,Collection<Commit> getCommits();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,3,import java.util.Collection;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,5,public interface ContributionSet {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionSet.java,6,Collection<Commit> getAllCommits();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,3,public interface ContributionsProvider {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/ContributionsProvider.java,4,"ContributionSet getContributionsBetween(String fromRev, String toRev);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,3,import java.util.Collection;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,4,import java.util.LinkedList;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,5,import java.util.List;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,7,"class DefaultContribution implements Contribution, Comparable<DefaultContribution> {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,9,"//email identifies the contributor, author alias not necessarily"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,10,final String email;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,11,final String author;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,12,final List<Commit> commits = new LinkedList<Commit>();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,14,DefaultContribution(Commit commit) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,15,email = commit.getEmail();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,16,author = commit.getAuthor();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,17,commits.add(commit);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,20,void add(GitCommit commit) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,21,assert email.equals(commit.getEmail());
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,22,commits.add(commit);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,25,public String toString() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,26,"return author + "":"" + commits.size();"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,29,public int compareTo(DefaultContribution other) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,30,return Integer.valueOf(commits.size()).compareTo(other.getCommits().size());
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,33,public Collection<Commit> getCommits() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContribution.java,34,return commits;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,3,import java.util.*;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,5,class DefaultContributionSet implements ContributionSet {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,6,"private final Map<String, DefaultContribution> contributions = new HashMap<String, DefaultContribution>();"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,7,private final Collection<Commit> commits = new LinkedList<Commit>();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,9,void add(GitCommit commit) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,10,"if (commit.getMessage().contains(""[ci skip]"")) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,11,//we used #id for Travis CI build number in commits performed by Travis. Let's avoid pulling those ids here.
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,12,"//also, if ci was skipped we probably are not interested in such change, no?"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,13,"//Currently, all our [ci skip] are infrastructure commits"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,14,return;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,16,commits.add(commit);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,17,DefaultContribution c = contributions.get(commit.getEmail());
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,18,if (c == null) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,19,"contributions.put(commit.getEmail(), c = new DefaultContribution(commit));"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,20,} else {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,21,c.add(commit);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,25,public Collection<Commit> getAllCommits() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,26,return commits;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,29,public String toString() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,30,"StringBuilder sb = new StringBuilder(""* Authors: "").append(contributions.size())"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,31,".append(""\n* Commits: "").append(commits.size());"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,33,"for (Map.Entry<String, DefaultContribution> entry : sortByValue(contributions)) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,34,Contribution c = entry.getValue();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,35,"sb.append(""\n  * "").append(c);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,38,return sb.toString();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,41,"public static <K, V extends Comparable<V>> List<Map.Entry<K, V>> sortByValue(Map<K, V> map) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,42,"List<Map.Entry<K, V>> entries = new ArrayList<Map.Entry<K, V>>(map.entrySet());"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,43,"Collections.sort(entries, new ByValue<K, V>());"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,44,return entries;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,47,"private static class ByValue<K, V extends Comparable<V>> implements Comparator<Map.Entry<K, V>> {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,48,"public int compare(Map.Entry<K, V> o1, Map.Entry<K, V> o2) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/DefaultContributionSet.java,49,return o1.getValue().compareTo(o2.getValue());
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,3,class GitCommit implements Commit {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,5,private final String email;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,6,private final String author;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,7,private final String message;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,9,"public GitCommit(String email, String author, String message) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,10,this.email = email;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,11,this.author = author;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,12,this.message = message;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,15,public String getEmail() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,16,return email;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,19,public String getAuthor() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,20,return author;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,23,public String getMessage() {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitCommit.java,24,return message;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,3,import org.mockito.release.notes.exec.ProcessRunner;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,4,import org.slf4j.Logger;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,5,import org.slf4j.LoggerFactory;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,7,class GitContributionsProvider implements ContributionsProvider {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,9,private static Logger LOG = LoggerFactory.getLogger(GitContributionsProvider.class);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,10,private final ProcessRunner runner;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,12,GitContributionsProvider(ProcessRunner runner) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,13,this.runner = runner;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,16,"public ContributionSet getContributionsBetween(String fromRev, String toRev) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,17,"LOG.info(""Fetching {} from the repo"", fromRev);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,19,"runner.run(""git"", ""fetch"", ""origin"", ""+refs/tags/$previousVersion:refs/tags/$previousVersion"");"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,21,"LOG.info(""Loading all commits between {} and {}"", fromRev, toRev);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,23,"String entryToken = ""@@commit@@"";"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,24,"String infoToken = ""@@info@@"";"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,25,"String output = runner.run(""git"", ""log"", ""--pretty=format:%ae"" + infoToken + ""%an"" + infoToken + ""%B%N"" + entryToken, fromRev + "".."" + toRev);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,27,DefaultContributionSet contributions = new DefaultContributionSet();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,29,for (String entry : output.split(entryToken)) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,30,String[] entryParts = entry.split(infoToken);
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,31,String email = entryParts[0].trim();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,32,String author = entryParts[1].trim();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,33,String message = entryParts[2].trim();
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,34,"contributions.add(new GitCommit(email, author, message));"
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/GitContributionsProvider.java,37,return contributions;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,1,package org.mockito.release.notes.vcs;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,3,import org.mockito.release.notes.exec.ProcessRunner;
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,5,public class Vcs {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,8,* Provides the ContributionsProvider
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,10,public static ContributionsProvider getContributionsProvider(ProcessRunner runner) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,buildSrc/src/main/groovy/org/mockito/release/notes/vcs/Vcs.java,11,return new GitContributionsProvider(runner);
