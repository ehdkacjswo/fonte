is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/Invocation.java,src/org/mockito/internal/Invocation.java,72,//TODO find out if the bottom code has any sense (it's easymock's legacy)
True,src/org/mockito/internal/Invocation.java,src/org/mockito/internal/Invocation.java,73,//and if we can replace it with Arrays.equals()
True,src/org/mockito/internal/Invocation.java,src/org/mockito/internal/Invocation.java,74,//e.g prove that we should treat the following as not equal calls for chunking evaluation
True,src/org/mockito/internal/Invocation.java,src/org/mockito/internal/Invocation.java,75,"//mock.add(new String(""one""));"
True,src/org/mockito/internal/Invocation.java,src/org/mockito/internal/Invocation.java,76,"//mock.add(""one"");"
False,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,56,ist<InvocationChunk> chunks = new LinkedList<InvocationChunk>();
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,56,LinkedList<InvocationChunk> chunks = new LinkedList<InvocationChunk>();
False,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,62,& chunks.get(chunks.size()-1).getInvocation().equals(i)) {
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,62,&& chunks.getLast().getInvocation().equals(i)) {
True,test/org/mockito/InvocationTest.java,test/org/mockito/InvocationTest.java,20,private Invocation newStringObjectShouldNotBeEqual;
True,test/org/mockito/InvocationTest.java,test/org/mockito/InvocationTest.java,28,"newStringObjectShouldNotBeEqual    = new InvocationBuilder().args(new String("" "")).mock(""mock"").seq(4).toInvocation();"
True,test/org/mockito/InvocationTest.java,test/org/mockito/InvocationTest.java,37,assertFalse(call.equals(newStringObjectShouldNotBeEqual));
