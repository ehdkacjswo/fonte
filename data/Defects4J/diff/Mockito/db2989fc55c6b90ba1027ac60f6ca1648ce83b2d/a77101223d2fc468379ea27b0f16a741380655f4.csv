is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,80,* Sets the real implementation to be called when the method is called on a mock object.
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,82," Object oriented programming is more less tackling complexity by spliting the complexity into separate, specific objects."
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,83,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,85," Trust me, this is not the way you want to design your application."
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,86,"* In most cases, this is not the way you want to design your application."
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,89," I wouldn't use partial mocks in new code, though."
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,90,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,407," Spying on real objects is often associated with ""partial mocking"" concept."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,408," However, Mockito spies are not partial mocks. Mockito spy is meant to help testing other classes - not the spy itself."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,409, Therefore spy will not help if you intend to verify if method calls other method on the same object.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,410, In this case I suggest being OO/SRPy (for example you might extract new class/interface...)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,407,"* Spying on real objects can be associated with ""partial mocking"" concept."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,408,"* <b>Before the release 1.8</b>, Mockito spies were not real partial mocks."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,409,* The reason was we thought partial mock is a code smell.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,410,* At some point we found legitimate use cases for partial mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,411,"* (3rd party interfaces, interim refactoring of legacy code, the full article is <a href="
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,412,"* ""http://monkeyisland.pl/2009/01/13/subclass-and-override-vs-partial-mocking-vs-refactoring"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,413,* >here</a>)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,414,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,580,* As usual you are going to read <b>the partial mock warning</b>:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,581,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,582,"* How does partial mock fit into this paradigm? Well, it just doesn't..."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,583,* Partial mock usually means that the complexity has been moved to a different method on the same object.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,584,"* In most cases, this is not the way you want to design your application."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,585,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,586,"* However, there are rare cases when partial mocks come handy:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,587,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,588,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,589,* <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,713," Object oriented programming is more less tackling complexity by spliting the complexity into separate, specific objects."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,727,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,716," Trust me, this is not the way you want to design your application."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,730,"* In most cases, this is not the way you want to design your application."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,720," I wouldn't use partial mocks in new code, though."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,734,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1069," Object oriented programming is more less tackling complexity by spliting the complexity into separate, specific objects."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1083,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1072," Trust me, this is not the way you want to design your application."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1086,"* In most cases, this is not the way you want to design your application."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1076," I wouldn't use partial mocks in new code, though."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1090,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
False,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,93, TODO: polish the partial mocks warning
False,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,95," Object oriented programming is more less tackling complexity by spliting the complexity into separate, specific objects."
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,94,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
False,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,98," Trust me, this is not the way you want to design your application."
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,97,"* In most cases, this is not the way you want to design your application."
False,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,102," I wouldn't use partial mocks in new code, though."
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,101,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,19,* As usual you are going to read <b>the partial mock warning</b>:
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,20,"* Object oriented programming is more less tackling complexity by dividing the complexity into separate, specific, SRPy objects."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,21,"* How does partial mock fit into this paradigm? Well, it just doesn't..."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,22,* Partial mock usually means that the complexity has been moved to a different method on the same object.
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,23,"* In most cases, this is not the way you want to design your application."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,24,* <p>
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,25,"* However, there are rare cases when partial mocks come handy:"
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,26,"* dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)"
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,27,"* However, I wouldn't use partial mocks for new, test-driven & well-designed code."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,28,* <p>
