is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,9,import org.mockito.MockSettings;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,9,mport org.mockito.internal.util.ConsoleMockitoLogger;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,10,mport org.mockito.internal.util.MockitoLogger;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,14,import org.mockito.internal.util.MockCreationValidator;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,13,mport java.lang.reflect.Method;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,14,mport java.lang.reflect.ParameterizedType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,15,mport java.lang.reflect.Type;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,16,mport java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,17,import java.lang.reflect.*;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,24,ublic static MockitoLogger logger = new ConsoleMockitoLogger();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,33,// public static MockitoLogger logger = new ConsoleMockitoLogger();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,33,f (!(classType instanceof ParameterizedType)) { // null protected
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,42,if (!(classType instanceof ParameterizedType)) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,43,"ontextualActualTypeParameters.put(typeParameter, actualTypeArgument);"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,44,"ogger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,52,if (actualTypeArgument instanceof WildcardType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,53,"contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,54,} else {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,55,"contextualActualTypeParameters.put(typeParameter, actualTypeArgument);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,57,"// logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' }"");"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,51,"ogger.log(""For '"" + typeParameter.getGenericDeclaration() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,64,"// logger.log(""For '"" + typeParameter.getGenericDeclaration() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,55,rivate Type boundsOf(TypeVariable typeParameter) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,69,* @param typeParameter The TypeVariable parameter
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,70,"* @return A {@link BoundedType} for easy bound information, if first bound is a TypeVariable"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,71,*         then retrieve BoundedType of this TypeVariable
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,73,private BoundedType boundsOf(TypeVariable typeParameter) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,59,eturn new BoundedType(typeParameter);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,77,return new TypeVarBoundedType(typeParameter);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,81,* @param wildCard The WildCard type
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,82,"* @return A {@link BoundedType} for easy bound information, if first bound is a TypeVariable"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,83,*         then retrieve BoundedType of this TypeVariable
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,85,private BoundedType boundsOf(WildcardType wildCard) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,87,*  According to JLS(http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1):
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,88,"*  - Lower and upper can't coexist: (for instance, this is not allowed: <? extends List<String> & super MyInterface>)"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,89,"*  - Multiple bounds are not supported (for instance, this is not allowed: <? extends List<String> & MyInterface>)"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,92,WildCardBoundedType wildCardBoundedType = new WildCardBoundedType(wildCard);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,93,if (wildCardBoundedType.firstBound() instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,94,return boundsOf((TypeVariable) wildCardBoundedType.firstBound());
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,97,return wildCardBoundedType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,92,"ogger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,130,"// logger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,114, @return The mock.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,152,* @return The mock or null if not mockable.
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,117,eturn Mockito.mock(
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,118,"awType(),"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,119,(MockSettingsImpl) withSettings().defaultAnswer(answer)).parameterizedInfo(this)
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,155,"return createMock(rawType(), ((MockSettingsImpl) withSettings().defaultAnswer(answer)).parameterizedInfo(this));"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,158,"private Object createMock(Class<?> rawType, MockSettings mockSettings) {"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,159,if (!new MockCreationValidator().isTypeMockable(rawType)) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,160,return null;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,162,"return Mockito.mock(rawType, mockSettings);"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,133,"ogger.log(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,174,"// logger.log(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,144,f (genericReturnType instanceof BoundedType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,145,"eturn new TypeVariableReturnType(this, method.getTypeParameters(), ((BoundedType) genericReturnType).typeVariable());"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,148,"hrow new IllegalStateException(""ouch"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,186,"throw new MockitoException(""Ouch, it shouldn't happen, type '"" + genericReturnType.getClass().getCanonicalName() + ""' on method : '"" + method.toGenericString() + ""' is not supported : "" + genericReturnType);"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,220,/ ParameterizedType#getRawType() always return a class !
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,308,"f type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,309,"n the class definition, such as such as List<E>."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,345,"* If type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,346,"* on the class definition, such as such as List<E>."
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,368,eturn Mockito.mock(
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,405,return super.createMock(
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,436,* Type representing bounds of a type
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,438,* @see TypeVarBoundedType
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,439,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,440,* @see WildCardBoundedType
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,441,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.5.1</a>"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,443,public static interface BoundedType extends Type {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,444,Type firstBound();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,446,Type[] interfaceBounds();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,467,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,414,ublic static class BoundedType implements Type {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,469,public static class TypeVarBoundedType implements BoundedType {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,418,ublic BoundedType(TypeVariable typeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,473,public TypeVarBoundedType(TypeVariable typeVariable) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,430," On a Type Variable (typeVar extends AClass_0 & I_1 & I_2 & etc), will return an array"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,485,"* On a Type Variable (typeVar extends C_0 & I_1 & I_2 & etc), will return an array"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,447,eturn typeVariable.equals(((BoundedType) o).typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,502,return typeVariable.equals(((TypeVarBoundedType) o).typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,526,"* Type representing bounds of a wildcard, allows to keep all bounds information."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,528,"* <p>The JLS says that lower bound and upper bound are mutually exclusive, and that multiple bounds"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,529,* are not allowed.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,531,"* @see <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4"">http://docs.oracle.com/javase/specs/jls/se5.0/html/typesValues.html#4.4</a>"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,533,public static class WildCardBoundedType implements BoundedType {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,534,private WildcardType wildcard;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,537,public WildCardBoundedType(WildcardType wildcard) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,538,this.wildcard = wildcard;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,542,"* @return The first bound, either a type or a reference to a TypeVariable"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,544,public Type firstBound() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,545,Type[] lowerBounds = wildcard.getLowerBounds();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,546,Type[] upperBounds = wildcard.getUpperBounds();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,548,return lowerBounds.length != 0 ? lowerBounds[0] : upperBounds[0];
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,552,"* @return An empty array as, wildcard don't support multiple bounds."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,554,public Type[] interfaceBounds() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,555,return new Type[0];
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,558,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,559,public boolean equals(Object o) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,560,if (this == o) return true;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,561,if (o == null || getClass() != o.getClass()) return false;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,563,return wildcard.equals(((TypeVarBoundedType) o).typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,567,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,568,public int hashCode() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,569,return wildcard.hashCode();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,572,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,573,public String toString() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,574,final StringBuilder sb = new StringBuilder();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,575,"sb.append(""{firstBound="").append(firstBound());"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,576,"sb.append("", interfaceBounds=[]}"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,577,return sb.toString();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,580,public WildcardType wildCard() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,581,return wildcard;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,3,* This program is made available under the terms of the MIT License.
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,3,mport org.junit.Ignore;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,20,import static org.mockito.Mockito.RETURNS_DEFAULTS;
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,33,ist<? super Integer> returningWildcard();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,37,List<? super Integer> returning_wildcard_with_class_lower_bound();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,38,List<? super K> returning_wildcard_with_typeVar_lower_bound();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,39,List<? extends K> returning_wildcard_with_typeVar_upper_bound();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,35,O extends K> List<O> paramTypeWithTypeParams();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,36,"S, T extends S> T twoTypeParams();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,37,O extends K> O typeVarWithTypeParams();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,41,<O extends K> List<O> paramType_with_type_params();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,42,"<S, T extends S> T two_type_params();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,43,<O extends K> O typeVar_with_type_params();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,73,ublic void typeVariable_return_type_of___get___resolved_to_Set_and_type_argument_to_Number() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,79,public void typeVariable_return_type_of____get____resolved_to_Set_and_type_argument_to_Number() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,81,ublic void bounded_typeVariable_return_type_of___returningK___resolved_to_Comparable_and_with_BoundedType() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,87,public void bounded_typeVariable_return_type_of____returningK____resolved_to_Comparable_and_with_BoundedType() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,90,ublic void fixed_ParamType_return_type_of___remove___resolved_to_Set_and_type_argument_to_Number() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,96,public void fixed_ParamType_return_type_of____remove____resolved_to_Set_and_type_argument_to_Number() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,98,ublic void paramType_return_type_of___values___resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,104,public void paramType_return_type_of____values____resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,108,ublic void paramType_with_type_parameters_return_type_of___paramTypeWithTypeParams___resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,109,"ockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""paramTypeWithTypeParams"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,114,public void paramType_with_type_parameters_return_type_of____paramType_with_type_params____resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,115,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""paramType_with_type_params"", GenericsNest.class));"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,112,"ype firstBoundOfE = ((MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"")).firstBound();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,118,"Type firstBoundOfE = ((MockitoGenericMetadata.TypeVarBoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"")).firstBound();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,117,ublic void typeVariable_with_type_parameters_return_type_of___typeVarWithTypeParams___resolved_K_hence_to_Comparable_and_with_BoundedType() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,118,"ockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""typeVarWithTypeParams"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,123,public void typeVariable_with_type_parameters_return_type_of____typeVar_with_type_params____resolved_K_hence_to_Comparable_and_with_BoundedType() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,124,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""typeVar_with_type_params"", GenericsNest.class));"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,126,ublic void class_return_type_of___append___resolved_to_StringBuilder_and_type_arguments() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,132,public void class_return_type_of____append____resolved_to_StringBuilder_and_type_arguments() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,141,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,142,public void paramType_with_wildcard_return_type_of____returning_wildcard_with_class_lower_bound____resolved_to_List_and_type_argument_to_Integer() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,143,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returning_wildcard_with_class_lower_bound"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,145,assertThat(genericMetadata.rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,146,"MockitoGenericMetadata.BoundedType boundedType = (MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,147,assertThat(boundedType.firstBound()).isEqualTo(Integer.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,148,assertThat(boundedType.interfaceBounds()).isEmpty();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,134,"Ignore(""TODO WildCard"")"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,135,ublic void paramType_with_wildcard_return_type_of___returningWildcard___resolved_to_List_and_type_argument_to_Integer() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,136,"ockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningWildcard"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,152,public void paramType_with_wildcard_return_type_of____returning_wildcard_with_typeVar_lower_bound____resolved_to_List_and_type_argument_to_Integer() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,153,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returning_wildcard_with_typeVar_lower_bound"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,155,assertThat(genericMetadata.rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,156,"MockitoGenericMetadata.BoundedType boundedType = (MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,158,assertThat(from(boundedType.firstBound()).rawType()).isEqualTo(Comparable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,159,assertThat(boundedType.interfaceBounds()).contains(Cloneable.class);    }
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,161,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,162,public void paramType_with_wildcard_return_type_of____returning_wildcard_with_typeVar_upper_bound____resolved_to_List_and_type_argument_to_Integer() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,163,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returning_wildcard_with_typeVar_upper_bound"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,165,assertThat(genericMetadata.rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,166,"MockitoGenericMetadata.BoundedType boundedType = (MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,168,assertThat(from(boundedType.firstBound()).rawType()).isEqualTo(Comparable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,169,assertThat(boundedType.interfaceBounds()).contains(Cloneable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,175,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,176,public void toMock_returns_null_if_type_unmockable() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,177,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returning_wildcard_with_class_lower_bound"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,179,"MockitoGenericMetadata.BoundedType boundedType = (MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,181,assertThat(from(boundedType.firstBound()).toMock(RETURNS_DEFAULTS)).isNull();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,184,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,185,public void toMock_returns_mock_of_correct_type() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,186,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningK"", GenericsNest.class));"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,138,"ail(""TODO"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,188,assertThat(genericMetadata.toMock(RETURNS_DEFAULTS)).isInstanceOf(Comparable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,189,assertThat(genericMetadata.toMock(RETURNS_DEFAULTS)).isInstanceOf(Cloneable.class);
