is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,2, Copyright (c) 2010 Mockito contributors
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,5,ackage org.mockito;
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,7,mport java.lang.annotation.*;
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,10, Allows shorthand {@link org.mockito.ArgumentCaptor} creation on fields.
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,11, <p>Example:
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,12, <pre>
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,13, public class Test{
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,15,    &#64;Captor ArgumentCaptor&lt;AsyncCallback&lt;Foo&gt;&gt; captor;
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,17,    &#64;Before
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,18,    public void init(){
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,19,       MockitoAnnotations.init(this);
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,22,    &#64;Test public void shouldDoSomethingUseful() {
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,24,       verify(mock.doStuff(captor.capture()));
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,25,"       assertEquals(""foo"", captor.getValue());"
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,28, </pre>
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,29, <p>
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,30, One of the advantages of using &#64;Captor annotation is that you can avoid warnings related capturing complex generic types.
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,32,Retention(RetentionPolicy.RUNTIME)
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,33,Target(ElementType.FIELD)
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,34,Documented
False,src/org/mockito/Captor.java,src/org/mockito/Captor.java,35,ublic @interface Captor {}
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,5,package org.mockito;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,7,import java.lang.annotation.*;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,10,* Allows shorthand {@link org.mockito.ArgumentCaptor} creation on fields.
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,11,* <p>Example:
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,12,* <pre>
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,13,* public class Test{
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,15,*    &#64;Captor ArgumentCaptor&lt;AsyncCallback&lt;Foo&gt;&gt; captor;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,17,*    &#64;Before
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,18,*    public void init(){
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,19,*       MockitoAnnotations.init(this);
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,22,*    &#64;Test public void shouldDoSomethingUseful() {
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,24,*       verify(mock.doStuff(captor.capture()));
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,25,"*       assertEquals(""foo"", captor.getValue());"
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,28,* </pre>
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,29,* <p>
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,30,* One of the advantages of using &#64;Captor annotation is that you can avoid warnings related capturing complex generic types.
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,32,@Retention(RetentionPolicy.RUNTIME)
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,33,@Target(ElementType.FIELD)
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,34,@Documented
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,35,public @interface Captor {}
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/MockitoDebugger.java,src/org/mockito/MockitoDebugger.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/MockitoDebugger.java,src/org/mockito/MockitoDebugger.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,1,ackage org.mockito;
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,3,mport java.lang.annotation.*;
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,6, Allows shorthand wrapping of field instances in an spy object.
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,8, <p>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,9, Example:
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,11, <pre>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,12, public class Test{
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,13,    &#64;Spy Foo spyOnFoo = new Foo();
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,14,    &#64;Before
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,15,    public void init(){
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,16,       MockitoAnnotations.init(this);
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,20, </pre>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,21, <p>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,22, Same as doing:
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,24, <pre>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,25, Foo spyOnFoo = Mockito.spy(new Foo());
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,26, </pre>
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,28, <b>Warning</b> if you call <code>MockitoAnnotations.init(this)</code> in a
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,29, super class <b>constructor</b> then this will not work. It is because fields
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,30, in subclass are only instantiated after super class constructor has returned.
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,31, It's better to use &#64;Before.
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,33,Retention(RetentionPolicy.RUNTIME)
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,34,Target(ElementType.FIELD)
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,35,Documented
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,36,ublic @interface Spy {
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,5,package org.mockito;
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,7,import java.lang.annotation.*;
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,10,* Allows shorthand wrapping of field instances in an spy object.
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,12,* <p>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,13,* Example:
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,15,* <pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,16,* public class Test{
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,17,*    &#64;Spy Foo spyOnFoo = new Foo();
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,18,*    &#64;Before
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,19,*    public void init(){
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,20,*       MockitoAnnotations.init(this);
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,24,* </pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,25,* <p>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,26,* Same as doing:
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,28,* <pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,29,* Foo spyOnFoo = Mockito.spy(new Foo());
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,30,* </pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,32,* <b>Warning</b> if you call <code>MockitoAnnotations.init(this)</code> in a
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,33,* super class <b>constructor</b> then this will not work. It is because fields
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,34,* in subclass are only instantiated after super class constructor has returned.
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,35,* It's better to use &#64;Before.
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,37,@Retention(RetentionPolicy.RUNTIME)
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,38,@Target(ElementType.FIELD)
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,39,@Documented
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,40,public @interface Spy {
True,src/org/mockito/internal/MockHandlerInterface.java,src/org/mockito/internal/MockHandlerInterface.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/MockHandlerInterface.java,src/org/mockito/internal/MockHandlerInterface.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/FindingsListener.java,src/org/mockito/internal/debugging/FindingsListener.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/FindingsListener.java,src/org/mockito/internal/debugging/FindingsListener.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/LoggingListener.java,src/org/mockito/internal/debugging/LoggingListener.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/LoggingListener.java,src/org/mockito/internal/debugging/LoggingListener.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/MockitoDebuggerImpl.java,src/org/mockito/internal/debugging/MockitoDebuggerImpl.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/MockitoDebuggerImpl.java,src/org/mockito/internal/debugging/MockitoDebuggerImpl.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/WarningsCollector.java,src/org/mockito/internal/debugging/WarningsCollector.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/WarningsCollector.java,src/org/mockito/internal/debugging/WarningsCollector.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/WarningsFinder.java,src/org/mockito/internal/debugging/WarningsFinder.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/WarningsFinder.java,src/org/mockito/internal/debugging/WarningsFinder.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java,src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java,src/org/mockito/internal/exceptions/ExceptionIncludingMockitoWarnings.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/invocation/StubInfo.java,src/org/mockito/internal/invocation/StubInfo.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/invocation/StubInfo.java,src/org/mockito/internal/invocation/StubInfo.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/listeners/CollectCreatedMocks.java,src/org/mockito/internal/listeners/CollectCreatedMocks.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/listeners/CollectCreatedMocks.java,src/org/mockito/internal/listeners/CollectCreatedMocks.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/listeners/MockingProgressListener.java,src/org/mockito/internal/listeners/MockingProgressListener.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/listeners/MockingProgressListener.java,src/org/mockito/internal/listeners/MockingProgressListener.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/listeners/MockingStartedListener.java,src/org/mockito/internal/listeners/MockingStartedListener.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/listeners/MockingStartedListener.java,src/org/mockito/internal/listeners/MockingStartedListener.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/stubbing/InvocationContainer.java,src/org/mockito/internal/stubbing/InvocationContainer.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/stubbing/InvocationContainer.java,src/org/mockito/internal/stubbing/InvocationContainer.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/stubbing/answers/ClonesArguments.java,src/org/mockito/internal/stubbing/answers/ClonesArguments.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/stubbing/answers/ClonesArguments.java,src/org/mockito/internal/stubbing/answers/ClonesArguments.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,2, Copyright (c) 2009 Mockito contributors
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/ArrayUtils.java,src/org/mockito/internal/util/ArrayUtils.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/ArrayUtils.java,src/org/mockito/internal/util/ArrayUtils.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/reflection/FieldReader.java,src/org/mockito/internal/util/reflection/FieldReader.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/reflection/FieldReader.java,src/org/mockito/internal/util/reflection/FieldReader.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/debugging/LoggingListenerTest.java,test/org/mockito/internal/debugging/LoggingListenerTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/debugging/LoggingListenerTest.java,test/org/mockito/internal/debugging/LoggingListenerTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java,test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java,test/org/mockito/internal/progress/ThreadSafeMockingProgressTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/util/ArrayUtilsTest.java,test/org/mockito/internal/util/ArrayUtilsTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/util/ArrayUtilsTest.java,test/org/mockito/internal/util/ArrayUtilsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/util/MockNameTest.java,test/org/mockito/internal/util/MockNameTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/util/MockNameTest.java,test/org/mockito/internal/util/MockNameTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/util/SimpleMockitoLoggerTest.java,test/org/mockito/internal/util/SimpleMockitoLoggerTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/util/SimpleMockitoLoggerTest.java,test/org/mockito/internal/util/SimpleMockitoLoggerTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/verification/DummyVerificationMode.java,test/org/mockito/internal/verification/DummyVerificationMode.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/verification/DummyVerificationMode.java,test/org/mockito/internal/verification/DummyVerificationMode.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/verification/VerificationDataImplTest.java,test/org/mockito/internal/verification/VerificationDataImplTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/verification/VerificationDataImplTest.java,test/org/mockito/internal/verification/VerificationDataImplTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java,test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java,test/org/mockitousage/annotation/SpyAnnotationInitializedInBaseClassTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/SpyInjectionTest.java,test/org/mockitousage/annotation/SpyInjectionTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/SpyInjectionTest.java,test/org/mockitousage/annotation/SpyInjectionTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java,test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java,test/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/debugging/Foo.java,test/org/mockitousage/debugging/Foo.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/debugging/Foo.java,test/org/mockitousage/debugging/Foo.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/debugging/NewMockito.java,test/org/mockitousage/debugging/NewMockito.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/debugging/NewMockito.java,test/org/mockitousage/debugging/NewMockito.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java,test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java,test/org/mockitousage/debugging/PrintingInvocationsWhenEverythingOkTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java,test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java,test/org/mockitousage/debugging/PrintingInvocationsWhenStubNotUsedTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/junitrunner/Filters.java,test/org/mockitousage/junitrunner/Filters.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/junitrunner/Filters.java,test/org/mockitousage/junitrunner/Filters.java,3,* This program is made available under the terms of the MIT License.
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,2, Copyright (c) 2009 Mockito contributors
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,5,ackage org.mockitousage.stubbing;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,7,mport static org.mockito.BDDMockito.*;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,9,mport java.io.ByteArrayOutputStream;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,10,mport java.io.OutputStream;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,11,mport java.net.Socket;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,13,mport javax.net.SocketFactory;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,15,mport org.junit.Test;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,16,mport org.mockitoutil.TestBase;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,19,ublic class DeepStubbingTest extends TestBase {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,21,tatic class Person {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,22,ddress address;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,24,ublic Address getAddress() {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,25,eturn address;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,28,ublic FinalClass getFinalClass() {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,29,eturn null;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,33,tatic class Address {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,34,treet street;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,36,ublic Street getStreet() {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,37,eturn street;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,41,tatic class Street {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,42,tring name;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,44,ublic String getName() {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,45,eturn name;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,49,tatic final class FinalClass {};
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,51,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,52,ublic void myTest() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,53,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,54,"hen(sf.createSocket(anyString(), eq(80))).thenReturn(null);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,55,"f.createSocket(""what"", 80);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,58,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,59,ublic void simpleCase() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,60,utputStream out = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,61,ocket socket = mock(Socket.class);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,62,hen(socket.getOutputStream()).thenReturn(out);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,64,"ssertSame(out, socket.getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,68, Test that deep stubbing works for one intermediate level
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,70,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,71,ublic void oneLevelDeep() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,72,utputStream out = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,74,"ocketFactory socketFactory = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,75,hen(socketFactory.createSocket().getOutputStream()).thenReturn(out);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,77,"ssertSame(out, socketFactory.createSocket().getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,81, Test that stubbing of two mocks stubs don't interfere
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,83,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,84,ublic void interactions() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,85,utputStream out1 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,86,utputStream out2 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,88,"ocketFactory sf1 = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,89,hen(sf1.createSocket().getOutputStream()).thenReturn(out1);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,91,"ocketFactory sf2 = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,92,hen(sf2.createSocket().getOutputStream()).thenReturn(out2);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,94,"ssertSame(out1, sf1.createSocket().getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,95,"ssertSame(out2, sf2.createSocket().getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,99, Test that stubbing of methods of different arguments don't interfere
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,101,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,102,ublic void withArguments() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,103,utputStream out1 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,104,utputStream out2 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,105,utputStream out3 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,107,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,108,hen(sf.createSocket().getOutputStream()).thenReturn(out1);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,109,"hen(sf.createSocket(""google.com"", 80).getOutputStream()).thenReturn(out2);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,110,"hen(sf.createSocket(""stackoverflow.com"", 80).getOutputStream()).thenReturn(out3);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,112,"ssertSame(out1, sf.createSocket().getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,113,"ssertSame(out2, sf.createSocket(""google.com"", 80).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,114,"ssertSame(out3, sf.createSocket(""stackoverflow.com"", 80).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,118, Test that deep stubbing work with argument patterns
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,120,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,121,ublic void withAnyPatternArguments() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,122,utputStream out = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,124,/TODO: should not use javax in case it changes
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,125,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,126,"hen(sf.createSocket(anyString(), anyInt()).getOutputStream()).thenReturn(out);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,128,"ssertSame(out, sf.createSocket(""google.com"", 80).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,129,"ssertSame(out, sf.createSocket(""stackoverflow.com"", 8080).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,133, Test that deep stubbing work with argument patterns
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,135,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,136,ublic void withComplexPatternArguments() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,137,utputStream out1 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,138,utputStream out2 = new ByteArrayOutputStream();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,140,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,141,"hen(sf.createSocket(anyString(), eq(80)).getOutputStream()).thenReturn(out1);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,142,"hen(sf.createSocket(anyString(), eq(8080)).getOutputStream()).thenReturn(out2);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,144,"ssertSame(out2, sf.createSocket(""stackoverflow.com"", 8080).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,145,"ssertSame(out1, sf.createSocket(""google.com"", 80).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,146,"ssertSame(out2, sf.createSocket(""google.com"", 8080).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,147,"ssertSame(out1, sf.createSocket(""stackoverflow.com"", 80).getOutputStream());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,151, Test that deep stubbing work with primitive expected values
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,153,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,154,ublic void withSimplePrimitive() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,155,nt a = 32;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,157,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,158,hen(sf.createSocket().getPort()).thenReturn(a);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,160,"ssertEquals(a, sf.createSocket().getPort());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,164, Test that deep stubbing work with primitive expected values with
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,165, pattern method arguments
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,167,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,168,ublic void withPatternPrimitive() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,169,"nt a = 12, b = 23, c = 34;"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,171,"ocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,172,"hen(sf.createSocket(eq(""stackoverflow.com""), eq(80)).getPort()).thenReturn(a);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,173,"hen(sf.createSocket(eq(""google.com""), anyInt()).getPort()).thenReturn(b);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,174,"hen(sf.createSocket(eq(""stackoverflow.com""), eq(8080)).getPort()).thenReturn(c);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,176,"ssertEquals(b, sf.createSocket(""google.com"", 80).getPort());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,177,"ssertEquals(c, sf.createSocket(""stackoverflow.com"", 8080).getPort());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,178,"ssertEquals(a, sf.createSocket(""stackoverflow.com"", 80).getPort());"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,181,"erson person = mock(Person.class, RETURNS_DEEP_STUBS);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,183,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,184,ublic void shouldStubbingBasicallyWorkFine() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,185,/given
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,186,"iven(person.getAddress().getStreet().getName()).willReturn(""Norymberska"");"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,188,/when
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,189,tring street = person.getAddress().getStreet().getName();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,191,/then
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,192,"ssertEquals(""Norymberska"", street);"
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,195,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,196,ublic void shouldVerificationBasicallyWorkFine() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,197,/given
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,198,erson.getAddress().getStreet().getName();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,200,/then
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,201,erify(person.getAddress().getStreet()).getName();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,204,Test
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,205,ublic void shouldFailGracefullyWhenClassIsFinal() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,206,/when
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,207,inalClass value = new FinalClass();
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,208,iven(person.getFinalClass()).willReturn(value);
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,210,/then
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,211,"ssertEquals(value, person.getFinalClass());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,5,package org.mockitousage.stubbing;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,7,import static org.mockito.BDDMockito.*;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,9,import java.io.ByteArrayOutputStream;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,10,import java.io.OutputStream;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,11,import java.net.Socket;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,13,import javax.net.SocketFactory;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,15,import org.junit.Test;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,16,import org.mockitoutil.TestBase;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,19,public class DeepStubbingTest extends TestBase {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,21,static class Person {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,22,Address address;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,24,public Address getAddress() {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,25,return address;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,28,public FinalClass getFinalClass() {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,29,return null;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,33,static class Address {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,34,Street street;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,36,public Street getStreet() {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,37,return street;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,41,static class Street {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,42,String name;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,44,public String getName() {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,45,return name;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,49,static final class FinalClass {};
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,51,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,52,public void myTest() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,53,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,54,"when(sf.createSocket(anyString(), eq(80))).thenReturn(null);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,55,"sf.createSocket(""what"", 80);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,58,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,59,public void simpleCase() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,60,OutputStream out = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,61,Socket socket = mock(Socket.class);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,62,when(socket.getOutputStream()).thenReturn(out);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,64,"assertSame(out, socket.getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,68,* Test that deep stubbing works for one intermediate level
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,70,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,71,public void oneLevelDeep() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,72,OutputStream out = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,74,"SocketFactory socketFactory = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,75,when(socketFactory.createSocket().getOutputStream()).thenReturn(out);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,77,"assertSame(out, socketFactory.createSocket().getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,81,* Test that stubbing of two mocks stubs don't interfere
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,83,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,84,public void interactions() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,85,OutputStream out1 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,86,OutputStream out2 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,88,"SocketFactory sf1 = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,89,when(sf1.createSocket().getOutputStream()).thenReturn(out1);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,91,"SocketFactory sf2 = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,92,when(sf2.createSocket().getOutputStream()).thenReturn(out2);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,94,"assertSame(out1, sf1.createSocket().getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,95,"assertSame(out2, sf2.createSocket().getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,99,* Test that stubbing of methods of different arguments don't interfere
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,101,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,102,public void withArguments() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,103,OutputStream out1 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,104,OutputStream out2 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,105,OutputStream out3 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,107,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,108,when(sf.createSocket().getOutputStream()).thenReturn(out1);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,109,"when(sf.createSocket(""google.com"", 80).getOutputStream()).thenReturn(out2);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,110,"when(sf.createSocket(""stackoverflow.com"", 80).getOutputStream()).thenReturn(out3);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,112,"assertSame(out1, sf.createSocket().getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,113,"assertSame(out2, sf.createSocket(""google.com"", 80).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,114,"assertSame(out3, sf.createSocket(""stackoverflow.com"", 80).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,118,* Test that deep stubbing work with argument patterns
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,120,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,121,public void withAnyPatternArguments() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,122,OutputStream out = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,124,//TODO: should not use javax in case it changes
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,125,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,126,"when(sf.createSocket(anyString(), anyInt()).getOutputStream()).thenReturn(out);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,128,"assertSame(out, sf.createSocket(""google.com"", 80).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,129,"assertSame(out, sf.createSocket(""stackoverflow.com"", 8080).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,133,* Test that deep stubbing work with argument patterns
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,135,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,136,public void withComplexPatternArguments() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,137,OutputStream out1 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,138,OutputStream out2 = new ByteArrayOutputStream();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,140,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,141,"when(sf.createSocket(anyString(), eq(80)).getOutputStream()).thenReturn(out1);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,142,"when(sf.createSocket(anyString(), eq(8080)).getOutputStream()).thenReturn(out2);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,144,"assertSame(out2, sf.createSocket(""stackoverflow.com"", 8080).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,145,"assertSame(out1, sf.createSocket(""google.com"", 80).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,146,"assertSame(out2, sf.createSocket(""google.com"", 8080).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,147,"assertSame(out1, sf.createSocket(""stackoverflow.com"", 80).getOutputStream());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,151,* Test that deep stubbing work with primitive expected values
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,153,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,154,public void withSimplePrimitive() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,155,int a = 32;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,157,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,158,when(sf.createSocket().getPort()).thenReturn(a);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,160,"assertEquals(a, sf.createSocket().getPort());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,164,* Test that deep stubbing work with primitive expected values with
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,165,* pattern method arguments
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,167,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,168,public void withPatternPrimitive() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,169,"int a = 12, b = 23, c = 34;"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,171,"SocketFactory sf = mock(SocketFactory.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,172,"when(sf.createSocket(eq(""stackoverflow.com""), eq(80)).getPort()).thenReturn(a);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,173,"when(sf.createSocket(eq(""google.com""), anyInt()).getPort()).thenReturn(b);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,174,"when(sf.createSocket(eq(""stackoverflow.com""), eq(8080)).getPort()).thenReturn(c);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,176,"assertEquals(b, sf.createSocket(""google.com"", 80).getPort());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,177,"assertEquals(c, sf.createSocket(""stackoverflow.com"", 8080).getPort());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,178,"assertEquals(a, sf.createSocket(""stackoverflow.com"", 80).getPort());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,181,"Person person = mock(Person.class, RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,183,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,184,public void shouldStubbingBasicallyWorkFine() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,185,//given
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,186,"given(person.getAddress().getStreet().getName()).willReturn(""Norymberska"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,188,//when
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,189,String street = person.getAddress().getStreet().getName();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,191,//then
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,192,"assertEquals(""Norymberska"", street);"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,195,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,196,public void shouldVerificationBasicallyWorkFine() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,197,//given
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,198,person.getAddress().getStreet().getName();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,200,//then
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,201,verify(person.getAddress().getStreet()).getName();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,204,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,205,public void shouldFailGracefullyWhenClassIsFinal() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,206,//when
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,207,FinalClass value = new FinalClass();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,208,given(person.getFinalClass()).willReturn(value);
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,210,//then
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,211,"assertEquals(value, person.getFinalClass());"
