is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/exceptions/Printable.java,src/org/mockito/exceptions/Printable.java,1,package org.mockito.exceptions;
True,src/org/mockito/exceptions/Printable.java,src/org/mockito/exceptions/Printable.java,3,public interface Printable {
True,src/org/mockito/exceptions/Printable.java,src/org/mockito/exceptions/Printable.java,5,String toString();
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,106,ctual
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,106,actual.toString()
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,115,anted
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,115,wanted.toString()
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,135,ublic void wantedButNotInvoked(Object wanted) {
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,135,public void wantedButNotInvoked(Printable wanted) {
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,144,"ublic void wantedButNotInvokedInOrder(Object wanted, Object previous, HasStackTrace previousStackTrace) {"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,144,"public void wantedButNotInvokedInOrder(Printable wanted, Object previous, HasStackTrace previousStackTrace) {"
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,11,import org.mockito.exceptions.Printable;
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,14,ublic class InvocationMatcher {
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,15,public class InvocationMatcher implements Printable {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,23,ist<Invocation> allChunks = new LinkedList<Invocation>();
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,24,/TODO use filter
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,25,or (Invocation invocation : unverified) {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,26,f (wanted.matches(invocation)) {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,27,llChunks.add(invocation);
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,30,eturn allChunks;
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,23,"return ListUtil.filter(unverified, new RemoveNotMatching(wanted));"
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,33,"ublic List<Invocation> findValidMatchingChunk(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,26,"public List<Invocation> findMatchingChunk(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,28,"List<Invocation> firstChunk = getFirstMatchingChunk(wanted, unverified);"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,30,if (mode.atLeastOnceMode() || !mode.matchesActualCount(firstChunk.size())) {
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,31,"return this.findAllMatchingUnverifiedChunks(invocations, wanted);"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,32,} else {
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,33,return firstChunk;
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,37,"private List<Invocation> getFirstMatchingChunk(InvocationMatcher wanted, List<Invocation> unverified) {"
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,44,f (mode.atLeastOnceMode() || !mode.matchesActualCount(firstChunk.size())) {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,45,"eturn this.findAllMatchingUnverifiedChunks(invocations, wanted);"
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,46, else {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,47,eturn firstChunk;
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,46,return firstChunk;
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,89,"public Invocation findPreviousInOrder(List<Invocation> invocations, InvocationMatcher wanted) {"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,90,"LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());"
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,92,if (verifiedOnly.isEmpty()) {
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,93,return null;
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,94,} else {
True,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,95,return verifiedOnly.getLast();
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,121,"ublic Invocation findPreviousInOrder(List<Invocation> invocations, InvocationMatcher wanted) {"
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,122,"inkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());"
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,124,f (verifiedOnly.isEmpty()) {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,125,eturn null;
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,126, else {
False,src/org/mockito/internal/invocation/InvocationsFinder.java,src/org/mockito/internal/invocation/InvocationsFinder.java,127,eturn verifiedOnly.getLast();
False,src/org/mockito/internal/verification/MissingInvocationVerifier.java,src/org/mockito/internal/verification/MissingInvocationVerifier.java,48,eporter.wantedButNotInvoked(wanted.toString());
True,src/org/mockito/internal/verification/MissingInvocationVerifier.java,src/org/mockito/internal/verification/MissingInvocationVerifier.java,48,reporter.wantedButNotInvoked(wanted);
False,src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java,src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java,35,"ist<Invocation> chunk = finder.findValidMatchingChunk(invocations, wanted, mode);"
True,src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java,src/org/mockito/internal/verification/NumberOfInvocationsInOrderVerifier.java,35,"List<Invocation> chunk = finder.findMatchingChunk(invocations, wanted, mode);"
False,test/org/mockito/internal/verification/InvocationsFinderStub.java,test/org/mockito/internal/verification/InvocationsFinderStub.java,33,"ublic List<Invocation> findValidMatchingChunk(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {"
True,test/org/mockito/internal/verification/InvocationsFinderStub.java,test/org/mockito/internal/verification/InvocationsFinderStub.java,33,"public List<Invocation> findMatchingChunk(List<Invocation> invocations, InvocationMatcher wanted, VerificationModeImpl mode) {"
True,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,16,import org.mockito.exceptions.Printable;
False,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,75,rivate Object wanted;
True,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,76,private Printable wanted;
False,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,79,"Override public void wantedButNotInvokedInOrder(Object wanted, Object previous, HasStackTrace previousStackTrace) {"
True,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,80,"@Override public void wantedButNotInvokedInOrder(Printable wanted, Object previous, HasStackTrace previousStackTrace) {"
False,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,85,Override public void wantedButNotInvoked(Object wanted) {
True,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationInOrderVerifierTest.java,86,@Override public void wantedButNotInvoked(Printable wanted) {
True,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,16,import org.mockito.exceptions.Printable;
False,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,77,"ssertEquals(wanted.toString(), reporterStub.wanted);"
True,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,78,"assertEquals(wanted, reporterStub.wanted);"
False,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,97,Override public void wantedButNotInvoked(Object wanted) {
True,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,test/org/mockito/internal/verification/MissingInvocationVerifierTest.java,98,@Override public void wantedButNotInvoked(Printable wanted) {
False,test/org/mockitousage/PointingStackTraceToActualInvocationChunkTest.java,test/org/mockitousage/PointingStackTraceToActualInvocationChunkTest.java,19,/TODO pmd rule so that all that starts with should have @Test annotation (or all XTest have some annotations on public methods)
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,17,mport org.mockito.exceptions.verification.VerifcationInOrderFailed;
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,74,ry {
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,75,"nOrder.verify(sub).say(""Hello"");"
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,76,ail();
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,77, catch (VerifcationInOrderFailed e) {
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,78,"ssertThat(e, messageContains(""Sub.say(class java.lang.String)""));"
False,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,79,"ssertThat(e, causeMessageContains(""Sub.say(class java.lang.Object)""));"
True,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockitousage/binding/IncorectBindingPuzzleFixedTest.java,73,"inOrder.verify(sub).say(""Hello"");"
