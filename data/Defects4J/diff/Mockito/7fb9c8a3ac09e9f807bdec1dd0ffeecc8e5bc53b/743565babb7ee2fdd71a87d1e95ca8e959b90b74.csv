is_addition,old_file_path,new_file_path,line_num,content
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,1,package org.mockito.release.comparison;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,3,import org.gradle.internal.UncheckedException;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,4,import org.mockito.release.util.InputOutput;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,6,import java.io.File;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,7,import java.io.FileInputStream;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,8,import java.io.IOException;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,9,import java.io.InputStream;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,10,import java.security.MessageDigest;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,11,import java.security.NoSuchAlgorithmException;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,13,class FileHasher {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,15,byte[] hash(File file) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,16,FileInputStream is = null;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,17,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,18,is = new FileInputStream(file);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,19,return hash(is);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,20,} catch (Exception e) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,21,"throw new RuntimeException(""Problems creating hash for file: "" + file);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,22,} finally {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,23,InputOutput.closeStream(is);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,27,private static byte[] hash(InputStream instr) throws IOException {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,28,"MessageDigest messageDigest = createMessageDigest(""MD5"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,29,byte[] buffer = new byte[4096];
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,30,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,31,while (true) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,32,int nread = instr.read(buffer);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,33,if (nread < 0) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,34,break;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,36,"messageDigest.update(buffer, 0, nread);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,38,} finally {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,39,instr.close();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,41,return messageDigest.digest();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,44,private static MessageDigest createMessageDigest(String algorithm) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,45,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,46,return MessageDigest.getInstance(algorithm);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,47,} catch (NoSuchAlgorithmException e) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,buildSrc/src/main/groovy/org/mockito/release/comparison/FileHasher.java,48,throw UncheckedException.throwAsUncheckedException(e);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,6,import java.util.Arrays;
False,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,25,eturn left.length() == right.length();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,27,FileHasher hasher = new FileHasher();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,28,byte[] leftHash = hasher.hash(left);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,29,byte[] rightHash = hasher.hash(right);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/SourceJarComparator.java,30,"return Arrays.equals(leftHash, rightHash);"
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,1,package org.mockito.release.util;
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,3,import java.io.Closeable;
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,4,import java.io.IOException;
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,7,* Utility for input/output
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,9,public class InputOutput {
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,12,"* Closes input, does nothing when input is null"
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,14,public static void closeStream(Closeable closable) {
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,15,if (closable != null) {
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,16,try {
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,17,closable.close();
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,18,} catch (IOException e) {
True,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,buildSrc/src/main/groovy/org/mockito/release/util/InputOutput.java,19,"throw new RuntimeException(""Problems closing stream."", e);"
