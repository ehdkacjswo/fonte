is_addition,old_file_path,new_file_path,line_num,content
False,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,28,"ublic String getNotes(String fromRevision, String toRevision) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/GitNotesBuilder.java,28,"public String buildNotes(String fromRevision, String toRevision) {"
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,12,lass Notes {
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,12,public class Notes {
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,20,"otesBuilder gitHubNotesBuilder(Project project, String authTokenEnvVar) {"
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,20,"public static NotesBuilder gitHubNotesBuilder(Project project, String authTokenEnvVar) {"
False,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,27,reviousVersion previousVersion(File releaseNotesFile) {
True,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,buildSrc/src/main/groovy/org/mockito/release/notes/Notes.java,27,public static PreviousVersion previousVersion(File releaseNotesFile) {
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,6,/     * Updates release notes in specified file. The 'from' revision is extracted from the release notes file.
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,7,/     * The 'to' revision needs to be supplied.
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,9,/     * @param notesFile the file to update. Must contain the current version.
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,10,/     * @param toRevision valid git revision (can be tag name or HEAD)
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,12,"/    void updateNotes(File notesFile, String toRevision);"
False,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,20,"tring getNotes(String fromRevision, String toRevision);"
True,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,buildSrc/src/main/groovy/org/mockito/release/notes/NotesBuilder.java,11,"String buildNotes(String fromRevision, String toRevision);"
