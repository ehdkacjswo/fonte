is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,12,import org.mockito.internal.progress.DeprecatedOngoingStubbing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,14,import org.mockito.internal.progress.NewOngoingStubbing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,17,mport org.mockito.internal.stubbing.Returns;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,20,import org.mockito.internal.stubbing.Returns;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,105, fixture setup but test methods can override it. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,107,* fixture setup but the test methods can override it. </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,107," <li> Once stubbed, mocked method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,109,"* <li> Once stubbed, the method will always return stubbed value regardless"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,504, Stubs with return value or exception. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,506,* <b>Deprecated</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,507,* TODO regexp
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,507,   stub(mock.someMethod()).toReturn(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,509,"   //you can use flexible argument matchers, e.g:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,510,   stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,512,   //setting exception to be thrown:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,513,"   stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,515,   //you can stub with different behavior for consecutive calls.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,516,"   //Last stubbing (e.g: toReturn(""foo"")) determines the behavior for further consecutive calls."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,517,"   stub(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,518,    .toThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,519,"    .toReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,510,*   //Instead of:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,511,*   stub(mock.count()).toReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,513,*   //Please do:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,514,*   when(mock.count()).thenReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,515,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,517,* Please use {@link Mockito#when}. We received many signals and
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,518,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,519,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,521,* @param methodCall
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,522,*            method call
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,523,* @return DeprecatedOngoingStubbing object to set stubbed value/exception
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,525,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,526,@Deprecated
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,527,public static <T> DeprecatedOngoingStubbing<T> stub(T methodCall) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,528,MOCKING_PROGRESS.stubbingStarted();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,529,return (DeprecatedOngoingStubbing) stub();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,533,* Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,534,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,535,"* Simply put: ""<b>When</b> the x method is called <b>then</b> return y"". E.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,536,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,537,* If you're familiar with Mockito then know that when() is a successor of {@link Mockito#stub()}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,539,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,540,* when(mock.someMethod()).thenReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,542,"* //you can use flexible argument matchers, e.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,543,* when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,545,* //setting exception to be thrown:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,546,"* when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,548,* //you can set different behavior for consecutive method calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,549,"* //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,550,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,551,*  .thenThrow(new RuntimeException())
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,552,"*  .thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,526, setup but test methods can override it.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,559,* setup but the test methods can override it.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,528," Once stubbed, mocked method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,561,"* Once stubbed, the method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,575,* @param <T>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,544,            method call
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,545, @return OngoingStubbing object to set stubbed value/exception
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,577,* @return
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,547,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,548,ublic static <T> OngoingStubbing<T> stub(T methodCall) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,579,public static <T> NewOngoingStubbing<T> when(T methodCall) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,581,return (NewOngoingStubbing) stub();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,551,ngoingStubbing stubbable = MOCKING_PROGRESS.pullOngoingStubbing();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,552,f (stubbable == null) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,584,private static OngoingStubbing stub() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,585,OngoingStubbing stubbing = MOCKING_PROGRESS.pullOngoingStubbing();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,586,if (stubbing == null) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,555,eturn stubbable;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,589,return stubbing;
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,28,import org.mockito.exceptions.verification.junit.JUnitTool;
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,212,hrow new ArgumentsAreDifferent(join(
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,213,"Argument(s) are different! Wanted:"","
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,214,anted.toString()
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,215,", cause);"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,213,if (JUnitTool.hasJUnit()) {
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,214,throw JUnitTool.createArgumentsAreDifferentException(
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,215,"join(""Argument(s) are different! Wanted:"", wanted.toString()),"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,216,"cause,"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,217,"wanted.toString(),"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,218,actual.toString());
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,219,} else {
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,220,throw new ArgumentsAreDifferent(join(
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,221,"""Argument(s) are different! Wanted:"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,222,wanted.toString()
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,223,"), cause);"
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,5,ackage org.mockito.exceptions.verification;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,8,ublic class ArgumentsAreDifferentEclipseReady /*extends ComparisonFailure implements HasStackTrace*/ {
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,10,/coming in next release....
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,12,/    private static final long serialVersionUID = 1L;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,13,/    private final String message;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,14,/    private StackTraceElement[] unfilteredStackTrace;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,16,"/    public ArgumentsAreDifferentEclipseReady(String message, Throwable cause, String wanted, String actual) {"
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,17,"/        super(message, wanted, actual);"
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,18,/        this.message = message;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,20,/        unfilteredStackTrace = getStackTrace();
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,21,/        StackTraceFilter filter = new StackTraceFilter();
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,22,/        filter.filterStackTrace(this);
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,24,/        this.initCause(cause);
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,25,/        CommonStackTraceRemover remover = new CommonStackTraceRemover();
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,26,"/        remover.remove(this, Arrays.asList(cause.getStackTrace()));"
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,29,/    @Override
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,30,/    public String getMessage() {
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,31,/        return message;
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,34,/    public StackTraceElement[] getUnfilteredStackTrace() {
False,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,src/org/mockito/exceptions/verification/ArgumentsAreDifferentEclipseReady.java,35,/        return unfilteredStackTrace;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,5,package org.mockito.exceptions.verification.junit;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,7,import java.util.Arrays;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,9,import junit.framework.ComparisonFailure;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,10,import org.mockito.exceptions.base.CommonStackTraceRemover;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,11,import org.mockito.exceptions.base.HasStackTrace;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,12,import org.mockito.exceptions.base.StackTraceFilter;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,15,public class ArgumentsAreDifferentJUnitStyle extends ComparisonFailure implements HasStackTrace {
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,17,private static final long serialVersionUID = 1L;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,18,private final String message;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,19,private StackTraceElement[] unfilteredStackTrace;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,21,"public ArgumentsAreDifferentJUnitStyle(String message, Throwable cause, String wanted, String actual) {"
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,22,"super(message, wanted, actual);"
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,23,this.message = message;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,25,unfilteredStackTrace = getStackTrace();
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,26,StackTraceFilter filter = new StackTraceFilter();
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,27,filter.filterStackTrace(this);
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,29,this.initCause(cause);
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,30,CommonStackTraceRemover remover = new CommonStackTraceRemover();
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,31,"remover.remove(this, Arrays.asList(cause.getStackTrace()));"
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,34,@Override
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,35,public String getMessage() {
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,36,return message;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,39,public StackTraceElement[] getUnfilteredStackTrace() {
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferentJUnitStyle.java,40,return unfilteredStackTrace;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,1,package org.mockito.exceptions.verification.junit;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,3,import org.mockito.exceptions.verification.ArgumentsAreDifferent;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,5,public class JUnitTool {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,7,private static boolean hasJUnit;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,9,static {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,10,try {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,11,"Class.forName(""junit.framework.ComparisonFailure"");"
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,12,hasJUnit = true;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,13,} catch (Throwable t) {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,14,hasJUnit = false;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,18,public static boolean hasJUnit() {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,19,return hasJUnit;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,22,"public static AssertionError createArgumentsAreDifferentException(String message, Throwable cause, String wanted, String actual)  {"
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,23,//TODO commented out for now...
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,24,//        try {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,25,"//            Class<?> clazz = Class.forName(""org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle"");"
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,26,"//            AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, cause, wanted, actual);"
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,27,//            return throwable;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,28,//        } catch (Throwable t) {
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,29,//throw the default exception in case of problems
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,30,"return new ArgumentsAreDifferent(message, cause);"
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,19,import org.mockito.internal.progress.DeprecatedOngoingStubbing;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,20,mport org.mockito.internal.progress.OngoingStubbing;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,21,import org.mockito.internal.progress.NewOngoingStubbing;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,85,ockingProgress.reportOngoingStubbing(new OngoingStubbingImpl());
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,86,mockingProgress.reportOngoingStubbing(new DeprecatedOngoingStubbingImpl());
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,155,rivate class OngoingStubbingImpl implements OngoingStubbing<T> {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,156,ublic OngoingStubbing<T> toReturn(Object value) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,157,erifyingRecorder.eraseLastInvocation();
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,158,ockitoStubber.addAnswer(new Returns(value));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,159,eturn new ConsecutiveStubbing();
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,155,//@Deprecated - remove when stub...toReturn disappears
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,156,private class DeprecatedOngoingStubbingImpl implements DeprecatedOngoingStubbing<T> {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,157,public DeprecatedOngoingStubbing<T> toReturn(Object value) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,158,return toAnswer(new Returns(value));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,162,ublic OngoingStubbing<T> toThrow(Throwable throwable) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,163,erifyingRecorder.eraseLastInvocation();
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,164,ockitoStubber.addAnswer(new ThrowsException(throwable));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,165,eturn new ConsecutiveStubbing();
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,161,public DeprecatedOngoingStubbing<T> toThrow(Throwable throwable) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,162,return toAnswer(new ThrowsException(throwable));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,168,ublic OngoingStubbing<T> toAnswer(Answer<?> answer) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,165,public DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,171,eturn new ConsecutiveStubbing();
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,168,return new DeprecatedConsecutiveStubbing();
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,175,rivate class ConsecutiveStubbing implements OngoingStubbing<T> {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,176,ublic OngoingStubbing<T> toReturn(Object value) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,177,ockitoStubber.addConsecutiveAnswer(new Returns(value));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,178,eturn this;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,172,//@Deprecated - remove when stub...toReturn disappears
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,173,private class DeprecatedConsecutiveStubbing implements DeprecatedOngoingStubbing<T> {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,174,public DeprecatedOngoingStubbing<T> toReturn(Object value) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,175,return toAnswer(new Returns(value));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,181,ublic OngoingStubbing<T> toThrow(Throwable throwable) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,182,ockitoStubber.addConsecutiveAnswer(new ThrowsException(throwable));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,183,eturn this;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,178,public DeprecatedOngoingStubbing<T> toThrow(Throwable throwable) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,179,return toAnswer(new ThrowsException(throwable));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,186,ublic OngoingStubbing<T> toAnswer(Answer<?> answer) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,182,public DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,188,private class OngoingStubbingImpl implements NewOngoingStubbing<T> {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,189,public NewOngoingStubbing<T> thenReturn(Object value) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,190,return thenAnswer(new Returns(value));
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,193,public NewOngoingStubbing<T> thenThrow(Throwable throwable) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,194,return thenAnswer(new ThrowsException(throwable));
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,197,public NewOngoingStubbing<T> thenAnswer(Answer<?> answer) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,198,verifyingRecorder.eraseLastInvocation();
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,199,mockitoStubber.addAnswer(answer);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,200,return new ConsecutiveStubbing();
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,204,private class ConsecutiveStubbing implements NewOngoingStubbing<T> {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,205,public NewOngoingStubbing<T> thenReturn(Object value) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,206,return thenAnswer(new Returns(value));
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,209,public NewOngoingStubbing<T> thenThrow(Throwable throwable) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,210,return thenAnswer(new ThrowsException(throwable));
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,213,public NewOngoingStubbing<T> thenAnswer(Answer<?> answer) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,214,mockitoStubber.addConsecutiveAnswer(answer);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,215,return this;
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,5,package org.mockito.internal.progress;
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,7,import org.mockito.Mockito;
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,8,import org.mockito.stubbing.Answer;
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,11,* Stubs a method call with return value or an exception. E.g:
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,13,* <pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,14,* stub(mock.someMethod()).toReturn(10);
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,16,"* //you can use flexible argument matchers, e.g:"
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,17,* stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,19,* //setting exception to be thrown:
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,20,"* stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());"
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,22,* //you can stub with different behavior for consecutive method calls.
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,23,"* //Last stubbing (e.g: toReturn(""foo"")) determines the behavior for further consecutive calls."
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,24,"* stub(mock.someMethod(""some arg""))"
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,25,*  .toThrow(new RuntimeException())
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,26,"*  .toReturn(""foo"");"
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,28,* </pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,30,* See examples in javadoc for {@link Mockito#stub}
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,32,public interface DeprecatedOngoingStubbing<T> extends OngoingStubbing {
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,35,* Set a return value for the stubbed method. E.g:
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,36,* <pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,37,* stub(mock.someMethod()).toReturn(10);
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,38,* </pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,40,* See examples in javadoc for {@link Mockito#stub}
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,42,* @param value return value
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,44,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,46,DeprecatedOngoingStubbing<T> toReturn(T value);
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,49,* Set a Throwable to be thrown when the stubbed method is called. E.g:
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,50,* <pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,51,* stub(mock.someMethod()).toThrow(new RuntimeException());
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,52,* </pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,54,* If throwable is a checked exception then it has to
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,55,* match one of the checked exceptions of method signature.
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,57,* See examples in javadoc for {@link Mockito#stub}
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,59,* @param throwable to be thrown on method invocation
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,61,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,63,DeprecatedOngoingStubbing<T> toThrow(Throwable throwable);
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,66,* Set a generic Answer for the stubbed method. E.g:
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,67,* <pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,68,* stub(mock.someMethod(10)).toAnswer(new Answer&lt;Integer&gt;() {
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,69,*     public Integer answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,70,*         return (Integer) invocation.getArguments()[0];
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,73,* </pre>
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,75,* @param answer the custom answer to execute.
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,77,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,src/org/mockito/internal/progress/DeprecatedOngoingStubbing.java,79,DeprecatedOngoingStubbing<T> toAnswer(Answer<?> answer);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,5,package org.mockito.internal.progress;
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,7,import org.mockito.Mockito;
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,8,import org.mockito.stubbing.Answer;
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,11,"* Simply put: ""<b>When</b> the x method is called <b>then</b> return y"". E.g:"
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,13,* <pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,14,* when(mock.someMethod()).thenReturn(10);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,16,"* //you can use flexible argument matchers, e.g:"
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,17,* when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,19,* //setting exception to be thrown:
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,20,"* when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());"
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,22,* //you can set different behavior for consecutive method calls.
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,23,"* //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls."
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,24,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,25,*  .thenThrow(new RuntimeException())
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,26,"*  .thenReturn(""foo"");"
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,28,* </pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,30,* See examples in javadoc for {@link Mockito#when}
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,32,public interface NewOngoingStubbing<T> {
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,35,* Sets a return value to be returned when the method is called. E.g:
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,36,* <pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,37,* when(mock.someMethod()).thenReturn(10);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,38,* </pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,40,* See examples in javadoc for {@link Mockito#when}
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,42,* @param value return value
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,44,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,46,NewOngoingStubbing<T> thenReturn(T value);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,49,* Sets a Throwable to be thrown when the method is called. E.g:
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,50,* <pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,51,* when(mock.someMethod()).thenThrow(new RuntimeException());
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,52,* </pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,54,* If throwable is a checked exception then it has to
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,55,* match one of the checked exceptions of method signature.
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,57,* See examples in javadoc for {@link Mockito#when}
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,59,* @param throwable to be thrown on method invocation
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,61,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,63,NewOngoingStubbing<T> thenThrow(Throwable throwable);
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,66,* Sets a generic Answer for the method. E.g:
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,67,* <pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,68,* when(mock.someMethod(10)).toAnswer(new Answer&lt;Integer&gt;() {
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,69,*     public Integer answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,70,*         return (Integer) invocation.getArguments()[0];
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,73,* </pre>
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,75,* @param answer the custom answer to execute.
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,77,* @return ongoingStubbing object that allows stubbing consecutive calls
True,src/org/mockito/internal/progress/NewOngoingStubbing.java,src/org/mockito/internal/progress/NewOngoingStubbing.java,79,NewOngoingStubbing<T> thenAnswer(Answer<?> answer);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,7,mport org.mockito.Mockito;
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,8,mport org.mockito.stubbing.Answer;
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,11, Stubs a method call with return value or an exception. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,13, <pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,14, stub(mock.someMethod()).toReturn(10);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,16," //you can use flexible argument matchers, e.g:"
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,17, stub(mock.someMethod(<b>anyString()</b>)).toReturn(10);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,19, //setting exception to be thrown:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,20," stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());"
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,22, //you can stub with different behavior for consecutive method calls.
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,23," //Last stubbing (e.g: toReturn(""foo"")) determines the behavior for further consecutive calls."
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,24," stub(mock.someMethod(""some arg""))"
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,25,  .toThrow(new RuntimeException())
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,26,"  .toReturn(""foo"");"
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,28, </pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,30, See examples in javadoc for {@link Mockito#stub}
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,9,* Marking interface to be removed when DeprecatedOngoingStubbing gets deleted
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,32,ublic interface OngoingStubbing<T> {
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,35, Set a return value for the stubbed method. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,36, <pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,37, stub(mock.someMethod()).toReturn(10);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,38, </pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,40, See examples in javadoc for {@link Mockito#stub}
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,42, @param value return value
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,44, @return ongoingStubbing object that allows stubbing consecutive calls
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,46,ngoingStubbing<T> toReturn(T value);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,49, Set a Throwable to be thrown when the stubbed method is called. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,50, <pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,51, stub(mock.someMethod()).toThrow(new RuntimeException());
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,52, </pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,54, If throwable is a checked exception then it has to
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,55, match one of the checked exceptions of method signature.
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,57, See examples in javadoc for {@link Mockito#stub}
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,59, @param throwable to be thrown on method invocation
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,61, @return ongoingStubbing object that allows stubbing consecutive calls
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,63,ngoingStubbing<T> toThrow(Throwable throwable);
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,66, Set a generic Answer for the stubbed method. E.g:
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,67, <pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,68, stub(mock.someMethod(10)).toAnswer(new Answer&lt;Integer&gt;() {
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,69,     public Integer answer(InvocationOnMock invocation) throws Throwable {
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,70,         return (Integer) invocation.getArguments()[0];
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,73, </pre>
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,75, @param answer the custom answer to execute.
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,77, @return ongoingStubbing object that allows stubbing consecutive calls
False,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,79,ngoingStubbing<T> toAnswer(Answer<?> answer);
True,src/org/mockito/internal/progress/OngoingStubbing.java,src/org/mockito/internal/progress/OngoingStubbing.java,12,public interface OngoingStubbing {}
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,14,mport org.mockito.exceptions.verification.ArgumentsAreDifferent;
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,130, catch (ArgumentsAreDifferent e) {
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,129,} catch (AssertionError e) {
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,156, catch (ArgumentsAreDifferent e) {
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,155,} catch (AssertionError e) {
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,16,import org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,21,import org.mockito.exceptions.verification.junit.ArgumentsAreDifferentJUnitStyle;
