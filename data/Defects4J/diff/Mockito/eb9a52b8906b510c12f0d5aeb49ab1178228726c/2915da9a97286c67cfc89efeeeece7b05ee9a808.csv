is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,16,lass clazz = from.getClass();
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,17,lass mockSuperClass = mock.getClass().getSuperclass();
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,18,ssert mockSuperClass == clazz
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,19," ""Classes must have the same type: class of the object from: "" + clazz + "", mock super class: "" + mockSuperClass;"
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,21,hile (clazz != Object.class) {
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,22,"opyValues(from, mock, clazz);"
False,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,23,lazz = clazz.getSuperclass();
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,16,"copy(from, mock, from.getClass(), mock.getClass().getSuperclass());"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,19,"public <T> void copyToRealObject(T from, T to) {"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,20,"copy(from, to, from.getClass(), to.getClass());"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,23,"private <T> void copy(T from, T to, Class fromClazz, Class toClass) {"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,24,assert toClass == fromClazz
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,25,": ""Classes must have the same type: class of the object from: "" + fromClazz + "", mock super class: "" + toClass;"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,27,while (fromClazz != Object.class) {
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,28,"copyValues(from, to, fromClazz);"
True,src/org/mockito/internal/util/reflection/LenientCopyTool.java,src/org/mockito/internal/util/reflection/LenientCopyTool.java,29,fromClazz = fromClazz.getSuperclass();
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,1,package org.mockito.stubbing;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,3,import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,4,import org.mockito.internal.util.reflection.LenientCopyTool;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,5,import org.mockito.invocation.InvocationOnMock;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,6,import org.objenesis.ObjenesisHelper;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,8,public class ClonesArguments implements Answer<Object> {
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,9,public Object answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,10,Object[] arguments = invocation.getArguments();
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,11,for (int i = 0; i < arguments.length; i++) {
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,12,Object from = arguments[i];
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,13,Object newInstance = ObjenesisHelper.newInstance(from.getClass());
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,14,"new LenientCopyTool().copyToRealObject(from, newInstance);"
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,15,arguments[i] = newInstance;
True,src/org/mockito/stubbing/ClonesArguments.java,src/org/mockito/stubbing/ClonesArguments.java,17,return new ReturnsEmptyValues().answer(invocation);
False,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,27,"SuppressWarnings(""unused"")"
False,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,28,/ required because static fields needs to be excluded from copying
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,27,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,160,@Test
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,161,public void shouldBeAbleToCopyFromRealObjectToRealObject() throws Exception {
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,163,// given
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,164,"from.defaultField = ""defaultField"";"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,165,from.instancePublicField = new SomeOtherObject();
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,166,from.privateField = 1;
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,167,from.privateTransientField = 2;
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,168,"from.protectedField = ""protectedField"";"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,169,"from.protectedInherited = ""protectedInherited"";"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,170,to = new SomeObject(0);
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,172,// when
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,173,"tool.copyToRealObject(from, to);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,175,// then
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,176,"assertEquals(from.defaultField, to.defaultField);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,177,"assertEquals(from.instancePublicField, to.instancePublicField);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,178,"assertEquals(from.privateField, to.privateField);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,179,"assertEquals(from.privateTransientField, to.privateTransientField);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,180,"assertEquals(from.protectedField, to.protectedField);"
True,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,test/org/mockito/internal/util/reflection/LenientCopyToolTest.java,181,"assertEquals(from.protectedInherited, to.protectedInherited);"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,5,package org.mockitousage.stubbing;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,9,import java.util.List;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,11,import org.junit.Test;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,12,import org.mockito.stubbing.ClonesArguments;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,13,import org.mockitoutil.TestBase;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,15,public class CloningParameterTest extends TestBase {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,17,@Test
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,18,public void shouldVerifyEvenIfArgumentsWereMutated() throws Exception {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,20,// given
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,21,"EmailSender emailSender = mock(EmailSender.class, new ClonesArguments());"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,23,// when
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,24,businessLogic(emailSender);
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,26,// then
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,27,"verify(emailSender).sendEmail(1, new Person(""Wes""));"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,30,private void businessLogic(EmailSender emailSender) {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,31,"Person person = new Person(""Wes"");"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,32,"emailSender.sendEmail(1, person);"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,33,person.emailSent();
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,36,@Test
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,37,public void shouldReturnDefaultValueWithCloningAnswer() throws Exception {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,39,// given
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,40,"EmailSender emailSender = mock(EmailSender.class, new ClonesArguments());"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,41,"when(emailSender.getAllEmails(new Person(""Wes""))).thenAnswer(new ClonesArguments());"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,43,// when
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,44,"List<?> emails = emailSender.getAllEmails(new Person(""Wes""));"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,46,// then
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,47,assertNotNull(emails);
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,50,public class Person {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,52,private final String name;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,53,private boolean emailSent;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,55,public Person(String name) {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,56,this.name = name;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,59,public void emailSent() {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,60,emailSent = true;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,63,@Override
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,64,public int hashCode() {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,65,final int prime = 31;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,66,int result = 1;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,67,result = prime * result + getOuterType().hashCode();
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,68,result = prime * result + (emailSent ? 1231 : 1237);
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,69,result = prime * result + ((name == null) ? 0 : name.hashCode());
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,70,return result;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,73,@Override
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,74,public boolean equals(Object obj) {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,75,if (this == obj)
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,76,return true;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,77,if (obj == null)
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,78,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,79,if (getClass() != obj.getClass())
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,80,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,81,Person other = (Person) obj;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,82,if (!getOuterType().equals(other.getOuterType()))
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,83,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,84,if (emailSent != other.emailSent)
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,85,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,86,if (name == null) {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,87,if (other.name != null)
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,88,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,89,} else if (!name.equals(other.name))
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,90,return false;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,91,return true;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,94,private CloningParameterTest getOuterType() {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,95,return CloningParameterTest.this;
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,100,public interface EmailSender {
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,102,"void sendEmail(int i, Person person);"
True,test/org/mockitousage/stubbing/CloningParameterTest.java,test/org/mockitousage/stubbing/CloningParameterTest.java,104,List<?> getAllEmails(Person person);
