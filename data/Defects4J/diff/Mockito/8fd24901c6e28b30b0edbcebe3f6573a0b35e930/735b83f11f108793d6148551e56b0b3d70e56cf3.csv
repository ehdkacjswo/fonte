is_addition,old_file_path,new_file_path,line_num,content
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,12,rivate Closure<File> left;
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,13,rivate Closure<File> right;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,12,private Closure<File> file1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,13,private Closure<File> file2;
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,15,"inaryComparator setPair(Closure<File> left, Closure<File> right) {"
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,16,"otNull(left, ""source jar file to compare"", right, ""source jar file to compare"");"
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,17,his.left = left;
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,18,his.right = right;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,15,"BinaryComparator setPair(Closure<File> file1, Closure<File> file2) {"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,16,"notNull(file1, ""source jar file to compare"", file2, ""source jar file to compare"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,17,this.file1 = file1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,18,this.file2 = file2;
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,22,oolean areEqual() {
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,23,ile left = this.left.call();
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,24,ile right = this.right.call();
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,25,"otNull(left, ""source jar file to compare"", right, ""source jar file to compare"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,22,Result compareFiles() {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,23,final File file1 = this.file1.call();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,24,final File file2 = this.file2.call();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,25,"notNull(file1, ""source jar file to compare"", file2, ""source jar file to compare"");"
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,28,yte[] leftHash = hasher.hash(left);
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,29,yte[] rightHash = hasher.hash(right);
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,30,"eturn Arrays.equals(leftHash, rightHash);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,28,final byte[] hash1 = hasher.hash(file1);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,29,final byte[] hash2 = hasher.hash(file2);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,31,"final boolean equals = Arrays.equals(hash1, hash2);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,33,return new Result() {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,34,public boolean areEqual() { return equals; }
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,35,public File getFile1() { return file1; }
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,36,public File getFile2() { return file2; }
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,40,static interface Result {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,41,boolean areEqual();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,42,File getFile1();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,43,File getFile2();
False,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,34,oolean jars = binaryComparator.areEqual();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,34,BinaryComparator.Result result = binaryComparator.compareFiles();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,35,"getLogger().info(""{} - compared binaries: '{}' and '{}'"", getPath(), result.getFile1(), result.getFile2());"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,buildSrc/src/main/groovy/org/mockito/release/comparison/PublicationsComparatorTask.java,36,boolean jars = result.areEqual();
