is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,60,"      <a href=""#22"">22. (**New**) Verification with timeout (Since 1.8.5) </a><br/>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,60,"*      <a href=""#22"">22. (New) Verification with timeout (Since 1.8.5) </a><br/>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,61,"*      <a href=""#23"">23. (**New**) Automatic instantiation of &#064;Spy, &#064;InjectMocks fields (Since 1.9)</a><br/>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,671, As for &#064;{@link Mock} annotation you can use the built-in runner: {@link MockitoJUnitRunner}.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,672,* Just like for &#064;{@link Mock} annotation you can use the built-in runner: {@link MockitoJUnitRunner}.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,700," <h3 id=""21"">23. (**New**) Automatic initialisation of &#064;Spy, &#064;InjectMocks fields (Since 1.8.6) </h3>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,701,"* <h3 id=""23"">23. (**New**) Automatic instantiation of &#064;Spy, &#064;InjectMocks fields (Since 1.9)</h3>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,702, Mockito will now try to initialise &#064;{@link Spy} and &#064;{@link InjectMocks} fields if and only if the type has
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,703," a zero-arg argument, even private."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,703,* Mockito will now try to instantiate &#064;{@link Spy} and &#064;{@link InjectMocks} fields if you haven't provided instance at declaration
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,704,* *and* if the type has a zero-arg argument (even private).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,706," This is especially useful if you are testing an object with a Joshua Bloch Builder Pattern (see Effective Java Ed. 2008, &#167;2.Item 2)"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,706,* To take advantage of this feature you need to use {@link MockitoAnnotations#initMocks(Object)} or {@link MockitoJUnitRunner}.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,709, Example :
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,708,* Read more about available {@link MockitoAnnotations}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,712, // The type to test
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,713, public class TooMuchComplicated {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,714,   private List subItems;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,715,   // other collaborators
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,717,   public void someBehaviourToTest() {}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,719,   // no-argument constructor
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,720,   private TooMuchComplicated()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,722,   private TooMuchComplicated(Builder builder) {}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,724,   public static class Builder {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,725,     public Builder withSubItems(Object subItems ...) {}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,726,     // other builder methods
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,727,     public TooMuchComplicated build() { return new TooMuchComplicated(this); }
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,731, // In your test
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,732, &#064;RunWith(MockitoJUnitRunner.class)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,733, public class TooMuchComplicatedTest {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,734,   &#064;Mock List subItems;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,735,   // other mocked collaborators
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,736,   &#064;InjectMocks TooMuchComplicated tested;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,710,* //instead:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,711,* &#064;Spy BeerDrinker drinker = new BeerDrinker();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,712,* //you can write:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,713,* &#064;Spy BeerDrinker drinker;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,738,   // tests
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,715,* //same applies to &#064;InjectMocks annotation:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,716,* &#064;InjectMocks LocalPub;
False,src/org/mockito/runners/MockitoJUnitRunner.java,src/org/mockito/runners/MockitoJUnitRunner.java,23," Compatible with <b>JUnit 4.4</b> and higher, this runner adds following behavior:"
True,src/org/mockito/runners/MockitoJUnitRunner.java,src/org/mockito/runners/MockitoJUnitRunner.java,23,"* Compatible with <b>JUnit 4.4 and higher</b>, this runner adds following behavior:"
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,5,package org.mockitousage.bugs;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,7,import org.junit.Ignore;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,8,import org.junit.Test;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,9,import org.mockito.Mock;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,10,import org.mockito.Mockito;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,11,import org.mockitousage.IMethods;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,12,import org.mockitoutil.TestBase;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,14,import java.util.List;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,15,import java.util.Set;
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,17,//see issue 230
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,18,public class DeepStubGenericTypesIssueTest extends TestBase {
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,20,static interface ListSet extends List<Set> {}
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,22,@Test
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,23,@Ignore
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,24,//TODO
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,25,public void testDeepMockWithClass() {
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,26,"final ListSet mock = Mockito.mock(ListSet.class, Mockito.RETURNS_DEEP_STUBS);"
True,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,test/org/mockitousage/bugs/DeepStubGenericTypesIssueTest.java,27,final Set mock2 = mock.get(0);
