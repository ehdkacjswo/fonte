is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,7,mport static org.mockito.Mockito.*;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,7,import static org.mockito.Mockito.withSettings;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,9,import java.io.IOException;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,12,import org.mockito.Mockito;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,44,rivate transient MockitoCore mockitoCore;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,45,rivate transient ReturnsEmptyValues delegate;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,52,nstantiateMockitoCoreIfNeeded();
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,53,nstantiateDelegateIfNeeded();
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,54,f (!mockitoCore.isTypeMockable(rawType)) {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,55,eturn delegate.returnValueFor(rawType);
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,58,"eturn getMock(invocation, returnTypeGenericMetadata);"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,61,rivate synchronized void instantiateMockitoCoreIfNeeded() {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,62,f (mockitoCore == null) {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,63,ockitoCore = new MockitoCore();
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,50,if (!mockitoCore().isTypeMockable(rawType)) {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,51,return delegate().returnValueFor(rawType);
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,67,rivate synchronized void instantiateDelegateIfNeeded() {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,68,f (delegate == null) {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,69,elegate = new ReturnsEmptyValues();
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,54,"return deepStub(invocation, returnTypeGenericMetadata);"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,73,"rivate Object getMock(InvocationOnMock invocation, GenericMetadataSupport returnTypeGenericMetadata) throws Throwable {"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,57,"private Object deepStub(InvocationOnMock invocation, GenericMetadataSupport returnTypeGenericMetadata) throws Throwable {"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,84,/ deep stub
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,85,"eturn recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,68,// record deep stub answer
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,69,"return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata), container);"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,98,rivate Object createNewDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,99,eturn mockitoCore.mock(
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,82,private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,83,return mockitoCore().mock(
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,106,ockSettings mockSettings =
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,107,eturnTypeGenericMetadata.rawExtraInterfaces().length > 0 ?
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,90,MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,117,eturn new ReturnsDeepStubs() {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,118,Override
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,119,rotected GenericMetadataSupport actualParameterizedType(Object mock) {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,120,eturn returnTypeGenericMetadata;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,100,return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,125,"rivate Object recordDeepStubMock(final Object mock, InvocationContainerImpl container) throws Throwable {"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,127,ontainer.addAnswer(new SerializableAnswer() {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,128,ublic Object answer(InvocationOnMock invocation) throws Throwable {
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,129,eturn mock;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,131,", false);"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,103,"private Object recordDeepStubAnswer(final Object mock, InvocationContainerImpl container) throws Throwable {"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,104,"container.addAnswer(new DeeplyStubbedAnswer(mock), false);"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,136,"bstract class SerializableAnswer implements Answer<Object>, Serializable {"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,114,private static class ReturnsDeepStubsSerializationFallback extends ReturnsDeepStubs implements Serializable {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,115,"@SuppressWarnings(""serial"") // not gonna be serialized"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,116,private final GenericMetadataSupport returnTypeGenericMetadata;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,118,public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata) {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,119,this.returnTypeGenericMetadata = returnTypeGenericMetadata;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,122,@Override
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,123,protected GenericMetadataSupport actualParameterizedType(Object mock) {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,124,return returnTypeGenericMetadata;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,126,private Object writeReplace() throws IOException {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,127,return Mockito.RETURNS_DEEP_STUBS;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,132,"private static class DeeplyStubbedAnswer implements Answer<Object>, Serializable {"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,133,"@SuppressWarnings(""serial"") // serialization will fail with a nice message if mock not serializable"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,134,private Object mock;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,136,DeeplyStubbedAnswer(Object mock) {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,137,this.mock = mock;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,139,@Override
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,140,public Object answer(InvocationOnMock invocation) throws Throwable {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,141,return mock;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,146,private static MockitoCore mockitoCore() {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,147,return LazyHolder.MOCKITO_CORE;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,150,private static ReturnsEmptyValues delegate() {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,151,return LazyHolder.DELEGATE;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,154,private static class LazyHolder {
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,155,private static final MockitoCore MOCKITO_CORE = new MockitoCore();
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,156,private static final ReturnsEmptyValues DELEGATE = new ReturnsEmptyValues();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,8,import java.lang.reflect.Method;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,9,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,10,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,11,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,12,import java.lang.reflect.WildcardType;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,13,import java.util.ArrayList;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,14,import java.util.Arrays;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,15,import java.util.Collections;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,16,import java.util.HashMap;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,17,import java.util.LinkedHashMap;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,18,import java.util.List;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,19,import java.util.Map;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,12,mport java.io.Serializable;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,13,mport java.lang.reflect.*;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,14,mport java.util.*;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,59,ublic abstract class GenericMetadataSupport implements Serializable {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,67,public abstract class GenericMetadataSupport {
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,90,or (TypeVariable typeParameter : typeParameters) {
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,91,"ontextualActualTypeParameters.put(typeParameter, boundsOf(typeParameter));"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,92,"/ logger.log(""For '"" + typeParameter.getGenericDeclaration() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,98,for (TypeVariable typeVariable : typeParameters) {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,99,registerTypeVariableIfNotPresent(typeVariable);
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,103,private void registerTypeVariableIfNotPresent(TypeVariable typeVariable) {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,104,if (!contextualActualTypeParameters.containsKey(typeVariable)) {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,105,"contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));"
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,106,"// logger.log(""For '"" + typeVariable.getGenericDeclaration() + ""' found type variable : { '"" + typeVariable + ""("" + System.identityHashCode(typeVariable) + "")"" + ""' : '"" + boundsOf(typeVariable) + ""' }"");"
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,166,* @return Returns true if metadata knows about extra-interfaces {@link #extraInterfaces()} <strong>if relevant</strong>.
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,168,public boolean hasRawExtraInterfaces() {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,169,return rawExtraInterfaces().length > 0;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,242,rivate Class<?> clazz;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,263,private final Class<?> clazz;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,246,eadActualTypeParametersOnDeclaringClass();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,268,for (Class currentExploredClass = clazz;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,269,currentExploredClass != null && currentExploredClass != Object.class;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,270,currentExploredClass = superClassOf(currentExploredClass)
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,272,readActualTypeParametersOnDeclaringClass(currentExploredClass);
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,276,private Class superClassOf(Class currentExploredClass) {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,277,Type genericSuperclass = currentExploredClass.getGenericSuperclass();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,278,if (genericSuperclass instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,279,Type rawType = ((ParameterizedType) genericSuperclass).getRawType();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,280,return (Class) rawType;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,282,return (Class) genericSuperclass;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,249,rivate void readActualTypeParametersOnDeclaringClass() {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,285,private void readActualTypeParametersOnDeclaringClass(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,276,rivate ParameterizedType parameterizedType;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,312,private final ParameterizedType parameterizedType;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,491,rivate TypeVariable typeVariable;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,527,private final TypeVariable typeVariable;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,534,inal StringBuilder sb = new StringBuilder();
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,535,"b.append(""{firstBound="").append(firstBound());"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,536,"b.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,537,b.append('}');
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,538,eturn sb.toString();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,570,"return ""{firstBound="" + firstBound() + "", interfaceBounds="" + Arrays.deepToString(interfaceBounds()) + '}';"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,554,"ublic static class WildCardBoundedType implements BoundedType, Serializable {"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,555,rivate WildcardType wildcard;
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,586,public static class WildCardBoundedType implements BoundedType {
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,587,private final WildcardType wildcard;
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,595,inal StringBuilder sb = new StringBuilder();
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,596,"b.append(""{firstBound="").append(firstBound());"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,597,"b.append("", interfaceBounds=[]}"");"
False,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,598,eturn sb.toString();
True,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,src/org/mockito/internal/util/reflection/GenericMetadataSupport.java,627,"return ""{firstBound="" + firstBound() + "", interfaceBounds=[]}"";"
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,14,import java.util.ArrayList;
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,16,import java.util.Iterator;
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,45,static class StringList extends ArrayList<String> { }
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,53,assertThat(inferFrom(StringList.class).rawType()).isEqualTo(StringList.class);
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,62,assertThat(inferFrom(StringList.class.getGenericSuperclass()).rawType()).isEqualTo(ArrayList.class);
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,72,assertThat(inferFrom(StringList.class).actualTypeArguments().keySet()).isEmpty();
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,81,assertThat(inferFrom(StringList.class).actualTypeArguments().keySet()).isEmpty();
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,84,@Test
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,85,public void typeVariable_return_type_of____iterator____resolved_to_Iterator_and_type_argument_to_String() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,86,"GenericMetadataSupport genericMetadata = inferFrom(StringList.class).resolveGenericReturnType(firstNamedMethod(""iterator"", StringList.class));"
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,88,assertThat(genericMetadata.rawType()).isEqualTo(Iterator.class);
True,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,test/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java,89,assertThat(genericMetadata.actualTypeArguments().values()).contains(String.class);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,1,package org.mockitousage.serialization;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,3,import static org.fest.assertions.Assertions.assertThat;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,4,import static org.mockito.Mockito.RETURNS_DEEP_STUBS;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,5,import static org.mockito.Mockito.mock;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,6,import static org.mockito.Mockito.when;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,7,import static org.mockito.Mockito.withSettings;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,8,import static org.mockitoutil.SimpleSerializationUtil.serializeAndBack;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,10,import java.io.Serializable;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,11,import java.util.Iterator;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,12,import java.util.List;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,13,import org.junit.Test;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,15,public class DeepStubsSerializableTest {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,17,@Test
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,18,public void should_serialize_and_deserialize_mock_created_with_deep_stubs() throws Exception {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,19,// given
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,20,"SampleClass sampleClass = mock(SampleClass.class, withSettings().defaultAnswer(RETURNS_DEEP_STUBS).serializable());"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,21,when(sampleClass.getSample().isFalse()).thenReturn(true);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,22,when(sampleClass.getSample().number()).thenReturn(999);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,24,// when
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,25,SampleClass deserializedSample = serializeAndBack(sampleClass);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,27,// then
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,28,assertThat(deserializedSample.getSample().isFalse()).isEqualTo(true);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,29,assertThat(deserializedSample.getSample().number()).isEqualTo(999);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,32,@Test
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,33,public void should_serialize_and_deserialize_parameterized_class_mocked_with_deep_stubs() throws Exception {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,34,// given
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,35,"ListContainer deep_stubbed = mock(ListContainer.class, withSettings().defaultAnswer(RETURNS_DEEP_STUBS).serializable());"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,36,"when(deep_stubbed.iterator().next().add(""yes"")).thenReturn(true);"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,38,// when
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,39,ListContainer deserialized_deep_stub = serializeAndBack(deep_stubbed);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,41,// then
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,42,"assertThat(deserialized_deep_stub.iterator().next().add(""not stubbed but mock already previously resolved"")).isEqualTo(false);"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,43,"assertThat(deserialized_deep_stub.iterator().next().add(""yes"")).isEqualTo(true);"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,46,@Test(expected = ClassCastException.class)
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,47,public void should_discard_generics_metadata_when_serialized_then_disabling_deep_stubs_with_generics() throws Exception {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,48,// given
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,49,"ListContainer deep_stubbed = mock(ListContainer.class, withSettings().defaultAnswer(RETURNS_DEEP_STUBS).serializable());"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,50,when(deep_stubbed.iterator().hasNext()).thenReturn(true);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,52,ListContainer deserialized_deep_stub = serializeAndBack(deep_stubbed);
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,54,// when stubbing on a deserialized mock
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,55,"when(deserialized_deep_stub.iterator().next().get(42)).thenReturn(""no"");"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,57,// then revert to the default RETURNS_DEEP_STUBS and the code will raise a ClassCastException
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,61,static class SampleClass implements Serializable {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,62,SampleClass2 getSample() { return new SampleClass2(); }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,65,static class SampleClass2 implements Serializable {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,66,boolean isFalse() { return false; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,67,int number() { return 100; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,70,"static class Container<E> implements Iterable<E>, Serializable {"
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,71,private E e;
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,72,public Container(E e) { this.e = e; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,73,public E get() { return e; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,75,@Override
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,76,public Iterator<E> iterator() {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,77,return new Iterator<E>() {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,78,@Override public boolean hasNext() { return true; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,79,@Override public E next() { return e; }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,80,@Override public void remove() { }
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,85,static class ListContainer extends Container<List<String>> {
True,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,test/org/mockitousage/serialization/DeepStubsSerializableTest.java,86,public ListContainer(List<String> list) { super(list); }
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,1,ackage org.mockitousage.stubbing;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,3,mport static org.fest.assertions.Assertions.*;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,4,mport static org.mockito.Mockito.*;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,6,mport java.io.Serializable;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,8,mport org.junit.Test;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,9,mport org.mockito.Mockito;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,10,mport org.mockitoutil.SimpleSerializationUtil;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,12,ublic class DeepStubsSerializableTest {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,14,ublic static final boolean STUBBED_BOOLEAN_VALUE = true;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,15,ublic static final int STUBBED_INTEGER_VALUE = 999;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,17,Test
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,18,ublic void should_serialize_and_deserialize_mock_created_by_deep_stubs() throws Exception {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,19,/ given
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,20,"ampleClass sampleClass = mock(SampleClass.class, withSettings().defaultAnswer(Mockito.RETURNS_DEEP_STUBS).serializable());"
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,21,hen(sampleClass.getSample().isSth()).thenReturn(STUBBED_BOOLEAN_VALUE);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,22,hen(sampleClass.getSample().getNumber()).thenReturn(STUBBED_INTEGER_VALUE);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,24,/ when
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,25,bject o = SimpleSerializationUtil.serializeAndBack(sampleClass);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,27,/ then
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,28,ssertThat(o).isInstanceOf(SampleClass.class);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,29,ampleClass deserializedSample = (SampleClass) o;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,30,ssertThat(deserializedSample.getSample().isSth()).isEqualTo(STUBBED_BOOLEAN_VALUE);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,31,ssertThat(deserializedSample.getSample().getNumber()).isEqualTo(STUBBED_INTEGER_VALUE);
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,35,lass SampleClass implements Serializable {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,36,ampleClass2 getSample() {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,37,eturn new SampleClass2();
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,41,lass SampleClass2 implements Serializable {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,42,oolean isSth() {
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,43,eturn false;
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,45,nt getNumber(){
False,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,test/org/mockitousage/stubbing/DeepStubsSerializableTest.java,46,eturn 100;
