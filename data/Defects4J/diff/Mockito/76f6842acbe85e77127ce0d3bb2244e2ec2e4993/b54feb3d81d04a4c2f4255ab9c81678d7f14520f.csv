is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,418,* Object argument that is reflection-equal to the given value with support for excluding
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,419,* selected fields from a class.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,420,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,421,* This matcher can be used when equals() is not implemented on compared objects.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,422,* Matcher uses java reflection API to compare fields of wanted and actual object.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,423,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,424,"* Works similarly to EqualsBuilder.reflectionEquals(this, other, exlucdeFields) from"
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,425,* apache commons library.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,426,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,427,* See examples in javadoc for {@link Matchers} class
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,429,* @param value
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,430,*            the given value.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,431,* @param excludeFields
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,432,*            fields to exclude.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,433,* @return <code>null</code>.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,435,"public static <T> T refEq(T value, String... excludeFields) {"
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,436,"return reportMatcher(new ReflectionEquals(value, excludeFields)).<T>returnNull();"
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,12,private final String[] excludeFields;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,16,this.excludeFields = null;
False,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,18,ublic boolean matches(Object actual) {
False,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,19,"eturn EqualsBuilder.reflectionEquals(wanted, actual);"
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,19,"public ReflectionEquals(Object wanted, String... excludeFields) {"
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,20,this.wanted = wanted;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,21,this.excludeFields = excludeFields;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,24,public boolean matches(Object actual) {
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,25,"return  EqualsBuilder.reflectionEquals(wanted, actual, excludeFields);"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,81,@Test
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,82,public void shouldMatchWhenFieldValuesEqualWithOneFieldExcluded() throws Exception {
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,83,"Child wanted = new Child(1, ""foo"", 2, ""excluded"");"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,84,"verify(mock).run(refEq(wanted, ""childFieldTwo""));"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,87,@Test
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,88,public void shouldMatchWhenFieldValuesEqualWithTwoFieldsExcluded() throws Exception {
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,89,"Child wanted = new Child(234234, ""foo"", 2, ""excluded"");"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,90,"verify(mock).run(refEq(wanted, ""childFieldTwo"", ""parentField""));"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,91,"verify(mock).run(refEq(wanted, ""parentField"", ""childFieldTwo""));"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,94,@Test(expected=ArgumentsAreDifferent.class)
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,95,public void shouldNotMatchWithFieldsExclusion() throws Exception {
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,96,"Child wanted = new Child(234234, ""foo"", 2, ""excluded"");"
True,test/org/mockitousage/matchers/ReflectionMatchersTest.java,test/org/mockitousage/matchers/ReflectionMatchersTest.java,97,"verify(mock).run(refEq(wanted, ""childFieldTwo""));"
