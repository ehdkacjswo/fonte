is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/ArgumentCaptor.java,src/org/mockito/ArgumentCaptor.java,43,HandyReturnValues handyReturnValues = new HandyReturnValues();
False,src/org/mockito/ArgumentCaptor.java,src/org/mockito/ArgumentCaptor.java,82,eturn new HandyReturnValues().returnFor(clazz);
True,src/org/mockito/ArgumentCaptor.java,src/org/mockito/ArgumentCaptor.java,84,return handyReturnValues.returnFor(clazz);
True,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,7,import static org.mockito.internal.util.Primitives.*;
False,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,14,mport org.mockito.internal.util.Primitives;
False,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,40,f (Primitives.isPrimitiveWrapper(clazz)) {
False,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,41,eturn Primitives.primitiveWrapperOf(clazz);
False,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,43,eturn null;
True,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,40,if (isPrimitiveWrapper(clazz)) {
True,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,41,return primitiveWrapperOf(clazz);
True,src/org/mockito/internal/progress/HandyReturnValues.java,src/org/mockito/internal/progress/HandyReturnValues.java,43,return primitiveValueFor(clazz);
False,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,21,ublic static Class<?> primitiveTypeOf(Class<?> clazz) {
False,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,22,eturn primitiveTypes.get(clazz);
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,21,public static <T> Class<T> primitiveTypeOf(Class<T> clazz) {
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,22,return (Class<T>) primitiveTypes.get(clazz);
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,25,public static <T> T primitiveValueFor(Class<T> primitiveType) {
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,26,return (T) primitiveValues.get(primitiveType);
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,31,"private static Map<Class<?>, Object> primitiveValues = new HashMap<Class<?>, Object>();"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,55,static {
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,56,"primitiveValues.put(boolean.class, false);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,57,"primitiveValues.put(char.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,58,"primitiveValues.put(byte.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,59,"primitiveValues.put(short.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,60,"primitiveValues.put(int.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,61,"primitiveValues.put(long.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,62,"primitiveValues.put(float.class, 0);"
True,src/org/mockito/internal/util/Primitives.java,src/org/mockito/internal/util/Primitives.java,63,"primitiveValues.put(double.class, 0);"
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,1,package org.mockito;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,3,import org.junit.After;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,4,import org.junit.Test;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,5,import org.mockito.internal.progress.HandyReturnValues;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,6,import org.mockitoutil.TestBase;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,8,"@SuppressWarnings(""unchecked"")"
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,9,public class ArgumentCaptorTest extends TestBase {
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,11,@Test
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,12,public void tellHandyReturnValuesToReturnValueFor() throws Exception {
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,13,//given
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,14,final Object expected = new Object();
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,15,ArgumentCaptor<Object> argumentCaptor = ArgumentCaptor.forClass(Object.class);
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,16,argumentCaptor.handyReturnValues = new HandyReturnValues() {
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,17,@Override
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,18,public <T> T returnFor(Class<T> clazz) {
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,19,return (T) expected;
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,23,//when
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,24,Object returned = argumentCaptor.capture();
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,26,//then
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,27,"assertEquals(expected, returned);"
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,30,@After
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,31,public void yesIKnowSomeMatchersAreMisplaced() {
True,test/org/mockito/ArgumentCaptorTest.java,test/org/mockito/ArgumentCaptorTest.java,32,resetState();
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,1,ackage org.mockito;
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,3,mport org.junit.After;
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,4,mport org.junit.Test;
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,5,mport org.mockitoutil.TestBase;
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,6,mport static org.mockito.ArgumentCaptor.*;
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,9,ublic class TestArgumentCaptorTest extends TestBase {
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,11,Test
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,12,ublic void shouldReturnDummyValueThatDoesntCauseNPE() throws Exception {
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,13,ssertNotNull(forClass(Boolean.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,14,ssertNotNull(forClass(Character.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,15,ssertNotNull(forClass(Byte.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,16,ssertNotNull(forClass(Short.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,17,ssertNotNull(forClass(Integer.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,18,ssertNotNull(forClass(Long.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,19,ssertNotNull(forClass(Float.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,20,ssertNotNull(forClass(Double.class).capture());
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,23,After
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,24,ublic void yesIKnowSomeMatchersAreMisplaced() {
False,test/org/mockito/TestArgumentCaptorTest.java,test/org/mockito/TestArgumentCaptorTest.java,25,esetState();
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,1,package org.mockito.internal.progress;
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,5,import org.junit.Test;
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,8,public class HandyReturnValuesTest {
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,10,private HandyReturnValues h = new HandyReturnValues();
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,12,@Test
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,13,public void shouldNotReturnNullForPrimitivesWprappers() throws Exception {
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,14,assertNotNull(h.returnFor(Boolean.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,15,assertNotNull(h.returnFor(Character.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,16,assertNotNull(h.returnFor(Byte.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,17,assertNotNull(h.returnFor(Short.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,18,assertNotNull(h.returnFor(Integer.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,19,assertNotNull(h.returnFor(Long.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,20,assertNotNull(h.returnFor(Float.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,21,assertNotNull(h.returnFor(Double.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,24,@Test
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,25,public void shouldNotReturnNullForPrimitives() throws Exception {
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,26,assertNotNull(h.returnFor(boolean.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,27,assertNotNull(h.returnFor(char.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,28,assertNotNull(h.returnFor(byte.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,29,assertNotNull(h.returnFor(short.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,30,assertNotNull(h.returnFor(int.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,31,assertNotNull(h.returnFor(long.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,32,assertNotNull(h.returnFor(float.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,33,assertNotNull(h.returnFor(double.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,36,@Test
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,37,public void shouldReturnNullForEverythingElse() throws Exception {
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,38,assertNull(h.returnFor(Object.class));
True,test/org/mockito/internal/progress/HandyReturnValuesTest.java,test/org/mockito/internal/progress/HandyReturnValuesTest.java,39,assertNull(h.returnFor(String.class));
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,13,mport org.junit.Ignore;
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,61,"@SuppressWarnings(""deprecation"")"
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,80,rgumentCaptor<Person> argument = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,80,ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,94,rgumentCaptor<Person> argument = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,94,ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,103,rgumentCaptor<Person> person = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,103,ArgumentCaptor<Person> person = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,121,rgumentCaptor<Person> argument = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,121,ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,129,rgumentCaptor<Person> argument = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,129,ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,142,rgumentCaptor<String> argument = new ArgumentCaptor<String>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,142,ArgumentCaptor<String> argument = ArgumentCaptor.forClass(String.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,155,rgumentCaptor<Person> argument = new ArgumentCaptor<Person>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,155,ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,169,rgumentCaptor<String> captor = new ArgumentCaptor<String>();
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,169,ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);
False,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,178,ublic void shouldCaptureInt() {
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,178,public void shouldCaptureIntByCreatingCaptorWithPrimitiveWrapper() {
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,191,@Test
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,192,public void shouldCaptureIntByCreatingCaptorWithPrimitive() throws Exception {
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,193,//given
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,194,IMethods mock = mock(IMethods.class);
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,195,ArgumentCaptor<Integer> argument = ArgumentCaptor.forClass(int.class);
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,197,//when
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,198,mock.intArgumentMethod(10);
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,200,//then
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,201,verify(mock).intArgumentMethod(argument.capture());
True,test/org/mockitousage/matchers/CapturingArgumentsTest.java,test/org/mockitousage/matchers/CapturingArgumentsTest.java,202,"assertEquals(10, (int) argument.getValue());"
