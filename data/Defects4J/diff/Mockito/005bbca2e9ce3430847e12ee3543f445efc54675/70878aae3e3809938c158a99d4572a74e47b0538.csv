is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,6,import org.mockito.exceptions.VerificationAssertionError;
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,14,rivate class BaseMessage {}
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,15,rivate class Message extends BaseMessage {}
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,16,private class BaseMessage {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,17,public String toString() {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,18,"return ""BaseMessage"";"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,22,private class Message extends BaseMessage {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,23,public String toString() {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,24,"return ""Message"";"
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,36,ockito.verify(derivedMock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,47,try {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,48,Mockito.verify(derivedMock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,49,} catch (VerificationAssertionError error) {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,50,"String expected = ""\n"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,51,"""Not invoked: DerivedInterface.print(Message)"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,52,"""But found: DerivedInterface.print(BaseMessage)"";"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,53,"assertEquals(expected, error.getMessage());"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,57,@Ignore
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,40,ublic void overriddenInterfaceMethodWorking() throws Exception {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,59,public void shouldReportNoMoreInteractionsProperly() throws Exception {
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,43,aseMessage message = new Message();
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,62,Message message = new Message();
False,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,45,ockito.verify(derivedMock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,64,try {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,65,Mockito.verifyNoMoreInteractions(derivedMock);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,66,} catch (VerificationAssertionError error) {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,67,"String expected = ""\n"" +"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,68,"""No more interactions expected on DerivedInterface but found: DerivedInterface.print(BaseMessage)"";"
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,69,"assertEquals(expected, error.getMessage());"
