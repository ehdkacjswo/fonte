is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,3,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,4,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,5,import java.util.Arrays;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,8,"* Type representing bounds of a type variable, allows to keep all bounds information."
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,10,"* <p>It uses the first bound in the array, as this array is never null and always contains at least"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,11,* one element (Object is always here if no bounds are declared).</p>
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,13,"* <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,14,* interfacesBound will be an array of the additional interfaces.
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,16,* i.e. <code>SomeClass</code>.
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,17,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,18,*     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,19,*         E get();
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,21,*     // will return Comparable type
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,22,* </code></pre>
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,23,* </p>
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,25,public class BoundedType implements Type {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,26,private TypeVariable typeVariable;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,29,public BoundedType(TypeVariable typeVariable) {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,30,this.typeVariable = typeVariable;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,34,"* @return either a class or an interface (parameterized or not), if no bounds declared Object is returned."
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,36,public Type firstBound() {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,37,return typeVariable.getBounds()[0]; //
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,41,"* On a Type Variable (typeVar extends AClass_0 & I_1 & I_2 & etc), will return an array"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,42,* containing I_1 and I_2.
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,44,"* @return other bounds for this type, these bounds can only be only interfaces as the JLS says,"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,45,* empty array if no other bound declared.
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,47,public Type[] interfaceBounds() {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,48,Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,49,"System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,50,return interfaceBounds;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,53,@Override
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,54,public boolean equals(Object o) {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,55,if (this == o) return true;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,56,if (o == null || getClass() != o.getClass()) return false;
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,58,return typeVariable.equals(((BoundedType) o).typeVariable);
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,62,@Override
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,63,public int hashCode() {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,64,return typeVariable.hashCode();
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,67,@Override
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,68,public String toString() {
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,69,final StringBuilder sb = new StringBuilder();
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,70,"sb.append(""{firstBound="").append(firstBound());"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,71,"sb.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,72,sb.append('}');
True,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,73,return sb.toString();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,4,import org.mockito.Incubating;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,5,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,7,import java.lang.reflect.Method;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,8,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,9,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,10,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,11,import java.util.HashMap;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,12,import java.util.LinkedHashMap;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,13,import java.util.Map;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,15,@Incubating
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,16,public abstract class MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,19,* Represents actual type variables resolved for current class.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,21,"protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,23,private MockitoGenericMetadata() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,27,protected void registerTypeVariablesOn(Type classType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,28,if (!(classType instanceof ParameterizedType)) { // null protected
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,29,return;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,31,ParameterizedType parameterizedType = (ParameterizedType) classType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,32,TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,33,Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,34,for (int i = 0; i < actualTypeArguments.length; i++) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,35,TypeVariable typeParameter = typeParameters[i];
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,36,Type actualTypeArgument = actualTypeArguments[i];
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,38,"contextualActualTypeParameters.put(typeParameter, actualTypeArgument);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,39,"GenericTypeInfo.logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,43,protected void registerTypeVariablesOn(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,44,TypeVariable[] typeParameters = clazz.getTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,45,for (TypeVariable typeParameter : typeParameters) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,46,"contextualActualTypeParameters.put(typeParameter, boundsOf(typeParameter));"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,47,"GenericTypeInfo.logger.log(""For '"" + clazz.getCanonicalName() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,51,private Type boundsOf(TypeVariable typeParameter) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,52,return new BoundedType(typeParameter);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,56,* @return Raw type of the current instance.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,58,public abstract Class<?> rawType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,61,* @return Actual type arguments matching the type variables of the raw type represented by this {@link MockitoGenericMetadata} instance.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,63,"public Map<TypeVariable, Type> actualTypeArguments() {"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,64,"LinkedHashMap<TypeVariable, Type> actualTypeArguments = new LinkedHashMap<TypeVariable, Type>();"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,66,TypeVariable[] typeParameters = rawType().getTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,67,for (TypeVariable typeParameter : typeParameters) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,69,Type actualType = getActualTypeArgumentFor(typeParameter);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,71,"actualTypeArguments.put(typeParameter, actualType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,72,"GenericTypeInfo.logger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,75,return actualTypeArguments;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,78,protected Type getActualTypeArgumentFor(TypeVariable typeParameter) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,79,Type type = this.contextualActualTypeParameters.get(typeParameter);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,80,if (type instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,81,TypeVariable typeVariable = (TypeVariable) type;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,82,return getActualTypeArgumentFor(typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,85,return type;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,88,public MockitoGenericMetadata resolveParameterizedType(Type genericReturnType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,89,"throw new UnsupportedOperationException(""not implemented yet"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,93,* Resolve current method generic return type to a {@link MockitoGenericMetadata}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,95,* @param method Method to resolve the return type.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,96,* @return {@link MockitoGenericMetadata} representing this generic return type.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,98,public MockitoGenericMetadata resolveGenericReturnType(Method method) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,99,Type genericReturnType = method.getGenericReturnType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,100,"System.out.println(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,102,if (genericReturnType instanceof Class) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,103,return new NotGenericReturnType(genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,106,if (genericReturnType instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,107,ParameterizedType returnType = (ParameterizedType) genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,108,"return new ParameterizedReturnType(this, method);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,111,"return new MethodGenericReturnTypeMockitoGenericMetadata(this, method);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,115,* Create an new MockitoGenericMetadata from a {@link Type}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,117,* @param type The class from which the {@link MockitoGenericMetadata} should be built.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,118,* @return The new {@link MockitoGenericMetadata}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,120,public static MockitoGenericMetadata from(Type type) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,121,if (type instanceof Class) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,122,return new FromClassMockitoGenericMetadata((Class<?>) type);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,124,if (type instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,125,return new FromParameterizedTypeMockitoGenericMetadata((ParameterizedType) type);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,127,"throw new MockitoException(""Type meta-data for this Type ("" + type.getClass().getCanonicalName() + "") is not supported : "" + type);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,131,private static class FromClassMockitoGenericMetadata extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,132,private Class<?> clazz;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,134,public FromClassMockitoGenericMetadata(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,135,this.clazz = clazz;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,136,readActualTypeParametersOnDeclaringClass();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,139,private void readActualTypeParametersOnDeclaringClass() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,140,registerTypeVariablesOn(clazz);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,141,registerTypeVariablesOn(clazz.getGenericSuperclass());
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,142,for (Type genericInterface : clazz.getGenericInterfaces()) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,143,registerTypeVariablesOn(genericInterface);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,147,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,148,public Class<?> rawType() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,149,return clazz;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,155,private static class FromParameterizedTypeMockitoGenericMetadata extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,156,private ParameterizedType parameterizedType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,158,public FromParameterizedTypeMockitoGenericMetadata(ParameterizedType parameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,159,this.parameterizedType = parameterizedType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,160,readActualTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,163,private void readActualTypeParameters() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,164,registerTypeVariablesOn(parameterizedType.getRawType());
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,165,registerTypeVariablesOn(parameterizedType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,168,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,169,public Class<?> rawType() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,170,// ParameterizedType#getRawType() always return a class !
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,171,return (Class<?>) parameterizedType.getRawType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,177,private static class ParameterizedReturnType extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,180,private final ParameterizedType parameterizedType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,181,private final TypeVariable<Method>[] typeParameters;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,183,"public ParameterizedReturnType(MockitoGenericMetadata source, Method method) {"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,184,parameterizedType = (ParameterizedType) method.getGenericReturnType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,185,typeParameters = method.getTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,186,this.contextualActualTypeParameters = source.contextualActualTypeParameters;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,188,readTypeVariables();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,191,private void readTypeVariables() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,192,registerTypeVariablesOn(parameterizedType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,195,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,196,public Class<?> rawType() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,197,return (Class<?>) parameterizedType.getRawType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,203,private static class MethodGenericReturnTypeMockitoGenericMetadata extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,204,private final TypeVariable<Method>[] typeParameters;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,206,private final Type genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,208,"public MethodGenericReturnTypeMockitoGenericMetadata(MockitoGenericMetadata source, Method method) {"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,209,genericReturnType = method.getGenericReturnType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,210,typeParameters = method.getTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,211,this.contextualActualTypeParameters = source.contextualActualTypeParameters;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,213,resolveActualMethodTypeParameter();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,216,private void resolveActualMethodTypeParameter() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,217,if (genericReturnType instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,218,TypeVariable typeVariable = (TypeVariable) genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,219,for (Type type : typeVariable.getBounds()) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,220,registerTypeVariablesOn(type);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,222,registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,224,if (genericReturnType instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,225,registerTypeVariablesOn(genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,228,"// throw new MockitoException(""genericReturnType is a '"" + genericReturnType.getClass() + ""' : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,231,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,232,public Class<?> rawType() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,233,if (genericReturnType instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,234,Type actualTypeArgument = getActualTypeArgumentFor((TypeVariable) genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,235,return extractRawTypeOf(actualTypeArgument);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,237,return extractRawTypeOf(genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,240,private Class<?> extractRawTypeOf(Type type) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,241,if (type instanceof Class) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,242,return (Class<?>) type;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,244,if (type instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,245,return (Class<?>) ((ParameterizedType) type).getRawType();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,247,if (type instanceof BoundedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,248,return extractRawTypeOf(((BoundedType) type).firstBound());
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,250,"throw new MockitoException(""Raw extraction not managed for : '"" + type + ""'"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,254,private static class NotGenericReturnType extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,255,private final Class<?> returnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,257,public NotGenericReturnType(Type genericReturnType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,258,returnType = (Class<?>) genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,261,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,262,public Class<?> rawType() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,263,return returnType;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,1,package org.mockito.internal.stubbing.defaultanswers;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,3,import org.junit.Test;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,5,import java.util.Iterator;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,6,import java.util.Map;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,7,import java.util.Set;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,9,import static org.mockito.Mockito.RETURNS_DEEP_STUBS;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,10,import static org.mockito.Mockito.mock;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,12,public class ReturnsDeepStubsTest {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,14,"interface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,17,@Test
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,18,public void testName() throws Exception {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,19,"MapWithNestedGenerics<?> mock = mock(MapWithNestedGenerics.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,21,"Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,22,"Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,23,"Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,25,Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,26,Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,28,Set<Number> value = mock.entrySet().iterator().next().getValue();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,29,Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,30,Number number = mock.entrySet().iterator().next().getValue().iterator().next();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,3,import org.junit.Ignore;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,4,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,6,import java.io.Serializable;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,7,import java.lang.reflect.Method;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,8,import java.lang.reflect.Type;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,9,import java.lang.reflect.TypeVariable;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,10,import java.util.*;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,12,import static org.fest.assertions.Assertions.assertThat;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,13,import static org.junit.Assert.fail;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,14,import static org.mockito.Mockito.RETURNS_DEEP_STUBS;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,15,import static org.mockito.Mockito.mock;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,16,import static org.mockito.internal.util.reflection.MockitoGenericMetadata.from;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,18,public class MockitoGenericMetadataTest {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,20,interface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,21,E get();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,23,interface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,24,E get();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,26,interface ListOfNumbers extends List<Number> {}
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,27,interface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,29,"interface GenericsNest<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,30,Set<Number> remove(Object key); // override with fixed ParameterizedType
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,31,List<? super Integer> returningWildcard();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,32,K returningK();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,33,<O extends K> O paramTypeWithTypeParams();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,36,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,37,public void can_get_raw_type_from_Class() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,38,assertThat(from(ListOfAnyNumbers.class).rawType()).isEqualTo(ListOfAnyNumbers.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,39,assertThat(from(ListOfNumbers.class).rawType()).isEqualTo(ListOfNumbers.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,40,assertThat(from(GenericsNest.class).rawType()).isEqualTo(GenericsNest.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,44,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,45,public void can_get_raw_type_from_ParameterizedType() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,46,assertThat(from(ListOfAnyNumbers.class.getGenericInterfaces()[0]).rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,47,assertThat(from(ListOfNumbers.class.getGenericInterfaces()[0]).rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,48,assertThat(from(GenericsNest.class.getGenericInterfaces()[0]).rawType()).isEqualTo(Map.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,51,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,52,"@Ignore(""not the right unit test"")"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,53,public void returning_deep_stubs() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,54,"GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,56,"Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,57,"Iterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,58,"Map.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,60,Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,61,Comparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,63,Set<Number> value = mock.entrySet().iterator().next().getValue();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,64,Iterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,65,Number number = mock.entrySet().iterator().next().getValue().iterator().next();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,68,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,69,public void can_get_type_variables_from_Class() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,70,"assertThat(from(GenericsNest.class).actualTypeArguments().keySet()).hasSize(1).onProperty(""name"").contains(""K"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,71,assertThat(from(ListOfNumbers.class).actualTypeArguments().keySet()).isEmpty();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,72,"assertThat(from(ListOfAnyNumbers.class).actualTypeArguments().keySet()).hasSize(1).onProperty(""name"").contains(""N"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,73,"assertThat(from(Map.class).actualTypeArguments().keySet()).hasSize(2).onProperty(""name"").contains(""K"", ""V"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,74,assertThat(from(Serializable.class).actualTypeArguments().keySet()).isEmpty();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,77,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,78,public void can_get_type_variables_from_ParameterizedType() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,79,"assertThat(from(GenericsNest.class.getGenericInterfaces()[0]).actualTypeArguments().keySet()).hasSize(2).onProperty(""name"").contains(""K"", ""V"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,80,"assertThat(from(ListOfAnyNumbers.class.getGenericInterfaces()[0]).actualTypeArguments().keySet()).hasSize(1).onProperty(""name"").contains(""E"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,81,"assertThat(from(Integer.class.getGenericInterfaces()[0]).actualTypeArguments().keySet()).hasSize(1).onProperty(""name"").contains(""T"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,82,assertThat(from(StringBuilder.class.getGenericInterfaces()[0]).actualTypeArguments().keySet()).isEmpty();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,85,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,86,public void typeVariable_return_type_of___get___resolved_to_Set_and_type_argument_to_Number() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,87,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""get"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,89,assertThat(genericMetadata.rawType()).isEqualTo(Set.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,90,assertThat(genericMetadata.actualTypeArguments().values()).contains(Number.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,93,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,94,public void typeVariable_return_type_of___returningK___resolved_to_Comparable_and_with_BoundedType() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,95,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningK"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,97,assertThat(genericMetadata.rawType()).isEqualTo(Comparable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,98,"BoundedType boundedType = (BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""T"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,99,assertThat(boundedType.firstBound()); // use MockitoGenericMetadata ?
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,100,"fail(""API design to do"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,103,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,104,public void fixed_ParamType_return_type_of___remove___resolved_to_Set_and_type_argument_to_Number() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,105,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""remove"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,107,assertThat(genericMetadata.rawType()).isEqualTo(Set.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,108,assertThat(genericMetadata.actualTypeArguments().values()).contains(Number.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,111,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,112,public void paramType_return_type_of___values___resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,113,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""values"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,115,assertThat(genericMetadata.rawType()).isEqualTo(Collection.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,116,"MockitoGenericMetadata fromTypeVariableE = from(typeVariableValue(genericMetadata.actualTypeArguments(), ""E""));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,117,assertThat(fromTypeVariableE.rawType()).isEqualTo(Set.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,118,assertThat(fromTypeVariableE.actualTypeArguments().values()).contains(Number.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,121,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,122,public void paramType_return_type_of___returningWildcard___resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,123,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningWildcard"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,125,"fail(""TODO"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,128,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,129,public void paramType_return_type_of___paramTypeWithTypeParams___resolved_to_Collection_and_type_argument_to_Parameterized_Set() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,130,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""paramTypeWithTypeParams"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,132,"fail(""TODO"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,136,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,137,public void class_return_type_of___append___resolved_to_StringBuilder_and_type_arguments() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,138,"MockitoGenericMetadata genericMetadata = from(StringBuilder.class).resolveGenericReturnType(firstNamedMethod(""append"", StringBuilder.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,140,assertThat(genericMetadata.rawType()).isEqualTo(StringBuilder.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,141,assertThat(genericMetadata.actualTypeArguments()).isEmpty();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,145,"private Type typeVariableValue(Map<TypeVariable, Type> typeVariables, String typeVariableName) {"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,146,"for (Map.Entry<TypeVariable, Type> typeVariableTypeEntry : typeVariables.entrySet()) {"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,147,if (typeVariableTypeEntry.getKey().getName().equals(typeVariableName)) {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,148,return typeVariableTypeEntry.getValue();
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,152,"fail(""'"" + typeVariableName + ""' was not found in "" + typeVariables);"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,153,return null; // unreachable
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,156,"private Method firstNamedMethod(String methodName, Class<?> clazz) {"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,157,for (Method method : clazz.getMethods()) {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,158,if (method.getName().contains(methodName)) {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,159,return method;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,162,"throw new IllegalStateException(""The method : '"" + methodName + ""' do not exist in '"" + clazz.getSimpleName() + ""'"");"
