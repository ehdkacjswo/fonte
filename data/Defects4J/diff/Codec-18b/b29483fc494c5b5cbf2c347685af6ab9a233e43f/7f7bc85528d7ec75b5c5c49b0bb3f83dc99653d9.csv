is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,386,"nsureBufferSize(encodeSize, context);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,386,"final byte[] buffer = ensureBufferSize(encodeSize, context);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,390,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 3) & MASK_5BITS]; // 8-1*5 = 3
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,391,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea << 2) & MASK_5BITS]; // 5-3=2
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,392,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,393,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,394,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,395,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,396,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,397,ontext.buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,390,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 3) & MASK_5BITS]; // 8-1*5 = 3
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,391,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea << 2) & MASK_5BITS]; // 5-3=2
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,392,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,393,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,394,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,395,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,396,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,397,buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,401,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 11) & MASK_5BITS]; // 16-1*5 = 11
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,402,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  6) & MASK_5BITS]; // 16-2*5 = 6
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,403,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  1) & MASK_5BITS]; // 16-3*5 = 1
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,404,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  4) & MASK_5BITS]; // 5-1 = 4
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,405,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,406,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,407,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,408,ontext.buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,401,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 11) & MASK_5BITS]; // 16-1*5 = 11
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,402,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  6) & MASK_5BITS]; // 16-2*5 = 6
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,403,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  1) & MASK_5BITS]; // 16-3*5 = 1
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,404,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  4) & MASK_5BITS]; // 5-1 = 4
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,405,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,406,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,407,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,408,buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,411,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 19) & MASK_5BITS]; // 24-1*5 = 19
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,412,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 14) & MASK_5BITS]; // 24-2*5 = 14
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,413,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  9) & MASK_5BITS]; // 24-3*5 = 9
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,414,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  4) & MASK_5BITS]; // 24-4*5 = 4
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,415,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  1) & MASK_5BITS]; // 5-4 = 1
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,416,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,417,ontext.buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,418,ontext.buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,411,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 19) & MASK_5BITS]; // 24-1*5 = 19
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,412,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 14) & MASK_5BITS]; // 24-2*5 = 14
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,413,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  9) & MASK_5BITS]; // 24-3*5 = 9
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,414,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  4) & MASK_5BITS]; // 24-4*5 = 4
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,415,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  1) & MASK_5BITS]; // 5-4 = 1
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,416,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,417,buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,418,buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,421,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 27) & MASK_5BITS]; // 32-1*5 = 27
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,422,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 22) & MASK_5BITS]; // 32-2*5 = 22
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,423,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 17) & MASK_5BITS]; // 32-3*5 = 17
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,424,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 12) & MASK_5BITS]; // 32-4*5 = 12
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,425,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  7) & MASK_5BITS]; // 32-5*5 =  7
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,426,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  2) & MASK_5BITS]; // 32-6*5 =  2
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,427,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  3) & MASK_5BITS]; // 5-2 = 3
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,428,ontext.buffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,421,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 27) & MASK_5BITS]; // 32-1*5 = 27
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,422,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 22) & MASK_5BITS]; // 32-2*5 = 22
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,423,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 17) & MASK_5BITS]; // 32-3*5 = 17
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,424,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 12) & MASK_5BITS]; // 32-4*5 = 12
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,425,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  7) & MASK_5BITS]; // 32-5*5 =  7
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,426,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >>  2) & MASK_5BITS]; // 32-6*5 =  2
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,427,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea <<  3) & MASK_5BITS]; // 5-2 = 3
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,428,buffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,434,"ystem.arraycopy(lineSeparator, 0, context.buffer, context.pos, lineSeparator.length);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,434,"System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,439,"nsureBufferSize(encodeSize, context);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,439,"final byte[] buffer = ensureBufferSize(encodeSize, context);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,447,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,448,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,449,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,450,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,451,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,452,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,453,ontext.buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,454,ontext.buffer[context.pos++] = encodeTable[(int)context.lbitWorkArea & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,447,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 35) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,448,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 30) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,449,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 25) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,450,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 20) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,451,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 15) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,452,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 10) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,453,buffer[context.pos++] = encodeTable[(int)(context.lbitWorkArea >> 5) & MASK_5BITS];
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,454,buffer[context.pos++] = encodeTable[(int)context.lbitWorkArea & MASK_5BITS];
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,457,"ystem.arraycopy(lineSeparator, 0, context.buffer, context.pos, lineSeparator.length);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,457,"System.arraycopy(lineSeparator, 0, buffer, context.pos, lineSeparator.length);"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,210,rivate void resizeBuffer(Context context) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,210,private byte[] resizeBuffer(Context context) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,220,return context.buffer;
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,228,"rotected void ensureBufferSize(int size, Context context){"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,229,"protected byte[] ensureBufferSize(int size, Context context){"
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,230,esizeBuffer(context);
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,231,return resizeBuffer(context);
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,233,return context.buffer;
