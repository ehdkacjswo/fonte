is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,84,f ((txt == null) || (txt.length() == 0)) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,84,if (txt == null || txt.length() == 0) {
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,137,hile ((code.length() < this.getMaxCodeLen()) &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,138,n < wdsz) ) { // max code size of 4 works well
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,137,while (code.length() < this.getMaxCodeLen() &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,138,n < wdsz ) { // max code size of 4 works well
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,141,"f ((symb != 'C') && (isPreviousChar( local, n, symb )) ) {"
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,141,"if (symb != 'C' && isPreviousChar( local, n, symb ) ) {"
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,161,FRONTV.indexOf(local.charAt(n + 1)) >= 0) ) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,161,FRONTV.indexOf(local.charAt(n + 1)) >= 0 ) {
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,169,FRONTV.indexOf(local.charAt(n + 1)) >= 0)) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,169,FRONTV.indexOf(local.charAt(n + 1)) >= 0) {
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,179,f ((n == 0) &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,180,wdsz >= 3) &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,179,if (n == 0 &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,180,wdsz >= 3 &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,193,FRONTV.indexOf(local.charAt(n + 2)) >= 0)) { // DGE DGI DGY -> J
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,193,FRONTV.indexOf(local.charAt(n + 2)) >= 0) { // DGE DGI DGY -> J
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,209,f ((n > 0) &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,209,if (n > 0 &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,221,FRONTV.indexOf(local.charAt(n + 1)) >= 0) &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,222,!hard)) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,221,FRONTV.indexOf(local.charAt(n + 1)) >= 0 &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,222,!hard) {
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,232,f ((n > 0) &&
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,233,VARSON.indexOf(local.charAt(n - 1)) >= 0)) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,232,if (n > 0 &&
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,233,VARSON.indexOf(local.charAt(n - 1)) >= 0) {
False,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,342,index + test.length() - 1) < string.length() ) {
True,src/main/java/org/apache/commons/codec/language/Metaphone.java,src/main/java/org/apache/commons/codec/language/Metaphone.java,342,index + test.length() - 1 < string.length() ) {
False,src/main/java/org/apache/commons/codec/language/Soundex.java,src/main/java/org/apache/commons/codec/language/Soundex.java,268,hile ((incount < str.length()) && (count < out.length)) {
True,src/main/java/org/apache/commons/codec/language/Soundex.java,src/main/java/org/apache/commons/codec/language/Soundex.java,268,while (incount < str.length() && count < out.length) {
False,src/main/java/org/apache/commons/codec/language/Soundex.java,src/main/java/org/apache/commons/codec/language/Soundex.java,271,f ((mapped != '0') && (mapped != last)) {
True,src/main/java/org/apache/commons/codec/language/Soundex.java,src/main/java/org/apache/commons/codec/language/Soundex.java,271,if (mapped != '0' && mapped != last) {
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,465,"eturn input.length() == 1 && (contains(bContent, input.charAt(0)) == shouldMatch);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,465,"return input.length() == 1 && contains(bContent, input.charAt(0)) == shouldMatch;"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,472,"eturn input.length() > 0 && (contains(bContent, input.charAt(0)) == shouldMatch);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,472,"return input.length() > 0 && contains(bContent, input.charAt(0)) == shouldMatch;"
False,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,479,"eturn input.length() > 0 && (contains(bContent, input.charAt(input.length() - 1)) == shouldMatch);"
True,src/main/java/org/apache/commons/codec/language/bm/Rule.java,src/main/java/org/apache/commons/codec/language/bm/Rule.java,479,"return input.length() > 0 && contains(bContent, input.charAt(input.length() - 1)) == shouldMatch;"
False,src/main/java/org/apache/commons/codec/net/RFC1522Codec.java,src/main/java/org/apache/commons/codec/net/RFC1522Codec.java,143,f ((!text.startsWith(PREFIX)) || (!text.endsWith(POSTFIX))) {
True,src/main/java/org/apache/commons/codec/net/RFC1522Codec.java,src/main/java/org/apache/commons/codec/net/RFC1522Codec.java,143,if (!text.startsWith(PREFIX) || !text.endsWith(POSTFIX)) {
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,61,tring invalidString = validString + ((char)0); // append null character
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,61,String invalidString = validString + (char)0; // append null character
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,343,"ssertTrue(""\"""" + (new String(enc)) + ""\"" is Base64 data."", Base64.isBase64(enc));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,343,"assertTrue(""\"""" + new String(enc) + ""\"" is Base64 data."", Base64.isBase64(enc));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,52,"his.checkEncodingVariations(""B650"", (new String[]{"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,52,"this.checkEncodingVariations(""B650"", new String[]{"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,92,"BYRUM""}));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,92,"""BYRUM""});"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,192,"his.checkEncodingVariations(""O165"", (new String[]{"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,192,"this.checkEncodingVariations(""O165"", new String[]{"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,200,"OBrien'""}));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,200,"""OBrien'""});"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,210,"his.checkEncodingVariations(""K525"", (new String[]{"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,210,"this.checkEncodingVariations(""K525"", new String[]{"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,221,"KINGSMITH-""}));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,221,"""KINGSMITH-""});"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,262,"his.checkEncodingVariations(""S460"", (new String[]{"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,262,"this.checkEncodingVariations(""S460"", new String[]{"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,278,"SILLER""}));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,278,"""SILLER""});"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,300,"his.checkEncodingVariations(""E625"", (new String[]{""Erickson"", ""Erickson"", ""Erikson"", ""Ericson"", ""Ericksen"", ""Ericsen""}));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,300,"this.checkEncodingVariations(""E625"", new String[]{""Erickson"", ""Erickson"", ""Erikson"", ""Ericson"", ""Ericksen"", ""Ericsen""});"
False,src/test/java/org/apache/commons/codec/language/bm/RuleTest.java,src/test/java/org/apache/commons/codec/language/bm/RuleTest.java,39,eturn ((Integer) item) < 0;
True,src/test/java/org/apache/commons/codec/language/bm/RuleTest.java,src/test/java/org/apache/commons/codec/language/bm/RuleTest.java,39,return (Integer) item < 0;
