is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,26,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,65,"ssertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,66,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,73,"ssertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,74,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,81,"ssertEquals(element[1], codec.encodeAsString(element[0].getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,82,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,22,mport java.io.UnsupportedEncodingException;
True,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,26,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,513,ry {
False,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,514,"eturn s != null ? s.getBytes(""UTF-8"") : null;"
False,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,515, catch (UnsupportedEncodingException e) {
False,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,516,hrow new IllegalStateException(e.toString());
True,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java,513,return s != null ? s.getBytes(Charsets.UTF_8) : null;
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,31,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,130,"ssertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,131,"assertEquals(bigInt1, Base64.decodeInteger(encodedInt1.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,139,"ssertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,140,"assertEquals(bigInt2, Base64.decodeInteger(encodedInt2.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,150,"ssertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,151,"assertEquals(bigInt3, Base64.decodeInteger(encodedInt3.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,167,"ssertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,168,"assertEquals(bigInt4, Base64.decodeInteger(encodedInt4.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,252,"ssertEquals(""A"", new String(Base64.decodeBase64(""QQ=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,253,"assertEquals(""A"", new String(Base64.decodeBase64(""QQ=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,260,"ssertEquals(""AA"", new String(Base64.decodeBase64(""QUE="".getBytes(""UTF-8""))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,261,"ssertEquals(""AAA"", new String(Base64.decodeBase64(""QUFB"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,261,"assertEquals(""AA"", new String(Base64.decodeBase64(""QUE="".getBytes(Charsets.UTF_8))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,262,"assertEquals(""AAA"", new String(Base64.decodeBase64(""QUFB"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,266,"ssertEquals(0, Base64.decodeBase64(""===="".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,267,"ssertEquals("""", new String(Base64.decodeBase64(""===="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,267,"assertEquals(0, Base64.decodeBase64(""===="".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,268,"assertEquals("""", new String(Base64.decodeBase64(""===="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,269,"ssertEquals(0, Base64.decodeBase64(""==="".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,270,"ssertEquals(0, Base64.decodeBase64(""=="".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,271,"ssertEquals(0, Base64.decodeBase64(""="".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,272,"ssertEquals(0, Base64.decodeBase64("""".getBytes(""UTF-8"")).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,270,"assertEquals(0, Base64.decodeBase64(""==="".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,271,"assertEquals(0, Base64.decodeBase64(""=="".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,272,"assertEquals(0, Base64.decodeBase64(""="".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,273,"assertEquals(0, Base64.decodeBase64("""".getBytes(Charsets.UTF_8)).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,277,"ssertEquals(0, Base64.decodeBase64(""====\n"".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,278,"ssertEquals("""", new String(Base64.decodeBase64(""====\n"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,278,"assertEquals(0, Base64.decodeBase64(""====\n"".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,279,"assertEquals("""", new String(Base64.decodeBase64(""====\n"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,280,"ssertEquals(0, Base64.decodeBase64(""===\n"".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,281,"ssertEquals(0, Base64.decodeBase64(""==\n"".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,282,"ssertEquals(0, Base64.decodeBase64(""=\n"".getBytes(""UTF-8"")).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,283,"ssertEquals(0, Base64.decodeBase64(""\n"".getBytes(""UTF-8"")).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,281,"assertEquals(0, Base64.decodeBase64(""===\n"".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,282,"assertEquals(0, Base64.decodeBase64(""==\n"".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,283,"assertEquals(0, Base64.decodeBase64(""=\n"".getBytes(Charsets.UTF_8)).length);"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,284,"assertEquals(0, Base64.decodeBase64(""\n"".getBytes(Charsets.UTF_8)).length);"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,291,"yte[] encodedArray = Base64.encodeBase64(orig.getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,292,byte[] encodedArray = Base64.encodeBase64(orig.getBytes(Charsets.UTF_8));
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,299,"yte[] encodedWithWS = intermediate.toString().getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,300,byte[] encodedWithWS = intermediate.toString().getBytes(Charsets.UTF_8);
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,376,"decodeBase64(""VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\n\r\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,377,".decodeBase64(""VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\n\r\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,412,"decodeBase64(""VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,413,".decodeBase64(""VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,414,"decodeBase64(""SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,415,".decodeBase64(""SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,416,"decodeBase64(""aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,417,".decodeBase64(""aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,418,"decodeBase64(""QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg=="".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,419,".decodeBase64(""QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg=="".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,420,"getBytes(""UTF-8""))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,421,"ssertEquals(""xyzzy!"", new String(Base64.decodeBase64(""eHl6enkh"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,421,.getBytes(Charsets.UTF_8))));
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,422,"assertEquals(""xyzzy!"", new String(Base64.decodeBase64(""eHl6enkh"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,427,"encodeBase64(""The quick brown fox jumped over the lazy dogs."".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,428,".encodeBase64(""The quick brown fox jumped over the lazy dogs."".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,433,"getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,434,.getBytes(Charsets.UTF_8))));
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,435,"encodeBase64(""It was the best of times, it was the worst of times."".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,436,".encodeBase64(""It was the best of times, it was the worst of times."".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,437,"encodeBase64(""http://jakarta.apache.org/commmons"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,438,".encodeBase64(""http://jakarta.apache.org/commmons"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,439,"encodeBase64(""AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,440,".encodeBase64(""AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,441,"getBytes(""UTF-8""))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,442,"ssertEquals(""eHl6enkh"", new String(Base64.encodeBase64(""xyzzy!"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,442,.getBytes(Charsets.UTF_8))));
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,443,"assertEquals(""eHl6enkh"", new String(Base64.encodeBase64(""xyzzy!"".getBytes(Charsets.UTF_8))));"
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,484,"bject o = Base64.encodeBase64(original.getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,485,Object o = Base64.encodeBase64(original.getBytes(Charsets.UTF_8));
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,509,"bject origObj = original.getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,510,Object origObj = original.getBytes(Charsets.UTF_8);
False,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,522,"ssertEquals(""SGVsbG8gV29ybGQ="", new String(b64.encode(""Hello World"".getBytes(""UTF-8""))));"
True,src/test/java/org/apache/commons/codec/binary/Base64Test.java,src/test/java/org/apache/commons/codec/binary/Base64Test.java,523,"assertEquals(""SGVsbG8gV29ybGQ="", new String(b64.encode(""Hello World"".getBytes(Charsets.UTF_8))));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,25,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,185,"ecoded = (byte[]) instance.decode((Object) encodeMe.getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,186,decoded = (byte[]) instance.decode((Object) encodeMe.getBytes(Charsets.UTF_8));
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,203,"yte[] decoded = instance.decode(""00000000"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,204,"byte[] decoded = instance.decode(""00000000"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,207,"ecoded = instance.decode(""00000001"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,208,"decoded = instance.decode(""00000001"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,211,"ecoded = instance.decode(""00000011"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,212,"decoded = instance.decode(""00000011"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,215,"ecoded = instance.decode(""00000111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,216,"decoded = instance.decode(""00000111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,219,"ecoded = instance.decode(""00001111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,220,"decoded = instance.decode(""00001111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,223,"ecoded = instance.decode(""00011111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,224,"decoded = instance.decode(""00011111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,227,"ecoded = instance.decode(""00111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,228,"decoded = instance.decode(""00111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,231,"ecoded = instance.decode(""01111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,232,"decoded = instance.decode(""01111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,235,"ecoded = instance.decode(""11111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,236,"decoded = instance.decode(""11111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,240,"ecoded = instance.decode(""0000000011111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,241,"decoded = instance.decode(""0000000011111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,245,"ecoded = instance.decode(""0000000111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,246,"decoded = instance.decode(""0000000111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,250,"ecoded = instance.decode(""0000001111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,251,"decoded = instance.decode(""0000001111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,255,"ecoded = instance.decode(""0000011111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,256,"decoded = instance.decode(""0000011111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,260,"ecoded = instance.decode(""0000111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,261,"decoded = instance.decode(""0000111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,265,"ecoded = instance.decode(""0001111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,266,"decoded = instance.decode(""0001111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,270,"ecoded = instance.decode(""0011111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,271,"decoded = instance.decode(""0011111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,275,"ecoded = instance.decode(""0111111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,276,"decoded = instance.decode(""0111111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,280,"ecoded = instance.decode(""1111111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,281,"decoded = instance.decode(""1111111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,488,"yte[] decoded = BinaryCodec.fromAscii(""00000000"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,489,"byte[] decoded = BinaryCodec.fromAscii(""00000000"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,492,"ecoded = BinaryCodec.fromAscii(""00000001"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,493,"decoded = BinaryCodec.fromAscii(""00000001"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,496,"ecoded = BinaryCodec.fromAscii(""00000011"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,497,"decoded = BinaryCodec.fromAscii(""00000011"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,500,"ecoded = BinaryCodec.fromAscii(""00000111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,501,"decoded = BinaryCodec.fromAscii(""00000111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,504,"ecoded = BinaryCodec.fromAscii(""00001111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,505,"decoded = BinaryCodec.fromAscii(""00001111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,508,"ecoded = BinaryCodec.fromAscii(""00011111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,509,"decoded = BinaryCodec.fromAscii(""00011111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,512,"ecoded = BinaryCodec.fromAscii(""00111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,513,"decoded = BinaryCodec.fromAscii(""00111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,516,"ecoded = BinaryCodec.fromAscii(""01111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,517,"decoded = BinaryCodec.fromAscii(""01111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,520,"ecoded = BinaryCodec.fromAscii(""11111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,521,"decoded = BinaryCodec.fromAscii(""11111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,525,"ecoded = BinaryCodec.fromAscii(""0000000011111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,526,"decoded = BinaryCodec.fromAscii(""0000000011111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,530,"ecoded = BinaryCodec.fromAscii(""0000000111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,531,"decoded = BinaryCodec.fromAscii(""0000000111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,535,"ecoded = BinaryCodec.fromAscii(""0000001111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,536,"decoded = BinaryCodec.fromAscii(""0000001111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,540,"ecoded = BinaryCodec.fromAscii(""0000011111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,541,"decoded = BinaryCodec.fromAscii(""0000011111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,545,"ecoded = BinaryCodec.fromAscii(""0000111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,546,"decoded = BinaryCodec.fromAscii(""0000111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,550,"ecoded = BinaryCodec.fromAscii(""0001111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,551,"decoded = BinaryCodec.fromAscii(""0001111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,555,"ecoded = BinaryCodec.fromAscii(""0011111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,556,"decoded = BinaryCodec.fromAscii(""0011111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,560,"ecoded = BinaryCodec.fromAscii(""0111111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,561,"decoded = BinaryCodec.fromAscii(""0111111111111111"".getBytes(Charsets.UTF_8));"
False,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,565,"ecoded = BinaryCodec.fromAscii(""1111111111111111"".getBytes(""UTF-8""));"
True,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java,566,"decoded = BinaryCodec.fromAscii(""1111111111111111"".getBytes(Charsets.UTF_8));"
True,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,27,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,157,"ncodeQuotedPrintable(null, plain.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,158,"encodeQuotedPrintable(null, plain.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,196,"yte[] plainBA = plain.getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,197,byte[] plainBA = plain.getBytes(Charsets.UTF_8);
False,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,227,"yte[] plainBA = plain.getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java,228,byte[] plainBA = plain.getBytes(Charsets.UTF_8);
True,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,27,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,190,"tring encoded = new String( URLCodec.encodeUrl(null, plain.getBytes(""UTF-8"")));"
True,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,191,"String encoded = new String( URLCodec.encodeUrl(null, plain.getBytes(Charsets.UTF_8)));"
False,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,229,"yte[] plainBA = plain.getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,230,byte[] plainBA = plain.getBytes(Charsets.UTF_8);
False,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,275,"yte[] plainBA = plain.getBytes(""UTF-8"");"
True,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,src/test/java/org/apache/commons/codec/net/URLCodecTest.java,276,byte[] plainBA = plain.getBytes(Charsets.UTF_8);
