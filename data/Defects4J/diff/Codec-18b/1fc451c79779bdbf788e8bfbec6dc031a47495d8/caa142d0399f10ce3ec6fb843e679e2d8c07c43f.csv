is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,138,* {@inheritDoc}
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,140,* @throws IllegalArgumentException if the provided skip length is negative
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,142,@Override
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,143,public long skip(long n) throws IOException {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,144,if (n < 0) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,145,"throw new IllegalArgumentException(""Negative skip length"");"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,148,// skip in chunks of 512 bytes
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,149,final byte[] b = new byte[512];
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,150,"final int max = (int) Math.min(n, Integer.MAX_VALUE);"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,151,int total = 0;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,153,while (total < max) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,154,int len = max - total;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,155,if (len > b.length) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,156,len = b.length;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,158,"len = read(b, 0, len);"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,159,if (len == EOF) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,160,break;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,162,total += len;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,165,return total;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,169,* {@inheritDoc}
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,171,"* @return <code>0</code> if the {@link InputStream} has reached <code>EOF</code>,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,172,* <code>1</code> otherwise
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,174,public int available() throws IOException {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,175,// Note: the logic is similar to the InflaterInputStream:
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,176,"//       as long as we have not reached EOF, indicate that there is more"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,177,"//       data available. As we do not know for sure how much data is left,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,178,//       just return 1 as a safe guess.
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,180,// use the EOF flag of the underlying codec instance
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,181,if (baseNCodec.eof) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,182,return 0;
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,183,} else {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java,184,return 1;
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,32,mport org.junit.Ignore;
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,49,Ignore
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,148,* Tests skipping past the end of a stream.
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,150,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,152,@Test
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,153,public void testAvailable() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,154,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,155,Base32InputStream b32stream = new Base32InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,156,"assertEquals(1, b32stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,157,"assertEquals(3, b32stream.skip(10));"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,158,// End of stream reached
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,159,"assertEquals(0, b32stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,160,"assertEquals(-1, b32stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,161,"assertEquals(-1, b32stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,162,"assertEquals(0, b32stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,486,* Tests skipping number of characters larger than the internal buffer.
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,488,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,490,@Test
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,491,public void testSkipBig() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,492,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,493,Base32InputStream b32stream = new Base32InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,494,"assertEquals(3, b32stream.skip(1024));"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,495,// End of stream reached
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,496,"assertEquals(-1, b32stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,497,"assertEquals(-1, b32stream.read());"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,478,"ssertEquals(8, b32stream.skip(10));"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,509,"// due to CODEC-130, skip now skips correctly decoded characters rather than encoded"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,510,"assertEquals(3, b32stream.skip(10));"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,493,"ssertEquals(8, b32stream.skip(8));"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,525,"// due to CODEC-130, skip now skips correctly decoded characters rather than encoded"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,526,"assertEquals(3, b32stream.skip(3));"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,533,* Tests if negative arguments to skip are handled correctly.
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,535,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,537,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,538,public void testSkipWrongArgument() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,539,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_FOO));
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,540,Base32InputStream b32stream = new Base32InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,541,b32stream.skip(-10);
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,35,mport org.junit.Ignore;
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,59,Ignore
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,156,* Tests skipping past the end of a stream.
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,158,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,160,@Test
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,161,public void testAvailable() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,162,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B64));
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,163,Base64InputStream b64stream = new Base64InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,164,"assertEquals(1, b64stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,165,"assertEquals(6, b64stream.skip(10));"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,166,// End of stream reached
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,167,"assertEquals(0, b64stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,168,"assertEquals(-1, b64stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,169,"assertEquals(-1, b64stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,170,"assertEquals(0, b64stream.available());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,480,* Tests skipping number of characters larger than the internal buffer.
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,482,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,484,@Test
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,485,public void testSkipBig() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,486,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B64));
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,487,Base64InputStream b64stream = new Base64InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,488,"assertEquals(6, b64stream.skip(1024));"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,489,// End of stream reached
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,490,"assertEquals(-1, b64stream.read());"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,491,"assertEquals(-1, b64stream.read());"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,489,"ssertEquals(8, b64stream.skip(10));"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,520,"// due to CODEC-130, skip now skips correctly decoded characters rather than encoded"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,521,"assertEquals(6, b64stream.skip(10));"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,504,"ssertEquals(8, b64stream.skip(8));"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,536,"// due to CODEC-130, skip now skips correctly decoded characters rather than encoded"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,537,"assertEquals(6, b64stream.skip(6));"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,544,* Tests if negative arguments to skip are handled correctly.
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,546,* @throws Throwable
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,548,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,549,public void testSkipWrongArgument() throws Throwable {
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,550,InputStream ins = new ByteArrayInputStream(StringUtils.getBytesIso8859_1(ENCODED_B64));
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,551,Base64InputStream b64stream = new Base64InputStream(ins);
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,552,b64stream.skip(-10);
