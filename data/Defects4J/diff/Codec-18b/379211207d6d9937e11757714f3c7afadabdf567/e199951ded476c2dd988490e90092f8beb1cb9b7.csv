is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,163,* Creates a Base32 codec used for decoding and encoding.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,164,* <p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,165,* When encoding the line length is 0 (no chunking).
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,166,* </p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,167,* @param pad byte used as padding byte.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,169,public Base32(final byte pad) {
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,170,"this(false, pad);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,170,"his(0, null, useHex);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,181,"this(0, null, useHex, PAD_DEFAULT);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,185,* Creates a Base32 codec used for decoding and encoding.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,186,* <p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,187,* When encoding the line length is 0 (no chunking).
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,188,* </p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,189,* @param useHex if {@code true} then use Base32 Hex alphabet
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,190,* @param pad byte used as padding byte.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,192,"public Base32(final boolean useHex, final byte pad) {"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,193,"this(0, null, useHex, pad);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,207,"his(lineLength, lineSeparator, false);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,230,"this(lineLength, lineSeparator, false, PAD_DEFAULT);"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,232,"uper(BYTES_PER_UNENCODED_BLOCK, BYTES_PER_ENCODED_BLOCK,"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,233,"ineLength,"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,234,ineSeparator == null ? 0 : lineSeparator.length);
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,235,f (useHex){
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,255,"this(lineLength, lineSeparator, useHex, PAD_DEFAULT);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,259,* Creates a Base32 / Base32 Hex codec used for decoding and encoding.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,260,* <p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,261,* When encoding the line length and line separator are given in the constructor.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,262,* </p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,263,* <p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,264,* Line lengths that aren't multiples of 8 will still essentially end up being multiples of 8 in the encoded data.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,265,* </p>
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,267,* @param lineLength
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,268,*            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,269,"*            8). If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,270,*            decoding.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,271,* @param lineSeparator
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,272,*            Each line of encoded data will end with this sequence of bytes.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,273,* @param useHex
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,274,"*            if {@code true}, then use Base32 Hex alphabet, otherwise use Base32 alphabet"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,275,* @param pad byte used as padding byte.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,276,* @throws IllegalArgumentException
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,277,*             The provided lineSeparator included some Base32 characters. That's not going to work! Or the
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,278,*             lineLength &gt; 0 and lineSeparator is null.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,280,"public Base32(final int lineLength, final byte[] lineSeparator, final boolean useHex, final byte pad) {"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,281,"super(BYTES_PER_UNENCODED_BLOCK, BYTES_PER_ENCODED_BLOCK, lineLength,"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,282,"lineSeparator == null ? 0 : lineSeparator.length, pad);"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,283,if (useHex) {
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,244,"hrow new IllegalArgumentException(""lineLength ""+lineLength+"" > 0, but lineSeparator is null"");"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,292,"throw new IllegalArgumentException(""lineLength "" + lineLength + "" > 0, but lineSeparator is null"");"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,308,if (isInAlphabet(pad) || isWhiteSpace(pad)) {
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,309,"throw new IllegalArgumentException(""pad must not be in alphabet or whitespace"");"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,295,f (b == PAD) {
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,347,if (b == pad) {
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,401,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,402,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,403,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,404,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,405,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,406,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,453,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,454,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,455,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,456,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,457,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,458,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,413,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,414,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,415,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,416,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,465,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,466,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,467,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,468,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,424,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,425,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,426,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,476,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,477,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,478,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,436,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,488,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,351,uffer[context.pos++] = PAD;
False,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,352,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,351,buffer[context.pos++] = pad;
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,352,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,362,uffer[context.pos++] = PAD;
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,362,buffer[context.pos++] = pad;
False,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,435,f (b == PAD) {
True,src/main/java/org/apache/commons/codec/binary/Base64.java,src/main/java/org/apache/commons/codec/binary/Base64.java,435,if (b == pad) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,157,* @deprecated Use {@link #pad}. Will be removed in 2.0.
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,159,@Deprecated
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,162,protected final byte pad; // instance variable just in case it needs to vary later
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,192,"this(unencodedBlockSize, encodedBlockSize, lineLength, chunkSeparatorLength, PAD_DEFAULT);"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,196,* Note <code>lineLength</code> is rounded down to the nearest multiple of {@link #encodedBlockSize}
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,197,"* If <code>chunkSeparatorLength</code> is zero, then chunking is disabled."
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,198,* @param unencodedBlockSize the size of an unencoded block (e.g. Base64 = 3)
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,199,* @param encodedBlockSize the size of an encoded block (e.g. Base64 = 4)
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,200,"* @param lineLength if &gt; 0, use chunking with a length <code>lineLength</code>"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,201,"* @param chunkSeparatorLength the chunk separator length, if relevant"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,202,* @param pad byte used as padding byte.
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,204,"protected BaseNCodec(final int unencodedBlockSize, final int encodedBlockSize,"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,205,"final int lineLength, final int chunkSeparatorLength, final byte pad) {"
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,212,this.pad = pad;
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,443,!allowWSPad || (arrayOctet[i] != PAD) && !isWhiteSpace(arrayOctet[i]))) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,465,(!allowWSPad || (arrayOctet[i] != pad) && !isWhiteSpace(arrayOctet[i]))) {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,477,f (PAD == element || isInAlphabet(element)) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,src/main/java/org/apache/commons/codec/binary/BaseNCodec.java,499,if (pad == element || isInAlphabet(element)) {
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,62,private static final String [][] BASE32_PAD_TEST_CASES = { // RFC 4648
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,64,"{""f""      ,""MY%%%%%%""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,65,"{""fo""     ,""MZXQ%%%%""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,66,"{""foo""    ,""MZXW6%%%""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,67,"{""foob""   ,""MZXW6YQ%""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,68,"{""fooba""  ,""MZXW6YTB""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,69,"{""foobar"" ,""MZXW6YTBOI%%%%%%""},"
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,146,@Test
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,147,public void testBase32SamplesNonDefaultPadding() throws Exception {
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,148,final Base32 codec = new Base32((byte)0x25); // '%' <=> 0x25
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,150,for (final String[] element : BASE32_PAD_TEST_CASES) {
True,src/test/java/org/apache/commons/codec/binary/Base32Test.java,src/test/java/org/apache/commons/codec/binary/Base32Test.java,151,"assertEquals(element[1], codec.encodeAsString(element[0].getBytes(Charsets.UTF_8)));"
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,24,import static org.junit.Assert.assertEquals;
False,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,161,ssertTrue(codec.containsAlphabetOrPad(new byte[]{codec.PAD}));
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,162,assertTrue(codec.containsAlphabetOrPad(new byte[]{codec.pad}));
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,170,@Test
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,171,public void testProvidePaddingByte() {
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,172,// Given
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,173,"codec = new BaseNCodec(0, 0, 0, 0, (byte)0x25) {"
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,174,@Override
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,175,protected boolean isInAlphabet(final byte b) {
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,176,return b=='O' || b == 'K'; // allow OK
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,179,@Override
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,180,"void encode(final byte[] pArray, final int i, final int length, final Context context) {"
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,183,@Override
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,184,"void decode(final byte[] pArray, final int i, final int length, final Context context) {"
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,188,// When
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,189,byte actualPaddingByte = codec.pad;
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,191,// Then
True,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java,192,"assertEquals(0x25, actualPaddingByte);"
