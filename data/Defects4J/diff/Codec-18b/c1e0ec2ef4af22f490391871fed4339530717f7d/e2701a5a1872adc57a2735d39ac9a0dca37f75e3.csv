is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,29,ublic abstract class StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,29,public abstract class StringEncoderAbstractTest<T extends StringEncoder> {
False,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,31,rotected StringEncoder stringEncoder = this.createStringEncoder();
True,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,31,protected T stringEncoder = this.createStringEncoder();
False,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,49,rotected abstract StringEncoder createStringEncoder();
True,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,49,protected abstract T createStringEncoder();
False,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,51,ublic StringEncoder getStringEncoder() {
True,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java,51,public T getStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,23,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,33,ublic class Caverphone1Test extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,32,public class Caverphone1Test extends StringEncoderAbstractTest<Caverphone1> {
False,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,36,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,src/test/java/org/apache/commons/codec/language/Caverphone1Test.java,35,protected Caverphone1 createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,23,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,33,ublic class Caverphone2Test extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,32,public class Caverphone2Test extends StringEncoderAbstractTest<Caverphone2> {
False,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,36,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,src/test/java/org/apache/commons/codec/language/Caverphone2Test.java,35,protected Caverphone2 createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,21,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,31,ublic class ColognePhoneticTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,30,public class ColognePhoneticTest extends StringEncoderAbstractTest<ColognePhonetic> {
False,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,34,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java,33,protected ColognePhonetic createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,22,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,35,ublic class DoubleMetaphone2Test extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,34,public class DoubleMetaphone2Test extends StringEncoderAbstractTest<DoubleMetaphone> {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1268,"ssertEquals(""Test ["" + i + ""]="" + value, TEST_DATA[i][typeIndex], this.getDoubleMetaphone().doubleMetaphone(value, alternate));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1267,"assertEquals(""Test ["" + i + ""]="" + value, TEST_DATA[i][typeIndex], this.getStringEncoder().doubleMetaphone(value, alternate));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1273,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1272,protected DoubleMetaphone createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1278, @return Returns the metaphone.
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1280,rivate DoubleMetaphone getDoubleMetaphone() {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java,1281,eturn (DoubleMetaphone) this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,26,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,38,ublic class DoubleMetaphoneTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,37,public class DoubleMetaphoneTest extends StringEncoderAbstractTest<DoubleMetaphone> {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1012,"ssertEquals(expected, this.getDoubleMetaphone().encode(source));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1011,"assertEquals(expected, this.getStringEncoder().encode(source));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1014,"ssertEquals(expected, this.getDoubleMetaphone().encode((Object) source));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1013,"assertEquals(expected, this.getStringEncoder().encode((Object) source));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1018,"ssertEquals(expected, this.getDoubleMetaphone().doubleMetaphone(source));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1019,"ssertEquals(expected, this.getDoubleMetaphone().doubleMetaphone(source, false));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1017,"assertEquals(expected, this.getStringEncoder().doubleMetaphone(source));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1018,"assertEquals(expected, this.getStringEncoder().doubleMetaphone(source, false));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1026,"ssertEquals(expected, this.getDoubleMetaphone().doubleMetaphone(source, true));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1025,"assertEquals(expected, this.getStringEncoder().doubleMetaphone(source, true));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1035,"ssertTrue(failMsg, this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1, useAlternate));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1036,"ssertTrue(failMsg, this.getDoubleMetaphone().isDoubleMetaphoneEqual(name1, name0, useAlternate));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1034,"assertTrue(failMsg, this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1, useAlternate));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1035,"assertTrue(failMsg, this.getStringEncoder().isDoubleMetaphoneEqual(name1, name0, useAlternate));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1038,"ssertTrue(failMsg, this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1039,"ssertTrue(failMsg, this.getDoubleMetaphone().isDoubleMetaphoneEqual(name1, name0));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1037,"assertTrue(failMsg, this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1038,"assertTrue(failMsg, this.getStringEncoder().isDoubleMetaphoneEqual(name1, name0));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1045,"ssertFalse(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""Brain"", ""Band"", alternate));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1046,"ssertFalse(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""Band"", ""Brain"", alternate));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1044,"assertFalse(this.getStringEncoder().isDoubleMetaphoneEqual(""Brain"", ""Band"", alternate));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1045,"assertFalse(this.getStringEncoder().isDoubleMetaphoneEqual(""Band"", ""Brain"", alternate));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1049,"ssertFalse(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""Brain"", ""Band""));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1050,"ssertFalse(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""Band"", ""Brain""));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1048,"assertFalse(this.getStringEncoder().isDoubleMetaphoneEqual(""Brain"", ""Band""));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1049,"assertFalse(this.getStringEncoder().isDoubleMetaphoneEqual(""Band"", ""Brain""));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1054,rivate DoubleMetaphone getDoubleMetaphone() {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1055,eturn (DoubleMetaphone) this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1059,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1054,protected DoubleMetaphone createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1106,"ssertEquals(null, this.getDoubleMetaphone().doubleMetaphone(null));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1107,"ssertEquals(null, this.getDoubleMetaphone().doubleMetaphone(""""));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1108,"ssertEquals(null, this.getDoubleMetaphone().doubleMetaphone("" ""));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1109,"ssertEquals(null, this.getDoubleMetaphone().doubleMetaphone(""\t\n\r ""));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1101,"assertEquals(null, this.getStringEncoder().doubleMetaphone(null));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1102,"assertEquals(null, this.getStringEncoder().doubleMetaphone(""""));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1103,"assertEquals(null, this.getStringEncoder().doubleMetaphone("" ""));"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1104,"assertEquals(null, this.getStringEncoder().doubleMetaphone(""\t\n\r ""));"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1183,"oolean match1 = this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1, false);"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1184,"oolean match2 = this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1, true);"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1178,"boolean match1 = this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1, false);"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1179,"boolean match2 = this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1, true);"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1210,"oolean match1 = this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1, false);"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1211,"oolean match2 = this.getDoubleMetaphone().isDoubleMetaphoneEqual(name0, name1, true);"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1205,"boolean match1 = this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1, false);"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1206,"boolean match2 = this.getStringEncoder().isDoubleMetaphoneEqual(name0, name1, true);"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1226,"ssertTrue(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""\u00e7"", ""S"")); // c-cedilla"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1221,"assertTrue(this.getStringEncoder().isDoubleMetaphoneEqual(""\u00e7"", ""S"")); // c-cedilla"
False,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1231,"ssertTrue(this.getDoubleMetaphone().isDoubleMetaphoneEqual(""\u00f1"", ""N"")); // n-tilde"
True,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java,1226,"assertTrue(this.getStringEncoder().isDoubleMetaphoneEqual(""\u00f1"", ""N"")); // n-tilde"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,24,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,36,ublic class MatchRatingApproachEncoderTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,35,public class MatchRatingApproachEncoderTest extends StringEncoderAbstractTest<MatchRatingApproachEncoder> {
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,38,rivate MatchRatingApproachEncoder getMatchRatingApproachEncoder() {
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,39,eturn (MatchRatingApproachEncoder) this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,46,"ssertEquals(""aeiou"", getMatchRatingApproachEncoder().removeAccents(""áéíóú""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,43,"assertEquals(""aeiou"", this.getStringEncoder().removeAccents(""áéíóú""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,51,"ssertEquals(""ae io  u"", getMatchRatingApproachEncoder().removeAccents(""áé íó  ú""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,48,"assertEquals(""ae io  u"", this.getStringEncoder().removeAccents(""áé íó  ú""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,56,"ssertEquals(""AeiOuu"", getMatchRatingApproachEncoder().removeAccents(""ÁeíÓuu""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,53,"assertEquals(""AeiOuu"", this.getStringEncoder().removeAccents(""ÁeíÓuu""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,61,"ssertEquals(""A-e'i.,o&u"", getMatchRatingApproachEncoder().removeAccents(""Á-e'í.,ó&ú""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,58,"assertEquals(""A-e'i.,o&u"", this.getStringEncoder().removeAccents(""Á-e'í.,ó&ú""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,66,"ssertEquals(""aeoußAEOUnNa"", getMatchRatingApproachEncoder().removeAccents(""äëöüßÄËÖÜñÑà""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,63,"assertEquals(""aeoußAEOUnNa"", this.getStringEncoder().removeAccents(""äëöüßÄËÖÜñÑà""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,72,"etMatchRatingApproachEncoder().removeAccents(""È,É,Ê,Ë,Û,Ù,Ï,Î,À,Â,Ô,è,é,ê,ë,û,ù,ï,î,à,â,ô,ç""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,69,"this.getStringEncoder().removeAccents(""È,É,Ê,Ë,Û,Ù,Ï,Î,À,Â,Ô,è,é,ê,ë,û,ù,ï,î,à,â,ô,ç""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,77,"ssertEquals(""Colorless green ideas sleep furiously"", getMatchRatingApproachEncoder().removeAccents(""Colorless green ideas sleep furiously""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,74,"assertEquals(""Colorless green ideas sleep furiously"", this.getStringEncoder().removeAccents(""Colorless green ideas sleep furiously""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,82,"ssertEquals("""", getMatchRatingApproachEncoder().removeAccents(""""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,79,"assertEquals("""", this.getStringEncoder().removeAccents(""""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,87,"ssertEquals(""BUBLE"", getMatchRatingApproachEncoder().removeDoubleConsonants(""BUBBLE""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,84,"assertEquals(""BUBLE"", this.getStringEncoder().removeDoubleConsonants(""BUBBLE""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,92,"ssertEquals(""MISISIPI"", getMatchRatingApproachEncoder().removeDoubleConsonants(""MISSISSIPPI""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,89,"assertEquals(""MISISIPI"", this.getStringEncoder().removeDoubleConsonants(""MISSISSIPPI""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,97,"ssertEquals(""BEETLE"", getMatchRatingApproachEncoder().removeDoubleConsonants(""BEETLE""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,94,"assertEquals(""BEETLE"", this.getStringEncoder().removeDoubleConsonants(""BEETLE""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,102,"ssertEquals(true, getMatchRatingApproachEncoder().isVowel(""A""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,99,"assertEquals(true, this.getStringEncoder().isVowel(""A""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,107,"ssertFalse(getMatchRatingApproachEncoder().isVowel(""d""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,104,"assertFalse(this.getStringEncoder().isVowel(""d""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,112,"ssertEquals(""ALSSNDR"", getMatchRatingApproachEncoder().removeVowels(""ALESSANDRA""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,109,"assertEquals(""ALSSNDR"", this.getStringEncoder().removeVowels(""ALESSANDRA""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,117,"ssertEquals(""ADN"", getMatchRatingApproachEncoder().removeVowels(""AIDAN""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,114,"assertEquals(""ADN"", this.getStringEncoder().removeVowels(""AIDAN""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,122,"ssertEquals(""DCLN"", getMatchRatingApproachEncoder().removeVowels(""DECLAN""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,119,"assertEquals(""DCLN"", this.getStringEncoder().removeVowels(""DECLAN""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,127,"ssertEquals(""Aleder"", getMatchRatingApproachEncoder().getFirst3Last3(""Alexzander""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,124,"assertEquals(""Aleder"", this.getStringEncoder().getFirst3Last3(""Alexzander""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,132,"ssertEquals(""PETE"", getMatchRatingApproachEncoder().getFirst3Last3(""PETE""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,129,"assertEquals(""PETE"", this.getStringEncoder().getFirst3Last3(""PETE""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,137,"ssertEquals(4, getMatchRatingApproachEncoder().leftToRightThenRightToLeftProcessing(""ALEXANDER"", ""ALEXANDRA""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,134,"assertEquals(4, this.getStringEncoder().leftToRightThenRightToLeftProcessing(""ALEXANDER"", ""ALEXANDRA""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,142,"ssertEquals(0, getMatchRatingApproachEncoder().leftToRightThenRightToLeftProcessing(""EINSTEIN"", ""MICHAELA""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,139,"assertEquals(0, this.getStringEncoder().leftToRightThenRightToLeftProcessing(""EINSTEIN"", ""MICHAELA""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,147,"ssertEquals(4, getMatchRatingApproachEncoder().getMinRating(7));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,144,"assertEquals(4, this.getStringEncoder().getMinRating(7));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,152,"ssertEquals(5, getMatchRatingApproachEncoder().getMinRating(2));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,149,"assertEquals(5, this.getStringEncoder().getMinRating(2));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,157,"ssertEquals(1, getMatchRatingApproachEncoder().getMinRating(13));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,154,"assertEquals(1, this.getStringEncoder().getMinRating(13));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,162,"ssertEquals(""THISISATEST"", getMatchRatingApproachEncoder().cleanName(""This-ís   a t.,es &t""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,159,"assertEquals(""THISISATEST"", this.getStringEncoder().cleanName(""This-ís   a t.,es &t""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,171,"ssertEquals(""HRPR"", getMatchRatingApproachEncoder().encode(""HARPER""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,168,"assertEquals(""HRPR"", this.getStringEncoder().encode(""HARPER""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,176,"ssertEquals(""SMTH"", getMatchRatingApproachEncoder().encode(""Smith""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,173,"assertEquals(""SMTH"", this.getStringEncoder().encode(""Smith""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,181,"ssertEquals(""SMYTH"", getMatchRatingApproachEncoder().encode(""Smyth""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,178,"assertEquals(""SMYTH"", this.getStringEncoder().encode(""Smyth""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,186,"ssertEquals("""", getMatchRatingApproachEncoder().encode("" ""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,183,"assertEquals("""", this.getStringEncoder().encode("" ""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,191,"ssertEquals("""", getMatchRatingApproachEncoder().encode(""""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,188,"assertEquals("""", this.getStringEncoder().encode(""""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,196,"ssertEquals("""", getMatchRatingApproachEncoder().encode(null));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,193,"assertEquals("""", this.getStringEncoder().encode(null));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,201,"ssertEquals("""", getMatchRatingApproachEncoder().encode(""E""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,198,"assertEquals("""", this.getStringEncoder().encode(""E""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,210,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""smith"", ""smyth""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,207,"assertTrue(this.getStringEncoder().isEncodeEquals(""smith"", ""smyth""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,215,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Burns"", ""Bourne""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,212,"assertTrue(this.getStringEncoder().isEncodeEquals(""Burns"", ""Bourne""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,220,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Al"", ""Ed""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,217,"assertFalse(this.getStringEncoder().isEncodeEquals(""Al"", ""Ed""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,225,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Catherine"", ""Kathryn""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,222,"assertTrue(this.getStringEncoder().isEncodeEquals(""Catherine"", ""Kathryn""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,230,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Brian"", ""Bryan""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,227,"assertTrue(this.getStringEncoder().isEncodeEquals(""Brian"", ""Bryan""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,235,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Séan"", ""Shaun""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,232,"assertTrue(this.getStringEncoder().isEncodeEquals(""Séan"", ""Shaun""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,240,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Cólm.   "", ""C-olín""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,237,"assertTrue(this.getStringEncoder().isEncodeEquals(""Cólm.   "", ""C-olín""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,245,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Stephen"", ""Steven""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,242,"assertTrue(this.getStringEncoder().isEncodeEquals(""Stephen"", ""Steven""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,250,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Steven"", ""Stefan""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,247,"assertTrue(this.getStringEncoder().isEncodeEquals(""Steven"", ""Stefan""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,255,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Stephen"", ""Stefan""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,252,"assertTrue(this.getStringEncoder().isEncodeEquals(""Stephen"", ""Stefan""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,260,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Sam"", ""Samuel""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,257,"assertTrue(this.getStringEncoder().isEncodeEquals(""Sam"", ""Samuel""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,265,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Micky"", ""Michael""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,262,"assertTrue(this.getStringEncoder().isEncodeEquals(""Micky"", ""Michael""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,270,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Oona"", ""Oonagh""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,267,"assertTrue(this.getStringEncoder().isEncodeEquals(""Oona"", ""Oonagh""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,275,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Sophie"", ""Sofia""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,272,"assertTrue(this.getStringEncoder().isEncodeEquals(""Sophie"", ""Sofia""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,280,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Franciszek"", ""Frances""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,277,"assertTrue(this.getStringEncoder().isEncodeEquals(""Franciszek"", ""Frances""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,285,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Tomasz"", ""tom""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,282,"assertTrue(this.getStringEncoder().isEncodeEquals(""Tomasz"", ""tom""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,290,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Kl"", ""Karl""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,287,"assertTrue(this.getStringEncoder().isEncodeEquals(""Kl"", ""Karl""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,295,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Karl"", ""C""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,292,"assertFalse(this.getStringEncoder().isEncodeEquals(""Karl"", ""C""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,300,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Zach"", ""Zacharia""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,297,"assertTrue(this.getStringEncoder().isEncodeEquals(""Zach"", ""Zacharia""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,305,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Karl"", ""Alessandro""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,302,"assertFalse(this.getStringEncoder().isEncodeEquals(""Karl"", ""Alessandro""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,310,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Úna"", ""Oonagh"")); // Disappointing"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,307,"assertFalse(this.getStringEncoder().isEncodeEquals(""Úna"", ""Oonagh"")); // Disappointing"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,317,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""O'Sullivan"", ""Ó ' Súilleabháin""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,314,"assertTrue(this.getStringEncoder().isEncodeEquals(""O'Sullivan"", ""Ó ' Súilleabháin""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,322,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Moriarty"", ""OMuircheartaigh""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,319,"assertFalse(this.getStringEncoder().isEncodeEquals(""Moriarty"", ""OMuircheartaigh""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,327,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""o'muireadhaigh"", ""Ó 'Muircheartaigh ""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,324,"assertTrue(this.getStringEncoder().isEncodeEquals(""o'muireadhaigh"", ""Ó 'Muircheartaigh ""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,332,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Cooper-Flynn"", ""Super-Lyn""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,329,"assertTrue(this.getStringEncoder().isEncodeEquals(""Cooper-Flynn"", ""Super-Lyn""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,337,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Hailey"", ""Halley""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,334,"assertTrue(this.getStringEncoder().isEncodeEquals(""Hailey"", ""Halley""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,344,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Auerbach"", ""Uhrbach""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,341,"assertTrue(this.getStringEncoder().isEncodeEquals(""Auerbach"", ""Uhrbach""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,349,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Moskowitz"", ""Moskovitz""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,346,"assertTrue(this.getStringEncoder().isEncodeEquals(""Moskowitz"", ""Moskovitz""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,354,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""LIPSHITZ"", ""LIPPSZYC""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,351,"assertTrue(this.getStringEncoder().isEncodeEquals(""LIPSHITZ"", ""LIPPSZYC""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,359,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""LEWINSKY"", ""LEVINSKI""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,356,"assertTrue(this.getStringEncoder().isEncodeEquals(""LEWINSKY"", ""LEVINSKI""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,364,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""SZLAMAWICZ"", ""SHLAMOVITZ""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,361,"assertTrue(this.getStringEncoder().isEncodeEquals(""SZLAMAWICZ"", ""SHLAMOVITZ""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,369,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""R o s o ch o w a c ie c"", "" R o s o k ho v a ts e ts""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,366,"assertTrue(this.getStringEncoder().isEncodeEquals(""R o s o ch o w a c ie c"", "" R o s o k ho v a ts e ts""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,374,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals("" P rz e m y s l"", "" P sh e m e sh i l""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,371,"assertTrue(this.getStringEncoder().isEncodeEquals("" P rz e m y s l"", "" P sh e m e sh i l""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,381,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Peterson"", ""Peters""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,378,"assertTrue(this.getStringEncoder().isEncodeEquals(""Peterson"", ""Peters""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,386,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""McGowan"", ""Mc Geoghegan""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,383,"assertTrue(this.getStringEncoder().isEncodeEquals(""McGowan"", ""Mc Geoghegan""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,391,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Murphy"", "" ""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,388,"assertFalse(this.getStringEncoder().isEncodeEquals(""Murphy"", "" ""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,396,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Murphy"", """"));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,393,"assertFalse(this.getStringEncoder().isEncodeEquals(""Murphy"", """"));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,401,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(null, null));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,398,"assertFalse(this.getStringEncoder().isEncodeEquals(null, null));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,406,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Murphy"", ""Lynch""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,403,"assertFalse(this.getStringEncoder().isEncodeEquals(""Murphy"", ""Lynch""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,411,"ssertTrue(getMatchRatingApproachEncoder().isEncodeEquals(""Sean"", ""John""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,408,"assertTrue(this.getStringEncoder().isEncodeEquals(""Sean"", ""John""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,416,"ssertFalse(getMatchRatingApproachEncoder().isEncodeEquals(""Sean"", ""Pete""));"
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,413,"assertFalse(this.getStringEncoder().isEncodeEquals(""Sean"", ""Pete""));"
False,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,420,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java,417,protected MatchRatingApproachEncoder createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,24,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,31,ublic class MetaphoneTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,30,public class MetaphoneTest extends StringEncoderAbstractTest<Metaphone> {
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,37,"his.getMetaphone().isMetaphoneEqual(source, matche));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,36,"this.getStringEncoder().isMetaphoneEqual(source, matche));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,42,"ssertTrue(this.getMetaphone().isMetaphoneEqual(matche, matche2));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,41,"assertTrue(this.getStringEncoder().isMetaphoneEqual(matche, matche2));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,53,"ssertTrue(failMsg, this.getMetaphone().isMetaphoneEqual(name0, name1));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,54,"ssertTrue(failMsg, this.getMetaphone().isMetaphoneEqual(name1, name0));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,52,"assertTrue(failMsg, this.getStringEncoder().isMetaphoneEqual(name0, name1));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,53,"assertTrue(failMsg, this.getStringEncoder().isMetaphoneEqual(name1, name0));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,59, @return Returns the metaphone.
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,61,rivate Metaphone getMetaphone() {
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,62,eturn (Metaphone) this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,66,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,58,protected Metaphone createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,371,"ssertEquals(""HL"", this.getMetaphone().metaphone(""howl""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,372,"ssertEquals(""TSTN"", this.getMetaphone().metaphone(""testing""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,373,"ssertEquals(""0"", this.getMetaphone().metaphone(""The""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,374,"ssertEquals(""KK"", this.getMetaphone().metaphone(""quick""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,375,"ssertEquals(""BRN"", this.getMetaphone().metaphone(""brown""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,376,"ssertEquals(""FKS"", this.getMetaphone().metaphone(""fox""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,377,"ssertEquals(""JMPT"", this.getMetaphone().metaphone(""jumped""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,378,"ssertEquals(""OFR"", this.getMetaphone().metaphone(""over""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,379,"ssertEquals(""0"", this.getMetaphone().metaphone(""the""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,380,"ssertEquals(""LS"", this.getMetaphone().metaphone(""lazy""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,381,"ssertEquals(""TKS"", this.getMetaphone().metaphone(""dogs""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,363,"assertEquals(""HL"", this.getStringEncoder().metaphone(""howl""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,364,"assertEquals(""TSTN"", this.getStringEncoder().metaphone(""testing""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,365,"assertEquals(""0"", this.getStringEncoder().metaphone(""The""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,366,"assertEquals(""KK"", this.getStringEncoder().metaphone(""quick""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,367,"assertEquals(""BRN"", this.getStringEncoder().metaphone(""brown""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,368,"assertEquals(""FKS"", this.getStringEncoder().metaphone(""fox""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,369,"assertEquals(""JMPT"", this.getStringEncoder().metaphone(""jumped""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,370,"assertEquals(""OFR"", this.getStringEncoder().metaphone(""over""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,371,"assertEquals(""0"", this.getStringEncoder().metaphone(""the""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,372,"assertEquals(""LS"", this.getStringEncoder().metaphone(""lazy""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,373,"assertEquals(""TKS"", this.getStringEncoder().metaphone(""dogs""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,386,"ssertEquals( ""KM"", this.getMetaphone().metaphone(""COMB"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,387,"ssertEquals( ""TM"", this.getMetaphone().metaphone(""TOMB"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,388,"ssertEquals( ""WM"", this.getMetaphone().metaphone(""WOMB"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,378,"assertEquals( ""KM"", this.getStringEncoder().metaphone(""COMB"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,379,"assertEquals( ""TM"", this.getStringEncoder().metaphone(""TOMB"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,380,"assertEquals( ""WM"", this.getStringEncoder().metaphone(""WOMB"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,393,"ssertEquals( ""SNS"", this.getMetaphone().metaphone(""SCIENCE"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,394,"ssertEquals( ""SN"", this.getMetaphone().metaphone(""SCENE"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,395,"ssertEquals( ""S"", this.getMetaphone().metaphone(""SCY"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,385,"assertEquals( ""SNS"", this.getStringEncoder().metaphone(""SCIENCE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,386,"assertEquals( ""SN"", this.getStringEncoder().metaphone(""SCENE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,387,"assertEquals( ""S"", this.getStringEncoder().metaphone(""SCY"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,404,"ssertEquals("""", this.getMetaphone().metaphone(""WHY""));"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,396,"assertEquals("""", this.getStringEncoder().metaphone(""WHY""));"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,409,"ssertEquals( ""XP"", this.getMetaphone().metaphone(""CIAPO"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,401,"assertEquals( ""XP"", this.getStringEncoder().metaphone(""CIAPO"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,414,"ssertEquals( ""SKTL"", this.getMetaphone().metaphone(""SCHEDULE"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,415,"ssertEquals( ""SKMT"", this.getMetaphone().metaphone(""SCHEMATIC"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,406,"assertEquals( ""SKTL"", this.getStringEncoder().metaphone(""SCHEDULE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,407,"assertEquals( ""SKMT"", this.getStringEncoder().metaphone(""SCHEMATIC"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,417,"ssertEquals( ""KRKT"", this.getMetaphone().metaphone(""CHARACTER"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,418,"ssertEquals( ""TX"", this.getMetaphone().metaphone(""TEACH"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,409,"assertEquals( ""KRKT"", this.getStringEncoder().metaphone(""CHARACTER"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,410,"assertEquals( ""TX"", this.getStringEncoder().metaphone(""TEACH"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,423,"ssertEquals( ""TJ"", this.getMetaphone().metaphone(""DODGY"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,424,"ssertEquals( ""TJ"", this.getMetaphone().metaphone(""DODGE"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,425,"ssertEquals( ""AJMT"", this.getMetaphone().metaphone(""ADGIEMTI"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,415,"assertEquals( ""TJ"", this.getStringEncoder().metaphone(""DODGY"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,416,"assertEquals( ""TJ"", this.getStringEncoder().metaphone(""DODGE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,417,"assertEquals( ""AJMT"", this.getStringEncoder().metaphone(""ADGIEMTI"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,430,"ssertEquals( ""KNT"", this.getMetaphone().metaphone(""GHENT"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,431,"ssertEquals( ""B"", this.getMetaphone().metaphone(""BAUGH"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,422,"assertEquals( ""KNT"", this.getStringEncoder().metaphone(""GHENT"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,423,"assertEquals( ""B"", this.getStringEncoder().metaphone(""BAUGH"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,437,"ssertEquals( ""N"", this.getMetaphone().metaphone(""GNU"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,429,"assertEquals( ""N"", this.getStringEncoder().metaphone(""GNU"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,440,"ssertEquals( ""SNT"", this.getMetaphone().metaphone(""SIGNED"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,432,"assertEquals( ""SNT"", this.getStringEncoder().metaphone(""SIGNED"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,445,"ssertEquals( ""FX"", this.getMetaphone().metaphone(""PHISH"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,437,"assertEquals( ""FX"", this.getStringEncoder().metaphone(""PHISH"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,450,"ssertEquals( ""XT"", this.getMetaphone().metaphone(""SHOT"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,451,"ssertEquals( ""OTXN"", this.getMetaphone().metaphone(""ODSIAN"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,452,"ssertEquals( ""PLXN"", this.getMetaphone().metaphone(""PULSION"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,442,"assertEquals( ""XT"", this.getStringEncoder().metaphone(""SHOT"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,443,"assertEquals( ""OTXN"", this.getStringEncoder().metaphone(""ODSIAN"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,444,"assertEquals( ""PLXN"", this.getStringEncoder().metaphone(""PULSION"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,457,"ssertEquals( ""OX"", this.getMetaphone().metaphone(""OTIA"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,458,"ssertEquals( ""PRXN"", this.getMetaphone().metaphone(""PORTION"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,449,"assertEquals( ""OX"", this.getStringEncoder().metaphone(""OTIA"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,450,"assertEquals( ""PRXN"", this.getStringEncoder().metaphone(""PORTION"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,463,"ssertEquals( ""RX"", this.getMetaphone().metaphone(""RETCH"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,464,"ssertEquals( ""WX"", this.getMetaphone().metaphone(""WATCH"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,455,"assertEquals( ""RX"", this.getStringEncoder().metaphone(""RETCH"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,456,"assertEquals( ""WX"", this.getStringEncoder().metaphone(""WATCH"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,470,"ssertEquals( ""AKSK"", this.getMetaphone().metaphone(""AXEAXE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,462,"assertEquals( ""AKSK"", this.getStringEncoder().metaphone(""AXEAXE"") );"
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,476,his.getMetaphone().setMaxCodeLen( 6 );
False,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,477,"ssertEquals( ""AKSKSK"", this.getMetaphone().metaphone(""AXEAXEAXE"") );"
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,468,this.getStringEncoder().setMaxCodeLen( 6 );
True,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,src/test/java/org/apache/commons/codec/language/MetaphoneTest.java,469,"assertEquals( ""AKSKSK"", this.getStringEncoder().metaphone(""AXEAXEAXE"") );"
False,src/test/java/org/apache/commons/codec/language/NysiisTest.java,src/test/java/org/apache/commons/codec/language/NysiisTest.java,21,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/NysiisTest.java,src/test/java/org/apache/commons/codec/language/NysiisTest.java,32,ublic class NysiisTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/NysiisTest.java,src/test/java/org/apache/commons/codec/language/NysiisTest.java,31,public class NysiisTest extends StringEncoderAbstractTest<Nysiis> {
False,src/test/java/org/apache/commons/codec/language/NysiisTest.java,src/test/java/org/apache/commons/codec/language/NysiisTest.java,52,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/NysiisTest.java,src/test/java/org/apache/commons/codec/language/NysiisTest.java,51,protected Nysiis createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,23,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,32,ublic class RefinedSoundexTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,31,public class RefinedSoundexTest extends StringEncoderAbstractTest<RefinedSoundex> {
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,35,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,34,protected RefinedSoundex createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,40, @return Returns the encoder.
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,42,rivate RefinedSoundex getRefinedSoundex() {
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,43,eturn (RefinedSoundex)this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,49,"ssertEquals(0, this.getRefinedSoundex().difference(null, null));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,50,"ssertEquals(0, this.getRefinedSoundex().difference("""", """"));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,51,"ssertEquals(0, this.getRefinedSoundex().difference("" "", "" ""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,41,"assertEquals(0, this.getStringEncoder().difference(null, null));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,42,"assertEquals(0, this.getStringEncoder().difference("""", """"));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,43,"assertEquals(0, this.getStringEncoder().difference("" "", "" ""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,53,"ssertEquals(6, this.getRefinedSoundex().difference(""Smith"", ""Smythe""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,54,"ssertEquals(3, this.getRefinedSoundex().difference(""Ann"", ""Andrew""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,55,"ssertEquals(1, this.getRefinedSoundex().difference(""Margaret"", ""Andrew""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,56,"ssertEquals(1, this.getRefinedSoundex().difference(""Janet"", ""Margaret""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,45,"assertEquals(6, this.getStringEncoder().difference(""Smith"", ""Smythe""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,46,"assertEquals(3, this.getStringEncoder().difference(""Ann"", ""Andrew""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,47,"assertEquals(1, this.getStringEncoder().difference(""Margaret"", ""Andrew""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,48,"assertEquals(1, this.getStringEncoder().difference(""Janet"", ""Margaret""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,59,"ssertEquals(5, this.getRefinedSoundex().difference(""Green"", ""Greene""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,60,"ssertEquals(1, this.getRefinedSoundex().difference(""Blotchet-Halls"", ""Greene""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,51,"assertEquals(5, this.getStringEncoder().difference(""Green"", ""Greene""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,52,"assertEquals(1, this.getStringEncoder().difference(""Blotchet-Halls"", ""Greene""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,63,"ssertEquals(6, this.getRefinedSoundex().difference(""Smith"", ""Smythe""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,64,"ssertEquals(8, this.getRefinedSoundex().difference(""Smithers"", ""Smythers""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,65,"ssertEquals(5, this.getRefinedSoundex().difference(""Anothers"", ""Brothers""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,55,"assertEquals(6, this.getStringEncoder().difference(""Smith"", ""Smythe""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,56,"assertEquals(8, this.getStringEncoder().difference(""Smithers"", ""Smythers""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,57,"assertEquals(5, this.getStringEncoder().difference(""Anothers"", ""Brothers""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,70,"ssertEquals(""T6036084"", this.getRefinedSoundex().encode(""testing""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,71,"ssertEquals(""T6036084"", this.getRefinedSoundex().encode(""TESTING""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,72,"ssertEquals(""T60"", this.getRefinedSoundex().encode(""The""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,73,"ssertEquals(""Q503"", this.getRefinedSoundex().encode(""quick""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,74,"ssertEquals(""B1908"", this.getRefinedSoundex().encode(""brown""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,75,"ssertEquals(""F205"", this.getRefinedSoundex().encode(""fox""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,76,"ssertEquals(""J408106"", this.getRefinedSoundex().encode(""jumped""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,77,"ssertEquals(""O0209"", this.getRefinedSoundex().encode(""over""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,78,"ssertEquals(""T60"", this.getRefinedSoundex().encode(""the""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,79,"ssertEquals(""L7050"", this.getRefinedSoundex().encode(""lazy""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,80,"ssertEquals(""D6043"", this.getRefinedSoundex().encode(""dogs""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,62,"assertEquals(""T6036084"", this.getStringEncoder().encode(""testing""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,63,"assertEquals(""T6036084"", this.getStringEncoder().encode(""TESTING""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,64,"assertEquals(""T60"", this.getStringEncoder().encode(""The""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,65,"assertEquals(""Q503"", this.getStringEncoder().encode(""quick""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,66,"assertEquals(""B1908"", this.getStringEncoder().encode(""brown""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,67,"assertEquals(""F205"", this.getStringEncoder().encode(""fox""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,68,"assertEquals(""J408106"", this.getStringEncoder().encode(""jumped""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,69,"assertEquals(""O0209"", this.getStringEncoder().encode(""over""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,70,"assertEquals(""T60"", this.getStringEncoder().encode(""the""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,71,"assertEquals(""L7050"", this.getStringEncoder().encode(""lazy""));"
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,72,"assertEquals(""D6043"", this.getStringEncoder().encode(""dogs""));"
False,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,88,har code = this.getRefinedSoundex().getMappingCode('#');
True,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java,80,char code = this.getStringEncoder().getMappingCode('#');
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,25,mport org.apache.commons.codec.StringEncoder;
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,36,ublic class SoundexTest extends StringEncoderAbstractTest {
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,35,public class SoundexTest extends StringEncoderAbstractTest<Soundex> {
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,39,rotected StringEncoder createStringEncoder() {
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,38,protected Soundex createStringEncoder() {
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,44, @return Returns the encoder.
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,46,ublic Soundex getSoundexEncoder() {
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,47,eturn (Soundex)this.getStringEncoder();
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,97,"ssert.assertEquals(""H452"", this.getSoundexEncoder().encode(""HOL>MES""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,89,"Assert.assertEquals(""H452"", this.getStringEncoder().encode(""HOL>MES""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,104,"ssert.assertEquals(0, this.getSoundexEncoder().difference(null, null));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,105,"ssert.assertEquals(0, this.getSoundexEncoder().difference("""", """"));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,106,"ssert.assertEquals(0, this.getSoundexEncoder().difference("" "", "" ""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,96,"Assert.assertEquals(0, this.getStringEncoder().difference(null, null));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,97,"Assert.assertEquals(0, this.getStringEncoder().difference("""", """"));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,98,"Assert.assertEquals(0, this.getStringEncoder().difference("" "", "" ""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,108,"ssert.assertEquals(4, this.getSoundexEncoder().difference(""Smith"", ""Smythe""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,109,"ssert.assertEquals(2, this.getSoundexEncoder().difference(""Ann"", ""Andrew""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,110,"ssert.assertEquals(1, this.getSoundexEncoder().difference(""Margaret"", ""Andrew""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,111,"ssert.assertEquals(0, this.getSoundexEncoder().difference(""Janet"", ""Margaret""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,100,"Assert.assertEquals(4, this.getStringEncoder().difference(""Smith"", ""Smythe""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,101,"Assert.assertEquals(2, this.getStringEncoder().difference(""Ann"", ""Andrew""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,102,"Assert.assertEquals(1, this.getStringEncoder().difference(""Margaret"", ""Andrew""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,103,"Assert.assertEquals(0, this.getStringEncoder().difference(""Janet"", ""Margaret""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,113,"ssert.assertEquals(4, this.getSoundexEncoder().difference(""Green"", ""Greene""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,114,"ssert.assertEquals(0, this.getSoundexEncoder().difference(""Blotchet-Halls"", ""Greene""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,105,"Assert.assertEquals(4, this.getStringEncoder().difference(""Green"", ""Greene""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,106,"Assert.assertEquals(0, this.getStringEncoder().difference(""Blotchet-Halls"", ""Greene""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,116,"ssert.assertEquals(4, this.getSoundexEncoder().difference(""Smith"", ""Smythe""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,117,"ssert.assertEquals(4, this.getSoundexEncoder().difference(""Smithers"", ""Smythers""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,118,"ssert.assertEquals(2, this.getSoundexEncoder().difference(""Anothers"", ""Brothers""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,108,"Assert.assertEquals(4, this.getStringEncoder().difference(""Smith"", ""Smythe""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,109,"Assert.assertEquals(4, this.getStringEncoder().difference(""Smithers"", ""Smythers""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,110,"Assert.assertEquals(2, this.getStringEncoder().difference(""Anothers"", ""Brothers""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,123,"ssert.assertEquals(""T235"", this.getSoundexEncoder().encode(""testing""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,124,"ssert.assertEquals(""T000"", this.getSoundexEncoder().encode(""The""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,125,"ssert.assertEquals(""Q200"", this.getSoundexEncoder().encode(""quick""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,126,"ssert.assertEquals(""B650"", this.getSoundexEncoder().encode(""brown""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,127,"ssert.assertEquals(""F200"", this.getSoundexEncoder().encode(""fox""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,128,"ssert.assertEquals(""J513"", this.getSoundexEncoder().encode(""jumped""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,129,"ssert.assertEquals(""O160"", this.getSoundexEncoder().encode(""over""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,130,"ssert.assertEquals(""T000"", this.getSoundexEncoder().encode(""the""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,131,"ssert.assertEquals(""L200"", this.getSoundexEncoder().encode(""lazy""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,132,"ssert.assertEquals(""D200"", this.getSoundexEncoder().encode(""dogs""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,115,"Assert.assertEquals(""T235"", this.getStringEncoder().encode(""testing""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,116,"Assert.assertEquals(""T000"", this.getStringEncoder().encode(""The""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,117,"Assert.assertEquals(""Q200"", this.getStringEncoder().encode(""quick""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,118,"Assert.assertEquals(""B650"", this.getStringEncoder().encode(""brown""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,119,"Assert.assertEquals(""F200"", this.getStringEncoder().encode(""fox""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,120,"Assert.assertEquals(""J513"", this.getStringEncoder().encode(""jumped""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,121,"Assert.assertEquals(""O160"", this.getStringEncoder().encode(""over""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,122,"Assert.assertEquals(""T000"", this.getStringEncoder().encode(""the""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,123,"Assert.assertEquals(""L200"", this.getStringEncoder().encode(""lazy""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,124,"Assert.assertEquals(""D200"", this.getStringEncoder().encode(""dogs""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,140,"ssert.assertEquals(""A462"", this.getSoundexEncoder().encode(""Allricht""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,141,"ssert.assertEquals(""E166"", this.getSoundexEncoder().encode(""Eberhard""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,142,"ssert.assertEquals(""E521"", this.getSoundexEncoder().encode(""Engebrethson""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,143,"ssert.assertEquals(""H512"", this.getSoundexEncoder().encode(""Heimbach""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,144,"ssert.assertEquals(""H524"", this.getSoundexEncoder().encode(""Hanselmann""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,145,"ssert.assertEquals(""H431"", this.getSoundexEncoder().encode(""Hildebrand""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,146,"ssert.assertEquals(""K152"", this.getSoundexEncoder().encode(""Kavanagh""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,147,"ssert.assertEquals(""L530"", this.getSoundexEncoder().encode(""Lind""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,148,"ssert.assertEquals(""L222"", this.getSoundexEncoder().encode(""Lukaschowsky""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,149,"ssert.assertEquals(""M235"", this.getSoundexEncoder().encode(""McDonnell""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,150,"ssert.assertEquals(""M200"", this.getSoundexEncoder().encode(""McGee""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,151,"ssert.assertEquals(""O155"", this.getSoundexEncoder().encode(""Opnian""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,152,"ssert.assertEquals(""O155"", this.getSoundexEncoder().encode(""Oppenheimer""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,153,"ssert.assertEquals(""R355"", this.getSoundexEncoder().encode(""Riedemanas""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,154,"ssert.assertEquals(""Z300"", this.getSoundexEncoder().encode(""Zita""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,155,"ssert.assertEquals(""Z325"", this.getSoundexEncoder().encode(""Zitzmeinn""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,132,"Assert.assertEquals(""A462"", this.getStringEncoder().encode(""Allricht""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,133,"Assert.assertEquals(""E166"", this.getStringEncoder().encode(""Eberhard""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,134,"Assert.assertEquals(""E521"", this.getStringEncoder().encode(""Engebrethson""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,135,"Assert.assertEquals(""H512"", this.getStringEncoder().encode(""Heimbach""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,136,"Assert.assertEquals(""H524"", this.getStringEncoder().encode(""Hanselmann""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,137,"Assert.assertEquals(""H431"", this.getStringEncoder().encode(""Hildebrand""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,138,"Assert.assertEquals(""K152"", this.getStringEncoder().encode(""Kavanagh""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,139,"Assert.assertEquals(""L530"", this.getStringEncoder().encode(""Lind""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,140,"Assert.assertEquals(""L222"", this.getStringEncoder().encode(""Lukaschowsky""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,141,"Assert.assertEquals(""M235"", this.getStringEncoder().encode(""McDonnell""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,142,"Assert.assertEquals(""M200"", this.getStringEncoder().encode(""McGee""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,143,"Assert.assertEquals(""O155"", this.getStringEncoder().encode(""Opnian""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,144,"Assert.assertEquals(""O155"", this.getStringEncoder().encode(""Oppenheimer""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,145,"Assert.assertEquals(""R355"", this.getStringEncoder().encode(""Riedemanas""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,146,"Assert.assertEquals(""Z300"", this.getStringEncoder().encode(""Zita""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,147,"Assert.assertEquals(""Z325"", this.getStringEncoder().encode(""Zitzmeinn""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,163,"ssert.assertEquals(""W252"", this.getSoundexEncoder().encode(""Washington""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,164,"ssert.assertEquals(""L000"", this.getSoundexEncoder().encode(""Lee""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,165,"ssert.assertEquals(""G362"", this.getSoundexEncoder().encode(""Gutierrez""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,166,"ssert.assertEquals(""P236"", this.getSoundexEncoder().encode(""Pfister""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,167,"ssert.assertEquals(""J250"", this.getSoundexEncoder().encode(""Jackson""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,168,"ssert.assertEquals(""T522"", this.getSoundexEncoder().encode(""Tymczak""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,155,"Assert.assertEquals(""W252"", this.getStringEncoder().encode(""Washington""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,156,"Assert.assertEquals(""L000"", this.getStringEncoder().encode(""Lee""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,157,"Assert.assertEquals(""G362"", this.getStringEncoder().encode(""Gutierrez""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,158,"Assert.assertEquals(""P236"", this.getStringEncoder().encode(""Pfister""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,159,"Assert.assertEquals(""J250"", this.getStringEncoder().encode(""Jackson""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,160,"Assert.assertEquals(""T522"", this.getStringEncoder().encode(""Tymczak""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,171,"ssert.assertEquals(""V532"", this.getSoundexEncoder().encode(""VanDeusen""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,163,"Assert.assertEquals(""V532"", this.getStringEncoder().encode(""VanDeusen""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,179,"ssert.assertEquals(""H452"", this.getSoundexEncoder().encode(""HOLMES""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,180,"ssert.assertEquals(""A355"", this.getSoundexEncoder().encode(""ADOMOMI""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,181,"ssert.assertEquals(""V536"", this.getSoundexEncoder().encode(""VONDERLEHR""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,182,"ssert.assertEquals(""B400"", this.getSoundexEncoder().encode(""BALL""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,183,"ssert.assertEquals(""S000"", this.getSoundexEncoder().encode(""SHAW""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,184,"ssert.assertEquals(""J250"", this.getSoundexEncoder().encode(""JACKSON""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,185,"ssert.assertEquals(""S545"", this.getSoundexEncoder().encode(""SCANLON""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,186,"ssert.assertEquals(""S532"", this.getSoundexEncoder().encode(""SAINTJOHN""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,171,"Assert.assertEquals(""H452"", this.getStringEncoder().encode(""HOLMES""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,172,"Assert.assertEquals(""A355"", this.getStringEncoder().encode(""ADOMOMI""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,173,"Assert.assertEquals(""V536"", this.getStringEncoder().encode(""VONDERLEHR""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,174,"Assert.assertEquals(""B400"", this.getStringEncoder().encode(""BALL""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,175,"Assert.assertEquals(""S000"", this.getStringEncoder().encode(""SHAW""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,176,"Assert.assertEquals(""J250"", this.getStringEncoder().encode(""JACKSON""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,177,"Assert.assertEquals(""S545"", this.getStringEncoder().encode(""SCANLON""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,178,"Assert.assertEquals(""S532"", this.getStringEncoder().encode(""SAINTJOHN""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,226,"ssert.assertEquals(""W252"", this.getSoundexEncoder().encode("" \t\n\r Washington \t\n\r ""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,218,"Assert.assertEquals(""W252"", this.getStringEncoder().encode("" \t\n\r Washington \t\n\r ""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,238,"ssert.assertEquals(""A261"", this.getSoundexEncoder().encode(""Ashcraft""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,230,"Assert.assertEquals(""A261"", this.getStringEncoder().encode(""Ashcraft""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,248,"ssert.assertEquals(""B312"", this.getSoundexEncoder().encode(""BOOTHDAVIS""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,249,"ssert.assertEquals(""B312"", this.getSoundexEncoder().encode(""BOOTH-DAVIS""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,240,"Assert.assertEquals(""B312"", this.getStringEncoder().encode(""BOOTHDAVIS""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,241,"Assert.assertEquals(""B312"", this.getStringEncoder().encode(""BOOTH-DAVIS""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,259,"ssert.assertEquals(""S460"", this.getSoundexEncoder().encode(""Sgler""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,260,"ssert.assertEquals(""S460"", this.getSoundexEncoder().encode(""Swhgler""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,251,"Assert.assertEquals(""S460"", this.getStringEncoder().encode(""Sgler""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,252,"Assert.assertEquals(""S460"", this.getStringEncoder().encode(""Swhgler""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,287,"ssert.assertEquals(""S530"", this.getSoundexEncoder().encode(""Smith""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,288,"ssert.assertEquals(""S530"", this.getSoundexEncoder().encode(""Smythe""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,279,"Assert.assertEquals(""S530"", this.getStringEncoder().encode(""Smith""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,280,"Assert.assertEquals(""S530"", this.getStringEncoder().encode(""Smythe""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,308,"ssert.assertEquals(""A500"", this.getSoundexEncoder().encode(""Ann""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,309,"ssert.assertEquals(""A536"", this.getSoundexEncoder().encode(""Andrew""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,310,"ssert.assertEquals(""J530"", this.getSoundexEncoder().encode(""Janet""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,311,"ssert.assertEquals(""M626"", this.getSoundexEncoder().encode(""Margaret""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,312,"ssert.assertEquals(""S315"", this.getSoundexEncoder().encode(""Steven""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,313,"ssert.assertEquals(""M240"", this.getSoundexEncoder().encode(""Michael""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,314,"ssert.assertEquals(""R163"", this.getSoundexEncoder().encode(""Robert""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,315,"ssert.assertEquals(""L600"", this.getSoundexEncoder().encode(""Laura""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,316,"ssert.assertEquals(""A500"", this.getSoundexEncoder().encode(""Anne""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,300,"Assert.assertEquals(""A500"", this.getStringEncoder().encode(""Ann""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,301,"Assert.assertEquals(""A536"", this.getStringEncoder().encode(""Andrew""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,302,"Assert.assertEquals(""J530"", this.getStringEncoder().encode(""Janet""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,303,"Assert.assertEquals(""M626"", this.getStringEncoder().encode(""Margaret""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,304,"Assert.assertEquals(""S315"", this.getStringEncoder().encode(""Steven""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,305,"Assert.assertEquals(""M240"", this.getStringEncoder().encode(""Michael""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,306,"Assert.assertEquals(""R163"", this.getStringEncoder().encode(""Robert""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,307,"Assert.assertEquals(""L600"", this.getStringEncoder().encode(""Laura""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,308,"Assert.assertEquals(""A500"", this.getStringEncoder().encode(""Anne""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,365,"ssert.assertEquals(""E000"", this.getSoundexEncoder().encode(""e""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,357,"Assert.assertEquals(""E000"", this.getStringEncoder().encode(""e""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,369,"ssert.assertEquals(""\u00c9000"", this.getSoundexEncoder().encode(""\u00e9""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,361,"Assert.assertEquals(""\u00c9000"", this.getStringEncoder().encode(""\u00e9""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,375,"ssert.assertEquals("""", this.getSoundexEncoder().encode(""\u00e9""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,367,"Assert.assertEquals("""", this.getStringEncoder().encode(""\u00e9""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,386,"ssert.assertEquals(""O000"", this.getSoundexEncoder().encode(""o""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,378,"Assert.assertEquals(""O000"", this.getStringEncoder().encode(""o""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,390,"ssert.assertEquals(""\u00d6000"", this.getSoundexEncoder().encode(""\u00f6""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,382,"Assert.assertEquals(""\u00d6000"", this.getStringEncoder().encode(""\u00f6""));"
False,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,396,"ssert.assertEquals("""", this.getSoundexEncoder().encode(""\u00f6""));"
True,src/test/java/org/apache/commons/codec/language/SoundexTest.java,src/test/java/org/apache/commons/codec/language/SoundexTest.java,388,"Assert.assertEquals("""", this.getStringEncoder().encode(""\u00f6""));"
