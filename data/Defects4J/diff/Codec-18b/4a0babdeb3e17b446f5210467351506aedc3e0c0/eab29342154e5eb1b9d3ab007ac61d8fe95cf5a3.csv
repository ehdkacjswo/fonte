is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,214,assertNotNull(base64);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,293,ublic void testDiscardWhitespace() throws Exception {
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,295,"tring orig = ""I am a late night coder."";"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,297,"yte[] encodedArray = Base64.encodeBase64(orig.getBytes(""UTF-8""));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,298,tringBuffer intermediate = new StringBuffer(new String(encodedArray));
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,300,"ntermediate.insert(2, ' ');"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,301,"ntermediate.insert(5, '\t');"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,302,"ntermediate.insert(10, '\r');"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,303,"ntermediate.insert(15, '\n');"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,305,"yte[] encodedWithWS = intermediate.toString().getBytes(""UTF-8"");"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,306,yte[] encodedNoWS = Base64.discardWhitespace(encodedWithWS);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,307,yte[] decodedWithWS = Base64.decodeBase64(encodedWithWS);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,308,yte[] decodedNoWS = Base64.decodeBase64(encodedNoWS);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,310,tring destFromWS = new String(decodedWithWS);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,311,tring destFromNoWS = new String(decodedNoWS);
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,313,"ssertTrue(""Dest string doesn't equal original"", destFromWS.equals(orig));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,314,"ssertTrue(""Dest string doesn't equal original"", destFromNoWS.equals(orig));"
