is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,2," $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.1 2003/04/25 17:50:56 tobrien Exp $"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,3, $Revision: 1.1 $
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,4, $Date: 2003/04/25 17:50:56 $
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,8," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,10, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,11, reserved.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,13," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,14," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,15, are met:
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,17, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,18,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,20, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,21,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,22,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,23,    distribution.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,25," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,26,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,27,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,28,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,29,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,30,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,32," 4. The names ""The Jakarta Project"", ""Tomcat"", and ""Apache Software"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,33,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,34,    from this software without prior written permission. For written
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,35,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,37," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,38,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,39,    permission of the Apache Group.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,41, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,42," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,43, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,44, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,45," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,46," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,47," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,48," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,49," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,50, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,51," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,52, SUCH DAMAGE.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,55, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,56, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,57," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,58, <http://www.apache.org/>.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,60," [Additional notices, if required by prior licensing conditions]"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,63,ackage org.apache.commons.codec.binary;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,65,mport org.apache.commons.codec.BinaryDecoder;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,66,mport org.apache.commons.codec.BinaryEncoder;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,67,mport org.apache.commons.codec.DecoderException;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,68,mport org.apache.commons.codec.EncoderException;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,71, This class provides encode/decode for RFC 2045 Base64 as
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,72," defined by RFC 2045, N. Freed and N. Borenstein.  <a"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,73," href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>:"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,74, Multipurpose Internet Mail Extensions (MIME) Part One: Format of
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,75, Internet Message Bodies. Reference 1996
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,77, @author Jeffrey Rodriguez
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78," @author <a href=""dlr@apache.org"">Daniel Rall</a>"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,79," @author <a href=""m.redington@ucl.ac.uk"">Martin Redington</a>"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,80, @since 1.0-dev
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,82, @todo Add more documentation
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,84,"ublic class Base64 implements BinaryEncoder, BinaryDecoder {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,86,/ Create constants pertaining to the chunk requirement
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,87,tatic final int CHUNK_SIZE = 76;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,88,"tatic final byte[] CHUNK_SEPARATOR = ""\n"".getBytes();"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,90,/ Create numerical and byte constants
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,91,tatic final int BASELENGTH = 255;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,92,tatic final int LOOKUPLENGTH = 64;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,93,tatic final int TWENTYFOURBITGROUP = 24;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,94,tatic final int EIGHTBIT = 8;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,95,tatic final int SIXTEENBIT = 16;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,96,tatic final int SIXBIT = 6;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,97,tatic final int FOURBYTE = 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,98,tatic final int SIGN = -128;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,99,tatic final byte PAD = (byte) '=';
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,101,/ Create arrays to hold the base64 characters and a
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,102,/ lookup for base64 chars
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,103,rivate static byte[] base64Alphabet = new byte[BASELENGTH];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,104,rivate static byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,106,/ Populating the lookup and character arrays
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,107,tatic {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,108,or (int i = 0; i < BASELENGTH; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,109,ase64Alphabet[i] = (byte) -1;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,111,or (int i = 'Z'; i >= 'A'; i--) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,112,ase64Alphabet[i] = (byte) (i - 'A');
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,114,or (int i = 'z'; i >= 'a'; i--) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,115,ase64Alphabet[i] = (byte) (i - 'a' + 26);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,117,or (int i = '9'; i >= '0'; i--) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,118,ase64Alphabet[i] = (byte) (i - '0' + 52);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,121,ase64Alphabet['+'] = 62;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,122,ase64Alphabet['/'] = 63;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,124,or (int i = 0; i <= 25; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,125,ookUpBase64Alphabet[i] = (byte) ('A' + i);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,128,"or (int i = 26, j = 0; i <= 51; i++, j++) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,129,ookUpBase64Alphabet[i] = (byte) ('a' + j);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,132,"or (int i = 52, j = 0; i <= 61; i++, j++) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,133,ookUpBase64Alphabet[i] = (byte) ('0' + j);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,136,ookUpBase64Alphabet[62] = (byte) '+';
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,137,ookUpBase64Alphabet[63] = (byte) '/';
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,140,rivate static boolean isBase64(byte octect) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,141,f (octect == PAD) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,142,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,144,lse if (base64Alphabet[octect] == -1) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,145,eturn false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,147,lse {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,148,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,152,ublic static boolean isArrayByteBase64(byte[] arrayOctect) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,154,rrayOctect = discardWhitespace(arrayOctect);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,156,nt length = arrayOctect.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,157,f (length == 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,158,/ shouldn't a 0 length array be valid base64 data?
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,159,/ return false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,160,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,162,or (int i = 0; i < length; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,163,f (!isBase64(arrayOctect[i])) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,164,eturn false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,167,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,171,ublic static byte[] encodeBase64(byte[] binaryData) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,172,"eturn (encodeBase64(binaryData, false));"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,175,ublic static byte[] encodeBase64Chunked(byte[] binaryData) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,176,"eturn (encodeBase64(binaryData, true));"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,179,ublic Object decode(Object pObject) throws DecoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,181,bject result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,183,f (!(pObject instanceof byte[])) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,184,hrow new DecoderException(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,185,"Parameter supplied to """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,186," ""Base64 """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,187," ""decode is not a byte[]"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,189,lse {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,190,esult = decode((byte[]) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,193,eturn result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,197,ublic byte[] decode(byte[] pArray) throws DecoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,199,yte[] result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,201,f (!isArrayByteBase64(pArray)) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,202,hrow new DecoderException(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,203,"Parameter supplied to """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,204," ""Base64 """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,205," ""decode is not a valid base64 data."");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,207,lse {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,208,esult = decodeBase64((byte[]) pArray);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,211,eturn (result);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,215, Encodes hex octects into Base64.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,217, @param binaryData Array containing binary data to encode.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,218, @return Base64-encoded data.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,220,"ublic static byte[] encodeBase64(byte[] binaryData, boolean isChunked) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,221,nt lengthDataBits = binaryData.length * EIGHTBIT;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,222,nt fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,223,nt numberTriplets = lengthDataBits / TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,224,yte encodedData[] = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,225,nt encodedDataLength = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,226,nt nbrChunks = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,228,f (fewerThan24bits != 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,229,/data not divisible by 24 bit
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,230,ncodedDataLength = (numberTriplets + 1) * 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,232,lse {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,233,/ 16 or 8 bit
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,234,ncodedDataLength = numberTriplets * 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,237,"/ If the output is to be ""chunked"" into 76 character sections,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,238,"/ for compliance with RFC 2045 MIME, then it is important to"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,239,/ allow for extra length to account for the separator(s)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,240,f (isChunked) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,242,brChunks =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,243,CHUNK_SEPARATOR.length == 0
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,244, 0
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,245, (int) Math.ceil((float) encodedDataLength / CHUNK_SIZE));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,246,ncodedDataLength += nbrChunks * CHUNK_SEPARATOR.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,249,ncodedData = new byte[encodedDataLength];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,251,"yte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,253,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,254,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,255,nt i = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,256,nt nextSeparatorIndex = CHUNK_SIZE;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,257,nt chunksSoFar = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,259,"/log.debug(""number of triplets = "" + numberTriplets);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,260,or (i = 0; i < numberTriplets; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,261,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,262,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,263,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,264,3 = binaryData[dataIndex + 2];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,266,"/log.debug(""b1= "" + b1 +"", b2= "" + b2 + "", b3= "" + b3);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,268, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,269, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,271,yte val1 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,272,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,273, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,274, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,275,yte val2 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,276,(b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,277, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,278, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,279,yte val3 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,280,(b3 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,281, (byte) (b3 >> 6)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,282, (byte) ((b3) >> 6 ^ 0xfc);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,284,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,285,"/log.debug( ""val2 = "" + val2 );"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,286,"/log.debug( ""k4   = "" + (k<<4) );"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,287,"/log.debug(  ""vak  = "" + (val2 | (k<<4)) );"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,288,ncodedData[encodedIndex + 1] =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,289,ookUpBase64Alphabet[val2 | (k << 4)];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,290,ncodedData[encodedIndex + 2] =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,291,ookUpBase64Alphabet[(l << 2) | val3];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,292,ncodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,294,ncodedIndex += 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,296,"/ If we are chunking, let's put a chunk separator down."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,297,f (isChunked) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,298,/ this assumes that CHUNK_SIZE % 4 == 0
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,299,f (encodedIndex == nextSeparatorIndex) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,300,ystem.arraycopy(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,301,"HUNK_SEPARATOR,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,302,","
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,303,"ncodedData,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,304,"ncodedIndex,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,305,HUNK_SEPARATOR.length);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,306,hunksSoFar++;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,307,extSeparatorIndex =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,308,CHUNK_SIZE * (chunksSoFar + 1))
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,309, (chunksSoFar * CHUNK_SEPARATOR.length);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,310,ncodedIndex += CHUNK_SEPARATOR.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,315,/ form integral number of 6-bit groups
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,316,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,318,f (fewerThan24bits == EIGHTBIT) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,319,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,320, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,321,"/log.debug(""b1="" + b1);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,322,"/log.debug(""b1<<2 = "" + (b1>>2) );"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,323,yte val1 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,324,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,325, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,326, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,327,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,328,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,329,ncodedData[encodedIndex + 2] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,330,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,332,lse if (fewerThan24bits == SIXTEENBIT) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,334,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,335,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,336, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,337, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,339,yte val1 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,340,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,341, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,342, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,343,yte val2 =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,344,(b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,345, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,346, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,348,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,349,ncodedData[encodedIndex + 1] =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,350,ookUpBase64Alphabet[val2 | (k << 4)];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,351,ncodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,352,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,355,f (isChunked) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,356,/ we also add a separator to the end of the final chunk.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,357,f (chunksSoFar < nbrChunks) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,358,ystem.arraycopy(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,359,"HUNK_SEPARATOR,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,360,","
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,361,"ncodedData,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,362,"ncodedDataLength - CHUNK_SEPARATOR.length,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,363,HUNK_SEPARATOR.length);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,367,eturn encodedData;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,371, Decodes Base64 data into octects
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,373, @param binaryData Byte array containing Base64 data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,374, @return Array containing decoded data.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,376,ublic static byte[] decodeBase64(byte[] base64Data) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,/ RFC 2045 suggests line wrapping at (no more than) 76
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,378,/ characters -- we may have embedded whitespace.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,379,ase64Data = discardWhitespace(base64Data);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,381,"/ handle the edge case, so we don't have to worry about it later"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,382,f (base64Data.length == 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,383,eturn new byte[0];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,386,nt numberQuadruple = base64Data.length / FOURBYTE;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,387,yte decodedData[] = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,388,"yte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,390,/ Throw away anything not in base64Data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,392,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,393,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,395,/ this sizes the output array properly - rlw
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,396,nt lastData = base64Data.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,397,/ ignore the '=' padding
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,398,hile (base64Data[lastData - 1] == PAD) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,399,f (--lastData == 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,400,eturn new byte[0];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,403,ecodedData = new byte[lastData - numberQuadruple];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,406,or (int i = 0; i < numberQuadruple; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,407,ataIndex = i * 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,408,arker0 = base64Data[dataIndex + 2];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,409,arker1 = base64Data[dataIndex + 3];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,411,1 = base64Alphabet[base64Data[dataIndex]];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,412,2 = base64Alphabet[base64Data[dataIndex + 1]];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,414,f (marker0 != PAD && marker1 != PAD) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,415,/No PAD e.g 3cQl
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,416,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,417,4 = base64Alphabet[marker1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,419,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,420,ecodedData[encodedIndex + 1] =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,421,byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,422,ecodedData[encodedIndex + 2] = (byte) (b3 << 6 | b4);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,424,lse if (marker0 == PAD) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,425,/Two PAD e.g. 3c[Pad][Pad]
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,426,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,428,lse if (marker1 == PAD) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,429,/One PAD e.g. 3cQ[Pad]
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,430,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,432,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,433,ecodedData[encodedIndex + 1] =
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,434,byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,436,ncodedIndex += 3;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,438,eturn decodedData;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,442, Discards any whitespace from a base-64 encoded block.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,444, @param data The base-64 encoded data to discard the whitespace
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,445, from.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,446," @return The data, less whitespace (see RFC 2045)."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,448,tatic byte[] discardWhitespace(byte[] data) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,449,yte groomedData[] = new byte[data.length];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,450,nt bytesCopied = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,452,or (int i = 0; i < data.length; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,453,witch (data[i]) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,454,ase (byte) ' ' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,455,ase (byte) '\n' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,456,ase (byte) '\r' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,457,ase (byte) '\t' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,458,reak;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,459,efault:
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,460,roomedData[bytesCopied++] = data[i];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,464,yte packedData[] = new byte[bytesCopied];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,466,"ystem.arraycopy(groomedData, 0, packedData, 0, bytesCopied);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,468,eturn packedData;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,471,/ Implementation of the Encoder Interface
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,474, encode an Object
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,476,ublic Object encode(Object pObject) throws EncoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,478,bject result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,480,f (!(pObject instanceof byte[])) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,481,hrow new EncoderException(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,482,"Parameter supplied to """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,483," ""Base64 """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,484," ""encode is not a byte[]"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,486,lse {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,487,esult = encode((byte[]) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,490,eturn result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,494,ublic byte[] encode(byte[] pArray) throws EncoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,495,"eturn (encodeBase64(pArray, false));"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/binary/Base64.java,v 1.2 2003/05/06 20:52:18 ggregory Exp $"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,3,* $Revision: 1.2 $
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,4,* $Date: 2003/05/06 20:52:18 $
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,10,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,11,* reserved.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,15,* are met:
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,23,*    distribution.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,32,"* 4. The names ""The Jakarta Project"", ""Tomcat"", and ""Apache Software"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,60,"* [Additional notices, if required by prior licensing conditions]"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,63,package org.apache.commons.codec.binary;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,65,import org.apache.commons.codec.BinaryDecoder;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,66,import org.apache.commons.codec.BinaryEncoder;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,67,import org.apache.commons.codec.DecoderException;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,68,import org.apache.commons.codec.EncoderException;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,71,* Provides encode/decode for RFC 2045 Base64 as
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,72,"* defined by RFC 2045, by Freed and Borenstein.  <a"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,73,"* href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045</a>:"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,74,* Multipurpose Internet Mail Extensions (MIME) Part One: Format of
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,75,* Internet Message Bodies. Reference 1996.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,77,* @author Jeffrey Rodriguez
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78,"* @author <a href=""dlr@apache.org"">Daniel Rall</a>"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,79,"* @author <a href=""m.redington@ucl.ac.uk"">Martin Redington</a>"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,80,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,81,* @since 1.0-dev
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,83,* @todo Add more documentation
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,85,"public class Base64 implements BinaryEncoder, BinaryDecoder {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,87,// Create constants pertaining to the chunk requirement
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,88,static final int CHUNK_SIZE = 76;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,89,"static final byte[] CHUNK_SEPARATOR = ""\n"".getBytes();"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,91,// Create numerical and byte constants
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,92,static final int BASELENGTH = 255;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,93,static final int LOOKUPLENGTH = 64;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,94,static final int TWENTYFOURBITGROUP = 24;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,95,static final int EIGHTBIT = 8;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,96,static final int SIXTEENBIT = 16;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,97,static final int SIXBIT = 6;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,98,static final int FOURBYTE = 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,99,static final int SIGN = -128;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,100,static final byte PAD = (byte) '=';
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,102,// Create arrays to hold the base64 characters and a
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,103,// lookup for base64 chars
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,104,private static byte[] base64Alphabet = new byte[BASELENGTH];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,105,private static byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,107,// Populating the lookup and character arrays
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,108,static {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,109,for (int i = 0; i < BASELENGTH; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,110,base64Alphabet[i] = (byte) -1;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,112,for (int i = 'Z'; i >= 'A'; i--) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,113,base64Alphabet[i] = (byte) (i - 'A');
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,115,for (int i = 'z'; i >= 'a'; i--) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,116,base64Alphabet[i] = (byte) (i - 'a' + 26);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,118,for (int i = '9'; i >= '0'; i--) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,119,base64Alphabet[i] = (byte) (i - '0' + 52);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,122,base64Alphabet['+'] = 62;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,123,base64Alphabet['/'] = 63;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,125,for (int i = 0; i <= 25; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,126,lookUpBase64Alphabet[i] = (byte) ('A' + i);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,129,"for (int i = 26, j = 0; i <= 51; i++, j++) {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,130,lookUpBase64Alphabet[i] = (byte) ('a' + j);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,133,"for (int i = 52, j = 0; i <= 61; i++, j++) {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,134,lookUpBase64Alphabet[i] = (byte) ('0' + j);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,137,lookUpBase64Alphabet[62] = (byte) '+';
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,138,lookUpBase64Alphabet[63] = (byte) '/';
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,141,private static boolean isBase64(byte octect) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,142,if (octect == PAD) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,143,return true;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,145,else if (base64Alphabet[octect] == -1) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,146,return false;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,148,else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,149,return true;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,153,public static boolean isArrayByteBase64(byte[] arrayOctect) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,155,arrayOctect = discardWhitespace(arrayOctect);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,157,int length = arrayOctect.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,158,if (length == 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,159,// shouldn't a 0 length array be valid base64 data?
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,160,// return false;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,161,return true;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,163,for (int i = 0; i < length; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,164,if (!isBase64(arrayOctect[i])) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,165,return false;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,168,return true;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,172,public static byte[] encodeBase64(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,173,"return (encodeBase64(binaryData, false));"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,176,public static byte[] encodeBase64Chunked(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,177,"return (encodeBase64(binaryData, true));"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,180,public Object decode(Object pObject) throws DecoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,182,Object result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,184,if (!(pObject instanceof byte[])) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,185,throw new DecoderException(
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,186,"""Parameter supplied to """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,187,"+ ""Base64 """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,188,"+ ""decode is not a byte[]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,190,else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,191,result = decode((byte[]) pObject);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,194,return result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,198,public byte[] decode(byte[] pArray) throws DecoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,200,byte[] result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,202,if (!isArrayByteBase64(pArray)) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,203,throw new DecoderException(
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,204,"""Parameter supplied to """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,205,"+ ""Base64 """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,206,"+ ""decode is not a valid base64 data."");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,208,else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,209,result = decodeBase64((byte[]) pArray);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,212,return (result);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,216,* Encodes hex octects into Base64.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,218,* @param binaryData Array containing binary data to encode.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,219,* @return Base64-encoded data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,221,"public static byte[] encodeBase64(byte[] binaryData, boolean isChunked) {"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,222,int lengthDataBits = binaryData.length * EIGHTBIT;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,223,int fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,224,int numberTriplets = lengthDataBits / TWENTYFOURBITGROUP;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,225,byte encodedData[] = null;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,226,int encodedDataLength = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,227,int nbrChunks = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,229,if (fewerThan24bits != 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,230,//data not divisible by 24 bit
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,231,encodedDataLength = (numberTriplets + 1) * 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,233,else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,234,// 16 or 8 bit
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,235,encodedDataLength = numberTriplets * 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,238,"// If the output is to be ""chunked"" into 76 character sections,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,239,"// for compliance with RFC 2045 MIME, then it is important to"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,240,// allow for extra length to account for the separator(s)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,241,if (isChunked) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,243,nbrChunks =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,244,(CHUNK_SEPARATOR.length == 0
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,245,? 0
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,246,: (int) Math.ceil((float) encodedDataLength / CHUNK_SIZE));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,247,encodedDataLength += nbrChunks * CHUNK_SEPARATOR.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,250,encodedData = new byte[encodedDataLength];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,252,"byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,254,int encodedIndex = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,255,int dataIndex = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,256,int i = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,257,int nextSeparatorIndex = CHUNK_SIZE;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,258,int chunksSoFar = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,260,"//log.debug(""number of triplets = "" + numberTriplets);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,261,for (i = 0; i < numberTriplets; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,262,dataIndex = i * 3;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,263,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,264,b2 = binaryData[dataIndex + 1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,265,b3 = binaryData[dataIndex + 2];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,267,"//log.debug(""b1= "" + b1 +"", b2= "" + b2 + "", b3= "" + b3);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,269,l = (byte) (b2 & 0x0f);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,270,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,272,byte val1 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,273,((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,274,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,275,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,276,byte val2 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,277,((b2 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,278,? (byte) (b2 >> 4)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,279,: (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,280,byte val3 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,281,((b3 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,282,? (byte) (b3 >> 6)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,283,: (byte) ((b3) >> 6 ^ 0xfc);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,285,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,286,"//log.debug( ""val2 = "" + val2 );"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,287,"//log.debug( ""k4   = "" + (k<<4) );"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,288,"//log.debug(  ""vak  = "" + (val2 | (k<<4)) );"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,289,encodedData[encodedIndex + 1] =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,290,lookUpBase64Alphabet[val2 | (k << 4)];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,291,encodedData[encodedIndex + 2] =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,292,lookUpBase64Alphabet[(l << 2) | val3];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,293,encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,295,encodedIndex += 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,297,"// If we are chunking, let's put a chunk separator down."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,298,if (isChunked) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,299,// this assumes that CHUNK_SIZE % 4 == 0
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,300,if (encodedIndex == nextSeparatorIndex) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,301,System.arraycopy(
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,302,"CHUNK_SEPARATOR,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,303,"0,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,304,"encodedData,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,305,"encodedIndex,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,306,CHUNK_SEPARATOR.length);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,307,chunksSoFar++;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,308,nextSeparatorIndex =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,309,(CHUNK_SIZE * (chunksSoFar + 1))
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,310,+ (chunksSoFar * CHUNK_SEPARATOR.length);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,311,encodedIndex += CHUNK_SEPARATOR.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,316,// form integral number of 6-bit groups
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,317,dataIndex = i * 3;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,319,if (fewerThan24bits == EIGHTBIT) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,320,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,321,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,322,"//log.debug(""b1="" + b1);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,323,"//log.debug(""b1<<2 = "" + (b1>>2) );"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,324,byte val1 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,325,((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,326,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,327,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,328,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,329,encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,330,encodedData[encodedIndex + 2] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,331,encodedData[encodedIndex + 3] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,333,else if (fewerThan24bits == SIXTEENBIT) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,335,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,336,b2 = binaryData[dataIndex + 1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,337,l = (byte) (b2 & 0x0f);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,338,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,340,byte val1 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,341,((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,342,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,343,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,344,byte val2 =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,345,((b2 & SIGN) == 0)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,346,? (byte) (b2 >> 4)
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,347,: (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,349,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,350,encodedData[encodedIndex + 1] =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,351,lookUpBase64Alphabet[val2 | (k << 4)];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,352,encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,353,encodedData[encodedIndex + 3] = PAD;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,356,if (isChunked) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,357,// we also add a separator to the end of the final chunk.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,358,if (chunksSoFar < nbrChunks) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,359,System.arraycopy(
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,360,"CHUNK_SEPARATOR,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,361,"0,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,362,"encodedData,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,363,"encodedDataLength - CHUNK_SEPARATOR.length,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,364,CHUNK_SEPARATOR.length);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,368,return encodedData;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,372,* Decodes Base64 data into octects
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,374,* @param binaryData Byte array containing Base64 data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,375,* @return Array containing decoded data.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,public static byte[] decodeBase64(byte[] base64Data) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,378,// RFC 2045 suggests line wrapping at (no more than) 76
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,379,// characters -- we may have embedded whitespace.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,380,base64Data = discardWhitespace(base64Data);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,382,"// handle the edge case, so we don't have to worry about it later"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,383,if (base64Data.length == 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,384,return new byte[0];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,387,int numberQuadruple = base64Data.length / FOURBYTE;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,388,byte decodedData[] = null;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,389,"byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,391,// Throw away anything not in base64Data
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,393,int encodedIndex = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,394,int dataIndex = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,396,// this sizes the output array properly - rlw
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,397,int lastData = base64Data.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,398,// ignore the '=' padding
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,399,while (base64Data[lastData - 1] == PAD) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,400,if (--lastData == 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,401,return new byte[0];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,404,decodedData = new byte[lastData - numberQuadruple];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,407,for (int i = 0; i < numberQuadruple; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,408,dataIndex = i * 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,409,marker0 = base64Data[dataIndex + 2];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,410,marker1 = base64Data[dataIndex + 3];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,412,b1 = base64Alphabet[base64Data[dataIndex]];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,413,b2 = base64Alphabet[base64Data[dataIndex + 1]];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,415,if (marker0 != PAD && marker1 != PAD) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,416,//No PAD e.g 3cQl
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,417,b3 = base64Alphabet[marker0];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,418,b4 = base64Alphabet[marker1];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,420,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,421,decodedData[encodedIndex + 1] =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,422,(byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,423,decodedData[encodedIndex + 2] = (byte) (b3 << 6 | b4);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,425,else if (marker0 == PAD) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,426,//Two PAD e.g. 3c[Pad][Pad]
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,427,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,429,else if (marker1 == PAD) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,430,//One PAD e.g. 3cQ[Pad]
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,431,b3 = base64Alphabet[marker0];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,433,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,434,decodedData[encodedIndex + 1] =
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,435,(byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,437,encodedIndex += 3;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,439,return decodedData;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,443,* Discards any whitespace from a base-64 encoded block.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,445,* @param data The base-64 encoded data to discard the whitespace
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,446,* from.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,447,"* @return The data, less whitespace (see RFC 2045)."
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,449,static byte[] discardWhitespace(byte[] data) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,450,byte groomedData[] = new byte[data.length];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,451,int bytesCopied = 0;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,453,for (int i = 0; i < data.length; i++) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,454,switch (data[i]) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,455,case (byte) ' ' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,456,case (byte) '\n' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,457,case (byte) '\r' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,458,case (byte) '\t' :
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,459,break;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,460,default:
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,461,groomedData[bytesCopied++] = data[i];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,465,byte packedData[] = new byte[bytesCopied];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,467,"System.arraycopy(groomedData, 0, packedData, 0, bytesCopied);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,469,return packedData;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,472,// Implementation of the Encoder Interface
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,475,* encode an Object
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,477,public Object encode(Object pObject) throws EncoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,479,Object result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,481,if (!(pObject instanceof byte[])) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,482,throw new EncoderException(
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,483,"""Parameter supplied to """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,484,"+ ""Base64 """
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,485,"+ ""encode is not a byte[]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,487,else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,488,result = encode((byte[]) pObject);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,491,return result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,495,public byte[] encode(byte[] pArray) throws EncoderException {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,496,"return (encodeBase64(pArray, false));"
