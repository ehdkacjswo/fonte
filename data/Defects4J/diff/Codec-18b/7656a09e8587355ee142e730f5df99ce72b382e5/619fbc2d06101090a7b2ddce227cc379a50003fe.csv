is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,20,import org.apache.commons.codec.EncoderException;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,21,import org.apache.commons.codec.StringEncoder;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,24,* Encodes a string into a Caverphone value.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,26,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,27,* algorithm:
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,29,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,30,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,31,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,32,* @since 1.5
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,34,public abstract class AbstractCaverphone implements StringEncoder {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,37,* Creates an instance of the Caverphone encoder
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,39,public AbstractCaverphone() {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,40,super();
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,44,* Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,45,"* the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,47,* @param source
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,48,*            Object to encode
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,49,* @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,50,*         supplied.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,51,* @throws EncoderException
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,52,*             if the parameter supplied is not of type java.lang.String
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,54,public Object encode(Object source) throws EncoderException {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,55,if (!(source instanceof String)) {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,56,"throw new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,58,return this.encode((String) source);
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,62,* Tests if the encodings of two strings are equal.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,64,* This method might be promoted to a new AbstractStringEncoder superclass.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,66,* @param str1
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,67,*            First of two strings to compare
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,68,* @param str2
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,69,*            Second of two strings to compare
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,70,"* @return <code>true</code> if the encodings of these strings are identical, <code>false</code> otherwise."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,71,* @throws EncoderException
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,73,"public boolean isEncodeEqual(String str1, String str2) throws EncoderException {"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,74,return this.encode(str1).equals(this.encode(str2));
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,24, Encodes a string into a Caverphone value.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,24,* Encodes a string into a Caverphone 2.0 value. Delegate to a {@link Caverphone2} instance.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,34,"* @deprecated Replaced by {@link Caverphone2}, will be removed in the next version."
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,39,* Delegate to a {@link Caverphone2} instance to avoid code duplication.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,41,final private Caverphone2 encoder = new Caverphone2();
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,47, @param txt String the source string
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,53,* @param source
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,54,*            String the source string
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,50,ublic String caverphone(String txt) {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,51,/ NOTE: Version 1.0 of Caverphone is easily derivable from this code
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,52,/ by commenting out the 2.0 lines and adding in the 1.0 lines
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,54,f( txt == null || txt.length() == 0 ) {
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,55,"eturn ""1111111111"";"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,58,/ 1. Convert to lowercase
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,59,xt = txt.toLowerCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,61,/ 2. Remove anything not A-Z
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,62,"xt = txt.replaceAll(""[^a-z]"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,64,/ 2.5. Remove final e
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,65,"xt = txt.replaceAll(""e$"", """");             // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,67,/ 3. Handle various start options
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,68,"xt = txt.replaceAll(""^cough"", ""cou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,69,"xt = txt.replaceAll(""^rough"", ""rou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,70,"xt = txt.replaceAll(""^tough"", ""tou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,71,"xt = txt.replaceAll(""^enough"", ""enou2f"");  // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,72,"xt = txt.replaceAll(""^trough"", ""trou2f"");  // 2.0 only - note the spec says ^enough here again, c+p error I assume"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,73,"xt = txt.replaceAll(""^gn"", ""2n"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,75,/ End
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,76,"xt = txt.replaceAll(""mb$"", ""m2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,78,/ 4. Handle replacements
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,79,"xt = txt.replaceAll(""cq"", ""2q"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,80,"xt = txt.replaceAll(""ci"", ""si"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,81,"xt = txt.replaceAll(""ce"", ""se"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,82,"xt = txt.replaceAll(""cy"", ""sy"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,83,"xt = txt.replaceAll(""tch"", ""2ch"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,84,"xt = txt.replaceAll(""c"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,85,"xt = txt.replaceAll(""q"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,86,"xt = txt.replaceAll(""x"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,87,"xt = txt.replaceAll(""v"", ""f"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,88,"xt = txt.replaceAll(""dg"", ""2g"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,89,"xt = txt.replaceAll(""tio"", ""sio"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,90,"xt = txt.replaceAll(""tia"", ""sia"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,91,"xt = txt.replaceAll(""d"", ""t"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,92,"xt = txt.replaceAll(""ph"", ""fh"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,93,"xt = txt.replaceAll(""b"", ""p"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,94,"xt = txt.replaceAll(""sh"", ""s2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,95,"xt = txt.replaceAll(""z"", ""s"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,96,"xt = txt.replaceAll(""^[aeiou]"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,97,"xt = txt.replaceAll(""[aeiou]"", ""3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,98,"xt = txt.replaceAll(""j"", ""y"");        // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,99,"xt = txt.replaceAll(""^y3"", ""Y3"");     // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,100,"xt = txt.replaceAll(""^y"", ""A"");       // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,101,"xt = txt.replaceAll(""y"", ""3"");        // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,102,"xt = txt.replaceAll(""3gh3"", ""3kh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,103,"xt = txt.replaceAll(""gh"", ""22"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,104,"xt = txt.replaceAll(""g"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,105,"xt = txt.replaceAll(""s+"", ""S"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,106,"xt = txt.replaceAll(""t+"", ""T"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,107,"xt = txt.replaceAll(""p+"", ""P"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,108,"xt = txt.replaceAll(""k+"", ""K"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,109,"xt = txt.replaceAll(""f+"", ""F"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,110,"xt = txt.replaceAll(""m+"", ""M"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,111,"xt = txt.replaceAll(""n+"", ""N"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,112,"xt = txt.replaceAll(""w3"", ""W3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,113,"/txt = txt.replaceAll(""wy"", ""Wy"");    // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,114,"xt = txt.replaceAll(""wh3"", ""Wh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,115,"xt = txt.replaceAll(""w$"", ""3"");       // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,116,"/txt = txt.replaceAll(""why"", ""Why"");  // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,117,"xt = txt.replaceAll(""w"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,118,"xt = txt.replaceAll(""^h"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,119,"xt = txt.replaceAll(""h"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,120,"xt = txt.replaceAll(""r3"", ""R3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,121,"xt = txt.replaceAll(""r$"", ""3"");       // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,122,"/txt = txt.replaceAll(""ry"", ""Ry"");    // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,123,"xt = txt.replaceAll(""r"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,124,"xt = txt.replaceAll(""l3"", ""L3"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,125,"xt = txt.replaceAll(""l$"", ""3"");       // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,126,"/txt = txt.replaceAll(""ly"", ""Ly"");    // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,127,"xt = txt.replaceAll(""l"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,128,"/txt = txt.replaceAll(""j"", ""y"");      // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,129,"/txt = txt.replaceAll(""y3"", ""Y3"");    // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,130,"/txt = txt.replaceAll(""y"", ""2"");      // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,132,/ 5. Handle removals
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,133,"xt = txt.replaceAll(""2"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,134,"xt = txt.replaceAll(""3$"", ""A"");       // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,135,"xt = txt.replaceAll(""3"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,137,/ 6. put ten 1s on the end
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,138,"xt = txt + ""111111"" + ""1111"";        // 1.0 only has 6 1s"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,140,/ 7. take the first six characters as the code
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,141,"eturn txt.substring(0, 10);          // 1.0 truncates to 6"
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,57,public String caverphone(String source) {
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,58,return this.encoder.encode(source);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,145, Encodes an Object using the caverphone algorithm.  This method
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,146, is provided in order to satisfy the requirements of the
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,147," Encoder interface, and will throw an EncoderException if the"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,148, supplied object is not of type java.lang.String.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,150, @param pObject Object to encode
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,151, @return An object (or type java.lang.String) containing the
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,152,         caverphone code which corresponds to the String supplied.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,153, @throws EncoderException if the parameter supplied is not
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,154,                          of type java.lang.String
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,62,* Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,63,"* the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,65,* @param pObject
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,66,*            Object to encode
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,67,* @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,68,*         supplied.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,69,* @throws EncoderException
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,70,*             if the parameter supplied is not of type java.lang.String
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,158,"hrow new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,74,"throw new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,160,eturn caverphone((String) pObject);
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,76,return this.caverphone((String) pObject);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,164, Encodes a String using the Caverphone algorithm.
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,166, @param pString String object to encode
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,80,* Encodes a String using the Caverphone algorithm.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,82,* @param pString
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,83,*            String object to encode
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,170,eturn caverphone(pString);
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,87,return this.caverphone(pString);
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,176, @param str1 First of two strings to compare
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,177, @param str2 Second of two strings to compare
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,178," @return <code>true</code> if the caverphones of these strings are identical,"
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,179,        <code>false</code> otherwise.
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,93,* @param str1
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,94,*            First of two strings to compare
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,95,* @param str2
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,96,*            Second of two strings to compare
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,97,"* @return <code>true</code> if the caverphones of these strings are identical, <code>false</code> otherwise."
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,182,eturn caverphone(str1).equals(caverphone(str2));
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,100,return this.caverphone(str1).equals(this.caverphone(str2));
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,21,* Encodes a string into a Caverphone 1.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,23,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 1.0
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,24,* algorithm:
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,26,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,27,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,28,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,29,"* @see <a href=""http://caversham.otago.ac.nz/files/working/ctp060902.pdf"">Caverphone 1.0 specification</a>"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,30,* @since 1.5
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,32,public class Caverphone1 extends AbstractCaverphone {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,34,"private static final String SIX_1 = ""111111"";"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,37,* Encodes the given String into a Caverphone value.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,39,* @param source
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,40,*            String the source string
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,41,* @return A caverphone code for the given String
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,43,public String encode(String source) {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,44,String txt = source;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,45,if (txt == null || txt.length() == 0) {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,46,return SIX_1;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,49,// 1. Convert to lowercase
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,50,txt = txt.toLowerCase(java.util.Locale.ENGLISH);
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,52,// 2. Remove anything not A-Z
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,53,"txt = txt.replaceAll(""[^a-z]"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,55,// 3. Handle various start options
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,56,// 2 is a temporary placeholder to indicate a consonant which we are no longer interested in.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,57,"txt = txt.replaceAll(""^cough"", ""cou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,58,"txt = txt.replaceAll(""^rough"", ""rou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,59,"txt = txt.replaceAll(""^tough"", ""tou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,60,"txt = txt.replaceAll(""^enough"", ""enou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,61,"txt = txt.replaceAll(""^gn"", ""2n"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,63,// End
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,64,"txt = txt.replaceAll(""mb$"", ""m2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,66,// 4. Handle replacements
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,67,"txt = txt.replaceAll(""cq"", ""2q"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,68,"txt = txt.replaceAll(""ci"", ""si"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,69,"txt = txt.replaceAll(""ce"", ""se"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,70,"txt = txt.replaceAll(""cy"", ""sy"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,71,"txt = txt.replaceAll(""tch"", ""2ch"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,72,"txt = txt.replaceAll(""c"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,73,"txt = txt.replaceAll(""q"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,74,"txt = txt.replaceAll(""x"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,75,"txt = txt.replaceAll(""v"", ""f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,76,"txt = txt.replaceAll(""dg"", ""2g"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,77,"txt = txt.replaceAll(""tio"", ""sio"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,78,"txt = txt.replaceAll(""tia"", ""sia"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,79,"txt = txt.replaceAll(""d"", ""t"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,80,"txt = txt.replaceAll(""ph"", ""fh"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,81,"txt = txt.replaceAll(""b"", ""p"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,82,"txt = txt.replaceAll(""sh"", ""s2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,83,"txt = txt.replaceAll(""z"", ""s"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,84,"txt = txt.replaceAll(""^[aeiou]"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,85,// 3 is a temporary placeholder marking a vowel
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,86,"txt = txt.replaceAll(""[aeiou]"", ""3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,87,"txt = txt.replaceAll(""3gh3"", ""3kh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,88,"txt = txt.replaceAll(""gh"", ""22"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,89,"txt = txt.replaceAll(""g"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,90,"txt = txt.replaceAll(""s+"", ""S"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,91,"txt = txt.replaceAll(""t+"", ""T"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,92,"txt = txt.replaceAll(""p+"", ""P"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,93,"txt = txt.replaceAll(""k+"", ""K"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,94,"txt = txt.replaceAll(""f+"", ""F"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,95,"txt = txt.replaceAll(""m+"", ""M"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,96,"txt = txt.replaceAll(""n+"", ""N"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,97,"txt = txt.replaceAll(""w3"", ""W3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,98,"txt = txt.replaceAll(""wy"", ""Wy""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,99,"txt = txt.replaceAll(""wh3"", ""Wh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,100,"txt = txt.replaceAll(""why"", ""Why""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,101,"txt = txt.replaceAll(""w"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,102,"txt = txt.replaceAll(""^h"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,103,"txt = txt.replaceAll(""h"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,104,"txt = txt.replaceAll(""r3"", ""R3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,105,"txt = txt.replaceAll(""ry"", ""Ry""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,106,"txt = txt.replaceAll(""r"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,107,"txt = txt.replaceAll(""l3"", ""L3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,108,"txt = txt.replaceAll(""ly"", ""Ly""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,109,"txt = txt.replaceAll(""l"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,110,"txt = txt.replaceAll(""j"", ""y""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,111,"txt = txt.replaceAll(""y3"", ""Y3""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,112,"txt = txt.replaceAll(""y"", ""2""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,114,// 5. Handle removals
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,115,"txt = txt.replaceAll(""2"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,116,"txt = txt.replaceAll(""3"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,118,// 6. put ten 1s on the end
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,119,txt = txt + SIX_1;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,121,// 7. take the first six characters as the code
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,122,"return txt.substring(0, SIX_1.length());"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,21,* Encodes a string into a Caverphone 2.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,23,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,24,* algorithm:
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,26,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,27,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,28,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,29,"* @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,30,* @since 1.5
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,32,public class Caverphone2 extends AbstractCaverphone {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,34,"private static final String TEN_1 = ""1111111111"";"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,37,* Encodes the given String into a Caverphone 2.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,39,* @param source
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,40,*            String the source string
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,41,* @return A caverphone code for the given String
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,43,public String encode(String source) {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,44,String txt = source;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,45,if (txt == null || txt.length() == 0) {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,46,return TEN_1;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,49,// 1. Convert to lowercase
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,50,txt = txt.toLowerCase(java.util.Locale.ENGLISH);
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,52,// 2. Remove anything not A-Z
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,53,"txt = txt.replaceAll(""[^a-z]"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,55,// 2.5. Remove final e
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,56,"txt = txt.replaceAll(""e$"", """"); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,58,// 3. Handle various start options
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,59,"txt = txt.replaceAll(""^cough"", ""cou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,60,"txt = txt.replaceAll(""^rough"", ""rou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,61,"txt = txt.replaceAll(""^tough"", ""tou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,62,"txt = txt.replaceAll(""^enough"", ""enou2f""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,63,"txt = txt.replaceAll(""^trough"", ""trou2f""); // 2.0 only - note the spec says ^enough here again, c+p error I assume"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,64,"txt = txt.replaceAll(""^gn"", ""2n"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,66,// End
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,67,"txt = txt.replaceAll(""mb$"", ""m2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,69,// 4. Handle replacements
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,70,"txt = txt.replaceAll(""cq"", ""2q"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,71,"txt = txt.replaceAll(""ci"", ""si"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,72,"txt = txt.replaceAll(""ce"", ""se"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,73,"txt = txt.replaceAll(""cy"", ""sy"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,74,"txt = txt.replaceAll(""tch"", ""2ch"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,75,"txt = txt.replaceAll(""c"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,76,"txt = txt.replaceAll(""q"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,77,"txt = txt.replaceAll(""x"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,78,"txt = txt.replaceAll(""v"", ""f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,79,"txt = txt.replaceAll(""dg"", ""2g"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,80,"txt = txt.replaceAll(""tio"", ""sio"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,81,"txt = txt.replaceAll(""tia"", ""sia"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,82,"txt = txt.replaceAll(""d"", ""t"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,83,"txt = txt.replaceAll(""ph"", ""fh"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,84,"txt = txt.replaceAll(""b"", ""p"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,85,"txt = txt.replaceAll(""sh"", ""s2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,86,"txt = txt.replaceAll(""z"", ""s"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,87,"txt = txt.replaceAll(""^[aeiou]"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,88,"txt = txt.replaceAll(""[aeiou]"", ""3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,89,"txt = txt.replaceAll(""j"", ""y""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,90,"txt = txt.replaceAll(""^y3"", ""Y3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,91,"txt = txt.replaceAll(""^y"", ""A""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,92,"txt = txt.replaceAll(""y"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,93,"txt = txt.replaceAll(""3gh3"", ""3kh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,94,"txt = txt.replaceAll(""gh"", ""22"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,95,"txt = txt.replaceAll(""g"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,96,"txt = txt.replaceAll(""s+"", ""S"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,97,"txt = txt.replaceAll(""t+"", ""T"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,98,"txt = txt.replaceAll(""p+"", ""P"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,99,"txt = txt.replaceAll(""k+"", ""K"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,100,"txt = txt.replaceAll(""f+"", ""F"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,101,"txt = txt.replaceAll(""m+"", ""M"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,102,"txt = txt.replaceAll(""n+"", ""N"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,103,"txt = txt.replaceAll(""w3"", ""W3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,104,"txt = txt.replaceAll(""wh3"", ""Wh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,105,"txt = txt.replaceAll(""w$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,106,"txt = txt.replaceAll(""w"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,107,"txt = txt.replaceAll(""^h"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,108,"txt = txt.replaceAll(""h"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,109,"txt = txt.replaceAll(""r3"", ""R3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,110,"txt = txt.replaceAll(""r$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,111,"txt = txt.replaceAll(""r"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,112,"txt = txt.replaceAll(""l3"", ""L3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,113,"txt = txt.replaceAll(""l$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,114,"txt = txt.replaceAll(""l"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,116,// 5. Handle removals
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,117,"txt = txt.replaceAll(""2"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,118,"txt = txt.replaceAll(""3$"", ""A""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,119,"txt = txt.replaceAll(""3"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,121,// 6. put ten 1s on the end
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,122,txt = txt + TEN_1;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,124,// 7. take the first ten characters as the code
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,125,"return txt.substring(0, TEN_1.length());"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,18,package org.apache.commons.codec.language;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,20,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,22,import org.apache.commons.codec.EncoderException;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,23,import org.apache.commons.codec.StringEncoder;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,24,import org.apache.commons.codec.StringEncoderAbstractTest;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,27,* Tests Caverphone1.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,29,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,30,* @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,31,* @since 1.5
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,33,public class Caverphone1Test extends StringEncoderAbstractTest {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,35,public Caverphone1Test(String name) {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,36,super(name);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,39,protected StringEncoder createStringEncoder() {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,40,return new Caverphone1();
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,44,* Tests example adapted from version 2.0  http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,46,"* AT1111 words: add, aid, at, art, eat, earth, head, hit, hot, hold, hard, heart, it, out, old"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,48,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,50,public void testCaverphoneRevisitedCommonCodeAT1111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,51,"this.checkEncodingVariations(""AT1111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,52,"""add"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,53,"""aid"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,54,"""at"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,55,"""art"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,56,"""eat"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,57,"""earth"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,58,"""head"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,59,"""hit"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,60,"""hot"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,61,"""hold"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,62,"""hard"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,63,"""heart"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,64,"""it"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,65,"""out"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,66,"""old""});"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,69,public void testEndMb() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,70,"String[][] data = {{""mb"", ""M11111""}, {""mbmb"", ""MPM111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,71,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,75,* Tests some examples from version 2.0 http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,77,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,79,public void testIsCaverphoneEquals() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,80,Caverphone1 caverphone = new Caverphone1();
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,81,"Assert.assertFalse(""Caverphone encodings should not be equal"", caverphone.isEncodeEqual(""Peter"", ""Stevenson""));"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,82,"Assert.assertTrue(""Caverphone encodings should be equal"", caverphone.isEncodeEqual(""Peter"", ""Peady""));"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,86,* Tests example from http://caversham.otago.ac.nz/files/working/ctp060902.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,88,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,90,public void testSpecificationV1Examples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,91,"String[][] data = {{""David"", ""TFT111""}, {""Whittle"", ""WTL111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,92,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,96,* Tests examples from http://en.wikipedia.org/wiki/Caverphone
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,98,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,100,public void testWikipediaExamples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,101,"String[][] data = {{""Lee"", ""L11111""}, {""Thompson"", ""TMPSN1""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,102,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,18,package org.apache.commons.codec.language;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,20,import org.apache.commons.codec.StringEncoder;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,23,* Tests Caverphone2.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,25,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,26,* @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,27,* @since 1.5
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,29,public class Caverphone2Test extends CaverphoneTest {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,31,public Caverphone2Test(String name) {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,32,super(name);
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,35,protected StringEncoder createStringEncoder() {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,36,return new Caverphone2();
