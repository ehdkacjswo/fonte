is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,22,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,31,protected StringEncoder stringEncoder = createEncoder();
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,103,protected void checkEncodings(String[][] data) throws EncoderException {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,104,for (int i = 0; i < data.length; i++) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,105,"this.checkEncoding(data[i][1], data[i][0]);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,109,"protected void checkEncodingVariations(String expected, String data[]) throws EncoderException {"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,110,for (int i = 0; i < data.length; i++) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,111,"this.checkEncoding(expected, data[i]);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,115,"public void checkEncoding(String expected, String source) throws EncoderException {"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,116,"Assert.assertEquals(""Source: "" + source, expected, this.stringEncoder.encode(source));"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,20,import org.apache.commons.codec.EncoderException;
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,37,ublic void testSpecificationExamples() {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,38,averphone caverphone = new Caverphone();
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,38,public void testSpecificationExamples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,40,"""Stevenson"", ""STFNSN1111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,41,"""Peter"",     ""PTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,42,"""ready"",     ""RTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,43,"""social"",    ""SSA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,44,"""able"",      ""APA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,45,"""Tedder"",    ""TTA1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,46,"""Karleen"",   ""KLN1111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,47,"""Dyun"",      ""TN11111111""},"
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,50,or(int i=0; i<data.length; i++) {
False,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,51,"ssertEquals( data[i][1], caverphone.caverphone(data[i][0]) );"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,40,"{""Peter"", ""PTA1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,41,"{""ready"", ""RTA1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,42,"{""social"", ""SSA1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,43,"{""able"", ""APA1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,44,"{""Tedder"", ""TTA1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,45,"{""Karleen"", ""KLN1111111""},"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,46,"{""Dyun"", ""TN11111111""},};"
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,47,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/CaverphoneTest.java,src/test/org/apache/commons/codec/language/CaverphoneTest.java,50,// Caverphone Revisited
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,20,mport junit.framework.Assert;
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,21,import org.apache.commons.codec.EncoderException;
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,27,rivate ColognePhonetic colognePhonetic = new ColognePhonetic();
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,33,"ublic void checkEncoding(String expected, String source) {"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,34,"ssert.assertEquals(""Source: "" + source, expected, this.colognePhonetic.encode(source));"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,37,rivate void checkEncodings(String[][] data) {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,38,or (int i = 0; i < data.length; i++) {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,39,"his.checkEncoding(data[i][1], data[i][0]);"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,43,"rivate void checkEncodingVariations(String expected, String data[]) {"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,44,or (int i = 0; i < data.length; i++) {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,45,"his.checkEncoding(expected, data[i]);"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,53,ublic void testAabjoe() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,35,public void testAabjoe() throws EncoderException {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,57,ublic void testAaclan() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,39,public void testAaclan() throws EncoderException {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,61,ublic void testEdgeCases() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,43,public void testEdgeCases() throws EncoderException {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,95,ublic void testExamples() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,77,public void testExamples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,128,ublic void testHyphen() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,110,public void testHyphen() throws EncoderException {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,146,"his.colognePhonetic.isEncodeEqual(data[i][1], data[i][0]);"
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,128,"((ColognePhonetic) this.stringEncoder).isEncodeEqual(data[i][1], data[i][0]);"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,150,ublic void testVariationsMeyer() {
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,151,"tring data[] = {""Meier"", ""Maier"", ""Mair"", ""Meyer"", ""Meyr"", ""Mejer"", ""Major""};"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,152,"his.checkEncodingVariations(""67"", data);"
False,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,155,ublic void testVariationsMella() {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,132,public void testVariationsMella() throws EncoderException {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,137,public void testVariationsMeyer() throws EncoderException {
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,138,"String data[] = {""Meier"", ""Maier"", ""Mair"", ""Meyer"", ""Meyr"", ""Mejer"", ""Major""};"
True,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,src/test/org/apache/commons/codec/language/ColognePhoneticTest.java,139,"this.checkEncodingVariations(""67"", data);"
