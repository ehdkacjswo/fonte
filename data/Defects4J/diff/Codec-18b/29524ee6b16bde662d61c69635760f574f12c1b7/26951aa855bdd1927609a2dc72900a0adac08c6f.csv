is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,27,import java.util.Locale;
False,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,74,rivate static class LangRule {
True,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,75,private static final class LangRule {
False,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,202,eturn ls.isSingleton() ? ls.getAny() : Languages.ANY;
True,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,203,return ls.isSingleton() ? ls.getAny() : Languages.ANY;
False,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,213,tring text = input.toLowerCase(); // todo: locale?
True,src/java/org/apache/commons/codec/language/bm/Lang.java,src/java/org/apache/commons/codec/language/bm/Lang.java,214,String text = input.toLowerCase(Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,63,eturn langs.isEmpty() ? NO_LANGUAGES : new SomeLanguages(langs);
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,63,return langs.isEmpty() ? NO_LANGUAGES : new SomeLanguages(langs);
False,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,80,ublic static class SomeLanguages extends LanguageSet {
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,80,public static final class SomeLanguages extends LanguageSet {
False,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,119,et<String> ls = new HashSet<String>(this.languages);
False,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,120,s.retainAll(sl.languages);
False,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,121,eturn from(ls);
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,119,if (sl.languages.containsAll(languages)) {
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,120,return this;
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,121,} else {
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,122,Set<String> ls = new HashSet<String>(this.languages);
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,123,ls.retainAll(sl.languages);
True,src/java/org/apache/commons/codec/language/bm/Languages.java,src/java/org/apache/commons/codec/language/bm/Languages.java,124,return from(ls);
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,54,tatic class PhonemeBuilder {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,54,static final class PhonemeBuilder {
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,111,rivate static class RulesApplication {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,111,private static final class RulesApplication {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,179,private static CharSequence cacheSubSequence(final CharSequence cached) {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,180,// return cached;
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,181,final CharSequence[][] cache = new CharSequence[cached.length()][cached.length()];
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,182,return new CharSequence() {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,183,public char charAt(int index) {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,184,return cached.charAt(index);
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,187,public int length() {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,188,return cached.length();
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,191,"public CharSequence subSequence(int start, int end) {"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,192,if (start == end)
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,193,"return """";"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,195,CharSequence res = cache[start][end - 1];
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,196,if (res == null) {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,197,"res = cached.subSequence(start, end);"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,198,cache[start][end - 1] = res;
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,200,return res;
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,232,harSequence phonemeText = phoneme.getPhonemeText();
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,258,CharSequence phonemeText = cacheSubSequence(phoneme.getPhonemeText());
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,277,"// System.err.println(""phenomes in collection of type: "" + subBuilder.getPhonemes().getClass());"
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,348,or (int i = 0; i < input.length();) {
False,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,349,"ulesApplication rulesApplication = new RulesApplication(rules, input, phonemeBuilder, i).invoke();"
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,374,CharSequence inputCache = cacheSubSequence(input);
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,375,for (int i = 0; i < inputCache.length();) {
True,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,376,"RulesApplication rulesApplication = new RulesApplication(rules, inputCache, phonemeBuilder, i).invoke();"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,83,rivate static class AppendableCharSeqeuence implements CharSequence {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,85,rivate final CharSequence left;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,86,rivate final CharSequence right;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,87,rivate final int length;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,88,rivate String contentCache = null;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,90,"rivate AppendableCharSeqeuence(CharSequence left, CharSequence right) {"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,91,his.left = left;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,92,his.right = right;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,93,his.length = left.length() + right.length();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,96,ublic void buildString(StringBuilder sb) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,97,f (left instanceof AppendableCharSeqeuence) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,98,(AppendableCharSeqeuence) left).buildString(sb);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,99, else {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,100,b.append(left);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,102,f (right instanceof AppendableCharSeqeuence) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,103,(AppendableCharSeqeuence) right).buildString(sb);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,104, else {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,105,b.append(right);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,109,ublic char charAt(int index) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,110,/ int lLength = left.length();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,111,/ if(index < lLength) return left.charAt(index);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,112,/ else return right.charAt(index - lLength);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,113,eturn toString().charAt(index);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,116,ublic int length() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,117,eturn length;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,120,"ublic CharSequence subSequence(int start, int end) {"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,121,/ int lLength = left.length();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,122,"/ if(start > lLength) return right.subSequence(start - lLength, end - lLength);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,123,"/ else if(end <= lLength) return left.subSequence(start, end);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,124,/ else {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,125,"/ CharSequence newLeft = left.subSequence(start, lLength);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,126,"/ CharSequence newRight = right.subSequence(0, end - lLength);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,127,"/ return new AppendableCharSeqeuence(newLeft, newRight);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,129,"eturn toString().subSequence(start, end);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,132,Override
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,133,ublic String toString() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,134,f (contentCache == null) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,135,tringBuilder sb = new StringBuilder();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,136,uildString(sb);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,137,ontentCache = sb.toString();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,138,"/ System.err.println(""Materialized string: "" + contentCache);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,140,eturn contentCache;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,144,"ublic static class Phoneme implements PhonemeExpr, Comparable<Phoneme> {"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,83,"public static final class Phoneme implements PhonemeExpr, Comparable<Phoneme> {"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,155,"eturn new Phoneme(new AppendableCharSeqeuence(this.phonemeText, str), this.languages);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,94,"return new Phoneme(this.phonemeText.toString() + str.toString(), this.languages);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,189,"eturn new Phoneme(new AppendableCharSeqeuence(this.phonemeText, right.phonemeText), this.languages.restrictTo(right.languages));"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,128,"return new Phoneme(this.phonemeText.toString() + right.phonemeText.toString(), this.languages.restrictTo(right.languages));"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,197,ublic static class PhonemeList implements PhonemeExpr {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,136,public static final class PhonemeList implements PhonemeExpr {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,210," A minimal wrapper around the functionality of Matcher that we use, to allow for alternate implementations."
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,149,"* A minimal wrapper around the functionality of Pattern that we use, to allow for alternate implementations."
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,212,ublic static interface RMatcher {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,213,oolean find();
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,151,public static interface RPattern {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,152,boolean isMatch(CharSequence input);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,217, Always returns true.
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,219,rivate static class TrueRMatcher implements RMatcher {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,221,rivate static TrueRMatcher INSTANCE = new TrueRMatcher();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,224, Always returns true.
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,226,ublic boolean find() {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,155,public static final RPattern ALL_STRINGS_RMATCHER = new RPattern() {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,156,public boolean isMatch(CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,232,rivate static class AllStringsRMatcher implements RPattern {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,234,rivate static AllStringsRMatcher INSTANCE = new AllStringsRMatcher();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,236,ublic RMatcher matcher(CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,237,eturn TrueRMatcher.INSTANCE;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,243," A minimal wrapper around the functionality of Pattern that we use, to allow for alternate implementations."
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,245,ublic static interface RPattern {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,246,Matcher matcher(CharSequence input);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,503,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,504,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,505,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,506,eturn input.length() == 0;
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,415,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,416,return input.length() == 0;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,513,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,514,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,515,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,516,eturn input.equals(content);
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,421,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,422,return input.equals(content);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,524,eturn AllStringsRMatcher.INSTANCE;
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,428,return ALL_STRINGS_RMATCHER;
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,528,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,529,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,530,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,531,"eturn startsWith(input, content);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,432,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,433,"return startsWith(input, content);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,539,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,540,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,541,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,542,"eturn endsWith(input, content);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,439,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,440,"return endsWith(input, content);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,566,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,567,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,568,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,569,"eturn input.length() == 1 && (contains(bContent, input.charAt(0)) == shouldMatch);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,462,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,463,"return input.length() == 1 && (contains(bContent, input.charAt(0)) == shouldMatch);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,577,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,578,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,579,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,580,"eturn input.length() > 0 && (contains(bContent, input.charAt(0)) == shouldMatch);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,469,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,470,"return input.length() > 0 && (contains(bContent, input.charAt(0)) == shouldMatch);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,588,ublic RMatcher matcher(final CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,589,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,590,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,591,"eturn input.length() > 0 && (contains(bContent, input.charAt(input.length() - 1)) == shouldMatch);"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,476,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,477,"return input.length() > 0 && (contains(bContent, input.charAt(input.length() - 1)) == shouldMatch);"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,605,ublic RMatcher matcher(CharSequence input) {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,606,inal Matcher matcher = pattern.matcher(input);
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,607,eturn new RMatcher() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,608,ublic boolean find() {
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,609,eturn matcher.find();
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,489,public boolean isMatch(CharSequence input) {
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,490,Matcher matcher = pattern.matcher(input);
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,491,return matcher.find();
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,726,"oolean rContextMatches = this.rContext.matcher(input.subSequence(ipl, input.length())).find();"
False,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,727,"oolean lContextMatches = this.lContext.matcher(input.subSequence(0, i)).find();"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,606,"boolean rContextMatches = this.rContext.isMatch(input.subSequence(ipl, input.length()));"
True,src/java/org/apache/commons/codec/language/bm/Rule.java,src/java/org/apache/commons/codec/language/bm/Rule.java,607,"boolean lContextMatches = this.lContext.isMatch(input.subSequence(0, i));"
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,22,mport java.util.Random;
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,168," (Un)luckily, the worse performing test because of the data in {@link TEST_CHARS}"
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,166,"* (Un)luckily, the worse performing test because of the data in {@link #TEST_CHARS}"
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,187, Another odd performance edge case.
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,189, @throws EncoderException
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,191,Test(/* timeout = 20000L */)
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,192,ublic void testSpeedCheckAZ() throws EncoderException {
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,184,@Test
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,185,public void testSpeedCheck2() throws EncoderException {
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,194,"tring phrase = ""abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"";"
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,187,"String phrase = ""ItstheendoftheworldasweknowitandIfeelfine"";"
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,201," Runs between 1.6 and 13 seconds at length 40 for me (Gary Gregory, 2011/08/06)"
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,203, @throws EncoderException
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,205,Test(/* timeout = 20000L */)
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,206,ublic void testSpeedCheckRandom() throws EncoderException {
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,194,@Test
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,195,public void testSpeedCheck3() throws EncoderException {
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,208,tringBuffer stringBuffer = new StringBuffer();
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,209,andom rand = new Random();
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,210,tringBuffer.append(TEST_CHARS[rand.nextInt(TEST_CHARS.length)]);
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,211,or (int i = 0; i < 40; i++) {
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,212,mpm.encode(stringBuffer.toString());
False,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,213,tringBuffer.append(TEST_CHARS[rand.nextInt(TEST_CHARS.length)]);
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,197,"String phrase = ""abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz"";"
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,199,for (int i = 1; i <= phrase.length(); i++) {
True,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java,200,"bmpm.encode(phrase.subSequence(0, i));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,84,@Test
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,85,public void subSequenceWorks() {
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,86,// AppendableCharSequence is private to Rule. We can only make it through a Phoneme.
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,88,"Rule.Phoneme a = new Rule.Phoneme(""a"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,89,"Rule.Phoneme b = new Rule.Phoneme(""b"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,90,"Rule.Phoneme cd = new Rule.Phoneme(""cd"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,91,"Rule.Phoneme ef = new Rule.Phoneme(""ef"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,92,"Rule.Phoneme ghi = new Rule.Phoneme(""ghi"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,93,"Rule.Phoneme jkl = new Rule.Phoneme(""jkl"", null);"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,95,"assertEquals('a', a.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,96,"assertEquals('b', b.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,97,"assertEquals('c', cd.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,98,"assertEquals('d', cd.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,99,"assertEquals('e', ef.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,100,"assertEquals('f', ef.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,101,"assertEquals('g', ghi.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,102,"assertEquals('h', ghi.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,103,"assertEquals('i', ghi.getPhonemeText().charAt(2));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,104,"assertEquals('j', jkl.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,105,"assertEquals('k', jkl.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,106,"assertEquals('l', jkl.getPhonemeText().charAt(2));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,108,Rule.Phoneme a_b = a.append(b.getPhonemeText());
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,109,"assertEquals('a', a_b.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,110,"assertEquals('b', a_b.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,111,"assertEquals(""ab"", a_b.getPhonemeText().subSequence(0, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,112,"assertEquals(""a"", a_b.getPhonemeText().subSequence(0, 1).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,113,"assertEquals(""b"", a_b.getPhonemeText().subSequence(1, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,115,Rule.Phoneme cd_ef = cd.append(ef.getPhonemeText());
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,116,"assertEquals('c', cd_ef.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,117,"assertEquals('d', cd_ef.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,118,"assertEquals('e', cd_ef.getPhonemeText().charAt(2));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,119,"assertEquals('f', cd_ef.getPhonemeText().charAt(3));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,120,"assertEquals(""c"", cd_ef.getPhonemeText().subSequence(0, 1).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,121,"assertEquals(""d"", cd_ef.getPhonemeText().subSequence(1, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,122,"assertEquals(""e"", cd_ef.getPhonemeText().subSequence(2, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,123,"assertEquals(""f"", cd_ef.getPhonemeText().subSequence(3, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,124,"assertEquals(""cd"", cd_ef.getPhonemeText().subSequence(0, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,125,"assertEquals(""de"", cd_ef.getPhonemeText().subSequence(1, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,126,"assertEquals(""ef"", cd_ef.getPhonemeText().subSequence(2, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,127,"assertEquals(""cde"", cd_ef.getPhonemeText().subSequence(0, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,128,"assertEquals(""def"", cd_ef.getPhonemeText().subSequence(1, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,129,"assertEquals(""cdef"", cd_ef.getPhonemeText().subSequence(0, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,131,Rule.Phoneme a_b_cd = a.append(b.getPhonemeText()).append(cd.getPhonemeText());
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,132,"assertEquals('a', a_b_cd.getPhonemeText().charAt(0));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,133,"assertEquals('b', a_b_cd.getPhonemeText().charAt(1));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,134,"assertEquals('c', a_b_cd.getPhonemeText().charAt(2));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,135,"assertEquals('d', a_b_cd.getPhonemeText().charAt(3));"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,136,"assertEquals(""a"", a_b_cd.getPhonemeText().subSequence(0, 1).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,137,"assertEquals(""b"", a_b_cd.getPhonemeText().subSequence(1, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,138,"assertEquals(""c"", a_b_cd.getPhonemeText().subSequence(2, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,139,"assertEquals(""d"", a_b_cd.getPhonemeText().subSequence(3, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,140,"assertEquals(""ab"", a_b_cd.getPhonemeText().subSequence(0, 2).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,141,"assertEquals(""bc"", a_b_cd.getPhonemeText().subSequence(1, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,142,"assertEquals(""cd"", a_b_cd.getPhonemeText().subSequence(2, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,143,"assertEquals(""abc"", a_b_cd.getPhonemeText().subSequence(0, 3).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,144,"assertEquals(""bcd"", a_b_cd.getPhonemeText().subSequence(1, 4).toString());"
True,src/test/org/apache/commons/codec/language/bm/RuleTest.java,src/test/org/apache/commons/codec/language/bm/RuleTest.java,145,"assertEquals(""abcd"", a_b_cd.getPhonemeText().subSequence(0, 4).toString());"
