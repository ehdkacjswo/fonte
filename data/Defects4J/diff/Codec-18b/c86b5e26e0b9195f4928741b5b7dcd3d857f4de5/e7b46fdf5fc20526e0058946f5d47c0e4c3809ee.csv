is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,27,* Implements common Base-N codec functions.
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,29,* This class is not thread-safe.
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,30,* Each thread should use its own instance.
False,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,427, @return amount of space needed to encoded the supplied array.  Returns
False,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,428,         a long since a max-len array will require > Integer.MAX_VALUE
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,433,* @return amount of space needed to encoded the supplied array.
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,434,* Returns a long since a max-len array will require > Integer.MAX_VALUE
False,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,432,ong len = ((pArray.length + unencodedBlockSize-1)  / unencodedBlockSize) * encodedBlockSize;
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,438,// cast to long is needed to avoid possibility of overflow
True,src/java/org/apache/commons/codec/binary/BaseNCodec.java,src/java/org/apache/commons/codec/binary/BaseNCodec.java,439,long len = ((pArray.length + unencodedBlockSize-1)  / unencodedBlockSize) * (long) encodedBlockSize;
