is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,22,mport org.apache.commons.codec.BinaryDecoder;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,23,mport org.apache.commons.codec.BinaryEncoder;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,24,mport org.apache.commons.codec.DecoderException;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,25,mport org.apache.commons.codec.EncoderException;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,51, @version $Id$
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,46,* @version $Revision$
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,53,"ublic class Base64 implements BinaryEncoder, BinaryDecoder {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,54,rivate static final int DEFAULT_BUFFER_RESIZE_FACTOR = 2;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,56,rivate static final int DEFAULT_BUFFER_SIZE = 8192;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,59,  MIME chunk size per RFC 2045 section 6.8.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,61, <p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,62," The {@value} character limit does not count the trailing CRLF, but counts all other characters, including any"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,63, equal signs.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,64, </p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,66," @see <a href=""http://www.ietf.org/rfc/rfc2045.txt"">RFC 2045 section 6.8</a>"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,68,ublic static final int MIME_CHUNK_SIZE = 76;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,48,public class Base64 extends BaseNCodec {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,71, PEM chunk size per RFC 1421 section 4.3.2.4.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,73, <p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,74," The {@value} character limit does not count the trailing CRLF, but counts all other characters, including any"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,75, equal signs.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,76, </p>
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78," @see <a href=""http://tools.ietf.org/html/rfc1421"">RFC 1421 section 4.3.2.4</a>"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,51,* BASE32 characters are 6 bits in length.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,52,"* They are formed by taking a block of 3 octets to form a 24-bit string,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,53,* which is converted into 4 BASE64 characters.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,80,ublic static final int PEM_CHUNK_SIZE = 64;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,55,private static final int BITS_PER_ENCODED_BYTE = 6;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,56,private static final int BYTES_PER_UNENCODED_BLOCK = 3;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,57,private static final int BYTES_PER_ENCODED_BLOCK = 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,122, Byte used to pad output.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,124,rivate static final byte PAD = '=';
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,120,* Base64 uses 6-bit fields.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,150,"** Mask used to extract 8 bits, used in decoding base64 bytes */"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,151,rivate static final int MASK_8BITS = 0xff;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,165, Line length for encoding. Not used when decoding. A value of zero or less implies no chunking of the base64
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,166, encoded data.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,168,rivate final int lineLength;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,136,// Only one decode table currently; keep for consistency with Base32 code
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,137,private final byte[] decodeTable = DECODE_TABLE;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,188, Buffer for streaming.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,190,rivate byte[] buffer;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,193, Position where next character should be written in the buffer.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,195,rivate int pos;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,198, Position where next character should be read from the buffer.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,200,rivate int readPos;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,203, Variable tracks how many characters have been written to the current line. Only used when encoding. We use it to
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,204, make sure each encoded line never goes beyond lineLength (if lineLength > 0).
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,206,rivate int currentLinePos;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,209," Writes to the buffer only occur after every 3 reads when encoding, an every 4 reads when decoding. This variable"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,210, helps track that.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,212,rivate int modulus;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,215," Boolean flag to indicate the EOF has been reached. Once EOF has been reached, this Base64 object becomes useless,"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,216, and must be thrown away.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,157,* Place holder for the bytes we're dealing with for our based logic.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,158,* Bitwise operations store and extract the encoding or decoding from this variable.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,218,rivate boolean eof;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,221, Place holder for the 3 bytes we're dealing with for our base64 logic. Bitwise operations store and extract the
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,222, base64 encoding or decoding from this variable.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,224,rivate int x;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,160,private int bitWorkArea;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,333,f (lineSeparator == null) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,334,ineLength = 0;  // disable chunk-separating
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,335,ineSeparator = CHUNK_SEPARATOR;  // this just gets ignored
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,337,his.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,338,his.lineSeparator = new byte[lineSeparator.length];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,339,"ystem.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,340,f (lineLength > 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,341,his.encodeSize = 4 + lineSeparator.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,269,"super(BYTES_PER_UNENCODED_BLOCK, BYTES_PER_ENCODED_BLOCK,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,270,"lineLength,"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,271,lineSeparator == null ? 0 : lineSeparator.length);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,272,// TODO could be simplified if there is no requirement to reject invalid line sep when length <=0
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,273,// @see test case Base64Test.testConstructors()
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,274,if (lineSeparator != null) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,275,if (containsAlphabetOrPad(lineSeparator)) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,276,String sep = StringUtils.newStringUtf8(lineSeparator);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,277,"throw new IllegalArgumentException(""lineSeparator must not contain base64 characters: ["" + sep + ""]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,279,if (lineLength > 0){ // null line-sep forces no chunking rather than throwing IAE
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,280,this.encodeSize = BYTES_PER_ENCODED_BLOCK + lineSeparator.length;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,281,this.lineSeparator = new byte[lineSeparator.length];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,282,"System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,283,} else {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,284,this.encodeSize = BYTES_PER_ENCODED_BLOCK;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,285,this.lineSeparator = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,343,his.encodeSize = 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,288,this.encodeSize = BYTES_PER_ENCODED_BLOCK;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,289,this.lineSeparator = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,346,f (containsBase64Byte(lineSeparator)) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,347,tring sep = StringUtils.newStringUtf8(lineSeparator);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,348,"hrow new IllegalArgumentException(""lineSeperator must not contain base64 characters: ["" + sep + ""]"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,364, Returns true if this Base64 object has buffered data for reading.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,366, @return true if there is Base64 object still available for reading.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,368,oolean hasData() {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,369,eturn this.buffer != null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,373, Returns the amount of buffered data available for reading.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,375, @return The amount of buffered data available for reading.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,nt avail() {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,378,eturn buffer != null ? pos - readPos : 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,381,** Doubles our buffer. */
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,382,rivate void resizeBuffer() {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,383,f (buffer == null) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,384,uffer = new byte[DEFAULT_BUFFER_SIZE];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,385,os = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,386,eadPos = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,387, else {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,388,yte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,389,"ystem.arraycopy(buffer, 0, b, 0, buffer.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,390,uffer = b;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,395," Extracts buffered data into the provided byte[] array, starting at position bPos, up to a maximum of bAvail"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,396, bytes. Returns how many bytes were actually extracted.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,398, @param b
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,399,            byte[] array to extract the buffered data into.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,400, @param bPos
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,401,            position in byte[] array to start extraction at.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,402, @param bAvail
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,403,            amount of bytes we're allowed to extract. We may extract fewer (if fewer are available).
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,404, @return The number of bytes successfully extracted into the provided byte[] array.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,406,"nt readResults(byte[] b, int bPos, int bAvail) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,407,f (buffer != null) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,408,"nt len = Math.min(avail(), bAvail);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,409,"ystem.arraycopy(buffer, readPos, b, bPos, len);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,410,eadPos += len;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,411,f (readPos >= pos) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,412,uffer = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,414,eturn len;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,416,eturn eof ? -1 : 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,445,f (buffer == null || buffer.length - pos < encodeSize) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,446,esizeBuffer();
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,331,if (0 == modulus && lineLength == 0) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,332,return; // no leftovers to process and not using chunking
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,448,witch (modulus) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,449,ase 1 :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,450,uffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,451,uffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,334,ensureBufferSize(encodeSize);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,335,int savedPos = pos;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,336,switch (modulus) { // 0-2
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,337,case 1 : // 8 bits = 6 + 2
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,338,buffer[pos++] = encodeTable[(bitWorkArea >> 2) & MASK_6BITS]; // top 6 bits
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,339,buffer[pos++] = encodeTable[(bitWorkArea << 4) & MASK_6BITS]; // remaining 2
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,459,ase 2 :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,460,uffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,461,uffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,462,uffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,347,case 2 : // 16 bits = 6 + 6 + 4
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,348,buffer[pos++] = encodeTable[(bitWorkArea >> 10) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,349,buffer[pos++] = encodeTable[(bitWorkArea >> 4) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,350,buffer[pos++] = encodeTable[(bitWorkArea << 2) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,469,"/ Don't want to append the CRLF two times in a row, so make sure previous"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,470,/ character is not from CRLF!
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,471,yte b = lineSeparator[lineSeparator.length - 1];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,472,f (lineLength > 0 && pos > 0 && buffer[pos-1] != b) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,357,currentLinePos += pos - savedPos; // keep track of current line position
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,358,"// if currentPos == 0 we are at the start of a line, so don't add CRLF"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,359,if (lineLength > 0 && currentLinePos > 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,478,f (buffer == null || buffer.length - pos < encodeSize) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,479,esizeBuffer();
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,481,odulus = (++modulus) % 3;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,365,ensureBufferSize(encodeSize);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,366,modulus = (++modulus) % BYTES_PER_UNENCODED_BLOCK;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,486, = (x << 8) + b;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,487,f (0 == modulus) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,488,uffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,489,uffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,490,uffer[pos++] = encodeTable[(x >> 6) & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,491,uffer[pos++] = encodeTable[x & MASK_6BITS];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,492,urrentLinePos += 4;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,371,bitWorkArea = (bitWorkArea << 8) + b; //  BITS_PER_BYTE
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,372,if (0 == modulus) { // 3 bytes = 24 bits = 4 * 6 bits to extract
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,373,buffer[pos++] = encodeTable[(bitWorkArea >> 18) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,374,buffer[pos++] = encodeTable[(bitWorkArea >> 12) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,375,buffer[pos++] = encodeTable[(bitWorkArea >> 6) & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,376,buffer[pos++] = encodeTable[bitWorkArea & MASK_6BITS];
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,377,currentLinePos += BYTES_PER_ENCODED_BLOCK;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,534,f (buffer == null || buffer.length - pos < decodeSize) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,535,esizeBuffer();
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,419,ensureBufferSize(decodeSize);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,546,odulus = (++modulus) % 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,547, = (x << 6) + result;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,429,modulus = (++modulus) % BYTES_PER_ENCODED_BLOCK;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,430,bitWorkArea = (bitWorkArea << BITS_PER_ENCODED_BYTE) + result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,549,uffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,550,uffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,551,uffer[pos++] = (byte) (x & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,432,buffer[pos++] = (byte) ((bitWorkArea >> 16) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,433,buffer[pos++] = (byte) ((bitWorkArea >> 8) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,434,buffer[pos++] = (byte) (bitWorkArea & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,562,f (buffer == null || buffer.length - pos < decodeSize) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,563,esizeBuffer();
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,445,ensureBufferSize(decodeSize);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,572, = x >> 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,573,uffer[pos++] = (byte) ((x) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,453,bitWorkArea = bitWorkArea >> 4; // dump the extra 4 bits
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,454,buffer[pos++] = (byte) ((bitWorkArea) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,576, = x >> 2;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,577,uffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,578,uffer[pos++] = (byte) ((x) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,457,bitWorkArea = bitWorkArea >> 2; // dump 2 bits
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,458,buffer[pos++] = (byte) ((bitWorkArea >> 8) & MASK_8BITS);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,459,buffer[pos++] = (byte) ((bitWorkArea) & MASK_8BITS);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,593,eturn octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,474,return octet == PAD_DEFAULT || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,644, Tests a given byte array to see if it contains any characters fromn the Base64 alphabet.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,646, @param arrayOctet
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,647,            byte array to test
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,648, @return <code>true</code> if any byte is a valid character in the Base64 alphabet; <code>false</code> otherwise
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,650,rivate static boolean containsBase64Byte(byte[] arrayOctet) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,651,or (int i = 0; i < arrayOctet.length; i++) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,652,f (isBase64(arrayOctet[i])) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,653,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,656,eturn false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,723, Decodes an Object using the base64 algorithm. This method is provided in order to satisfy the requirements of the
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,724," Decoder interface, and will throw a DecoderException if the supplied object is not of type byte[] or String."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,726, @param pObject
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,727,            Object to decode
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,728, @return An object (of type byte[]) containing the binary data which corresponds to the byte[] or String supplied.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,729, @throws DecoderException
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,730,             if the parameter supplied is not of type byte[]
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,732,ublic Object decode(Object pObject) throws DecoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,733,f (pObject instanceof byte[]) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,734,eturn decode((byte[]) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,735, else if (pObject instanceof String) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,736,eturn decode((String) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,737, else {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,738,"hrow new DecoderException(""Parameter supplied to Base64 decode is not a byte[] or a String"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,743, Decodes a String containing characters in the Base64 alphabet.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,745, @param pArray
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,746,            A String containing Base64 character data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,747, @return a byte array containing binary data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,748, @since 1.4
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,750,ublic byte[] decode(String pArray) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,751,eturn decode(StringUtils.getBytesUtf8(pArray));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,755, Decodes a byte[] containing characters in the Base64 alphabet.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,757, @param pArray
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,758,            A byte array containing Base64 character data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,759, @return a byte array containing binary data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,761,ublic byte[] decode(byte[] pArray) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,762,eset();
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,763,f (pArray == null || pArray.length == 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,764,eturn pArray;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,766,"ecode(pArray, 0, pArray.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,767,"ecode(pArray, 0, -1); // Notify decoder of EOF."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,768,yte[] result = new byte[pos];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,769,"eadResults(result, 0, result.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,770,eturn result;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,827,"ong len = getEncodeLength(binaryData, isChunked ? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,641,// Create this so can use the super-class method
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,642,// Also ensures that the same roundings are performed by the ctor and the code
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,643,"Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,644,long len = b64.getEncodedLength(binaryData);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,831,") than the specified maxium size of "" +"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,648,""") than the specified maximum size of "" +"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,835,"ase64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,890, Checks if a byte value is whitespace or not.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,892, @param byteToCheck
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,893,            the byte to check
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,894," @return true if byte is whitespace, false otherwise"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,896,rivate static boolean isWhiteSpace(byte byteToCheck) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,897,witch (byteToCheck) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,898,ase ' ' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,899,ase '\n' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,900,ase '\r' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,901,ase '\t' :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,902,eturn true;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,903,efault :
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,904,eturn false;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,911, Encodes an Object using the base64 algorithm. This method is provided in order to satisfy the requirements of the
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,912," Encoder interface, and will throw an EncoderException if the supplied object is not of type byte[]."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,914, @param pObject
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,915,            Object to encode
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,916, @return An object (of type byte[]) containing the base64 encoded data which corresponds to the byte[] supplied.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,917, @throws EncoderException
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,918,             if the parameter supplied is not of type byte[]
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,920,ublic Object encode(Object pObject) throws EncoderException {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,921,f (!(pObject instanceof byte[])) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,922,"hrow new EncoderException(""Parameter supplied to Base64 encode is not a byte[]"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,924,eturn encode((byte[]) pObject);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,928," Encodes a byte[] containing binary data, into a String containing characters in the Base64 alphabet."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,930, @param pArray
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,931,            a byte array containing binary data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,932, @return A String containing only Base64 character data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,933, @since 1.4
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,935,ublic String encodeToString(byte[] pArray) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,936,eturn StringUtils.newStringUtf8(encode(pArray));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,940," Encodes a byte[] containing binary data, into a byte[] containing characters in the Base64 alphabet."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,942, @param pArray
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,943,            a byte array containing binary data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,944, @return A byte array containing only Base64 character data
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,946,ublic byte[] encode(byte[] pArray) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,947,eset();
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,948,f (pArray == null || pArray.length == 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,949,eturn pArray;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,951,"ncode(pArray, 0, pArray.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,952,"ncode(pArray, 0, -1); // Notify encoder of EOF."
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,953,yte[] buf = new byte[pos - readPos];
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,954,"eadResults(buf, 0, buf.length);"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,955,eturn buf;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,959, Pre-calculates the amount of space needed to base64-encode the supplied array.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,961, @param pArray byte[] array which will later be encoded
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,962, @param chunkSize line-length of the output (<= 0 means no chunking) between each
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,963,        chunkSeparator (e.g. CRLF).
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,964, @param chunkSeparator the sequence of bytes used to separate chunks of output (e.g. CRLF).
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,966, @return amount of space needed to encoded the supplied array.  Returns
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,967,         a long since a max-len array will require Integer.MAX_VALUE + 33%.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,969,"rivate static long getEncodeLength(byte[] pArray, int chunkSize, byte[] chunkSeparator) {"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,970,/ base64 always encodes to multiples of 4.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,971,hunkSize = (chunkSize / 4) * 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,973,ong len = (pArray.length * 4) / 3;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,974,ong mod = len % 4;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,975,f (mod != 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,976,en += 4 - mod;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,978,f (chunkSize > 0) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,979,oolean lenChunksPerfectly = len % chunkSize == 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,980,en += (len / chunkSize) * chunkSeparator.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,981,f (!lenChunksPerfectly) {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,982,en += chunkSeparator.length;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,985,eturn len;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1050, Resets this Base64 object to its initial newly constructed state.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,769,* Returns whether or not the <code>octet</code> is in the Base32 alphabet.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,771,* @param octet
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,772,*            The value to test
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,773,* @return <code>true</code> if the value is defined in the the Base32 alphabet <code>false</code> otherwise.
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1052,rivate void reset() {
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1053,uffer = null;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1054,os = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1055,eadPos = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1056,urrentLinePos = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1057,odulus = 0;
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,1058,of = false;
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,775,protected boolean isInAlphabet(byte octet) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,776,return (octet >= 0 && octet < decodeTable.length && decodeTable[octet] != -1);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,158,nt avail = base64.avail();
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,158,int avail = base64.available();
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,189,"ase64 = new Base64(-1, new byte[]{'A'});"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,189,"base64 = new Base64(-1, new byte[]{'A'}); // TODO do we need to check sep if len = -1?"
