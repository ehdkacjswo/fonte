is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,20,import java.nio.ByteBuffer;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,114,* Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,115,"* The returned array will be double the length of the passed array, as it takes two characters to represent any"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,116,* given byte.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,118,* @param data
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,119,*            a byte buffer to convert to Hex characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,120,* @return A char[] containing hexadecimal characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,121,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,123,public static char[] encodeHex(final ByteBuffer data) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,124,"return encodeHex(data, true);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,144,* Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,145,"* The returned array will be double the length of the passed array, as it takes two characters to represent any"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,146,* given byte.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,148,* @param data
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,149,*            a byte buffer to convert to Hex characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,150,* @param toLowerCase
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,151,"*            <code>true</code> converts to lowercase, <code>false</code> to uppercase"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,152,* @return A char[] containing hexadecimal characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,153,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,155,"public static char[] encodeHex(final ByteBuffer data, final boolean toLowerCase) {"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,156,"return encodeHex(data, toLowerCase ? DIGITS_LOWER : DIGITS_UPPER);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,183,* Converts a byte buffer into an array of characters representing the hexadecimal values of each byte in order.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,184,"* The returned array will be double the length of the passed array, as it takes two characters to represent any"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,185,* given byte.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,187,* @param data
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,188,*            a byte buffer to convert to Hex characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,189,* @param toDigits
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,190,*            the output alphabet
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,191,* @return A char[] containing hexadecimal characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,192,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,194,"protected static char[] encodeHex(final ByteBuffer data, final char[] toDigits) {"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,195,"return encodeHex(data.array(), toDigits);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,212,* Converts a byte buffer into a String representing the hexadecimal values of each byte in order. The returned
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,213,"* String will be double the length of the passed array, as it takes two characters to represent any given byte."
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,215,* @param data
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,216,*            a byte buffer to convert to Hex characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,217,* @return A String containing hexadecimal characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,218,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,220,public static String encodeHexString(final ByteBuffer data) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,221,return new String(encodeHex(data));
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,296,* Converts a buffer of character bytes representing hexadecimal values into an array of bytes of those same values.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,297,"* The returned array will be half the length of the passed array, as it takes two characters to represent any given"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,298,* byte. An exception is thrown if the passed char array has an odd number of elements.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,300,* @param buffer
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,301,*            An array of character bytes containing hexadecimal digits
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,302,* @return A byte array containing binary data decoded from the supplied byte array (representing characters).
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,303,* @throws DecoderException
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,304,*             Thrown if an odd number of characters is supplied to this function
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,305,* @see #decodeHex(char[])
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,306,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,308,public byte[] decode(final ByteBuffer buffer) throws DecoderException {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,309,"return decodeHex(new String(buffer.array(), getCharset()).toCharArray());"
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,241,"            A String or, an array of character bytes containing hexadecimal digits"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,318,"*            A String, ByteBuffer, byte[], or an array of character bytes containing hexadecimal digits"
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,250,ry {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,251,inal char[] charArray = object instanceof String ? ((String) object).toCharArray() : (char[]) object;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,252,eturn decodeHex(charArray);
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,253, catch (final ClassCastException e) {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,254,"hrow new DecoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,327,if (object instanceof String) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,328,return decode(((String) object).toCharArray());
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,329,} else if (object instanceof byte[]) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,330,return decode((byte[]) object);
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,331,} else if (object instanceof ByteBuffer) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,332,return decode((ByteBuffer) object);
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,333,} else {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,334,try {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,335,return decodeHex((char[]) object);
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,336,} catch (final ClassCastException e) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,337,"throw new DecoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,363,* Converts byte buffer into an array of bytes for the characters representing the hexadecimal values of each
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,364,"* byte in order. The returned array will be double the length of the passed array, as it takes two characters to"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,365,* represent any given byte.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,366,* <p>
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,367,* The conversion from hexadecimal characters to the returned bytes is performed with the charset named by
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,368,* {@link #getCharset()}.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,369,* </p>
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,371,* @param array
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,372,*            a byte buffer to convert to Hex characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,373,* @return A byte[] containing the bytes of the hexadecimal characters
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,374,* @see #encodeHex(byte[])
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,375,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,377,public byte[] encode(final ByteBuffer array) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,378,return encodeHexString(array).getBytes(this.getCharset());
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,288,"            a String, or byte[] to convert to Hex characters"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,391,"*            a String, ByteBuffer, or byte[] to convert to Hex characters"
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,296,ry {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,297,inal byte[] byteArray = object instanceof String ?
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,298,(String) object).getBytes(this.getCharset()) : (byte[]) object;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,299,eturn encodeHex(byteArray);
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,300, catch (final ClassCastException e) {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,301,"hrow new EncoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,399,byte[] byteArray;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,400,if (object instanceof String) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,401,byteArray = ((String) object).getBytes(this.getCharset());
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,402,} else if (object instanceof ByteBuffer) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,403,byteArray = ((ByteBuffer) object).array();
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,404,} else {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,405,try {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,406,byteArray = (byte[]) object;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,407,} catch (final ClassCastException e) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,408,"throw new EncoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,411,return encodeHex(byteArray);
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,21,import java.nio.ByteBuffer;
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,101,* Calls {@link String#getBytes(Charset)}
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,103,* @param string
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,104,"*            The string to encode (if null, return null)."
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,105,* @param charset
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,106,*            The {@link Charset} to encode the <code>String</code>
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,107,* @return the encoded bytes
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,108,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,110,"private static ByteBuffer getByteBuffer(final String string, final Charset charset) {"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,111,if (string == null) {
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,112,return null;
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,114,return ByteBuffer.wrap(string.getBytes(charset));
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,118,"* Encodes the given string into a byte buffer using the UTF-8 charset, storing the result into a new byte"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,119,* array.
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,121,* @param string
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,122,"*            the String to encode, may be <code>null</code>"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,123,"* @return encoded bytes, or <code>null</code> if the input string was <code>null</code>"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,124,* @throws NullPointerException
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,125,"*             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,126,*             required by the Java platform specification.
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,127,"* @see <a href=""http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html"">Standard charsets</a>"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,128,"* @see #getBytesUnchecked(String, String)"
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,129,* @since 1.11
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,131,public static ByteBuffer getByteBufferUtf8(final String string) {
True,src/main/java/org/apache/commons/codec/binary/StringUtils.java,src/main/java/org/apache/commons/codec/binary/StringUtils.java,132,"return getByteBuffer(string, Charsets.UTF_8);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,32,import org.apache.commons.codec.Charsets;
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,137,"rivate void testCustomCharset(final String name, final String parent) throws UnsupportedEncodingException, DecoderException {"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,138,"private void testCustomCharset(final String name, final String parent) throws UnsupportedEncodingException,"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,139,DecoderException {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,156,"ssertEquals(name + "", expectedHexString="" + expectedHexString + "", actualStringFromBytes="" + actualStringFromBytes,"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,157,"xpectedHexString, actualStringFromBytes);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,158,"assertEquals(name + "", expectedHexString="" + expectedHexString + "", actualStringFromBytes="" +"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,159,"actualStringFromBytes, expectedHexString, actualStringFromBytes);"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,171,Test(expected=UnsupportedCharsetException.class)
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,173,@Test(expected = UnsupportedCharsetException.class)
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,208,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,209,public void testDecodeByteBufferEmpty() throws DecoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,210,"assertTrue(Arrays.equals(new byte[0], new Hex().decode(ByteBuffer.allocate(0))));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,214,ew Hex().decode(new byte[]{65});
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,221,new Hex().decode(new byte[] { 65 });
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,222,"fail(""An exception wasn't thrown when trying to decode an odd number of characters"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,223,} catch (final DecoderException e) {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,224,// Expected exception
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,228,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,229,public void testDecodeByteBufferOddCharacters() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,230,ByteBuffer buffer = ByteBuffer.allocate(1);
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,231,buffer.put((byte) 65);
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,232,try {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,233,new Hex().decode(buffer);
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,224,ew Hex().decode(new int[]{65});
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,243,new Hex().decode(new int[] { 65 });
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,233,heckDecodeHexCharArrayOddCharacters(new char[]{'A'});
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,252,checkDecodeHexCharArrayOddCharacters(new char[] { 'A' });
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,238,"heckDecodeHexCharArrayOddCharacters(new char[]{'A', 'B', 'C'});"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,257,"checkDecodeHexCharArrayOddCharacters(new char[] { 'A', 'B', 'C' });"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,243,"heckDecodeHexCharArrayOddCharacters(new char[]{'A', 'B', 'C', 'D', 'E'});"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,262,"checkDecodeHexCharArrayOddCharacters(new char[] { 'A', 'B', 'C', 'D', 'E' });"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,280,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,281,public void testDecodeByteArrayObjectEmpty() throws DecoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,282,"assertTrue(Arrays.equals(new byte[0], (byte[]) new Hex().decode((Object) new byte[0])));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,285,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,286,public void testDecodeByteBufferObjectEmpty() throws DecoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,287,"assertTrue(Arrays.equals(new byte[0], (byte[]) new Hex().decode((Object) ByteBuffer.allocate(0))));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,264,ew Hex().encode(new int[]{65});
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,293,new Hex().encode(new int[] { 65 });
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,339,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,340,public void testEncodeHexByteBufferEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,341,"assertTrue(Arrays.equals(new char[0], Hex.encodeHex(ByteBuffer.allocate(0))));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,342,"assertTrue(Arrays.equals(new byte[0], new Hex().encode(ByteBuffer.allocate(0))));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,358,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,359,public void testEncodeHexByteBufferHelloWorldLowerCaseHex() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,360,"final ByteBuffer b = StringUtils.getByteBufferUtf8(""Hello World"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,361,"final String expected = ""48656c6c6f20576f726c64"";"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,362,char[] actual;
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,363,actual = Hex.encodeHex(b);
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,364,"assertEquals(expected, new String(actual));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,365,"actual = Hex.encodeHex(b, true);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,366,"assertEquals(expected, new String(actual));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,367,"actual = Hex.encodeHex(b, false);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,368,assertFalse(expected.equals(new String(actual)));
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,384,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,385,public void testEncodeHexByteBufferHelloWorldUpperCaseHex() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,386,"final ByteBuffer b = StringUtils.getByteBufferUtf8(""Hello World"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,387,"final String expected = ""48656C6C6F20576F726C64"";"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,388,char[] actual;
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,389,actual = Hex.encodeHex(b);
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,390,assertFalse(expected.equals(new String(actual)));
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,391,"actual = Hex.encodeHex(b, true);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,392,assertFalse(expected.equals(new String(actual)));
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,393,"actual = Hex.encodeHex(b, false);"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,394,assertTrue(expected.equals(new String(actual)));
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,403,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,404,public void testEncodeHexByteBufferZeroes() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,405,final char[] c = Hex.encodeHex(ByteBuffer.allocate(36));
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,406,"assertEquals(""000000000000000000000000000000000000000000000000000000000000000000000000"", new String(c));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,414,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,415,"public void testGetCharset() throws UnsupportedEncodingException, DecoderException {"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,416,"Assert.assertEquals(Charsets.UTF_8, new Hex(Charsets.UTF_8).getCharset());"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,419,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,420,"public void testGetCharsetName() throws UnsupportedEncodingException, DecoderException {"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,421,"Assert.assertEquals(Charsets.UTF_8.name(), new Hex(Charsets.UTF_8).getCharsetName());"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,424,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,425,public void testEncodeByteArrayEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,426,"assertTrue(Arrays.equals(new byte[0], new Hex().encode(new byte[0])));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,429,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,430,public void testEncodeByteArrayObjectEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,431,"assertTrue(Arrays.equals(new char[0], (char[]) new Hex().encode((Object) new byte[0])));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,434,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,435,public void testEncodeByteBufferEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,436,"assertTrue(Arrays.equals(new byte[0], new Hex().encode(ByteBuffer.allocate(0))));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,439,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,440,public void testEncodeByteBufferObjectEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,441,"assertTrue(Arrays.equals(new char[0], (char[]) new Hex().encode((Object) ByteBuffer.allocate(0))));"
