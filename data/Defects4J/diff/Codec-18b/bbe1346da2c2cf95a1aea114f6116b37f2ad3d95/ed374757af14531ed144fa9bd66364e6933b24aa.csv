is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,559,"ssertEquals("""", StringUtils.newStringUsAscii(Base64.decodeBase64("""")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,560,"ssertEquals(""f"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zg=="" + Base64.CHUNK_SEPARATOR)));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,561,"ssertEquals(""fo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm8="" + Base64.CHUNK_SEPARATOR)));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,562,"/assertEquals(""foo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9v"" + Base64.CHUNK_SEPARATOR)));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,563,"ssertEquals(""foob"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYg=="" + Base64.CHUNK_SEPARATOR)));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,564,"ssertEquals(""fooba"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmE="" + Base64.CHUNK_SEPARATOR)));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,565,"/assertEquals(""foobar"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmFy"" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,559,String CRLF = StringUtils.newStringUsAscii(Base64.CHUNK_SEPARATOR);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,560,"assertEquals("""", StringUtils.newStringUsAscii(Base64.decodeBase64("""" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,561,"assertEquals(""f"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zg=="" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,562,"assertEquals(""fo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm8="" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,563,"assertEquals(""foo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9v"" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,564,"assertEquals(""foob"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYg=="" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,565,"assertEquals(""fooba"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmE="" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,566,"assertEquals(""foobar"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmFy"" + CRLF)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,594,* Tests RFC 4648 section 10 test vectors.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,595,* <ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,596,"* <li>BASE64("""") = """"</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,597,"* <li>BASE64(""f"") = ""Zg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,598,"* <li>BASE64(""fo"") = ""Zm8=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,599,"* <li>BASE64(""foo"") = ""Zm9v""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,600,"* <li>BASE64(""foob"") = ""Zm9vYg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,601,"* <li>BASE64(""fooba"") = ""Zm9vYmE=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,602,"* <li>BASE64(""foobar"") = ""Zm9vYmFy""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,603,* </ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,605,"* @see <a href=""http://tools.ietf.org/html/rfc4648"">http://tools.ietf.org/html/rfc4648</a>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,607,public void testRfc4648Section10DecodeEncode() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,608,"testDecodeEncode("""");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,609,"//testDecodeEncode(""Zg=="");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,610,"//testDecodeEncode(""Zm8="");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,611,"//testDecodeEncode(""Zm9v"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,612,"//testDecodeEncode(""Zm9vYg=="");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,613,"//testDecodeEncode(""Zm9vYmE="");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,614,"//testDecodeEncode(""Zm9vYmFy"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,617,private void testDecodeEncode(String encodedText) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,618,String decodedText = StringUtils.newStringUsAscii(Base64.decodeBase64(encodedText));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,619,String encodedText2 = Base64.encodeBase64String(StringUtils.getBytesUtf8(decodedText));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,620,"assertEquals(encodedText, encodedText2);"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,624,* Tests RFC 4648 section 10 test vectors.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,625,* <ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,626,"* <li>BASE64("""") = """"</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,627,"* <li>BASE64(""f"") = ""Zg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,628,"* <li>BASE64(""fo"") = ""Zm8=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,629,"* <li>BASE64(""foo"") = ""Zm9v""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,630,"* <li>BASE64(""foob"") = ""Zm9vYg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,631,"* <li>BASE64(""fooba"") = ""Zm9vYmE=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,632,"* <li>BASE64(""foobar"") = ""Zm9vYmFy""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,633,* </ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,635,"* @see <a href=""http://tools.ietf.org/html/rfc4648"">http://tools.ietf.org/html/rfc4648</a>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,637,public void testRfc4648Section10EncodeDecode() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,638,"testEncodeDecode("""");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,639,"testEncodeDecode(""f"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,640,"testEncodeDecode(""fo"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,641,"testEncodeDecode(""foo"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,642,"testEncodeDecode(""foob"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,643,"testEncodeDecode(""fooba"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,644,"testEncodeDecode(""foobar"");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,647,private void testEncodeDecode(String plainText) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,648,String encodedText = Base64.encodeBase64String(StringUtils.getBytesUtf8(plainText));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,649,String decodedText = StringUtils.newStringUsAscii(Base64.decodeBase64(encodedText));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,650,"assertEquals(plainText, decodedText);"
