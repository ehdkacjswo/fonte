is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,521,* Tests RFC 4648 section 10 test vectors.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,522,* <ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,523,"* <li>BASE64("""") = """"</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,524,"* <li>BASE64(""f"") = ""Zg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,525,"* <li>BASE64(""fo"") = ""Zm8=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,526,"* <li>BASE64(""foo"") = ""Zm9v""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,527,"* <li>BASE64(""foob"") = ""Zm9vYg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,528,"* <li>BASE64(""fooba"") = ""Zm9vYmE=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,529,"* <li>BASE64(""foobar"") = ""Zm9vYmFy""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,530,* </ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,532,* @see http://tools.ietf.org/html/rfc4648
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,534,public void testRfc4648Section10Decode() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,535,"assertEquals("""", StringUtils.newStringUsAscii(Base64.decodeBase64("""")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,536,"assertEquals(""f"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zg=="")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,537,"assertEquals(""fo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm8="")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,538,"assertEquals(""foo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9v"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,539,"assertEquals(""foob"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYg=="")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,540,"assertEquals(""fooba"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmE="")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,541,"assertEquals(""foobar"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmFy"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,544,public void testRfc4648Section10DecodeWithCrLf() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,545,"assertEquals("""", StringUtils.newStringUsAscii(Base64.decodeBase64("""")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,546,"assertEquals(""f"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zg=="" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,547,"assertEquals(""fo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm8="" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,548,"//assertEquals(""foo"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9v"" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,549,"assertEquals(""foob"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYg=="" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,550,"assertEquals(""fooba"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmE="" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,551,"//assertEquals(""foobar"", StringUtils.newStringUsAscii(Base64.decodeBase64(""Zm9vYmFy"" + Base64.CHUNK_SEPARATOR)));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,555,* Tests RFC 4648 section 10 test vectors.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,556,* <ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,557,"* <li>BASE64("""") = """"</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,558,"* <li>BASE64(""f"") = ""Zg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,559,"* <li>BASE64(""fo"") = ""Zm8=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,560,"* <li>BASE64(""foo"") = ""Zm9v""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,561,"* <li>BASE64(""foob"") = ""Zm9vYg==""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,562,"* <li>BASE64(""fooba"") = ""Zm9vYmE=""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,563,"* <li>BASE64(""foobar"") = ""Zm9vYmFy""</li>"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,564,* </ul>
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,566,* @see http://tools.ietf.org/html/rfc4648
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,568,public void testRfc4648Section10Encode() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,569,"//assertEquals(""Zg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""f"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,570,"//assertEquals(""Zm8="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fo"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,571,"//assertEquals(""Zm9v"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foo"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,572,"//assertEquals(""Zm9vYg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foob"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,573,"//assertEquals(""Zm9vYmE="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fooba"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,574,"//assertEquals(""Zm9vYmFy"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foobar"")));"
