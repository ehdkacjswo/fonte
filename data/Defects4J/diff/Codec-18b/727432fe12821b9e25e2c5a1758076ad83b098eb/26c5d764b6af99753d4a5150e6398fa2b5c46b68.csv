is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,2,"* $Header: /home/jerenkrantz/tmp/commons/commons-convert/cvs/home/cvs/jakarta-commons//codec/src/java/org/apache/commons/codec/language/DoubleMetaphone.java,v 1.1 2003/06/11 03:23:26 tobrien Exp $"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,3,* $Revision: 1.1 $
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,4,* $Date: 2003/06/11 03:23:26 $
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,8,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,10,* Copyright (c) 1999-2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,11,* reserved.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,13,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,14,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,15,* are met:
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,17,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,18,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,20,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,21,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,22,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,23,*    distribution.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,25,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,26,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,27,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,28,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,29,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,30,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,32,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,33,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,34,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,35,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,37,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,38,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,39,*    permission of the Apache Group.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,41,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,42,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,43,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,44,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,45,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,46,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,47,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,48,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,49,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,50,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,51,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,52,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,55,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,56,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,57,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,58,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,61,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,63,import org.apache.commons.codec.EncoderException;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,64,import org.apache.commons.codec.StringEncoder;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,67,* DoubleMetaphone Java Implementation
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,68,* From the algorithm by Lawrence Philips
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,70,* Original Article <a
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,71,"* href=""http://www.cuj.com/documents/s=8038/cuj0006philips/"">"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,72,* http://www.cuj.com/documents/s=8038/cuj0006philips/</a>
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,73,"* Original Source Code: <a href=""ftp://ftp.cuj.com/pub/2000/1806/philips.zip"">"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,74,* ftp://ftp.cuj.com/pub/2000/1806/philips.zip</a>
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,76,"* @author <a href=""mailto:ben@walstrum.com"">Benjamin Walstrum</a>"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,78,public class DoubleMetaphone implements StringEncoder {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,80,"private static final String VOWELS = ""AEIOUY"";"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,81,private static final String[] SILENT_START =
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,82,"{ ""GN"", ""KN"", ""PN"", ""WR"", ""PS"" };"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,83,private static final String[] L_R_N_M_B_H_F_V_W_SPACE =
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,84,"{ ""L"", ""R"", ""N"", ""M"", ""B"", ""H"", ""F"", ""V"", ""W"", "" "" };"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,85,private static final String[] ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER =
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,86,"{ ""ES"", ""EP"", ""EB"", ""EL"", ""EY"", ""IB"", ""IL"", ""IN"", ""IE"", ""EI"", ""ER"" };"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,87,private static final String[] L_T_K_S_N_M_B_Z =
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,88,"{ ""L"", ""T"", ""K"", ""S"", ""N"", ""M"", ""B"", ""Z"" };"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,90,private int maxCodeLen = 4;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,92,public DoubleMetaphone() {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,93,super();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,97,* Encode a value with Double Metaphone
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,99,public String doubleMetaphone(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,100,"return doubleMetaphone(value, false);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,104,"* Encode a value with Double Metaphone, optionally using the alternate"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,105,* encoding.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,107,"public String doubleMetaphone(String value, boolean alternate) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,108,value = cleanInput(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,109,if (value == null) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,110,return null;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,113,boolean slavoGermanic = isSlavoGermanic(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,114,int index = isSilentStart(value) ? 1 : 0;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,116,DoubleMetaphoneResult result = new DoubleMetaphoneResult(maxCodeLen);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,118,while (!result.isComplete() && index <= value.length() - 1) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,119,switch (value.charAt(index)) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,120,case 'A':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,121,case 'E':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,122,case 'I':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,123,case 'O':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,124,case 'U':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,125,case 'Y':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,126,"index = handleAEIOUY(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,127,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,128,case 'B':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,129,result.append('P');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,130,"index = charAt(value, index + 1) == 'B' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,131,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,132,case 'Ç':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,133,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,134,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,135,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,136,case 'C':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,137,"index = handleC(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,138,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,139,case 'D':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,140,"index = handleD(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,141,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,142,case 'F':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,143,result.append('F');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,144,"index = charAt(value, index + 1) == 'F' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,145,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,146,case 'G':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,147,"index = handleG(value, result, index, slavoGermanic);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,148,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,149,case 'H':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,150,"index = handleH(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,151,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,152,case 'J':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,153,"index = handleJ(value, result, index, slavoGermanic);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,154,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,155,case 'K':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,156,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,157,"index = charAt(value, index + 1) == 'K' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,158,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,159,case 'L':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,160,"index = handleL(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,161,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,162,case 'M':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,163,result.append('M');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,164,"index = conditionM0(value, index) ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,165,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,166,case 'N':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,167,result.append('N');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,168,"index = charAt(value, index + 1) == 'N' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,169,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,170,case 'Ñ':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,171,result.append('N');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,172,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,173,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,174,case 'P':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,175,"index = handleP(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,176,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,177,case 'Q':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,178,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,179,"index = charAt(value, index + 1) == 'Q' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,180,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,181,case 'R':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,182,"index = handleR(value, result, index, slavoGermanic);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,183,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,184,case 'S':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,185,"index = handleS(value, result, index, slavoGermanic);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,186,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,187,case 'T':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,188,"index = handleT(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,189,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,190,case 'V':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,191,result.append('F');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,192,"index = charAt(value, index + 1) == 'V' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,193,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,194,case 'W':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,195,"index = handleW(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,196,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,197,case 'X':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,198,"index = handleX(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,199,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,200,case 'Z':
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,201,"index = handleZ(value, result, index, slavoGermanic);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,202,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,203,default:
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,204,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,205,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,209,return alternate ? result.getAlternate() : result.getPrimary();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,213,* Encode the value using DoubleMetaphone.  It will only work if
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,214,* <code>obj</code> is a <code>String</code> (like <code>Metaphone</code>).
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,216,public Object encode(Object obj) throws EncoderException {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,217,Object result;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,219,if (!(obj instanceof String)) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,220,"throw new EncoderException(""Parameter supplied to Metaphone """
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,221,"+ ""encode is not of type """
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,222,"+ ""java.lang.String"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,223,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,224,return doubleMetaphone((String) obj);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,229,* Encode the value using DoubleMetaphone
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,231,public String encode(String value) throws EncoderException {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,232,return (doubleMetaphone(value));
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,236,* Check if the Double Metaphone values of two <code>String</code> values
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,237,* are equal
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,239,"public boolean isDoubleMetaphoneEqual(String value1, String value2) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,240,"return isDoubleMetaphoneEqual(value1, value2, false);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,244,* Check if the Double Metaphone values of two <code>String</code> values
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,245,"* are equal, optionally using the alternate value"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,247,"public boolean isDoubleMetaphoneEqual(String value1, String value2, boolean"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,248,alternate) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,249,"return doubleMetaphone(value1, alternate).equals(doubleMetaphone"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,250,"(value2, alternate));"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,254,* Returns the maxCodeLen.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,255,* @return int
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,257,public int getMaxCodeLen() {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,258,return maxCodeLen;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,262,* Sets the maxCodeLen.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,263,* @param maxCodeLen The maxCodeLen to set
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,265,public void setMaxCodeLen(int maxCodeLen) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,266,this.maxCodeLen = maxCodeLen;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,269,//-- BEGIN HANDLERS --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,272,"* Handles 'A', 'E', 'I', 'O', 'U', and 'Y' cases"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,274,"private int handleAEIOUY(String value, DoubleMetaphoneResult result, int"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,275,index) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,276,if (index == 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,277,result.append('A');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,279,return index + 1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,283,* Handles 'C' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,285,"private int handleC(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,286,"if (conditionC0(value, index)) {  // very confusing, moved out"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,287,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,288,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,289,"} else if (index == 0 && contains(value, index, 6, ""CAESAR"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,290,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,291,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,292,"} else if (contains(value, index, 2, ""CH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,293,"index = handleCH(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,294,"} else if (contains(value, index, 2, ""CZ"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,295,"!contains(value, index - 2, 4, ""WICZ"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,296,"//-- ""Czerny"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,297,"result.append('S', 'X');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,298,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,299,"} else if (contains(value, index + 1, 3, ""CIA"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,300,"//-- ""focaccia"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,301,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,302,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,303,"} else if (contains(value, index, 2, ""CC"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,304,"!(index == 1 && charAt(value, 0) == 'M')) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,305,"//-- double ""cc"" but not ""McClelland"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,306,"return handleCC(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,307,"} else if (contains(value, index, 2, ""CK"", ""CG"", ""CQ"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,308,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,309,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,310,"} else if (contains(value, index, 2, ""CI"", ""CE"", ""CY"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,311,//-- Italian vs. English --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,312,"if (contains(value, index, 3, ""CIO"", ""CIE"", ""CIA"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,313,"result.append('S', 'X');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,314,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,315,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,317,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,318,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,319,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,320,"if (contains(value, index + 1, 2, "" C"", "" Q"", "" G"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,321,"//-- Mac Caffrey, Mac Gregor --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,322,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,323,"} else if (contains(value, index + 1, 1, ""C"", ""K"", ""Q"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,324,"!contains(value, index + 1, 2, ""CE"", ""CI"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,325,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,326,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,327,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,331,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,335,* Handles 'CC' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,337,"private int handleCC(String value, DoubleMetaphoneResult result, int index)"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,339,"if (contains(value, index + 2, 1, ""I"", ""E"", ""H"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,340,"!contains(value, index + 2, 2, ""HU"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,341,"//-- ""bellocchio"" but not ""bacchus"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,342,"if ((index == 1 && charAt(value, index - 1) == 'A') ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,343,"contains(value, index - 1, 5, ""UCCEE"", ""UCCES"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,344,"//-- ""accident"", ""accede"", ""succeed"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,345,"result.append(""KS"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,346,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,347,"//-- ""bacci"", ""bertucci"", other Italian --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,348,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,350,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,351,} else {    // Pierce's rule
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,352,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,353,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,356,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,360,* Handles 'CH' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,362,"private int handleCH(String value, DoubleMetaphoneResult result, int index)"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,364,"if (index > 0 && contains(value, index, 4, ""CHAE"")) {   // Michael"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,365,"result.append('K', 'X');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,366,return index + 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,367,"} else if (conditionCH0(value, index)) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,368,"//-- Greek roots (""chemistry"", ""chorus"", etc.) --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,369,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,370,return index + 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,371,"} else if (conditionCH1(value, index)) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,372,"//-- Germanic, Greek, or otherwise 'ch' for 'kh' sound --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,373,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,374,return index + 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,375,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,376,if (index > 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,377,"if (contains(value, 0, 2, ""MC"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,378,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,379,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,380,"result.append('X', 'K');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,382,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,383,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,385,return index + 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,390,* Handles 'D' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,392,"private int handleD(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,393,"if (contains(value, index, 2, ""DG"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,394,"//-- ""Edge"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,395,"if (contains(value, index + 2, 1, ""I"", ""E"", ""Y"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,396,result.append('J');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,397,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,398,"//-- ""Edgar"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,399,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,400,"result.append(""TK"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,401,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,403,"} else if (contains(value, index, 2, ""DT"", ""DD"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,404,result.append('T');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,405,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,406,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,407,result.append('T');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,408,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,410,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,414,* Handles 'G' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,416,"private int handleG(String value, DoubleMetaphoneResult result, int index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,417,boolean slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,418,"if (charAt(value, index + 1) == 'H') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,419,"index = handleGH(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,420,"} else if (charAt(value, index + 1) == 'N') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,421,"if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,422,"result.append(""KN"", ""N"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,423,"} else if (!contains(value, index + 2, 2, ""EY"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,424,"charAt(value, index + 1) != 'Y' && !slavoGermanic) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,425,"result.append(""N"", ""KN"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,426,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,427,"result.append(""KN"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,429,index = index + 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,430,"} else if (contains(value, index + 1, 2, ""LI"") && !slavoGermanic) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,431,"result.append(""KL"", ""L"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,432,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,433,"} else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,434,"(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,435,"//-- -ges-, -gep-, -gel-, -gie- at beginning --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,436,"result.append('K', 'J');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,437,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,438,"} else if ((contains(value, index + 1, 2, ""ER"") || charAt(value, index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,439,+ 1) == 'Y') &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,440,"!contains(value, 0, 6, ""DANGER"", ""RANGER"", ""MANGER"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,441,"!contains(value, index - 1, 1, ""E"", ""I"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,442,"!contains(value, index - 1, 3, ""RGY"", ""OGY"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,443,"//-- -ger-, -gy- --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,444,"result.append('K', 'J');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,445,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,446,"} else if (contains(value, index + 1, 1, ""E"", ""I"", ""Y"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,447,"contains(value, index - 1, 4, ""AGGI"", ""OGGI"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,448,"//-- Italian ""biaggi"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,449,"if ((contains(value, 0 ,4, ""VAN "", ""VON "") || contains(value, 0,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,450,"3, ""SCH"")) ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,451,"contains(value, index + 1, 2, ""ET"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,452,//-- obvious germanic --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,453,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,454,"} else if (contains(value, index + 1, 4, ""IER"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,455,result.append('J');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,456,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,457,"result.append('J', 'K');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,459,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,460,"} else if (charAt(value, index + 1) == 'G') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,461,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,462,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,463,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,464,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,465,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,467,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,471,* Handles 'GH' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,473,"private int handleGH(String value, DoubleMetaphoneResult result, int index)"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,475,"if (index > 0 && !isVowel(charAt(value, index - 1))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,476,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,477,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,478,} else if (index == 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,479,"if (charAt(value, index + 2) == 'I') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,480,result.append('J');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,481,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,482,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,484,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,485,"} else if ((index > 1 && contains(value, index - 2, 1, ""B"", ""H"", ""D""))"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,487,"(index > 2 && contains(value, index - 3, 1, ""B"", ""H"", ""D""))"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,489,"(index > 3 && contains(value, index - 4, 1, ""B"", ""H""))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,490,"//-- Parker's rule (with some further refinements) - ""hugh"""
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,491,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,492,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,493,"if (index > 2 && charAt(value, index - 1) == 'U' &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,494,"contains(value, index - 3, 1, ""C"", ""G"", ""L"", ""R"", ""T"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,495,"//-- ""laugh"", ""McLaughlin"", ""cough"", ""gough"", ""rough"", ""tough"""
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,496,result.append('F');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,497,"} else if (index > 0 && charAt(value, index - 1) != 'I') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,498,result.append('K');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,500,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,502,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,506,* Handles 'H' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,508,"private int handleH(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,509,//-- only keep if first & before vowel or between 2 vowels --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,510,"if ((index == 0 || isVowel(charAt(value, index - 1))) &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,511,"isVowel(charAt(value, index + 1))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,512,result.append('H');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,513,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,514,"//-- also takes car of ""HH"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,515,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,516,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,518,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,522,* Handles 'J' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,524,"private int handleJ(String value, DoubleMetaphoneResult result, int index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,525,boolean slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,526,"if (contains(value, index, 4, ""JOSE"") || contains(value, 0, 4, ""SAN ""))"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,528,"//-- obvious Spanish, ""Jose"", ""San Jacinto"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,529,"if ((index == 0 && (charAt(value, index + 4) == ' ') ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,530,"value.length() == 4) || contains(value, 0, 4, ""SAN "")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,531,result.append('H');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,532,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,533,"result.append('J', 'H');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,535,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,536,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,537,"if (index == 0 && !contains(value, index, 4, ""JOSE"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,538,"result.append('J', 'A');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,539,"} else if (isVowel(charAt(value, index - 1)) && !slavoGermanic &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,540,"(charAt(value, index + 1) == 'A' ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,541,"charAt(value, index + 1) == 'O')) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,542,"result.append('J', 'H');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,543,} else if (index == value.length() - 1) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,544,"result.append('J', ' ');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,545,"} else if (!contains(value, index + 1, 1, L_T_K_S_N_M_B_Z) && !"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,546,"contains(value, index - 1, 1, ""S"", ""K"", ""L"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,547,result.append('J');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,550,"if (charAt(value, index + 1) == 'J') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,551,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,552,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,553,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,556,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,560,* Handles 'L' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,562,"private int handleL(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,563,result.append('L');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,564,"if (charAt(value, index + 1) == 'L') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,565,"if (conditionL0(value, index)) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,566,result.appendAlternate(' ');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,568,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,569,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,570,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,572,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,576,* Handles 'P' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,578,"private int handleP(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,579,"if (charAt(value, index + 1) == 'H') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,580,result.append('F');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,581,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,582,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,583,result.append('P');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,584,"index = contains(value, index + 1, 1, ""P"", ""B"") ? index + 2 : index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,585,+ 1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,587,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,591,* Handles 'R' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,593,"private int handleR(String value, DoubleMetaphoneResult result, int index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,594,boolean slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,595,if (index == value.length() - 1 && !slavoGermanic &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,596,"contains(value, index - 2, 2, ""IE"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,597,"!contains(value, index - 4, 2, ""ME"", ""MA"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,598,result.appendAlternate('R');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,599,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,600,result.append('R');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,602,"return charAt(value, index + 1) == 'R' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,606,* Handles 'S' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,608,"private int handleS(String value, DoubleMetaphoneResult result, int index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,609,boolean slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,610,"if (contains(value, index - 1, 3, ""ISL"", ""YSL"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,611,"//-- special cases ""island"", ""isle"", ""carlisle"", ""carlysle"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,612,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,613,"} else if (index == 0 && contains(value, index, 5, ""SUGAR"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,614,"//-- special case ""sugar-"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,615,"result.append('X', 'S');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,616,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,617,"} else if (contains(value, index, 2, ""SH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,618,"if (contains(value, index + 1, 4, ""HEIM"", ""HOEK"", ""HOLM"", ""HOLZ"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,619,//-- germanic --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,620,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,621,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,622,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,624,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,625,"} else if (contains(value, index, 3, ""SIO"", ""SIA"") || contains(value,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,626,"index, 4, ""SIAN"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,627,//-- Italian and Armenian --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,628,if (slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,629,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,630,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,631,"result.append('S', 'X');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,633,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,634,"} else if ((index == 0 && contains(value, index + 1,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,635,"1, ""M"", ""N"", ""L"", ""W"")) || contains(value, index + 1, 1, ""Z"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,636,"//-- german & anglicisations, e.g. ""smith"" match ""schmidt"", ""snider"" match ""schneider"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,637,"//-- also, -sz- in slavic language altho in hungarian it is pronounced ""s"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,638,"result.append('S', 'X');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,639,"index = contains(value, index + 1, 1, ""Z"") ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,640,"} else if (contains(value, index, 2, ""SC"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,641,"index = handleSC(value, result, index);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,642,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,643,"if (index == value.length() - 1 && contains(value, index - 2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,644,"2, ""AI"", ""OI"")){"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,645,"//-- french e.g. ""resnais"", ""artois"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,646,result.appendAlternate('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,647,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,648,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,650,"index = contains(value, index + 1, 1, ""S"", ""Z"") ? index + 2 : index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,651,+ 1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,653,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,657,* Handles 'SC' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,659,"private int handleSC(String value, DoubleMetaphoneResult result, int index)"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,661,"if (charAt(value, index + 2) == 'H') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,662,//-- Schlesinger's rule --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,663,"if (contains(value, index + 3,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,664,"2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,665,"//-- Dutch origin, e.g. ""school"", ""schooner"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,666,"if (contains(value, index + 3, 2, ""ER"", ""EN"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,667,"//-- ""schermerhorn"", ""schenker"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,668,"result.append(""X"", ""SK"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,669,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,670,"result.append(""SK"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,672,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,673,"if (index == 0 && !isVowel(charAt(value, 3)) && charAt(value,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,674,3) != 'W') {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,675,"result.append('X', 'S');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,676,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,677,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,680,"} else if (contains(value, index + 2, 1, ""I"", ""E"", ""Y"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,681,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,682,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,683,"result.append(""SK"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,685,return index + 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,689,* Handles 'T' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,691,"private int handleT(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,692,"if (contains(value, index, 4, ""TION"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,693,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,694,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,695,"} else if (contains(value, index, 3, ""TIA"", ""TCH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,696,result.append('X');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,697,index += 3;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,698,"} else if (contains(value, index, 2, ""TH"") || contains(value, index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,699,"3, ""TTH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,700,"if (contains(value, index + 2, 2, ""OM"", ""AM"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,701,"//-- special case ""thomas"", ""thames"" or germanic --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,702,"contains(value, 0, 4, ""VAN "", ""VON "") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,703,"contains(value, 0, 3, ""SCH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,704,result.append('T');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,705,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,706,"result.append('0', 'T');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,708,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,709,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,710,result.append('T');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,711,"index = contains(value, index + 1, 1, ""T"", ""D"") ? index + 2 : index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,712,+ 1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,714,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,718,* Handles 'W' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,720,"private int handleW(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,721,"if (contains(value, index, 2, ""WR"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,722,//-- can also be in middle of word --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,723,result.append('R');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,724,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,725,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,726,"if (index == 0 && (isVowel(charAt(value, index + 1)) ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,727,"contains(value, index, 2, ""WH""))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,728,"if (isVowel(charAt(value, index + 1))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,729,//-- Wasserman should match Vasserman --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,730,"result.append('A', 'F');"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,731,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,732,//-- need Uomo to match Womo --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,733,result.append('A');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,735,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,736,"} else if ((index == value.length() - 1 && isVowel(charAt(value,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,737,index - 1))) ||
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,738,"contains(value, index - 1,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,739,"5, ""EWSKI"", ""EWSKY"", ""OWSKI"", ""OWSKY"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,740,"contains(value, 0, 3, ""SCH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,741,//-- Arnow should match Arnoff --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,742,result.appendAlternate('F');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,743,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,744,"} else if (contains(value, index, 4, ""WICZ"", ""WITZ"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,745,"//-- Polish e.g. ""filipowicz"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,746,"result.append(""TS"", ""FX"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,747,index += 4;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,748,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,749,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,752,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,756,* Handles 'X' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,758,"private int handleX(String value, DoubleMetaphoneResult result, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,759,if (index == 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,760,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,761,index++;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,762,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,763,if (!((index == value.length() - 1) &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,764,"(contains(value, index - 3, 3, ""IAU"", ""EAU"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,765,"contains(value, index - 2, 2, ""AU"", ""OU"")))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,766,//-- French e.g. breaux --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,767,"result.append(""KS"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,769,"index = contains(value, index + 1, 1, ""C"", ""X"") ? index + 2 : index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,770,+ 1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,772,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,776,* Handles 'Z' cases
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,778,"private int handleZ(String value, DoubleMetaphoneResult result, int index,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,779,boolean slavoGermanic) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,780,"if (charAt(value, index + 1) == 'H') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,781,"//-- Chinese pinyin e.g. ""zhao"" or Angelina ""Zhang"" --//"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,782,result.append('J');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,783,index += 2;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,784,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,785,"if (contains(value, index + 1, 2, ""ZO"", ""ZI"", ""ZA"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,786,"(slavoGermanic && (index > 0 && charAt(value, index - 1) != 'T'))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,787,"result.append(""S"", ""TS"");"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,788,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,789,result.append('S');
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,791,"index = charAt(value, index + 1) == 'Z' ? index + 2 : index + 1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,793,return index;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,796,//-- BEGIN CONDITIONS --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,799,* Complex condition 0 for 'C'
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,801,"private boolean conditionC0(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,802,"if (contains(value, index, 4, ""CHIA"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,803,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,804,} else if (index <= 1) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,805,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,806,"} else if (isVowel(charAt(value, index - 2))) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,807,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,808,"} else if (!contains(value, index - 1, 3, ""ACH"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,809,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,810,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,811,"char c = charAt(value, index + 2);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,812,"if ((c != 'I' && c != 'E') || contains(value, index - 2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,813,"6, ""BACHER"", ""MACHER"" )) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,814,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,815,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,816,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,822,* Complex condition 0 for 'CH'
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,824,"private boolean conditionCH0(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,825,if (index != 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,826,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,827,"} else if (!contains(value, index + 1, 5, ""HARAC"", ""HARIS"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,828,"!contains(value, index + 1, 3, ""HOR"", ""HYM"", ""HIA"", ""HEM"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,829,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,830,"} else if (contains(value, 0, 5, ""CHORE"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,831,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,832,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,833,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,838,* Complex condition 1 for 'CH'
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,840,"private boolean conditionCH1(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,841,"return ((contains(value, 0, 4, ""VAN "", ""VON "") || contains(value, 0,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,842,"3, ""SCH"")) ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,843,"contains(value, index - 2, 6, ""ORCHES"", ""ARCHIT"", ""ORCHID"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,844,"contains(value, index + 2, 1, ""T"", ""S"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,845,"((contains(value, index - 1, 1, ""A"", ""O"", ""U"", ""E"") || index =="
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,846,0) &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,847,"(contains(value, index + 2, 1, L_R_N_M_B_H_F_V_W_SPACE) || index"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,848,+ 1 == value.length() - 1)));
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,852,* Complex condition 0 for 'L'
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,854,"private boolean conditionL0(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,855,if (index == value.length() - 3 &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,856,"contains(value, index - 1, 4, ""ILLO"", ""ILLA"", ""ALLE"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,857,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,858,"} else if ((contains(value, index - 1, 2, ""AS"", ""OS"") ||"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,859,"contains(value, value.length() - 1, 1, ""A"", ""O"")) &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,860,"contains(value, index - 1, 4, ""ALLE"")) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,861,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,862,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,863,return false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,868,* Complex condition 0 for 'M'
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,870,"private boolean conditionM0(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,871,"if (charAt(value, index + 1) == 'M') {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,872,return true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,873,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,874,"return contains(value, index - 1, 3, ""UMB"") &&"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,875,((index + 1) == value.length() - 1 ||
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,876,"contains(value, index + 2, 2, ""ER""));"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,880,//-- BEGIN HELPER FUNCTIONS --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,883,* Determines whether or not a value is of slavo-germanic orgin.  A value is
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,884,"* of slavo-germanic origin if it contians any of 'W', 'K', 'CZ', or 'WITZ'."
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,886,private boolean isSlavoGermanic(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,887,return value.indexOf('W') > -1 || value.indexOf('K') > -1 ||
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,888,"value.indexOf(""CZ"") > -1 || value.indexOf(""WITZ"") > -1;"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,892,* Determines whether or not a character is a vowel or not
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,894,private boolean isVowel(char ch) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,895,return VOWELS.indexOf(ch) != -1;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,899,* Determines whether or not the value starts with a silent letter.  It will
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,900,"* return <code>true</code> if the value starts with any of 'GN', 'KN',"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,901,"* 'PN', 'WR' or 'PS'."
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,903,private boolean isSilentStart(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,904,boolean result = false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,905,for (int i = 0; i < SILENT_START.length; i++) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,906,if (value.startsWith(SILENT_START[i])) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,907,result = true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,908,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,911,return result;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,915,* Cleans the input
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,917,private String cleanInput(String input) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,918,if (input == null) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,919,return null;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,920,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,921,input = input.trim();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,922,if (input.length() == 0) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,923,return null;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,924,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,925,return input.toUpperCase();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,931,"* Gets the character at index <code>index</code> if available, otherwise it"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,932,* returns <code>Character.MIN_VALUE</code> so that there is some sort of a
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,933,* default
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,935,"protected char charAt(String value, int index) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,936,if (index < 0 || index >= value.length()) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,937,return Character.MIN_VALUE;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,938,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,939,return value.charAt(index);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,944,* Shortcut method with 1 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,946,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,947,String criteria) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,948,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,949,new String[] { criteria });
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,953,* Shortcut method with 2 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,955,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,956,"String criteria1, String criteria2) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,957,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,958,"new String[] { criteria1, criteria2 });"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,962,* Shortcut method with 3 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,964,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,965,"String criteria1, String criteria2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,966,String criteria3) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,967,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,968,"new String[] { criteria1, criteria2, criteria3 });"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,972,* Shortcut method with 4 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,974,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,975,"String criteria1, String criteria2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,976,"String criteria3, String criteria4) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,977,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,978,"new String[] { criteria1, criteria2, criteria3,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,979,criteria4 });
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,983,* Shortcut method with 5 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,985,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,986,"String criteria1, String criteria2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,987,"String criteria3, String criteria4,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,988,String criteria5) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,989,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,990,"new String[] { criteria1, criteria2, criteria3,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,991,"criteria4, criteria5 });"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,995,* Shortcut method with 6 criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,997,"private static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,998,"String criteria1, String criteria2,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,999,"String criteria3, String criteria4,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1000,"String criteria5, String criteria6) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1001,"return contains(value, start, length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1002,"new String[] { criteria1, criteria2, criteria3,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1003,"criteria4, criteria5, criteria6 });"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1007,* Determines whether <code>value</code> contains any of the criteria
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1008,starting
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1009,* at index <code>start</code> and matching up to length <code>length</code>
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1011,"protected static boolean contains(String value, int start, int length,"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1012,String[] criteria) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1013,boolean result = false;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1014,if (start >= 0 && start + length <= value.length()) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1015,"String target = value.substring(start, start + length);"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1017,for (int i = 0; i < criteria.length; i++) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1018,if (target.equals(criteria[i])) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1019,result = true;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1020,break;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1024,return result;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1027,//-- BEGIN INNER CLASSES --//
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1030,"* Inner class for storing results, since there is the optional alternate"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1031,* encoding.
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1033,public class DoubleMetaphoneResult {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1035,private StringBuffer primary = new StringBuffer(maxCodeLen);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1036,private StringBuffer alternate = new StringBuffer(maxCodeLen);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1037,private int maxLength;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1039,public DoubleMetaphoneResult(int maxLength) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1040,this.maxLength = maxLength;
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1043,public void append(char value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1044,appendPrimary(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1045,appendAlternate(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1048,"public void append(char primary, char alternate) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1049,appendPrimary(primary);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1050,appendAlternate(alternate);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1053,public void appendPrimary(char value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1054,if (primary.length() < maxLength) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1055,primary.append(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1059,public void appendAlternate(char value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1060,if (alternate.length() < maxLength) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1061,alternate.append(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1065,public void append(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1066,appendPrimary(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1067,appendAlternate(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1070,"public void append(String primary, String alternate) {"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1071,appendPrimary(primary);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1072,appendAlternate(alternate);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1075,public void appendPrimary(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1076,int addChars = maxLength - primary.length();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1077,if (value.length() <= addChars) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1078,primary.append(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1079,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1080,"primary.append(value.substring(0, addChars));"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1084,public void appendAlternate(String value) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1085,int addChars = maxLength - alternate.length();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1086,if (value.length() <= addChars) {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1087,alternate.append(value);
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1088,} else {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1089,"alternate.append(value.substring(0, addChars));"
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1093,public String getPrimary() {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1094,return primary.toString();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1097,public String getAlternate() {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1098,return alternate.toString();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1101,public boolean isComplete() {
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1102,return primary.length() >= maxLength &&
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,1103,alternate.length() >= maxLength;
