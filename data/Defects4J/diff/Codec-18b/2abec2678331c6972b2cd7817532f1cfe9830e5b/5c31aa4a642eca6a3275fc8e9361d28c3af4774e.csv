is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,138,oolean inExtendedComment = false;
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,139,hile (scanner.hasNextLine()) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,140,inal String rawLine = scanner.nextLine();
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,141,tring line = rawLine;
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,142,f (inExtendedComment) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,143,"/ check for closing comment marker, otherwise discard doc comment line"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,144,f (line.endsWith(ResourceConstants.EXT_CMT_END)) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,145,nExtendedComment = false;
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,147, else {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,148,f (line.startsWith(ResourceConstants.EXT_CMT_START)) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,149,nExtendedComment = true;
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,150, else {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,151,/ discard comments
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,152,inal int cmtI = line.indexOf(ResourceConstants.CMT);
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,153,f (cmtI >= 0) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,154,"ine = line.substring(0, cmtI);"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,157,/ trim leading-trailing whitespace
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,158,ine = line.trim();
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,160,f (line.length() == 0) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,161,ontinue; // empty lines can be safely skipped
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,138,try {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,139,boolean inExtendedComment = false;
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,140,while (scanner.hasNextLine()) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,141,final String rawLine = scanner.nextLine();
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,142,String line = rawLine;
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,143,if (inExtendedComment) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,144,"// check for closing comment marker, otherwise discard doc comment line"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,145,if (line.endsWith(ResourceConstants.EXT_CMT_END)) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,146,inExtendedComment = false;
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,164,/ split it up
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,165,"inal String[] parts = line.split(""\\s+"");"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,167,f (parts.length != 3) {
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,168,"hrow new IllegalArgumentException(""Malformed line '"" + rawLine + ""' in language resource '"" +"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,169,"anguageRulesResourceName + ""'"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,148,} else {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,149,if (line.startsWith(ResourceConstants.EXT_CMT_START)) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,150,inExtendedComment = true;
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,151,} else {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,152,// discard comments
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,153,final int cmtI = line.indexOf(ResourceConstants.CMT);
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,154,if (cmtI >= 0) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,155,"line = line.substring(0, cmtI);"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,158,// trim leading-trailing whitespace
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,159,line = line.trim();
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,161,if (line.length() == 0) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,162,continue; // empty lines can be safely skipped
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,165,// split it up
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,166,"final String[] parts = line.split(""\\s+"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,168,if (parts.length != 3) {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,169,"throw new IllegalArgumentException(""Malformed line '"" + rawLine"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,170,"+ ""' in language resource '"" + languageRulesResourceName + ""'"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,173,final Pattern pattern = Pattern.compile(parts[0]);
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,174,"final String[] langs = parts[1].split(""\\+"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,175,"final boolean accept = parts[2].equals(""true"");"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,177,"rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,172,inal Pattern pattern = Pattern.compile(parts[0]);
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,173,"inal String[] langs = parts[1].split(""\\+"");"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,174,"inal boolean accept = parts[2].equals(""true"");"
False,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,176,"ules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));"
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,181,} finally {
True,src/main/java/org/apache/commons/codec/language/bm/Lang.java,src/main/java/org/apache/commons/codec/language/bm/Lang.java,182,scanner.close();
