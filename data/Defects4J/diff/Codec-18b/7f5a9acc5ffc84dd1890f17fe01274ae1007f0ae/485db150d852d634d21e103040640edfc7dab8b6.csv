is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,181,ublic void testDecodeByteArrayOddCharacters() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,181,public void testDecodeBadCharacterPos0() {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,183,ew Hex().decode(new byte[]{65});
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,184,"ail(""An exception wasn't thrown when trying to decode an odd number of characters"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,183,"new Hex().decode(""q0"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,184,"fail(""An exception wasn't thrown when trying to decode an illegal character"");"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,191,ublic void testDecodeBadCharacterPos0() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,191,public void testDecodeBadCharacterPos1() {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,193,"ew Hex().decode(""q0"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,193,"new Hex().decode(""0q"");"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,201,ublic void testDecodeBadCharacterPos1() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,201,public void testDecodeByteArrayEmpty() throws DecoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,202,"assertTrue(Arrays.equals(new byte[0], Hex.decodeHex(new char[0])));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,203,"assertTrue(Arrays.equals(new byte[0], new Hex().decode(new byte[0])));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,206,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,207,public void testDecodeByteArrayOddCharacters() {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,203,"ew Hex().decode(""0q"");"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,204,"ail(""An exception wasn't thrown when trying to decode an illegal character"");"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,209,new Hex().decode(new byte[]{65});
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,210,"fail(""An exception wasn't thrown when trying to decode an odd number of characters"");"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,245,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,246,ublic void testDecodeByteArrayEmpty() throws DecoderException {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,247,"ssertTrue(Arrays.equals(new byte[0], Hex.decodeHex(new char[0])));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,248,"ssertTrue(Arrays.equals(new byte[0], new Hex().decode(new byte[0])));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,305,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,306,ublic void testEncodeStringEmpty() throws EncoderException {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,307,"ssertTrue(Arrays.equals(new char[0], (char[]) new Hex().encode("""")));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,310,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,311,ublic void testEncodeHexByteArrayZeroes() {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,312,inal char[] c = Hex.encodeHex(new byte[36]);
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,313,"ssertEquals(""000000000000000000000000000000000000000000000000000000000000000000000000"", new String(c));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,331,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,332,public void testEncodeHexByteArrayZeroes() {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,333,final char[] c = Hex.encodeHex(new byte[36]);
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,334,"assertEquals(""000000000000000000000000000000000000000000000000000000000000000000000000"", new String(c));"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,337,@Test
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,338,public void testEncodeStringEmpty() throws EncoderException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,339,"assertTrue(Arrays.equals(new char[0], (char[]) new Hex().encode("""")));"
