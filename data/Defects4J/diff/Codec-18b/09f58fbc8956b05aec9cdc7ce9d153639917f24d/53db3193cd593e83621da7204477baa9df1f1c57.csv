is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,63," This array is a lookup table that translates Unicode characters drawn from the ""Base32 Alphabet"" (as specified in"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,64, Table 3 of RFC 2045) into their 5-bit positive integer equivalents. Characters that are not in the Base32
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,63,"* This array is a lookup table that translates Unicode characters drawn from the ""Base32 Alphabet"" (as specified"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,64,* in Table 3 of RFC 2045) into their 5-bit positive integer equivalents. Characters that are not in the Base32
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,89," This array is a lookup table that translates Unicode characters drawn from the ""Base32 |Hex Alphabet"" (as specified in"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,90, Table 3 of RFC 2045) into their 5-bit positive integer equivalents. Characters that are not in the Base32 Hex
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,91, alphabet but fall within the bounds of the array are translated to -1.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,88,"* This array is a lookup table that translates Unicode characters drawn from the ""Base32 |Hex Alphabet"" (as"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,89,* specified in Table 3 of RFC 2045) into their 5-bit positive integer equivalents. Characters that are not in the
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,90,* Base32 Hex alphabet but fall within the bounds of the array are translated to -1.
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,105," This array is a lookup table that translates 5-bit positive integer index values into their ""Base32 Hex Alphabet"""
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,106, equivalents as specified in Table 3 of RFC 2045.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,103,* This array is a lookup table that translates 5-bit positive integer index values into their
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,104,"* ""Base32 Hex Alphabet"" equivalents as specified in Table 3 of RFC 2045."
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,181,            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,182,"            If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding."
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,180,*            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,181,"*            8). If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,182,*            decoding.
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,198,            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,199,"            If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding."
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,198,*            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,199,"*            8). If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,200,*            decoding.
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,219,            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,220,"            If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding."
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,220,*            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,221,"*            8). If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,222,*            decoding.
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,223," @param useHex if {@code true}, then use Base32 Hex alphabet, otherwise use Base32 alphabet"
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,225,* @param useHex
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,226,"*            if {@code true}, then use Base32 Hex alphabet, otherwise use Base32 alphabet"
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,225,             The provided lineSeparator included some Base32 characters. That's not going to work!
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,226,             Or the lineLength > 0 and lineSeparator is null.
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,228,*             The provided lineSeparator included some Base32 characters. That's not going to work! Or the
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,229,*             lineLength > 0 and lineSeparator is null.
False,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,300,ontext.lbitWorkArea = (context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result; // collect decoded bytes
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,303,// collect decoded bytes
True,src/main/java/org/apache/commons/codec/binary/Base32.java,src/main/java/org/apache/commons/codec/binary/Base32.java,304,context.lbitWorkArea = (context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,24, Encodes a string into a double metaphone value.
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,25, This Implementation is based on the algorithm by <CITE>Lawrence Philips</CITE>.
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,24,* Encodes a string into a double metaphone value. This Implementation is based on the algorithm by <CITE>Lawrence
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,25,* Philips</CITE>.
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,26,* <p>
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,27,* This class is conditionally thread-safe. The instance field {@link #maxCodeLen} is mutable
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,28,"* {@link #setMaxCodeLen(int)} but is not volatile, and accesses are not synchronized. If an instance of the class is"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,29,"* shared between threads, the caller needs to ensure that suitable synchronization is used to ensure safe publication"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,30,"* of the value between threads, and must not invoke {@link #setMaxCodeLen(int)} after initial setup."
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,30, This class is conditionally thread-safe.
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,31, The instance field {@link #maxCodeLen} is mutable {@link #setMaxCodeLen(int)}
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,32," but is not volatile, and accesses are not synchronized."
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,33," If an instance of the class is shared between threads, the caller needs to ensure that suitable synchronization"
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,34," is used to ensure safe publication of the value between threads, and must not invoke {@link #setMaxCodeLen(int)}"
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,35, after initial setup.
