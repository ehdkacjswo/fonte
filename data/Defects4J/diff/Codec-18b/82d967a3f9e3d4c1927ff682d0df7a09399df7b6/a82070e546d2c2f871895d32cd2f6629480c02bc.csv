is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,17,package org.apache.commons.codec.digest;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,19,import java.io.File;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,20,import java.io.IOException;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,21,import java.security.MessageDigest;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,23,import org.apache.commons.codec.binary.Hex;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,26,* A minimal command line to run digest over files.
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,28,* @see #main(String[])
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,30,public class Digest {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,33,"* Runs the digest algorithm in {@code args[0]} on the file in {@code args[1]}. If there is no {@code args[1]}, use"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,34,* standard input.
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,36,* <p>
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,37,* The algorithm can also be {@code ALL} or {@code *} to output one line for each known algorithm.
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,38,* </p>
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,40,* @param args
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,41,"*            {@code args[0]} is one of {@link MessageDigestAlgorithm} name, {@link MessageDigest} name, {@code ALL}"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,42,"*            , or {@code *}. {@code args[1]} is a FILE."
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,43,* @throws IOException
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,45,public static void main(String[] args) throws IOException {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,46,new Digest(args).run();
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,49,private final String algorithm;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,50,private final String[] args;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,51,private final String source;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,53,private Digest(final String[] args) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,54,if (args == null) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,55,"throw new IllegalArgumentException(""args"");"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,57,if (args.length == 0) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,58,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,59,"String.format(""Usage: java %s [algorithm] [FILE|DIRECTORY]"", Digest.class.getName()));"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,61,this.args = args;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,62,algorithm = args[0];
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,63,source = args.length == 1 ? null : args[1];
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,66,"private void println(String prefix, final byte[] digest) {"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,67,"final String sourceDesc = source == null ? ""-"" : source;"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,68,"System.out.println(prefix + Hex.encodeHexString(digest) + "" "" + sourceDesc);"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,71,private void run() throws IOException {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,72,"if (algorithm.equalsIgnoreCase(""ALL"") || algorithm.equals(""*"")) {"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,73,run(MessageDigestAlgorithm.values());
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,74,return;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,76,"final MessageDigest messageDigest = DigestUtils.getDigest(algorithm, null);"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,77,if (messageDigest != null) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,78,"run("""", messageDigest);"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,79,} else {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,80,"run("""", MessageDigestAlgorithm.valueOf(algorithm).getMessageDigest());"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,84,private void run(MessageDigestAlgorithm[] digestAlgorithms) throws IOException {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,85,for (int i = 0; i < digestAlgorithms.length; i++) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,86,final MessageDigestAlgorithm messageDigestAlgorithm = digestAlgorithms[i];
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,87,if (messageDigestAlgorithm.isAvailable()) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,88,"run(messageDigestAlgorithm.getAlgorithm() + "" "", messageDigestAlgorithm);"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,93,"private void run(String prefix, final MessageDigest messageDigest) throws IOException {"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,94,if (source == null) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,95,"println(prefix, DigestUtils.digest(messageDigest, System.in));"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,96,return;
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,98,final File file = new File(source);
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,99,if (file.isFile()) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,100,"println(prefix, DigestUtils.digest(messageDigest, file));"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,101,} else if (file.isDirectory()) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,102,"run(prefix, messageDigest, file.listFiles());"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,106,"private void run(String prefix, MessageDigest messageDigest, File[] files) throws IOException {"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,107,for (int i = 0; i < files.length; i++) {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,108,"println(prefix, DigestUtils.digest(messageDigest, files[i]));"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,112,"private void run(String prefix, final MessageDigestAlgorithm messageDigestAlgorithm) throws IOException {"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,113,"run(prefix, messageDigestAlgorithm.getMessageDigest());"
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,116,@Override
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,117,public String toString() {
True,src/main/java/org/apache/commons/codec/digest/Digest.java,src/main/java/org/apache/commons/codec/digest/Digest.java,118,"return String.format(""%s[%s]"", super.toString(), args);"
