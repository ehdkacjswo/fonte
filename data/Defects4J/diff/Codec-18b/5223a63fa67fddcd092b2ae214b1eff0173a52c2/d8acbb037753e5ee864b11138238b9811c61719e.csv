is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,611,* Tests a given String to see if it contains only valid characters within the Base64 alphabet. Currently the
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,612,* method treats whitespace as valid.
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,614,* @param base64
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,615,*            String of (presumably) base64 characters to test
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,616,* @return <code>true</code> if all characters in the String are valid characters in the Base64 alphabet or if
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,617,"*         the String is empty; false, otherwise"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,619,public static boolean isStringBase64(String base64) {
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,620,return isArrayByteBase64(StringUtils.getBytesUtf8(base64));
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,59,* Test the isStringBase64 method.
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,61,public void testIsStringBase64() {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,62,String nullString = null;
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,63,"String emptyString = """";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,64,"String validString = ""abc===defg\n\r123456\r789\r\rABC\n\nDEF==GHI\r\nJKL=============="";"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,65,String invalidString = validString + ((char)0); // append null character
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,67,try {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,68,Base64.isStringBase64(nullString);
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,69,"fail(""Base64.isStringBase64() should not be null-safe."");"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,70,} catch (NullPointerException npe) {
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,71,"assertNotNull(""Base64.isStringBase64() should not be null-safe."", npe);"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,74,"assertTrue(""Base64.isStringBase64(empty-string) is true"", Base64.isStringBase64(emptyString));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,75,"assertTrue(""Base64.isStringBase64(valid-string) is true"", Base64.isStringBase64(validString));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,76,"assertFalse(""Base64.isStringBase64(invalid-string) is false"", Base64.isStringBase64(invalidString));"
