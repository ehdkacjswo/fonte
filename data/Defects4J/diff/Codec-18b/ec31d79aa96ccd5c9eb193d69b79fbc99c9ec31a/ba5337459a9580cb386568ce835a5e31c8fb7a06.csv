is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,18,ackage org.apache.commons.codec.language;
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,20,mport org.apache.commons.codec.EncoderException;
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,21,mport org.apache.commons.codec.StringEncoder;
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,24, Encodes a string into a Caverphone value.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,26, This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,27, algorithm:
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,29, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,30, @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,31," @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,32, @since 1.5
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,34,ublic abstract class AbstractCaverphone implements StringEncoder {
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,37, Creates an instance of the Caverphone encoder
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,39,ublic AbstractCaverphone() {
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,40,uper();
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,44, Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,45," the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,47, @param source
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,48,            Object to encode
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,49, @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,50,         supplied.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,51, @throws EncoderException
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,52,             if the parameter supplied is not of type java.lang.String
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,54,ublic Object encode(Object source) throws EncoderException {
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,55,f (!(source instanceof String)) {
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,56,"hrow new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,58,eturn this.encode((String) source);
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,62, Tests if the encodings of two strings are equal.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,64, This method might be promoted to a new AbstractStringEncoder superclass.
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,66, @param str1
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,67,            First of two strings to compare
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,68, @param str2
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,69,            Second of two strings to compare
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,70," @return <code>true</code> if the encodings of these strings are identical, <code>false</code> otherwise."
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,71, @throws EncoderException
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,73,"ublic boolean isEncodeEqual(String str1, String str2) throws EncoderException {"
False,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,74,eturn this.encode(str1).equals(this.encode(str2));
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,20,import org.apache.commons.codec.EncoderException;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,21,import org.apache.commons.codec.StringEncoder;
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,24,* Encodes a string into a Caverphone value.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,26,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,27,* algorithm:
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,29,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,30,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,31,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,32,* @since 1.5
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,34,public abstract class AbstractCaverphone implements StringEncoder {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,37,* Creates an instance of the Caverphone encoder
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,39,public AbstractCaverphone() {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,40,super();
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,44,* Encodes an Object using the caverphone algorithm. This method is provided in order to satisfy the requirements of
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,45,"* the Encoder interface, and will throw an EncoderException if the supplied object is not of type java.lang.String."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,47,* @param source
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,48,*            Object to encode
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,49,* @return An object (or type java.lang.String) containing the caverphone code which corresponds to the String
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,50,*         supplied.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,51,* @throws EncoderException
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,52,*             if the parameter supplied is not of type java.lang.String
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,54,public Object encode(Object source) throws EncoderException {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,55,if (!(source instanceof String)) {
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,56,"throw new EncoderException(""Parameter supplied to Caverphone encode is not of type java.lang.String"");"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,58,return this.encode((String) source);
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,62,* Tests if the encodings of two strings are equal.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,64,* This method might be promoted to a new AbstractStringEncoder superclass.
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,66,* @param str1
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,67,*            First of two strings to compare
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,68,* @param str2
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,69,*            Second of two strings to compare
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,70,"* @return <code>true</code> if the encodings of these strings are identical, <code>false</code> otherwise."
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,71,* @throws EncoderException
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,73,"public boolean isEncodeEqual(String str1, String str2) throws EncoderException {"
True,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,src/java/org/apache/commons/codec/language/AbstractCaverphone.java,74,return this.encode(str1).equals(this.encode(str2));
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,18,ackage org.apache.commons.codec.language;
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,21, Encodes a string into a Caverphone 1.0 value.
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,23, This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 1.0
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,24, algorithm:
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,26, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,27, @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,28," @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,29," @see <a href=""http://caversham.otago.ac.nz/files/working/ctp060902.pdf"">Caverphone 1.0 specification</a>"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,30, @since 1.5
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,32,ublic class Caverphone1 extends AbstractCaverphone {
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,34,"rivate static final String SIX_1 = ""111111"";"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,37, Encodes the given String into a Caverphone value.
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,39, @param source
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,40,            String the source string
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,41, @return A caverphone code for the given String
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,43,ublic String encode(String source) {
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,44,tring txt = source;
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,45,f (txt == null || txt.length() == 0) {
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,46,eturn SIX_1;
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,49,/ 1. Convert to lowercase
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,50,xt = txt.toLowerCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,52,/ 2. Remove anything not A-Z
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,53,"xt = txt.replaceAll(""[^a-z]"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,55,/ 3. Handle various start options
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,56,/ 2 is a temporary placeholder to indicate a consonant which we are no longer interested in.
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,57,"xt = txt.replaceAll(""^cough"", ""cou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,58,"xt = txt.replaceAll(""^rough"", ""rou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,59,"xt = txt.replaceAll(""^tough"", ""tou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,60,"xt = txt.replaceAll(""^enough"", ""enou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,61,"xt = txt.replaceAll(""^gn"", ""2n"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,63,/ End
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,64,"xt = txt.replaceAll(""mb$"", ""m2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,66,/ 4. Handle replacements
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,67,"xt = txt.replaceAll(""cq"", ""2q"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,68,"xt = txt.replaceAll(""ci"", ""si"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,69,"xt = txt.replaceAll(""ce"", ""se"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,70,"xt = txt.replaceAll(""cy"", ""sy"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,71,"xt = txt.replaceAll(""tch"", ""2ch"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,72,"xt = txt.replaceAll(""c"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,73,"xt = txt.replaceAll(""q"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,74,"xt = txt.replaceAll(""x"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,75,"xt = txt.replaceAll(""v"", ""f"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,76,"xt = txt.replaceAll(""dg"", ""2g"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,77,"xt = txt.replaceAll(""tio"", ""sio"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,78,"xt = txt.replaceAll(""tia"", ""sia"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,79,"xt = txt.replaceAll(""d"", ""t"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,80,"xt = txt.replaceAll(""ph"", ""fh"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,81,"xt = txt.replaceAll(""b"", ""p"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,82,"xt = txt.replaceAll(""sh"", ""s2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,83,"xt = txt.replaceAll(""z"", ""s"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,84,"xt = txt.replaceAll(""^[aeiou]"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,85,/ 3 is a temporary placeholder marking a vowel
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,86,"xt = txt.replaceAll(""[aeiou]"", ""3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,87,"xt = txt.replaceAll(""3gh3"", ""3kh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,88,"xt = txt.replaceAll(""gh"", ""22"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,89,"xt = txt.replaceAll(""g"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,90,"xt = txt.replaceAll(""s+"", ""S"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,91,"xt = txt.replaceAll(""t+"", ""T"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,92,"xt = txt.replaceAll(""p+"", ""P"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,93,"xt = txt.replaceAll(""k+"", ""K"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,94,"xt = txt.replaceAll(""f+"", ""F"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,95,"xt = txt.replaceAll(""m+"", ""M"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,96,"xt = txt.replaceAll(""n+"", ""N"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,97,"xt = txt.replaceAll(""w3"", ""W3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,98,"xt = txt.replaceAll(""wy"", ""Wy""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,99,"xt = txt.replaceAll(""wh3"", ""Wh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,100,"xt = txt.replaceAll(""why"", ""Why""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,101,"xt = txt.replaceAll(""w"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,102,"xt = txt.replaceAll(""^h"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,103,"xt = txt.replaceAll(""h"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,104,"xt = txt.replaceAll(""r3"", ""R3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,105,"xt = txt.replaceAll(""ry"", ""Ry""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,106,"xt = txt.replaceAll(""r"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,107,"xt = txt.replaceAll(""l3"", ""L3"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,108,"xt = txt.replaceAll(""ly"", ""Ly""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,109,"xt = txt.replaceAll(""l"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,110,"xt = txt.replaceAll(""j"", ""y""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,111,"xt = txt.replaceAll(""y3"", ""Y3""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,112,"xt = txt.replaceAll(""y"", ""2""); // 1.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,114,/ 5. Handle removals
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,115,"xt = txt.replaceAll(""2"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,116,"xt = txt.replaceAll(""3"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,118,/ 6. put ten 1s on the end
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,119,xt = txt + SIX_1;
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,121,/ 7. take the first six characters as the code
False,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,122,"eturn txt.substring(0, SIX_1.length());"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,21,* Encodes a string into a Caverphone 1.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,23,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 1.0
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,24,* algorithm:
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,26,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,27,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,28,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,29,"* @see <a href=""http://caversham.otago.ac.nz/files/working/ctp060902.pdf"">Caverphone 1.0 specification</a>"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,30,* @since 1.5
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,32,public class Caverphone1 extends AbstractCaverphone {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,34,"private static final String SIX_1 = ""111111"";"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,37,* Encodes the given String into a Caverphone value.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,39,* @param source
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,40,*            String the source string
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,41,* @return A caverphone code for the given String
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,43,public String encode(String source) {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,44,String txt = source;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,45,if (txt == null || txt.length() == 0) {
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,46,return SIX_1;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,49,// 1. Convert to lowercase
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,50,txt = txt.toLowerCase(java.util.Locale.ENGLISH);
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,52,// 2. Remove anything not A-Z
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,53,"txt = txt.replaceAll(""[^a-z]"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,55,// 3. Handle various start options
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,56,// 2 is a temporary placeholder to indicate a consonant which we are no longer interested in.
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,57,"txt = txt.replaceAll(""^cough"", ""cou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,58,"txt = txt.replaceAll(""^rough"", ""rou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,59,"txt = txt.replaceAll(""^tough"", ""tou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,60,"txt = txt.replaceAll(""^enough"", ""enou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,61,"txt = txt.replaceAll(""^gn"", ""2n"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,63,// End
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,64,"txt = txt.replaceAll(""mb$"", ""m2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,66,// 4. Handle replacements
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,67,"txt = txt.replaceAll(""cq"", ""2q"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,68,"txt = txt.replaceAll(""ci"", ""si"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,69,"txt = txt.replaceAll(""ce"", ""se"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,70,"txt = txt.replaceAll(""cy"", ""sy"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,71,"txt = txt.replaceAll(""tch"", ""2ch"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,72,"txt = txt.replaceAll(""c"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,73,"txt = txt.replaceAll(""q"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,74,"txt = txt.replaceAll(""x"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,75,"txt = txt.replaceAll(""v"", ""f"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,76,"txt = txt.replaceAll(""dg"", ""2g"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,77,"txt = txt.replaceAll(""tio"", ""sio"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,78,"txt = txt.replaceAll(""tia"", ""sia"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,79,"txt = txt.replaceAll(""d"", ""t"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,80,"txt = txt.replaceAll(""ph"", ""fh"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,81,"txt = txt.replaceAll(""b"", ""p"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,82,"txt = txt.replaceAll(""sh"", ""s2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,83,"txt = txt.replaceAll(""z"", ""s"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,84,"txt = txt.replaceAll(""^[aeiou]"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,85,// 3 is a temporary placeholder marking a vowel
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,86,"txt = txt.replaceAll(""[aeiou]"", ""3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,87,"txt = txt.replaceAll(""3gh3"", ""3kh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,88,"txt = txt.replaceAll(""gh"", ""22"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,89,"txt = txt.replaceAll(""g"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,90,"txt = txt.replaceAll(""s+"", ""S"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,91,"txt = txt.replaceAll(""t+"", ""T"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,92,"txt = txt.replaceAll(""p+"", ""P"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,93,"txt = txt.replaceAll(""k+"", ""K"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,94,"txt = txt.replaceAll(""f+"", ""F"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,95,"txt = txt.replaceAll(""m+"", ""M"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,96,"txt = txt.replaceAll(""n+"", ""N"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,97,"txt = txt.replaceAll(""w3"", ""W3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,98,"txt = txt.replaceAll(""wy"", ""Wy""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,99,"txt = txt.replaceAll(""wh3"", ""Wh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,100,"txt = txt.replaceAll(""why"", ""Why""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,101,"txt = txt.replaceAll(""w"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,102,"txt = txt.replaceAll(""^h"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,103,"txt = txt.replaceAll(""h"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,104,"txt = txt.replaceAll(""r3"", ""R3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,105,"txt = txt.replaceAll(""ry"", ""Ry""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,106,"txt = txt.replaceAll(""r"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,107,"txt = txt.replaceAll(""l3"", ""L3"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,108,"txt = txt.replaceAll(""ly"", ""Ly""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,109,"txt = txt.replaceAll(""l"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,110,"txt = txt.replaceAll(""j"", ""y""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,111,"txt = txt.replaceAll(""y3"", ""Y3""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,112,"txt = txt.replaceAll(""y"", ""2""); // 1.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,114,// 5. Handle removals
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,115,"txt = txt.replaceAll(""2"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,116,"txt = txt.replaceAll(""3"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,118,// 6. put ten 1s on the end
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,119,txt = txt + SIX_1;
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,121,// 7. take the first six characters as the code
True,src/java/org/apache/commons/codec/language/Caverphone1.java,src/java/org/apache/commons/codec/language/Caverphone1.java,122,"return txt.substring(0, SIX_1.length());"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,18,ackage org.apache.commons.codec.language;
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,21, Encodes a string into a Caverphone 2.0 value.
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,23, This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,24, algorithm:
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,26, @author Apache Software Foundation
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,27, @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,28," @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,29," @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,30, @since 1.5
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,32,ublic class Caverphone2 extends AbstractCaverphone {
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,34,"rivate static final String TEN_1 = ""1111111111"";"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,37, Encodes the given String into a Caverphone 2.0 value.
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,39, @param source
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,40,            String the source string
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,41, @return A caverphone code for the given String
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,43,ublic String encode(String source) {
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,44,tring txt = source;
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,45,f (txt == null || txt.length() == 0) {
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,46,eturn TEN_1;
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,49,/ 1. Convert to lowercase
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,50,xt = txt.toLowerCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,52,/ 2. Remove anything not A-Z
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,53,"xt = txt.replaceAll(""[^a-z]"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,55,/ 2.5. Remove final e
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,56,"xt = txt.replaceAll(""e$"", """"); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,58,/ 3. Handle various start options
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,59,"xt = txt.replaceAll(""^cough"", ""cou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,60,"xt = txt.replaceAll(""^rough"", ""rou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,61,"xt = txt.replaceAll(""^tough"", ""tou2f"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,62,"xt = txt.replaceAll(""^enough"", ""enou2f""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,63,"xt = txt.replaceAll(""^trough"", ""trou2f""); // 2.0 only - note the spec says ^enough here again, c+p error I assume"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,64,"xt = txt.replaceAll(""^gn"", ""2n"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,66,/ End
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,67,"xt = txt.replaceAll(""mb$"", ""m2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,69,/ 4. Handle replacements
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,70,"xt = txt.replaceAll(""cq"", ""2q"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,71,"xt = txt.replaceAll(""ci"", ""si"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,72,"xt = txt.replaceAll(""ce"", ""se"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,73,"xt = txt.replaceAll(""cy"", ""sy"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,74,"xt = txt.replaceAll(""tch"", ""2ch"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,75,"xt = txt.replaceAll(""c"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,76,"xt = txt.replaceAll(""q"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,77,"xt = txt.replaceAll(""x"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,78,"xt = txt.replaceAll(""v"", ""f"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,79,"xt = txt.replaceAll(""dg"", ""2g"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,80,"xt = txt.replaceAll(""tio"", ""sio"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,81,"xt = txt.replaceAll(""tia"", ""sia"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,82,"xt = txt.replaceAll(""d"", ""t"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,83,"xt = txt.replaceAll(""ph"", ""fh"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,84,"xt = txt.replaceAll(""b"", ""p"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,85,"xt = txt.replaceAll(""sh"", ""s2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,86,"xt = txt.replaceAll(""z"", ""s"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,87,"xt = txt.replaceAll(""^[aeiou]"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,88,"xt = txt.replaceAll(""[aeiou]"", ""3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,89,"xt = txt.replaceAll(""j"", ""y""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,90,"xt = txt.replaceAll(""^y3"", ""Y3""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,91,"xt = txt.replaceAll(""^y"", ""A""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,92,"xt = txt.replaceAll(""y"", ""3""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,93,"xt = txt.replaceAll(""3gh3"", ""3kh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,94,"xt = txt.replaceAll(""gh"", ""22"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,95,"xt = txt.replaceAll(""g"", ""k"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,96,"xt = txt.replaceAll(""s+"", ""S"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,97,"xt = txt.replaceAll(""t+"", ""T"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,98,"xt = txt.replaceAll(""p+"", ""P"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,99,"xt = txt.replaceAll(""k+"", ""K"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,100,"xt = txt.replaceAll(""f+"", ""F"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,101,"xt = txt.replaceAll(""m+"", ""M"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,102,"xt = txt.replaceAll(""n+"", ""N"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,103,"xt = txt.replaceAll(""w3"", ""W3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,104,"xt = txt.replaceAll(""wh3"", ""Wh3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,105,"xt = txt.replaceAll(""w$"", ""3""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,106,"xt = txt.replaceAll(""w"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,107,"xt = txt.replaceAll(""^h"", ""A"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,108,"xt = txt.replaceAll(""h"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,109,"xt = txt.replaceAll(""r3"", ""R3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,110,"xt = txt.replaceAll(""r$"", ""3""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,111,"xt = txt.replaceAll(""r"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,112,"xt = txt.replaceAll(""l3"", ""L3"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,113,"xt = txt.replaceAll(""l$"", ""3""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,114,"xt = txt.replaceAll(""l"", ""2"");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,116,/ 5. Handle removals
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,117,"xt = txt.replaceAll(""2"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,118,"xt = txt.replaceAll(""3$"", ""A""); // 2.0 only"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,119,"xt = txt.replaceAll(""3"", """");"
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,121,/ 6. put ten 1s on the end
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,122,xt = txt + TEN_1;
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,124,/ 7. take the first ten characters as the code
False,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,125,"eturn txt.substring(0, TEN_1.length());"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,18,package org.apache.commons.codec.language;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,21,* Encodes a string into a Caverphone 2.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,23,* This is an algorithm created by the Caversham Project at the University of Otago. It implements the Caverphone 2.0
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,24,* algorithm:
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,26,* @author Apache Software Foundation
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,27,* @version $Id: Caverphone.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,28,"* @see <a href=""http://en.wikipedia.org/wiki/Caverphone"">Wikipedia - Caverphone</a>"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,29,"* @see <a href=""http://caversham.otago.ac.nz/files/working/ctp150804.pdf"">Caverphone 2.0 specification</a>"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,30,* @since 1.5
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,32,public class Caverphone2 extends AbstractCaverphone {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,34,"private static final String TEN_1 = ""1111111111"";"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,37,* Encodes the given String into a Caverphone 2.0 value.
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,39,* @param source
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,40,*            String the source string
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,41,* @return A caverphone code for the given String
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,43,public String encode(String source) {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,44,String txt = source;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,45,if (txt == null || txt.length() == 0) {
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,46,return TEN_1;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,49,// 1. Convert to lowercase
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,50,txt = txt.toLowerCase(java.util.Locale.ENGLISH);
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,52,// 2. Remove anything not A-Z
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,53,"txt = txt.replaceAll(""[^a-z]"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,55,// 2.5. Remove final e
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,56,"txt = txt.replaceAll(""e$"", """"); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,58,// 3. Handle various start options
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,59,"txt = txt.replaceAll(""^cough"", ""cou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,60,"txt = txt.replaceAll(""^rough"", ""rou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,61,"txt = txt.replaceAll(""^tough"", ""tou2f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,62,"txt = txt.replaceAll(""^enough"", ""enou2f""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,63,"txt = txt.replaceAll(""^trough"", ""trou2f""); // 2.0 only - note the spec says ^enough here again, c+p error I assume"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,64,"txt = txt.replaceAll(""^gn"", ""2n"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,66,// End
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,67,"txt = txt.replaceAll(""mb$"", ""m2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,69,// 4. Handle replacements
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,70,"txt = txt.replaceAll(""cq"", ""2q"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,71,"txt = txt.replaceAll(""ci"", ""si"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,72,"txt = txt.replaceAll(""ce"", ""se"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,73,"txt = txt.replaceAll(""cy"", ""sy"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,74,"txt = txt.replaceAll(""tch"", ""2ch"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,75,"txt = txt.replaceAll(""c"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,76,"txt = txt.replaceAll(""q"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,77,"txt = txt.replaceAll(""x"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,78,"txt = txt.replaceAll(""v"", ""f"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,79,"txt = txt.replaceAll(""dg"", ""2g"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,80,"txt = txt.replaceAll(""tio"", ""sio"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,81,"txt = txt.replaceAll(""tia"", ""sia"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,82,"txt = txt.replaceAll(""d"", ""t"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,83,"txt = txt.replaceAll(""ph"", ""fh"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,84,"txt = txt.replaceAll(""b"", ""p"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,85,"txt = txt.replaceAll(""sh"", ""s2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,86,"txt = txt.replaceAll(""z"", ""s"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,87,"txt = txt.replaceAll(""^[aeiou]"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,88,"txt = txt.replaceAll(""[aeiou]"", ""3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,89,"txt = txt.replaceAll(""j"", ""y""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,90,"txt = txt.replaceAll(""^y3"", ""Y3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,91,"txt = txt.replaceAll(""^y"", ""A""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,92,"txt = txt.replaceAll(""y"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,93,"txt = txt.replaceAll(""3gh3"", ""3kh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,94,"txt = txt.replaceAll(""gh"", ""22"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,95,"txt = txt.replaceAll(""g"", ""k"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,96,"txt = txt.replaceAll(""s+"", ""S"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,97,"txt = txt.replaceAll(""t+"", ""T"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,98,"txt = txt.replaceAll(""p+"", ""P"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,99,"txt = txt.replaceAll(""k+"", ""K"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,100,"txt = txt.replaceAll(""f+"", ""F"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,101,"txt = txt.replaceAll(""m+"", ""M"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,102,"txt = txt.replaceAll(""n+"", ""N"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,103,"txt = txt.replaceAll(""w3"", ""W3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,104,"txt = txt.replaceAll(""wh3"", ""Wh3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,105,"txt = txt.replaceAll(""w$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,106,"txt = txt.replaceAll(""w"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,107,"txt = txt.replaceAll(""^h"", ""A"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,108,"txt = txt.replaceAll(""h"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,109,"txt = txt.replaceAll(""r3"", ""R3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,110,"txt = txt.replaceAll(""r$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,111,"txt = txt.replaceAll(""r"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,112,"txt = txt.replaceAll(""l3"", ""L3"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,113,"txt = txt.replaceAll(""l$"", ""3""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,114,"txt = txt.replaceAll(""l"", ""2"");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,116,// 5. Handle removals
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,117,"txt = txt.replaceAll(""2"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,118,"txt = txt.replaceAll(""3$"", ""A""); // 2.0 only"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,119,"txt = txt.replaceAll(""3"", """");"
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,121,// 6. put ten 1s on the end
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,122,txt = txt + TEN_1;
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,124,// 7. take the first ten characters as the code
True,src/java/org/apache/commons/codec/language/Caverphone2.java,src/java/org/apache/commons/codec/language/Caverphone2.java,125,"return txt.substring(0, TEN_1.length());"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,15, limitations under the License.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,18,ackage org.apache.commons.codec.net;
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,20,mport org.apache.commons.codec.DecoderException;
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,23, Utility methods for this package.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,25," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,26, @version $Id$
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,27, @since 1.4
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,29,lass Utils {
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,32, Returns the numeric value of the character <code>b</code> in radix 16.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,34, @param b
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,35,            The byte to be converted.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,36, @return The numeric value represented by the character in radix 16.
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,38, @throws DecoderException
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,39,"             Thrown when the byte is not valid per {@link Character#digit(char,int)}"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,41,tatic int digit16(byte b) throws DecoderException {
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,42,"nt i = Character.digit((char) b, 16);"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,43,f (i == -1) {
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,44,"hrow new DecoderException(""Invalid URL encoding: not a valid digit (radix "" + URLCodec.RADIX + ""): "" + b);"
False,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,46,eturn i;
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,15,* limitations under the License.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,18,package org.apache.commons.codec.net;
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,20,import org.apache.commons.codec.DecoderException;
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,23,* Utility methods for this package.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,25,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,26,* @version $Id$
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,27,* @since 1.4
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,29,class Utils {
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,32,* Returns the numeric value of the character <code>b</code> in radix 16.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,34,* @param b
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,35,*            The byte to be converted.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,36,* @return The numeric value represented by the character in radix 16.
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,38,* @throws DecoderException
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,39,"*             Thrown when the byte is not valid per {@link Character#digit(char,int)}"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,41,static int digit16(byte b) throws DecoderException {
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,42,"int i = Character.digit((char) b, 16);"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,43,if (i == -1) {
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,44,"throw new DecoderException(""Invalid URL encoding: not a valid digit (radix "" + URLCodec.RADIX + ""): "" + b);"
True,src/java/org/apache/commons/codec/net/Utils.java,src/java/org/apache/commons/codec/net/Utils.java,46,return i;
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,18,ackage org.apache.commons.codec;
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,23, Tests {@link DecoderException}.
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,25," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,26, @version $Id$
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,28,ublic class DecoderExceptionTest extends TestCase {
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,30,"rivate static final String MSG = ""TEST"";"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,32,rivate static final Throwable t = new Exception();
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,34,ublic void testConstructor0() {
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,35,ecoderException e = new DecoderException();
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,36,ssertNull(e.getMessage());
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,37,ssertNull(e.getCause());
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,40,ublic void testConstructorString() {
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,41,ecoderException e = new DecoderException(MSG);
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,42,"ssertEquals(MSG, e.getMessage());"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,43,ssertNull(e.getCause());
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,46,ublic void testConstructorStringThrowable() {
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,47,"ecoderException e = new DecoderException(MSG, t);"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,48,"ssertEquals(MSG, e.getMessage());"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,49,"ssertEquals(t, e.getCause());"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,52,ublic void testConstructorThrowable() {
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,53,ecoderException e = new DecoderException(t);
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,54,"ssertEquals(t.getClass().getName(), e.getMessage());"
False,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,55,"ssertEquals(t, e.getCause());"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,18,package org.apache.commons.codec;
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,23,* Tests {@link DecoderException}.
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,25,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,26,* @version $Id$
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,28,public class DecoderExceptionTest extends TestCase {
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,30,"private static final String MSG = ""TEST"";"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,32,private static final Throwable t = new Exception();
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,34,public void testConstructor0() {
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,35,DecoderException e = new DecoderException();
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,36,assertNull(e.getMessage());
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,37,assertNull(e.getCause());
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,40,public void testConstructorString() {
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,41,DecoderException e = new DecoderException(MSG);
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,42,"assertEquals(MSG, e.getMessage());"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,43,assertNull(e.getCause());
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,46,public void testConstructorStringThrowable() {
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,47,"DecoderException e = new DecoderException(MSG, t);"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,48,"assertEquals(MSG, e.getMessage());"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,49,"assertEquals(t, e.getCause());"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,52,public void testConstructorThrowable() {
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,53,DecoderException e = new DecoderException(t);
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,54,"assertEquals(t.getClass().getName(), e.getMessage());"
True,src/test/org/apache/commons/codec/DecoderExceptionTest.java,src/test/org/apache/commons/codec/DecoderExceptionTest.java,55,"assertEquals(t, e.getCause());"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,18,ackage org.apache.commons.codec;
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,23, Tests {@link EncoderException}.
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,25," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,26, @version $Id$
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,28,ublic class EncoderExceptionTest extends TestCase {
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,30,"rivate static final String MSG = ""TEST"";"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,32,rivate static final Throwable t = new Exception();
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,34,ublic void testConstructor0() {
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,35,ncoderException e = new EncoderException();
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,36,ssertNull(e.getMessage());
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,37,ssertNull(e.getCause());
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,40,ublic void testConstructorString() {
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,41,ncoderException e = new EncoderException(MSG);
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,42,"ssertEquals(MSG, e.getMessage());"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,43,ssertNull(e.getCause());
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,46,ublic void testConstructorStringThrowable() {
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,47,"ncoderException e = new EncoderException(MSG, t);"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,48,"ssertEquals(MSG, e.getMessage());"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,49,"ssertEquals(t, e.getCause());"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,52,ublic void testConstructorThrowable() {
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,53,ncoderException e = new EncoderException(t);
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,54,"ssertEquals(t.getClass().getName(), e.getMessage());"
False,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,55,"ssertEquals(t, e.getCause());"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,18,package org.apache.commons.codec;
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,23,* Tests {@link EncoderException}.
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,25,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,26,* @version $Id$
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,28,public class EncoderExceptionTest extends TestCase {
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,30,"private static final String MSG = ""TEST"";"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,32,private static final Throwable t = new Exception();
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,34,public void testConstructor0() {
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,35,EncoderException e = new EncoderException();
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,36,assertNull(e.getMessage());
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,37,assertNull(e.getCause());
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,40,public void testConstructorString() {
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,41,EncoderException e = new EncoderException(MSG);
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,42,"assertEquals(MSG, e.getMessage());"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,43,assertNull(e.getCause());
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,46,public void testConstructorStringThrowable() {
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,47,"EncoderException e = new EncoderException(MSG, t);"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,48,"assertEquals(MSG, e.getMessage());"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,49,"assertEquals(t, e.getCause());"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,52,public void testConstructorThrowable() {
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,53,EncoderException e = new EncoderException(t);
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,54,"assertEquals(t.getClass().getName(), e.getMessage());"
True,src/test/org/apache/commons/codec/EncoderExceptionTest.java,src/test/org/apache/commons/codec/EncoderExceptionTest.java,55,"assertEquals(t, e.getCause());"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,18,ackage org.apache.commons.codec.language;
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,20,mport junit.framework.Assert;
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,22,mport org.apache.commons.codec.EncoderException;
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,23,mport org.apache.commons.codec.StringEncoder;
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,24,mport org.apache.commons.codec.StringEncoderAbstractTest;
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,27, Tests Caverphone1.
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,29, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,30, @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,31, @since 1.5
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,33,ublic class Caverphone1Test extends StringEncoderAbstractTest {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,35,ublic Caverphone1Test(String name) {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,36,uper(name);
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,39,rotected StringEncoder createStringEncoder() {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,40,eturn new Caverphone1();
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,44, Tests example adapted from version 2.0  http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,46," AT1111 words: add, aid, at, art, eat, earth, head, hit, hot, hold, hard, heart, it, out, old"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,48, @throws EncoderException
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,50,ublic void testCaverphoneRevisitedCommonCodeAT1111() throws EncoderException {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,51,"his.checkEncodingVariations(""AT1111"", new String[]{"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,52,"add"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,53,"aid"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,54,"at"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,55,"art"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,56,"eat"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,57,"earth"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,58,"head"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,59,"hit"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,60,"hot"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,61,"hold"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,62,"hard"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,63,"heart"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,64,"it"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,65,"out"","
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,66,"old""});"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,69,ublic void testEndMb() throws EncoderException {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,70,"tring[][] data = {{""mb"", ""M11111""}, {""mbmb"", ""MPM111""}};"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,71,his.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,75, Tests some examples from version 2.0 http://caversham.otago.ac.nz/files/working/ctp150804.pdf
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,77, @throws EncoderException
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,79,ublic void testIsCaverphoneEquals() throws EncoderException {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,80,averphone1 caverphone = new Caverphone1();
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,81,"ssert.assertFalse(""Caverphone encodings should not be equal"", caverphone.isEncodeEqual(""Peter"", ""Stevenson""));"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,82,"ssert.assertTrue(""Caverphone encodings should be equal"", caverphone.isEncodeEqual(""Peter"", ""Peady""));"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,86, Tests example from http://caversham.otago.ac.nz/files/working/ctp060902.pdf
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,88, @throws EncoderException
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,90,ublic void testSpecificationV1Examples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,91,"tring[][] data = {{""David"", ""TFT111""}, {""Whittle"", ""WTL111""}};"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,92,his.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,96, Tests examples from http://en.wikipedia.org/wiki/Caverphone
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,98, @throws EncoderException
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,100,ublic void testWikipediaExamples() throws EncoderException {
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,101,"tring[][] data = {{""Lee"", ""L11111""}, {""Thompson"", ""TMPSN1""}};"
False,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,102,his.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,18,package org.apache.commons.codec.language;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,20,import junit.framework.Assert;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,22,import org.apache.commons.codec.EncoderException;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,23,import org.apache.commons.codec.StringEncoder;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,24,import org.apache.commons.codec.StringEncoderAbstractTest;
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,27,* Tests Caverphone1.
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,29,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,30,* @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,31,* @since 1.5
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,33,public class Caverphone1Test extends StringEncoderAbstractTest {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,35,public Caverphone1Test(String name) {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,36,super(name);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,39,protected StringEncoder createStringEncoder() {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,40,return new Caverphone1();
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,44,* Tests example adapted from version 2.0  http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,46,"* AT1111 words: add, aid, at, art, eat, earth, head, hit, hot, hold, hard, heart, it, out, old"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,48,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,50,public void testCaverphoneRevisitedCommonCodeAT1111() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,51,"this.checkEncodingVariations(""AT1111"", new String[]{"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,52,"""add"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,53,"""aid"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,54,"""at"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,55,"""art"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,56,"""eat"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,57,"""earth"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,58,"""head"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,59,"""hit"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,60,"""hot"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,61,"""hold"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,62,"""hard"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,63,"""heart"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,64,"""it"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,65,"""out"","
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,66,"""old""});"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,69,public void testEndMb() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,70,"String[][] data = {{""mb"", ""M11111""}, {""mbmb"", ""MPM111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,71,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,75,* Tests some examples from version 2.0 http://caversham.otago.ac.nz/files/working/ctp150804.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,77,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,79,public void testIsCaverphoneEquals() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,80,Caverphone1 caverphone = new Caverphone1();
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,81,"Assert.assertFalse(""Caverphone encodings should not be equal"", caverphone.isEncodeEqual(""Peter"", ""Stevenson""));"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,82,"Assert.assertTrue(""Caverphone encodings should be equal"", caverphone.isEncodeEqual(""Peter"", ""Peady""));"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,86,* Tests example from http://caversham.otago.ac.nz/files/working/ctp060902.pdf
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,88,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,90,public void testSpecificationV1Examples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,91,"String[][] data = {{""David"", ""TFT111""}, {""Whittle"", ""WTL111""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,92,this.checkEncodings(data);
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,96,* Tests examples from http://en.wikipedia.org/wiki/Caverphone
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,98,* @throws EncoderException
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,100,public void testWikipediaExamples() throws EncoderException {
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,101,"String[][] data = {{""Lee"", ""L11111""}, {""Thompson"", ""TMPSN1""}};"
True,src/test/org/apache/commons/codec/language/Caverphone1Test.java,src/test/org/apache/commons/codec/language/Caverphone1Test.java,102,this.checkEncodings(data);
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,18,ackage org.apache.commons.codec.language;
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,20,mport org.apache.commons.codec.StringEncoder;
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,23, Tests Caverphone2.
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,25, @author Apache Software Foundation
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,26, @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,27, @since 1.5
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,29,ublic class Caverphone2Test extends CaverphoneTest {
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,31,ublic Caverphone2Test(String name) {
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,32,uper(name);
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,35,rotected StringEncoder createStringEncoder() {
False,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,36,eturn new Caverphone2();
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,18,package org.apache.commons.codec.language;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,20,import org.apache.commons.codec.StringEncoder;
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,23,* Tests Caverphone2.
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,25,* @author Apache Software Foundation
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,26,* @version $Id: CaverphoneTest.java 1075947 2011-03-01 17:56:14Z ggregory $
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,27,* @since 1.5
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,29,public class Caverphone2Test extends CaverphoneTest {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,31,public Caverphone2Test(String name) {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,32,super(name);
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,35,protected StringEncoder createStringEncoder() {
True,src/test/org/apache/commons/codec/language/Caverphone2Test.java,src/test/org/apache/commons/codec/language/Caverphone2Test.java,36,return new Caverphone2();
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,15, limitations under the License.
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,18,ackage org.apache.commons.codec.net;
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,20,mport junit.framework.TestCase;
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,23, Tests Utils.
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,24, <p>
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,25, Methods currently get 100%/100% line/branch code coverage from other tests classes.
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,26, </p>
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,28," @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,29, @version $Id$
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,30, @since 1.4
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,32,ublic class UtilsTest extends TestCase {
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,35, We could make the constructor private but there does not seem to be a point to jumping through extra code hoops
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,36, to restrict instantiation right now.
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,38,ublic void testConstructor() {
False,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,39,ew Utils();
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,15,* limitations under the License.
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,18,package org.apache.commons.codec.net;
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,20,import junit.framework.TestCase;
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,23,* Tests Utils.
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,24,* <p>
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,25,* Methods currently get 100%/100% line/branch code coverage from other tests classes.
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,26,* </p>
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,28,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,29,* @version $Id$
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,30,* @since 1.4
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,32,public class UtilsTest extends TestCase {
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,35,* We could make the constructor private but there does not seem to be a point to jumping through extra code hoops
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,36,* to restrict instantiation right now.
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,38,public void testConstructor() {
True,src/test/org/apache/commons/codec/net/UtilsTest.java,src/test/org/apache/commons/codec/net/UtilsTest.java,39,new Utils();
