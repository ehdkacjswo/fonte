is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,20,mport java.io.UnsupportedEncodingException;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,20,import java.nio.charset.Charset;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,21,import java.nio.charset.UnsupportedCharsetException;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,26,import org.apache.commons.codec.Charsets;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,41,* Default charset name is {@link Charsets#UTF_8}
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,43,* @since 1.7
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,45,public static final Charset DEFAULT_CHARSET = Charsets.UTF_8;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,172,rivate final String charsetName;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,181,private final Charset charset;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,175, Creates a new codec with the default charset name {@link #DEFAULT_CHARSET_NAME}
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,184,* Creates a new codec with the default charset name {@link #DEFAULT_CHARSET}
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,179,his.charsetName = DEFAULT_CHARSET_NAME;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,188,this.charset = DEFAULT_CHARSET;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,192,* Creates a new codec with the given Charset.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,194,* @param charset
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,195,*            the charset.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,196,* @since 1.7
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,198,public Hex(Charset charset) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,199,this.charset = charset;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,185, @param csName
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,205,* @param charsetName
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,207,* @throws UnsupportedCharsetException
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,208,*             If the named charset is unavailable
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,210,* @since 1.7 throws UnsupportedCharsetException if the named charset is unavailable
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,189,ublic Hex(String csName) {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,190,his.charsetName = csName;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,212,public Hex(String charsetName) {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,213,this(Charset.forName(charsetName));
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,206,ry {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,207,"eturn decodeHex(new String(array, getCharsetName()).toCharArray());"
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,208, catch (UnsupportedEncodingException e) {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,209,"hrow new DecoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,229,"return decodeHex(new String(array, getCharset()).toCharArray());"
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,241, {@link #getCharsetName()}.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,260,* {@link #getCharset()}.
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,247, @throws IllegalStateException
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,248,             if the charsetName is invalid. This API throws {@link IllegalStateException} instead of
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,249,             {@link UnsupportedEncodingException} for backward compatibility.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,266,* @since 1.7 No longer throws IllegalStateException if the charsetName is invalid.
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,253,"eturn StringUtils.getBytesUnchecked(encodeHexString(array), getCharsetName());"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,270,return encodeHexString(array).getBytes(this.getCharset());
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,262, {@link #getCharsetName()}.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,279,* {@link #getCharset()}.
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,274,yte[] byteArray = object instanceof String ? ((String) object).getBytes(getCharsetName()) : (byte[]) object;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,291,byte[] byteArray = object instanceof String ? ((String) object).getBytes(this.getCharset()) : (byte[]) object;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,278, catch (UnsupportedEncodingException e) {
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,279,"hrow new EncoderException(e.getMessage(), e);"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,299,* Gets the charset.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,301,* @return the charset.
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,302,* @since 1.7
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,304,public Charset getCharset() {
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,305,return this.charset;
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,290,eturn this.charsetName;
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,315,return this.charset.name();
False,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,300,"eturn super.toString() + ""[charsetName="" + this.charsetName + ""]"";"
True,src/main/java/org/apache/commons/codec/binary/Hex.java,src/main/java/org/apache/commons/codec/binary/Hex.java,325,"return super.toString() + ""[charsetName="" + this.charset + ""]"";"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,27,import java.nio.charset.UnsupportedCharsetException;
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,162,"ctualStringFromBytes = new String(decodedUtf8Bytes, utf8Codec.getCharsetName());"
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,163,"actualStringFromBytes = new String(decodedUtf8Bytes, utf8Codec.getCharset());"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,171,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,172,ublic void testCustomCharsetBadNameEncodeByteArray() throws UnsupportedEncodingException {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,173,ry {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,174,"ew Hex(BAD_ENCODING_NAME).encode(""Hello World"".getBytes(""UTF-8""));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,175,"ail(""Expected "" + IllegalStateException.class.getName());"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,176, catch (IllegalStateException e) {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,177,/ Expected
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,181,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,182,ublic void testCustomCharsetBadNameEncodeObject() {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,183,ry {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,184,"ew Hex(BAD_ENCODING_NAME).encode(""Hello World"");"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,185,"ail(""Expected "" + EncoderException.class.getName());"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,186, catch (EncoderException e) {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,187,/ Expected
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,191,Test
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,192,ublic void testCustomCharsetBadNameDecodeObject() throws UnsupportedEncodingException {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,193,ry {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,194,"ew Hex(BAD_ENCODING_NAME).decode(""Hello World"".getBytes(""UTF-8""));"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,195,"ail(""Expected "" + DecoderException.class.getName());"
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,196, catch (DecoderException e) {
False,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,197,/ Expected
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,172,@Test(expected=UnsupportedCharsetException.class)
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,173,public void testCustomCharsetBadName() throws UnsupportedEncodingException {
True,src/test/java/org/apache/commons/codec/binary/HexTest.java,src/test/java/org/apache/commons/codec/binary/HexTest.java,174,new Hex(BAD_ENCODING_NAME);
