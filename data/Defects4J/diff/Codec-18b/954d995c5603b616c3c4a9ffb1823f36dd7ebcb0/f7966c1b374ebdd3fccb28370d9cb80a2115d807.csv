is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,670,"eturn StringUtils.newStringUtf8(encodeBase64(binaryData, true));"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,670,"return StringUtils.newStringUtf8(encodeBase64(binaryData, false));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,586,"/assertEquals(""Zg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""f"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,587,"/assertEquals(""Zm8="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fo"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,588,"/assertEquals(""Zm9v"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foo"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,589,"/assertEquals(""Zm9vYg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foob"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,590,"/assertEquals(""Zm9vYmE="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fooba"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,591,"/assertEquals(""Zm9vYmFy"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foobar"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,586,"assertEquals(""Zg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""f"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,587,"assertEquals(""Zm8="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fo"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,588,"assertEquals(""Zm9v"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foo"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,589,"assertEquals(""Zm9vYg=="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foob"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,590,"assertEquals(""Zm9vYmE="", Base64.encodeBase64String(StringUtils.getBytesUtf8(""fooba"")));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,591,"assertEquals(""Zm9vYmFy"", Base64.encodeBase64String(StringUtils.getBytesUtf8(""foobar"")));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,1129,"ssertEquals(""byteToString static Hello World"", ""SGVsbG8gV29ybGQ=\r\n"", Base64.encodeBase64String(b1));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,1129,"assertEquals(""byteToString static Hello World"", ""SGVsbG8gV29ybGQ="", Base64.encodeBase64String(b1));"
False,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,1135,"ssertEquals(""byteToString static UUID"", ""K/fMJwH+Q5e0nr7tWsxwkA==\r\n"", Base64.encodeBase64String(b4));"
True,src/test/org/apache/commons/codec/binary/Base64Test.java,src/test/org/apache/commons/codec/binary/Base64Test.java,1135,"assertEquals(""byteToString static UUID"", ""K/fMJwH+Q5e0nr7tWsxwkA=="", Base64.encodeBase64String(b4));"
