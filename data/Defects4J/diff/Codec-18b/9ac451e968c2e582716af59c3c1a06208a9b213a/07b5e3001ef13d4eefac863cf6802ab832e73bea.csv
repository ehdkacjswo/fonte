is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,20,mport java.io.FilterInputStream;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,46,ublic class Base64InputStream extends FilterInputStream {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,48,rivate final boolean doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,50,rivate final Base64 base64;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,52,rivate final byte[] singleByte = new byte[1];
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,44,public class Base64InputStream extends BaseNCodecInputStream {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,74,uper(in);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,75,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,76,his.base64 = new Base64(false);
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,66,"super(in, new Base64(false), doEncode);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,96,uper(in);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,97,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,98,"his.base64 = new Base64(lineLength, lineSeparator);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,102, Reads one <code>byte</code> from this input stream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,104, @return the byte as an integer in the range 0 to 255. Returns -1 if EOF has been reached.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,105, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,106,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,108,ublic int read() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,109,"nt r = read(singleByte, 0, 1);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,110,hile (r == 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,111," = read(singleByte, 0, 1);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,113,f (r > 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,114,eturn singleByte[0] < 0 ? 256 + singleByte[0] : singleByte[0];
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,116,eturn -1;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,120, Attempts to read <code>len</code> bytes into the specified <code>b</code> array starting at <code>offset</code>
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,121, from this InputStream.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,123, @param b
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,124,            destination byte array
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,125, @param offset
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,126,            where to start writing the bytes
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,127, @param len
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,128,            maximum number of bytes to read
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,130, @return number of bytes read
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,131, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,132,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,133, @throws NullPointerException
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,134,             if the byte array parameter is null
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,135, @throws IndexOutOfBoundsException
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,136,"             if offset, len or buffer size are invalid"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,138,"ublic int read(byte b[], int offset, int len) throws IOException {"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,139,f (b == null) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,140,hrow new NullPointerException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,141, else if (offset < 0 || len < 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,142,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,143, else if (offset > b.length || offset + len > b.length) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,144,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,145, else if (len == 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,146,eturn 0;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,147, else {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,148,nt readLen = 0;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,150,ationale for while-loop on (readLen == 0):
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,152,ase64.readResults() usually returns > 0 or EOF (-1).  In the
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,153,"are case where it returns 0, we just keep trying."
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,155,his is essentially an undocumented contract for InputStream
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,156,mplementors that want their code to work properly with
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,157,"ava.io.InputStreamReader, since the latter hates it when"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,158,nputStream.read(byte[]) returns a zero.  Unfortunately our
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,159,eadResults() call must return 0 if a large amount of the data
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,160,"eing decoded was non-base64, so this while-loop enables proper"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,161,nterop with InputStreamReader for that scenario.
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,163,his is a fix for CODEC-101
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,165,hile (readLen == 0) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,166,f (!base64.hasData()) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,167,yte[] buf = new byte[doEncode ? 4096 : 8192];
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,168,nt c = in.read(buf);
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,169,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,170,"ase64.encode(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,171, else {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,172,"ase64.decode(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,175,"eadLen = base64.readResults(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,177,eturn readLen;
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,182, {@inheritDoc}
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,184, @return false
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,186,ublic boolean markSupported() {
False,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,187,eturn false; // not an easy job to support marks
True,src/java/org/apache/commons/codec/binary/Base64InputStream.java,src/java/org/apache/commons/codec/binary/Base64InputStream.java,86,"super(in, new Base64(lineLength, lineSeparator), doEncode);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,20,mport java.io.FilterOutputStream;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,21,mport java.io.IOException;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,46,ublic class Base64OutputStream extends FilterOutputStream {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,47,rivate final boolean doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,49,rivate final Base64 base64;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,51,rivate final byte[] singleByte = new byte[1];
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,44,public class Base64OutputStream extends BaseNCodecOutputStream {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,73,uper(out);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,74,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,75,his.base64 = new Base64(false);
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,66,"super(out,new Base64(false), doEncode);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,95,uper(out);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,96,his.doEncode = doEncode;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,97,"his.base64 = new Base64(lineLength, lineSeparator);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,101, Writes the specified <code>byte</code> to this output stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,103, @param i
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,104,            source byte
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,105, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,106,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,108,ublic void write(int i) throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,109,ingleByte[0] = (byte) i;
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,110,"rite(singleByte, 0, 1);"
True,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,86,"super(out, new Base64(lineLength, lineSeparator), doEncode);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,114, Writes <code>len</code> bytes from the specified <code>b</code> array starting at <code>offset</code> to this
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,115, output stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,117, @param b
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,118,            source byte array
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,119, @param offset
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,120,            where to start reading the bytes
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,121, @param len
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,122,            maximum number of bytes to write
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,124, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,125,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,126, @throws NullPointerException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,127,             if the byte array parameter is null
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,128, @throws IndexOutOfBoundsException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,129,"             if offset, len or buffer size are invalid"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,131,"ublic void write(byte b[], int offset, int len) throws IOException {"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,132,f (b == null) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,133,hrow new NullPointerException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,134, else if (offset < 0 || len < 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,135,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,136, else if (offset > b.length || offset + len > b.length) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,137,hrow new IndexOutOfBoundsException();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,138, else if (len > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,139,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,140,"ase64.encode(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,141, else {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,142,"ase64.decode(b, offset, len);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,144,lush(false);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,149, Flushes this output stream and forces any buffered output bytes to be written out to the stream. If propogate is
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,150," true, the wrapped stream will also be flushed."
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,152, @param propogate
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,153,            boolean flag to indicate whether the wrapped OutputStream should also be flushed.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,154, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,155,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,157,rivate void flush(boolean propogate) throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,158,nt avail = base64.available();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,159,f (avail > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,160,yte[] buf = new byte[avail];
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,161,"nt c = base64.readResults(buf, 0, avail);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,162,f (c > 0) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,163,"ut.write(buf, 0, c);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,166,f (propogate) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,167,ut.flush();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,172, Flushes this output stream and forces any buffered output bytes to be written out to the stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,174, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,175,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,177,ublic void flush() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,178,lush(true);
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,182, Closes this output stream and releases any system resources associated with the stream.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,184, @throws IOException
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,185,             if an I/O error occurs.
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,187,ublic void close() throws IOException {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,188,/ Notify encoder of EOF (-1).
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,189,f (doEncode) {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,190,"ase64.encode(singleByte, 0, -1);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,191, else {
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,192,"ase64.decode(singleByte, 0, -1);"
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,194,lush();
False,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,src/java/org/apache/commons/codec/binary/Base64OutputStream.java,195,ut.close();
