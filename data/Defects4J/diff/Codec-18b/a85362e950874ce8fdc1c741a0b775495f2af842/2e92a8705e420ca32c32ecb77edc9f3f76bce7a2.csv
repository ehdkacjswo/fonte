is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,102, Flushes this output stream and forces any buffered output bytes to be written out to the stream. If propogate is
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,102,* Flushes this output stream and forces any buffered output bytes to be written out to the stream. If propagate is
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,105, @param propogate
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,105,* @param propagate
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,110,rivate void flush(final boolean propogate) throws IOException {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,110,private void flush(final boolean propagate) throws IOException {
False,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,119,f (propogate) {
True,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,119,if (propagate) {
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,625,"/-- also, -sz- in slavic language altho in hungarian it //"
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,625,"//-- also, -sz- in slavic language although in hungarian it //"
False,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,853, Determines whether or not a value is of slavo-germanic orgin. A value is
True,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java,853,* Determines whether or not a value is of slavo-germanic origin. A value is
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,281, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,281,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,286,"rivate void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,286,"private void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,291,"n = new Base32InputStream(new ByteArrayInputStream(decoded), true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,291,"in = new Base32InputStream(new ByteArrayInputStream(decoded), true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,309,"n = new Base32InputStream(in, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,309,"in = new Base32InputStream(in, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,333, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,333,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,338,"rivate void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,338,"private void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,342,"n = new Base32InputStream(new ByteArrayInputStream(decoded), true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,342,"in = new Base32InputStream(new ByteArrayInputStream(decoded), true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,370,"n = new Base32InputStream(in, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java,370,"in = new Base32InputStream(in, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,173, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,173,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,178,"rivate void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,178,"private void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,182,"utputStream out = new Base32OutputStream(byteOut, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,182,"OutputStream out = new Base32OutputStream(byteOut, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,201,"ut = new Base32OutputStream(out, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,201,"out = new Base32OutputStream(out, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,223, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,223,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,228,"rivate void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,228,"private void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,232,"utputStream out = new Base32OutputStream(byteOut, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,232,"OutputStream out = new Base32OutputStream(byteOut, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,266,"ut = new Base32OutputStream(out, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java,266,"out = new Base32OutputStream(out, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,294, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,294,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,299,"rivate void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,299,"private void testByChunk(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,303,"n = new Base64InputStream(new ByteArrayInputStream(decoded), true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,303,"in = new Base64InputStream(new ByteArrayInputStream(decoded), true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,323,"n = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,323,"in = new Base64InputStream(in, true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,347, @param seperator
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,347,* @param separator
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,352,"rivate void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] seperator) throws Exception {"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,352,"private void testByteByByte(final byte[] encoded, final byte[] decoded, final int chunkSize, final byte[] separator) throws Exception {"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,356,"n = new Base64InputStream(new ByteArrayInputStream(decoded), true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,356,"in = new Base64InputStream(new ByteArrayInputStream(decoded), true, chunkSize, separator);"
False,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,383,"n = new Base64InputStream(in, true, chunkSize, seperator);"
True,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java,383,"in = new Base64InputStream(in, true, chunkSize, separator);"
