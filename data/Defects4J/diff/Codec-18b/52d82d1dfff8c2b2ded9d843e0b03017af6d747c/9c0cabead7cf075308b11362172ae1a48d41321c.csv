is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,59,xt = txt.toLowerCase();
True,src/java/org/apache/commons/codec/language/Caverphone.java,src/java/org/apache/commons/codec/language/Caverphone.java,59,txt = txt.toLowerCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,926,eturn input.toUpperCase();
True,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,src/java/org/apache/commons/codec/language/DoubleMetaphone.java,926,return input.toUpperCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,88,eturn txt.toUpperCase() ;
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,88,return txt.toUpperCase(java.util.Locale.ENGLISH) ;
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,91,har[] inwd = txt.toUpperCase().toCharArray() ;
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,91,char[] inwd = txt.toUpperCase(java.util.Locale.ENGLISH).toCharArray() ;
False,src/java/org/apache/commons/codec/language/SoundexUtils.java,src/java/org/apache/commons/codec/language/SoundexUtils.java,53,eturn str.toUpperCase();
True,src/java/org/apache/commons/codec/language/SoundexUtils.java,src/java/org/apache/commons/codec/language/SoundexUtils.java,53,return str.toUpperCase(java.util.Locale.ENGLISH);
False,src/java/org/apache/commons/codec/language/SoundexUtils.java,src/java/org/apache/commons/codec/language/SoundexUtils.java,55,"eturn new String(chars, 0, count).toUpperCase();"
True,src/java/org/apache/commons/codec/language/SoundexUtils.java,src/java/org/apache/commons/codec/language/SoundexUtils.java,55,"return new String(chars, 0, count).toUpperCase(java.util.Locale.ENGLISH);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,20,import java.util.Locale;
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,69,public void testLocaleIndependence() throws Exception {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,70,StringEncoder encoder = makeEncoder();
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,72,"String[] data = { ""I"", ""i"", };"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,74,Locale orig = Locale.getDefault();
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,75,"Locale[] locales = { Locale.ENGLISH, new Locale(""tr""), Locale.getDefault() };"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,77,try {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,78,for (int i = 0; i < data.length; i++) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,79,String ref = null;
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,80,for (int j = 0; j < locales.length; j++) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,81,Locale.setDefault(locales[j]);
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,82,if (j <= 0) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,83,ref = encoder.encode(data[i]);
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,84,} else {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,85,String cur = null;
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,86,try {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,87,cur = encoder.encode(data[i]);
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,88,} catch (Exception e) {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,89,"fail(Locale.getDefault().toString() + "": "" + e.getMessage());"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,91,"assertEquals(Locale.getDefault().toString() + "": "", ref, cur);"
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,95,} finally {
True,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,src/test/org/apache/commons/codec/StringEncoderAbstractTest.java,96,Locale.setDefault(orig);
