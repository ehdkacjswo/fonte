is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,31,import java.util.Arrays;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,32,import java.util.Collection;
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,33,import java.util.Collections;
False,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,38,ublic class SourceMapConsumerV3 implements SourceMapConsumer {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,41,"public class SourceMapConsumerV3 implements SourceMapConsumer, SourceMappingReversable {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,218,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,219,public Collection<String> getOriginalSources() {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,220,return Arrays.asList(sources);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,223,@Override
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,225,"* TODO(devoncarew): this implementation is a prototype. It does an O(n) search of the lines list,"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,226,* instead of reversing the source map and doing O(1) lookups. It also does not currently make use
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,227,* of the column parameter.
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,229,"public Collection<OriginalMapping> getReverseMapping(String originalFile, int line, int column) {"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,230,"int sourceFileId = Arrays.binarySearch(sources, originalFile);"
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,232,if (sourceFileId < 0) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,233,return Collections.emptyList();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,236,for (ArrayList<Entry> entries : lines) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,237,if (entries != null) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,238,for (Entry entry : entries) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,239,if (entry.getSourceFileId() == sourceFileId) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,240,if (entry.getSourceLine() == line) {
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,241,Builder builder = OriginalMapping.newBuilder()
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,242,.setOriginalFile(sources[entry.getSourceFileId()])
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,243,.setLineNumber(entry.getSourceLine())
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,244,.setColumnPosition(entry.getSourceColumn());
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,246,OriginalMapping mapping = builder.build();
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,248,return Collections.singletonList(mapping);
True,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,src/com/google/debugging/sourcemap/SourceMapConsumerV3.java,255,return Collections.emptyList();
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,6,* You may obtain a copy of the License at
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,13,* See the License for the specific language governing permissions and
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,14,* limitations under the License.
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,17,package com.google.debugging.sourcemap;
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,19,import com.google.debugging.sourcemap.proto.Mapping.OriginalMapping;
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,21,import java.util.Collection;
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,24,* A SourceMappingReversable is a SourceMapping that can provide the reverse
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,25,* (source --> target) source mapping.
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,27,public interface SourceMappingReversable extends SourceMapping {
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,30,* @return the collection of original sources in this source mapping
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,32,public Collection<String> getOriginalSources();
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,35,"* Given a source file, line, and column, return the reverse mapping (source --> target)."
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,36,"* A collection is returned as in some cases (like a function being inlined), one source line"
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,37,* may map to more then one target location. An empty collection is returned if there were
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,38,* no matches.
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,39,* @param originalFile the source file
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,40,* @param line the source line
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,41,* @param column the source column
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,42,* @return the reverse mapping (source --> target)
True,src/com/google/debugging/sourcemap/SourceMappingReversable.java,src/com/google/debugging/sourcemap/SourceMappingReversable.java,44,"public Collection<OriginalMapping> getReverseMapping(String originalFile, int line, int column);"
