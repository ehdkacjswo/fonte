is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,110,"private Map<String, String> parsedModuleWrappers = null;"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,594,private String getModuleOutputFileName(JSModule m) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,595,"return config.moduleOutputPathPrefix + m.getName() + "".js"";"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,598,@VisibleForTesting
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,599,"void writeModuleOutput(Appendable out, JSModule m)"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,600,"throws FlagUsageException, IOException {"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,601,if (parsedModuleWrappers == null) {
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,602,parsedModuleWrappers = parseModuleWrappers(
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,603,"config.moduleWrapper,"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,604,Lists.newArrayList(compiler.getModuleGraph().getAllModules()));
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,607,String fileName = getModuleOutputFileName(m);
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,608,String baseName = new File(fileName).getName();
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,609,"writeOutput(out, compiler, compiler.toSource(m),"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,610,"parsedModuleWrappers.get(m.getName()).replace(""%basename%"", baseName),"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,611,"""%s"");"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,757,tring moduleFilePrefix = config.moduleOutputPathPrefix;
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,758,aybeCreateDirsForPath(moduleFilePrefix);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,759,"ap<String, String> moduleWrappers ="
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,760,"arseModuleWrappers(config.moduleWrapper, modules);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,779,"parsedModuleWrappers = parseModuleWrappers(config.moduleWrapper, modules);"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,780,maybeCreateDirsForPath(config.moduleOutputPathPrefix);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,776,riter writer = fileNameToOutputWriter(
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,777,"oduleFilePrefix + m.getName() + "".js"");"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,796,Writer writer = fileNameToOutputWriter(getModuleOutputFileName(m));
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,783,"riteOutput(writer, compiler, compiler.toSource(m),"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,784,"oduleWrappers.get(m.getName()), ""%s"");"
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,802,"writeModuleOutput(writer, m);"
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1573, An output wrapper for a javascript module (optional).
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1574, The format is <name>:<wrapper>. The module name must correspond
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1575, with a module specified using --module. The wrapper must
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1576, contain %s as the code placeholder
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1591,* An output wrapper for a javascript module (optional). See the flag
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,1592,* description for formatting requirements.
False,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,210," ""contain %s as the code placeholder"")"
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,210,"+ ""contain %s as the code placeholder. The %basename% placeholder can """
True,src/com/google/javascript/jscomp/CommandLineRunner.java,src/com/google/javascript/jscomp/CommandLineRunner.java,211,"+ ""also be used to substitute the base name of the module output file."")"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,663,public void testModuleWrapperBaseNameExpansion() throws Exception {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,664,useModules = ModulePattern.CHAIN;
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,665,"args.add(""--module_wrapper=m0:%s // %basename%"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,666,testSame(new String[] {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,667,"""var x = 3;"","
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,668,"""var y = 4;"""
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,671,StringBuilder builder = new StringBuilder();
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,672,lastCommandLineRunner.writeModuleOutput(
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,673,"builder,"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,674,lastCompiler.getModuleGraph().getRootModule());
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,675,"assertEquals(""var x=3; // m0.js\n"", builder.toString());"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,960,"rgs.add(""mod"" + i + "":1"" + (i > 0 ? ("":mod"" + (i - 1)) : """"));"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,975,"args.add(""m"" + i + "":1"" + (i > 0 ? ("":m"" + (i - 1)) : """"));"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,963,"rgs.add(""mod"" + i + "":1"" + (i > 0 ? "":mod0"" : """"));"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,978,"args.add(""m"" + i + "":1"" + (i > 0 ? "":m0"" : """"));"
