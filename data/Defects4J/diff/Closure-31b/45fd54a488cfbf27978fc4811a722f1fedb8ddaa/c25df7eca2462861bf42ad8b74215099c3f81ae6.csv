is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,49,public static final DiagnosticType VAR_ARGUMENTS_SHADOWED_ERROR =
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,50,DiagnosticType.error(
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,51,"""JSC_VAR_ARGUMENTS_SHADOWED_ERROR"","
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,52,"""Shadowing \""arguments\"" is not allowed"");"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,220,} else if (name.equals(ARGUMENTS) && !NodeUtil.isVarDeclaration(n)) {
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,221,"// Disallow shadowing ""arguments"" as we can't handle with our current"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,222,// scope modeling.
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,223,compiler.report(
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,224,"JSError.make(sourceName, nodeWithLineNumber,"
True,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,src/com/google/javascript/jscomp/SyntacticScopeCreator.java,225,VAR_ARGUMENTS_SHADOWED_ERROR));
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,325,"ase REGEXP:          return ""OBJECT"";"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,325,"case REGEXP:          return ""REGEXP"";"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,44,* Helper to traverse the tree creating the Scope object everywhere.
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,46,"private static void testScopes(String js, int errorCount) {"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,47,Compiler compiler = new Compiler();
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,48,Node root = compiler.parseTestCode(js);
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,49,NodeTraversal.traverse(
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,50,"compiler, root, new NodeTraversal.AbstractPostOrderCallback() {"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,51,@Override
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,52,public
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,53,"void visit(NodeTraversal t, Node n, Node parent) {"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,54,t.getScope();
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,57,"assertEquals(errorCount, compiler.getErrorCount());"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,110,public void testFunctionScopeArguments() {
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,111,// A var declaration doesn't mask arguments
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,112,"testScopes(""function f() {var arguments}"", 0);"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,114,"testScopes(""var f = function arguments() {}"", 1);"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,115,"testScopes(""var f = function (arguments) {}"", 1);"
True,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,test/com/google/javascript/jscomp/SyntacticScopeCreatorTest.java,116,"testScopes(""function f() {try {} catch(arguments) {}}"", 1);"
