is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,188,ase Token.LABEL_NAME:
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,189,reconditions.checkState(!n.getString().isEmpty());
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,190,ddIdentifier(n.getString());
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,191,reak;
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,490,reconditions.checkState(first.getType() == Token.LABEL_NAME);
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,507,reconditions.checkState(first.getType() == Token.LABEL_NAME);
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,614,reconditions.checkState(first.getType() == Token.LABEL_NAME);
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,21,mport com.google.common.collect.ImmutableSet;
False,src/com/google/javascript/jscomp/CompilerInput.java,src/com/google/javascript/jscomp/CompilerInput.java,24,mport com.google.javascript.jscomp.NodeTraversal.AbstractShallowCallback;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,403,"private boolean isConstantName(Node n, Set<String> knownConstants) {"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,404,// Non-constant names values may have been changed.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,405,return NodeUtil.isName(n) && (NodeUtil.isConstantName(n)
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,406,|| knownConstants.contains(n.getString()));
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,411,/ The temp value is known to be constant.
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,412,tring tempName = getTempConstantValueName();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,414,/ Replace the expression with the temporary name.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,418,boolean isLhsOfAssignOp = NodeUtil.isAssignmentOp(parent)
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,419,&& !NodeUtil.isAssign(parent)
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,420,&& parent.getFirstChild() == expr;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,422,Node firstExtractedNode = null;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,424,// Expressions on the LHS of an assignment-op must have any possible
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,425,// side-effects extracted as the value must be duplicated:
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,426,//    next().foo += 2;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,427,// becomes:
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,428,//    var t1 = next();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,429,//    t1.foo = t1.foo + 2;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,430,if (isLhsOfAssignOp && NodeUtil.isGet(expr)) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,431,for (Node n : expr.children()) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,432,"if (n.getType() != Token.STRING && !isConstantName(n, knownConstants)) {"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,433,"Node extractedNode = extractExpression(n, injectionPoint);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,434,if (firstExtractedNode == null) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,435,firstExtractedNode = extractedNode;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,441,// The temp is known to be constant.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,442,String tempName = getTempConstantValueName();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,416,"arent.replaceChild(expr, replacementValueNode);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,445,Node tempNameValue;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,447,"// If it is ASSIGN_XXX, keep the assignment in place and extract the"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,448,// original value of the LHS operand.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,449,if (isLhsOfAssignOp) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,450,Preconditions.checkState(NodeUtil.isName(expr) || NodeUtil.isGet(expr));
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,451,"// Transform ""x += 2"" into ""x = temp + 2"""
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,452,Node opNode = new Node(NodeUtil.getOpFromAssignmentOp(parent))
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,453,.copyInformationFrom(parent);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,455,Node rightOperand = parent.getLastChild();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,457,parent.setType(Token.ASSIGN);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,458,"parent.replaceChild(rightOperand, opNode);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,459,opNode.addChildToFront(replacementValueNode);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,460,opNode.addChildToBack(rightOperand);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,462,"// The original expression is still being used, so make a clone."
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,463,tempNameValue = expr.cloneTree();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,464,} else {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,465,// Replace the expression with the temporary name.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,466,"parent.replaceChild(expr, replacementValueNode);"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,468,// Keep the original node so that CALL expressions can still be found
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,469,// and inlined properly.
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,470,tempNameValue = expr;
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,420,empNameNode.addChildrenToBack(expr);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,475,tempNameNode.addChildToBack(tempNameValue);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,426,/ If it is ASSIGN_XXX we need to assign it back to the original value.
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,427,"/ Note that calling the temp constant is a lie in this case, but we do know"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,428,/ that it is not modified until after the exposed expression.
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,429,f (NodeUtil.isAssignmentOp(parent) && !NodeUtil.isAssign(parent)) {
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,430,ode gParent = parent.getParent();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,431,"ode assignBack = new Node(Token.ASSIGN,"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,432,"xpr.cloneTree(),"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,433,empNameNode.cloneNode());
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,434,f (NodeUtil.isExpressionNode(gParent)) {
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,435,Parent.getParent().addChildAfter(
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,436,"odeUtil.newExpr(assignBack), gParent);"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,437, else {
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,438,/ TODO(user): Use comma here sucks. We might close some accuracy
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,439,/ in flow sensitive passes but as far as I know it is unavoidable.
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,440,ode comma = new Node(Token.COMMA);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,441,"Parent.replaceChild(parent, comma);"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,442,omma.addChildrenToFront(assignBack);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,443,omma.addChildrenToFront(parent);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,481,if (firstExtractedNode == null) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,482,firstExtractedNode = tempVarNode;
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,446,eturn tempVarNode;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,484,return firstExtractedNode;
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,265,"ode name = Node.newString(Token.LABEL_NAME, labelName);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,265,"Node name = Node.newString(Token.NAME, labelName);"
False,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,402,"ode name = Node.newString(Token.LABEL_NAME, labelName);"
True,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,src/com/google/javascript/jscomp/FunctionToBlockMutator.java,402,"Node name = Node.newString(Token.NAME, labelName);"
False,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,69, else if (n.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/GatherRawExports.java,src/com/google/javascript/jscomp/GatherRawExports.java,69,} else if (n.getType() == Token.NAME && !NodeUtil.isLabelName(n)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1050,eturn isName(n) && !n.getString().isEmpty();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1050,return isName(n) && !n.getString().isEmpty() && !isLabelName(n);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1055,eturn (n != null && n.getType() == Token.LABEL_NAME);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1055,if (n != null && n.getType() == Token.NAME) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1056,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1057,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1058,case Token.LABEL:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1059,case Token.BREAK:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1060,case Token.CONTINUE:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1061,if (n == parent.getFirstChild()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1062,return true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1066,return false;
False,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,99,f (!isDeclaration(n)) {
True,src/com/google/javascript/jscomp/StrictModeCheck.java,src/com/google/javascript/jscomp/StrictModeCheck.java,99,if (!NodeUtil.isLabelName(n) && !isDeclaration(n)) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,726,ase Token.LABEL_NAME:
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,94,if (NodeUtil.isLabelName(n)) {
True,src/com/google/javascript/jscomp/VarCheck.java,src/com/google/javascript/jscomp/VarCheck.java,95,return;
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,415,ode labelName = transform(statementNode.getBreakLabel());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,416,/ Change the NAME to LABEL_NAME
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,417,abelName.setType(Token.LABEL_NAME);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,418,ode.addChildToBack(labelName);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,415,node.addChildToBack(transform(statementNode.getBreakLabel()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,456,ode labelName = transform(statementNode.getLabel());
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,457,/ Change the NAME to LABEL_NAME
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,458,abelName.setType(Token.LABEL_NAME);
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,459,ode.addChildToBack(labelName);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,453,node.addChildToBack(transform(statementNode.getLabel()));
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,616,"eturn Node.newString(Token.LABEL_NAME, labelNode.getName());"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,610,"return Node.newString(Token.NAME, labelNode.getName());"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,255,/ JSCompiler introduced tokens
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,256,"ABEL_NAME     = 153,"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,258,"AST_TOKEN     = 153,"
True,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,254,"LAST_TOKEN     = 152,"
False,src/com/google/javascript/rhino/Token.java,src/com/google/javascript/rhino/Token.java,316,"ase LABEL_NAME:      return ""LABEL_NAME"";"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,312,ublic void testExposePlusEquals() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,312,// Simple name on LHS of assignment-op.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,313,public void testExposePlusEquals1() {
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,317,"temp_const_0 += foo() + 1;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,318,"x = temp_const_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,318,"""x = temp_const_0 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,324,"y = (temp_const_0 += foo(), x=temp_const_0) + x"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,324,"""y = (x = temp_const_0 + foo()) + x"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,327,// Structure on LHS of assignment-op.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,328,public void testExposePlusEquals2() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,329,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,330,"""var x = {}; x.a += foo() + 1"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,331,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,332,"""var x = {}; var temp_const_0 = x; var temp_const_1 = temp_const_0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,333,"""temp_const_0.a = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,335,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,336,"""var x = {}; y = (x.a += foo()) + x.a"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,337,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,338,"""var x = {}; var temp_const_0 = x; var temp_const_1 = temp_const_0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,339,"""y = (temp_const_0.a = temp_const_1 + foo()) + x.a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,342,// Constant object on LHS of assignment-op.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,343,public void testExposePlusEquals3() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,344,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,345,"""var XX = {};\n"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,346,"""XX.a += foo() + 1"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,347,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,348,"""var XX = {}; var temp_const_0 = XX.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,349,"""XX.a = temp_const_0 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,351,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,352,"""var XX = {}; y = (XX.a += foo()) + XX.a"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,353,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,354,"""var XX = {}; var temp_const_0 = XX.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,355,"""y = (XX.a = temp_const_0 + foo()) + XX.a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,358,// Function all on LHS of assignment-op.
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,359,public void testExposePlusEquals4() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,360,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,361,"""var x = {}; goo().a += foo() + 1"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,362,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,363,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,364,"""var temp_const_0 = goo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,365,"""var temp_const_1 = temp_const_0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,366,"""temp_const_0.a = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,368,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,369,"""var x = {}; y = (goo().a += foo()) + goo().a"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,370,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,371,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,372,"""var temp_const_0 = goo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,373,"""var temp_const_1 = temp_const_0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,374,"""y = (temp_const_0.a = temp_const_1 + foo()) + goo().a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,377,// Test mulitple levels
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,378,public void testExposePlusEquals5() {
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,379,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,380,"""var x = {}; goo().a.b += foo() + 1"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,381,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,382,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,383,"""var temp_const_0 = goo().a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,384,"""var temp_const_1 = temp_const_0.b;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,385,"""temp_const_0.b = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,387,helperExposeExpression(
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,388,"""var x = {}; y = (goo().a.b += foo()) + goo().a"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,389,"""foo"","
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,390,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,391,"""var temp_const_0 = goo().a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,392,"""var temp_const_1 = temp_const_0.b;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,393,"""y = (temp_const_0.b = temp_const_1 + foo()) + goo().a"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,482, @return The return the Nth CALL node to name found in a pre-order
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,551,* @return The return the Nth CALL node to name found in a pre-order
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1331,"JSCompiler_temp_const_0 += JSCompiler_inline_result_1;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1332,"x = JSCompiler_temp_const_0"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1331,"""x = JSCompiler_temp_const_0 + JSCompiler_inline_result_1;"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,2,* Copyright 2008 Google Inc.
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,17,package com.google.javascript.jscomp.deps;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,20,import com.google.javascript.jscomp.deps.DependencyInfo;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,21,import com.google.javascript.jscomp.deps.DepsFileParser;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,22,import com.google.javascript.jscomp.ErrorManager;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,23,import com.google.javascript.jscomp.PrintStreamErrorManager;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,25,import junit.framework.TestCase;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,27,import java.util.Collections;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,28,import java.util.List;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,31,* Tests for {@link DepsFileParser}.
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,33,* @author agrieve@google.com (Andrew Grieve)
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,35,public class DepsFileParserTest extends TestCase {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,37,private DepsFileParser parser;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,38,private ErrorManager errorManager;
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,39,"private static final String SRC_PATH = ""/path/1.js"";"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,41,@Override
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,42,public void setUp() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,43,errorManager = new PrintStreamErrorManager(System.err);
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,44,parser = new DepsFileParser(errorManager);
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,48,* Tests:
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,49,"*  -Parsing of comments,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,50,"*  -Parsing of different styles of quotes,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,51,"*  -Parsing of empty arrays,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,52,"*  -Parsing of non-empty arrays,"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,53,*  -Correct recording of what was parsed.
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,55,public void testGoodParse() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,56,"final String CONTENTS = ""/*"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,57,"+ ""goog.addDependency('no1', [], []);*//*\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,58,"+ ""goog.addDependency('no2', [ ], [ ]);\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,59,"+ ""*/goog.addDependency('yes1', [], []);\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,60,"+ ""/* blah */goog.addDependency(\""yes2\"", [], [])/* blah*/\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,61,"+ ""goog.addDependency('yes3', ['a','b'], ['c']); // goog.addDependency('no3', [], []);\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,62,"+ ""// goog.addDependency('no4', [], []);\n"""
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,63,"+ ""goog.addDependency(\""yes4\"", [], [ \""a\"",'b' , 'c' ]); //no new line at eof"";"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,65,"List<DependencyInfo> result = parser.parseFile(SRC_PATH, CONTENTS);"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,66,List<String> EMPTY = Collections.emptyList();
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,67,ImmutableList<DependencyInfo> EXPECTED = ImmutableList.<DependencyInfo>of(
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,68,"new SimpleDependencyInfo(""yes1"", SRC_PATH, EMPTY, EMPTY),"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,69,"new SimpleDependencyInfo(""yes2"", SRC_PATH, EMPTY, EMPTY),"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,70,new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,71,"""yes3"", SRC_PATH, ImmutableList.of(""a"", ""b""), ImmutableList.of(""c"")),"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,72,new SimpleDependencyInfo(
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,73,"""yes4"", SRC_PATH, EMPTY, ImmutableList.of(""a"", ""b"", ""c""))"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,76,"assertEquals(EXPECTED, result);"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,77,"assertEquals(0, errorManager.getErrorCount());"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,78,"assertEquals(0, errorManager.getWarningCount());"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,81,public void testTooFewArgs() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,82,"parser.parseFile(SRC_PATH, ""goog.addDependency('a', []);"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,83,"assertEquals(1, errorManager.getErrorCount());"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,84,"assertEquals(0, errorManager.getWarningCount());"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,87,public void testTooManyArgs() {
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,88,"parser.parseFile(SRC_PATH, ""goog.addDependency('a', [], [], []);"");"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,89,"assertEquals(1, errorManager.getErrorCount());"
True,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,test/com/google/javascript/jscomp/deps/DepsFileParserTest.java,90,"assertEquals(0, errorManager.getWarningCount());"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,2,* Copyright 2008 Google Inc.
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,17,package com.google.javascript.jscomp.deps;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,19,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,20,import com.google.javascript.jscomp.ErrorManager;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,21,import com.google.javascript.jscomp.PrintStreamErrorManager;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,23,import junit.framework.TestCase;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,25,import java.util.Collections;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,28,* Tests for {@link JsFileParser}.
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,30,* @author agrieve@google.com (Andrew Grieve)
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,32,public class JsFileParserTest extends TestCase {
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,34,JsFileParser parser;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,35,private ErrorManager errorManager;
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,37,"private static final String SRC_PATH = ""a"";"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,38,"private static final String CLOSURE_PATH = ""b"";"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,40,@Override
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,41,public void setUp() {
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,42,errorManager = new PrintStreamErrorManager(System.err);
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,43,parser = new JsFileParser(errorManager);
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,47,* Tests:
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,48,"*  -Parsing of comments,"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,49,"*  -Parsing of different styles of quotes,"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,50,*  -Correct recording of what was parsed.
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,52,public void testParseFile() {
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,53,"final String CONTENTS = ""/*"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,54,"+ ""goog.provide('no1');*//*\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,55,"+ ""goog.provide('no2');\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,56,"+ ""*/goog.provide('yes1');\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,57,"+ ""/* blah */goog.provide(\""yes2\"")/* blah*/\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,58,"+ ""goog.require('yes3'); // goog.provide('no3');\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,59,"+ ""// goog.provide('no4');\n"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,60,"+ ""goog.require(\""bar.data.SuperstarAddStarThreadActionRequestDelegate\""); """
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,61,"+ ""//no new line at eof"";"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,63,"DependencyInfo EXPECTED = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH,"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,64,"ImmutableList.of(""yes1"", ""yes2""),"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,65,"ImmutableList.of(""yes3"", ""bar.data.SuperstarAddStarThreadActionRequestDelegate""));"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,67,"DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, CONTENTS);"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,69,"assertEquals(EXPECTED, result);"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,70,"assertEquals(0, errorManager.getErrorCount());"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,71,"assertEquals(0, errorManager.getWarningCount());"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,74,public void testMultiplePerLine() {
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,75,"final String CONTENTS = ""goog.provide('yes1');goog.provide('yes2');/*"""
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,76,"+ ""goog.provide('no1');*/goog.provide('yes3');//goog.provide('no2');"";"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,78,"DependencyInfo EXPECTED = new SimpleDependencyInfo(CLOSURE_PATH, SRC_PATH,"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,79,"ImmutableList.of(""yes1"", ""yes2"", ""yes3""), Collections.<String>emptyList());"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,81,"DependencyInfo result = parser.parseFile(SRC_PATH, CLOSURE_PATH, CONTENTS);"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,83,"assertEquals(EXPECTED, result);"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,84,"assertEquals(0, errorManager.getErrorCount());"
True,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,test/com/google/javascript/jscomp/deps/JsFileParserTest.java,85,"assertEquals(0, errorManager.getWarningCount());"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,302,"/ The old and new parser produce different results now with labels, and"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,303,"/ named breaks and continues, so disable these tests."
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,304,ublic void disable_testLabel() {
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,302,public void testLabel() {
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,308,ublic void disable_testLabel2() {
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,306,public void testLabel2() {
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,312,ublic void disable_testLabel3() {
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,310,public void testLabel3() {
