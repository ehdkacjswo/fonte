is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,473,* Specifies the name of an object that will be used to store all non-extern
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,474,* globals.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,476,public String renamePrefixNamespace;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,90,private static final java.util.regex.Pattern GLOBAL_SYMBOL_NAMESPACE_PATTERN =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,91,"java.util.regex.Pattern.compile(""^[a-zA-Z0-9$_]+$"");"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,524,f (options.moveFunctionDeclarations) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,527,if (options.moveFunctionDeclarations ||
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,528,// renamePrefixNamescape relies on moveFunctionDeclarations
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,529,// to preserve semantics.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,530,options.renamePrefixNamespace != null) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,654,if (options.renamePrefixNamespace != null) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,655,if (!GLOBAL_SYMBOL_NAMESPACE_PATTERN.matcher(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,656,options.renamePrefixNamespace).matches()) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,657,throw new IllegalArgumentException(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,658,"""Illegal character in renamePrefixNamespace name: """
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,659,+ options.renamePrefixNamespace);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,661,passes.add(rescopeGlobalSymbols);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1386,/** Puts global symbols into a single object. */
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1387,final PassFactory rescopeGlobalSymbols =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1388,"new PassFactory(""rescopeGlobalSymbols"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1389,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1390,protected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1391,"return new RescopeGlobalSymbols(compiler, options.renamePrefixNamespace);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,2,* Copyright 2011 The Closure Compiler Authors.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,16,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,18,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,19,import com.google.javascript.jscomp.NodeTraversal.AbstractShallowStatementCallback;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,20,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,21,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,23,import java.util.ArrayList;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,24,import java.util.List;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,27,* Finds all references to global symbols and rewrites them to be property
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,28,* accesses to a special object with the same name as the global symbol.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,30,* Given the name of the global object is NS
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,31,* <pre> var a = 1; function b() { return a }</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,32,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,33,* <pre> NS.a = 1; NS.b = function b() { return NS.a }</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,35,* This allows splitting code into modules that depend on each other's
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,36,"* global symbols, without using polluting JavaScript's global scope with those"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,37,* symbols.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,39,* <p>This compile step requires moveFunctionDeclarations to be turned on
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,40,* to guarantee semantics.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,42,"* <p>For lots of examples, see the unit test."
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,46,class RescopeGlobalSymbols implements CompilerPass {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,48,private final AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,49,private final String globalSymbolNamespace;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,50,private final boolean addExtern;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,52,"RescopeGlobalSymbols(AbstractCompiler compiler, String globalSymbolNamespace,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,53,boolean addExtern) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,54,this.compiler = compiler;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,55,this.globalSymbolNamespace = globalSymbolNamespace;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,56,this.addExtern = addExtern;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,59,"RescopeGlobalSymbols(AbstractCompiler compiler,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,60,String globalSymbolNamespace) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,61,"this(compiler, globalSymbolNamespace, true);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,64,private void addExternForGlobalSymbolNamespace() {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,65,"Node nameNode = Node.newString(Token.NAME, globalSymbolNamespace);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,66,Node varNode = new Node(Token.VAR);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,67,varNode.addChildToBack(nameNode);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,68,CompilerInput input = compiler.newExternInput(
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,69,"""{RescopeGlobalSymbolsNamespaceVar}"");"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,70,input.getAstRoot(compiler).addChildrenToBack(varNode);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,71,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,74,@Override
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,75,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,76,// Make the name of the globalSymbolNamespace an extern.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,77,if (addExtern) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,78,addExternForGlobalSymbolNamespace();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,80,// Rewrite all references to global symbols to properties of a
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,81,// single symbol by:
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,82,// (If necessary the 3 traversals could be combined. They are left
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,83,// separate for readability reasons.)
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,84,// 1. turning global named function statements into var assigments.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,85,"NodeTraversal.traverse(compiler, root,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,86,new RewriteGlobalFunctionStatementsToVarAssignmentsCallback());
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,87,// 2. rewriting all references to be property accesses of the single symbol.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,88,"NodeTraversal.traverse(compiler, root, new RewriteScopeCallback());"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,89,// 3. removing the var from every statement in global scope.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,90,"NodeTraversal.traverse(compiler, root, new RemoveGlobalVarCallback());"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,94,* Rewrites function statements to var statements + assignment.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,96,* <pre>function test(){}</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,97,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,98,* <pre>var test = function (){}</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,100,"* After this traversal, the special case of global function statements"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,101,* can be ignored.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,103,private class RewriteGlobalFunctionStatementsToVarAssignmentsCallback
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,104,extends AbstractShallowStatementCallback {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,105,@Override
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,106,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,107,if (NodeUtil.isFunctionDeclaration(n)) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,108,String name = NodeUtil.getFunctionName(n);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,109,"n.getFirstChild().setString("""");"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,110,Node prev = parent.getChildBefore(n);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,111,n.detachFromParent();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,112,"Node var = NodeUtil.newVarNode(name, n);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,113,if (prev == null) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,114,parent.addChildToFront(var);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,115,} else {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,116,"parent.addChildAfter(var, prev);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,118,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,124,* Visits each NAME token and checks whether it refers to a global variable.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,125,"* If yes, rewrites the name to be a property access on the"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,126,"* ""globalSymbolNamespace""."
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,128,"* <pre>var a = 1, b = 2, c = 3;</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,129,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,130,"* <pre>var NS.a = 1, NS.b = 2, NS.c = 4</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,131,* (The var token is removed in a later traversal.)
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,133,* <pre>a + b</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,134,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,135,* <pre>NS.a + NS.b</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,137,* <pre>a()</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,138,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,139,"* <pre>(0,NS.a)()</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,140,* Notice the special syntax here to preserve the *this* semantics in the
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,141,* function call.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,143,private class RewriteScopeCallback extends AbstractPostOrderCallback {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,144,@Override
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,145,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,146,if (n.getType() != Token.NAME) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,147,return;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,149,String name = n.getString();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,150,// Ignore anonymous functions
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,151,if (parent.getType() == Token.FUNCTION && name.length() == 0) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,152,return;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,154,Scope.Var var = t.getScope().getVar(name);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,155,// We only care about global vars that are not extern.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,156,if (var == null || !var.isGlobal() || var.isExtern()) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,157,return;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,159,Node nameNode = var.getNameNode();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,160,// The exception variable (e in try{}catch(e){}) should not be rewritten.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,161,if (nameNode != null && nameNode.getParent() != null &&
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,162,nameNode.getParent().getType() == Token.CATCH) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,163,return;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,165,"replaceSymbol(n, name);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,168,"private void replaceSymbol(Node node, String name) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,169,Node parent = node.getParent();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,170,"Node replacement = new Node(Token.GETPROP,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,171,"Node.newString(Token.NAME, globalSymbolNamespace)"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,172,".copyInformationFrom(node),"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,173,Node.newString(name).copyInformationFrom(node));
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,174,replacement.copyInformationFrom(node);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,175,if (node.hasChildren()) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,176,"// var declaration list: var a = 1, b = 2;"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,177,"Node assign = new Node(Token.ASSIGN, replacement,"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,178,node.removeFirstChild());
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,179,"parent.replaceChild(node, assign);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,180,} else {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,181,"parent.replaceChild(node, replacement);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,183,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,188,* Removes every occurence of var that declares a global variable.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,190,"* <pre>var NS.a = 1, NS.b = 2;</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,191,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,192,* <pre>NS.a = 1; NS.b = 2;</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,194,"* <pre>for (var a = 0, b = 0;;)</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,195,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,196,"* <pre>for (NS.a = 0, NS.b = 0;;)</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,198,* Declarations without assignments are optimized away:
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,199,"* <pre>var a = 1, b;</pre>"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,200,* becomes
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,201,* <pre>NS.a = 1</pre>
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,203,private class RemoveGlobalVarCallback extends
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,204,AbstractShallowStatementCallback {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,205,@Override
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,206,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,207,if (n.getType() != Token.VAR) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,208,return;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,210,List<Node> commas = new ArrayList<Node>();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,211,List<Node> interestingChildren = new ArrayList<Node>();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,212,// Filter out declarations without assignments.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,213,"// As opposed to regular var nodes, there are always assignments"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,214,// because the previous traversal in RewriteScopeCallback creates
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,215,// them.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,216,for (Node c : n.children()) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,217,if (c.getType() == Token.ASSIGN ||
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,218,parent.getType() == Token.FOR) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,219,interestingChildren.add(c);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,222,for (Node c : interestingChildren) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,223,if (parent.getType() == Token.FOR && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,224,commas.add(c.cloneTree());
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,225,} else {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,226,// Var statement outside of for-loop.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,227,Node expr = new Node(Token.EXPR_RESULT);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,228,expr.copyInformationFrom(c);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,229,expr.addChildToBack(c.cloneTree());
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,230,"parent.addChildBefore(expr, n);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,233,if (commas.size() > 0) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,234,"Node comma = joinOnComma(commas, n);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,235,"parent.addChildBefore(comma, n);"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,237,// Remove the var node.
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,238,parent.removeChild(n);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,239,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,242,"private Node joinOnComma(List<Node> commas, Node source) {"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,243,Node comma = commas.get(0);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,244,for (int i = 1; i < commas.size(); i++) {
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,245,"Node nextComma = new Node(Token.COMMA, comma, commas.get(i));"
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,246,nextComma.copyInformationFrom(source);
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,247,comma = nextComma;
True,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,src/com/google/javascript/jscomp/RescopeGlobalSymbols.java,249,return comma;
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,2,* Copyright 2011 The Closure Compiler Authors.
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,20,* Unit tests for {@link RescopeGlobalSymbols}
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,23,public class RescopeGlobalSymbolsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,25,"private final String namespace = ""_"";"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,27,public RescopeGlobalSymbolsTest() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,30,@Override protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,31,"return new RescopeGlobalSymbols(compiler, namespace, false);"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,34,@Override
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,35,protected int getNumRepetitions() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,36,return 1;
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,39,public void testVarDeclarations() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,40,"test(""var a = 1;"", ""_.a = 1;"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,41,"test(""var a = 1, b = 2, c = 3;"", ""_.a = 1; _.b = 2; _.c = 3;"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,42,"test(""var a = 'str', b = 1, c = { foo: 'bar' }, d = function() {};"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,43,"""_.a = 'str'; _.b = 1; _.c = { foo: 'bar' }; _.d = function() {};"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,44,"test(""if(1){var x = 1;}"", ""if(1){_.x = 1;}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,45,"test(""var x;"", """");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,46,"test(""var a, b = 1;"", ""_.b = 1"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,49,public void testForLoops() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,50,"test(""for (var i = 0; i < 1000; i++);"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,51,"""for (_.i = 0; _.i < 1000; _.i++);"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,52,"test(""for (var i = 0, c = 2; i < 1000; i++);"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,53,"""for (_.i = 0, _.c = 2; _.i < 1000; _.i++);"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,54,"test(""for (var i = 0, c = 2, d = 3; i < 1000; i++);"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,55,"""for (_.i = 0, _.c = 2, _.d = 3; _.i < 1000; _.i++);"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,56,"test(""for (var i = 0, c = 2, d = 3, e = 4; i < 1000; i++);"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,57,"""for (_.i = 0, _.c = 2, _.d = 3, _.e = 4; _.i < 1000; _.i++);"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,58,"test(""for (var i = 0; i < 1000;)i++;"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,59,"""for (_.i = 0; _.i < 1000;)_.i++;"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,60,"test(""for (var i = 0,b; i < 1000;)i++;b++"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,61,"""for (_.i = 0,_.b; _.i < 1000;)_.i++;_.b++"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,62,"test(""var o={};for (var i in o)i++;"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,63,"""_.o={};for (_.i in _.o)_.i++;"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,66,public void testFunctionStatements() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,67,"test(""function test(){}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,68,"""_.test=function (){}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,69,"test(""if(1)function test(){}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,70,"""if(1)_.test=function (){}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,71,new StringCompare().testFreeCallSemantics();
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,74,public void testDeeperScopes() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,75,"test(""var a = function(b){return b}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,76,"""_.a = function(b){return b}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,77,"test(""var a = function(b){var a; return a+b}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,78,"""_.a = function(b){var a; return a+b}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,79,"test(""var a = function(a,b){return a+b}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,80,"""_.a = function(a,b){return a+b}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,81,"test(""var x=1,a = function(b){var a; return a+b+x}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,82,"""_.x=1;_.a = function(b){var a; return a+b+_.x}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,83,"test(""var x=1,a = function(b){return function(){var a;return a+b+x}}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,84,"""_.x=1;_.a = function(b){return function(){var a; return a+b+_.x}}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,87,public void testTryCatch() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,88,"test(""try{var a = 1}catch(e){throw e}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,89,"""try{_.a = 1}catch(e){throw e}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,92,private class StringCompare extends CompilerTestCase {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,94,StringCompare() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,95,"super("""", false);"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,98,@Override protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,99,"return new RescopeGlobalSymbols(compiler, namespace, false);"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,102,public void testFreeCallSemantics() {
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,103,"test(""function x(){};var y=function(){var val=x()||{}}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,104,"""_.x=function(){};_.y=function(){var val=(0,_.x)()||{}}"");"
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,105,"test(""function x(){x()}"","
True,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,test/com/google/javascript/jscomp/RescopeGlobalSymbolsTest.java,106,"""_.x=function(){(0,_.x)()}"");"
