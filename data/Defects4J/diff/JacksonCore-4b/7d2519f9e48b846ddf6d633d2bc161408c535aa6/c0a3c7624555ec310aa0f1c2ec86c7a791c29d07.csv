is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,68,public void testYAMLCommentsBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,69,_testYAMLComments(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,72,public void testYAMLCommentsChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,73,_testYAMLComments(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,76,private void _testYAMLComments(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,78,JsonFactory jf = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,79,"jf.configure(JsonParser.Feature.ALLOW_YAML_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,80,"final String DOC = ""# foo\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,81,"+"" {\""a\"" # xyz\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,82,"+"" : # foo\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,83,"+"" 1, # more\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,84,"+""\""b\"": [ \n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,85,"+"" #all!\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,86,"+"" 3 #yay!\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,87,"+""] # foobar\n"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,88,"+""} # x"""
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,90,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,91,"jf.createParser(DOC.getBytes(""UTF-8""))"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,92,: jf.createParser(DOC);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,93,"assertEquals(JsonToken.START_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,94,"assertEquals(JsonToken.FIELD_NAME, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,95,"assertEquals(""a"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,96,"assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,97,"assertEquals(1, jp.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,98,"assertEquals(JsonToken.FIELD_NAME, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,99,"assertEquals(""b"", jp.getCurrentName());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,100,"assertEquals(JsonToken.START_ARRAY, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,101,"assertEquals(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,102,"assertEquals(3, jp.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,103,"assertEquals(JsonToken.END_ARRAY, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,104,"assertEquals(JsonToken.END_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,105,assertNull(jp.nextToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,106,jp.close();
