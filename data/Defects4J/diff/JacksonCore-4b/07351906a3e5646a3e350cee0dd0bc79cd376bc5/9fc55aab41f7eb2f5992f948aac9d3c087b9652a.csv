is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,24,mport com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,25,mport com.fasterxml.jackson.core.json.CoreVersion;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,26,mport com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,27,mport com.fasterxml.jackson.core.json.UTF8JsonGenerator;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,28,mport com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,24,import com.fasterxml.jackson.core.json.*;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,58,* Bitfield (set of flags) of all factory features that are enabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,60,protected final static int DEFAULT_FACTORY_FEATURE_FLAGS = JsonFactory.Feature.collectDefaults();
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,65,inal static int DEFAULT_PARSER_FEATURE_FLAGS = JsonParser.Feature.collectDefaults();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,66,protected final static int DEFAULT_PARSER_FEATURE_FLAGS = JsonParser.Feature.collectDefaults();
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,71,inal static int DEFAULT_GENERATOR_FEATURE_FLAGS = JsonGenerator.Feature.collectDefaults();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,72,protected final static int DEFAULT_GENERATOR_FEATURE_FLAGS = JsonGenerator.Feature.collectDefaults();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,75,* Enumeration that defines all on/off features that can only be
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,76,* changed for {@link JsonFactory}.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,78,public enum Feature {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,80,// // // Symbol handling (interning etc)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,83,* Feature that determines whether JSON object field names are
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,84,* to be canonicalized using {@link String#intern} or not:
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,85,"* if enabled, all field names will be intern()ed (and caller"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,86,"* can count on this being true for all such names); if disabled,"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,87,* no intern()ing is done. There may still be basic
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,88,"* canonicalization (that is, same String will be used to represent"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,89,* all identical object property names for a single document).
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,90,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,91,* Note: this setting only has effect if
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,92,* {@link #CANONICALIZE_FIELD_NAMES} is true -- otherwise no
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,93,* canonicalization of any sort is done.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,94,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,95,* This setting is enabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,97,"INTERN_FIELD_NAMES(true),"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,100,* Feature that determines whether JSON object field names are
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,101,* to be canonicalized (details of how canonicalization is done
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,102,* then further specified by
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,103,* {@link #INTERN_FIELD_NAMES}).
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,104,*<p>
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,105,* This setting is enabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,107,CANONICALIZE_FIELD_NAMES(true)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,112,* Whether feature is enabled or disabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,114,private final boolean _defaultState;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,117,* Method that calculates bit set (flags) of all features that
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,118,* are enabled by default.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,120,public static int collectDefaults()
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,122,int flags = 0;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,123,for (Feature f : values()) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,124,if (f.enabledByDefault()) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,125,flags |= f.getMask();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,128,return flags;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,131,private Feature(boolean defaultState)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,133,_defaultState = defaultState;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,136,public boolean enabledByDefault() { return _defaultState; }
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,138,public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,140,public int getMask() { return (1 << ordinal()); }
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,188,* Currently enabled factory features.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,190,protected int _factoryFeatures = DEFAULT_FACTORY_FEATURE_FLAGS;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,219,"* Configuration, parser settings"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,293,"/* Configuration, factory features"
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,227,"ublic final JsonFactory configure(JsonParser.Feature f, boolean state)"
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,229,f (state) {
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,230,nable(f);
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,231, else {
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,232,isable(f);
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,301,"public final JsonFactory configure(JsonFactory.Feature f, boolean state) {"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,302,return state ? enable(f) : disable(f);
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,306,* Method for enabling specified parser feature
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,307,* (check {@link JsonFactory.Feature} for list of features)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,309,public JsonFactory enable(JsonFactory.Feature f) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,310,_factoryFeatures |= f.getMask();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,315,* Method for disabling specified parser features
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,316,* (check {@link JsonFactory.Feature} for list of features)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,318,public JsonFactory disable(JsonFactory.Feature f) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,319,_factoryFeatures &= ~f.getMask();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,320,return this;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,324,* Checked whether specified parser feature is enabled.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,326,public final boolean isEnabled(JsonFactory.Feature f) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,327,return (_factoryFeatures & f.getMask()) != 0;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,332,"/* Configuration, parser configuration"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,337,* Method for enabling or disabling specified parser feature
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,338,* (check {@link JsonParser.Feature} for list of features)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,340,"public final JsonFactory configure(JsonParser.Feature f, boolean state) {"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,341,return state ? enable(f) : disable(f);
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,289,f (state) {
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,290,nable(f);
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,291, else {
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,292,isable(f);
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,294,eturn this;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,396,return state ? enable(f) : disable(f);
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,780,"// As per [JACKSON-259], may want to fully disable canonicalization:"
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,679,"objectCodec, _rootByteSymbols, _rootCharSymbols);"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,782,"_objectCodec, _rootByteSymbols, _rootCharSymbols,"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,783,"isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES),"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,784,isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES));
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,696,"rootCharSymbols.makeChild(isEnabled(JsonParser.Feature.CANONICALIZE_FIELD_NAMES),"
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,697,sEnabled(JsonParser.Feature.INTERN_FIELD_NAMES)));
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,801,"_rootCharSymbols.makeChild(isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES),"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,802,isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES)));
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,715,"objectCodec, _rootByteSymbols, _rootCharSymbols);"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,820,"_objectCodec, _rootByteSymbols, _rootCharSymbols,"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,821,"isEnabled(JsonFactory.Feature.CANONICALIZE_FIELD_NAMES),"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,822,isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES));
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,36, Note that some features can only be set for
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,37," {@link JsonFactory} (as defaults for generators), while others"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,38, can also be changed for generator instances:
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,39, ones that can be used with instances return <code>true</code>
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,40, from {@link #canUseForInstance}.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,41, Trying enable/disable factory-only feature will result in
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,42, an {@link IllegalArgumentException}.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,56," Feature is enabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,57, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,48,* Feature is enabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,59,"UTO_CLOSE_TARGET(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,50,"AUTO_CLOSE_TARGET(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,69," Feature is enabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,70, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,60,* Feature is enabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,72,"UTO_CLOSE_JSON_CONTENT(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,62,"AUTO_CLOSE_JSON_CONTENT(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,81," Feature is enabled by default (since it is required by JSON specification),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,82, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,71,* Feature is enabled by default (since it is required by JSON specification).
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,84,"UOTE_FIELD_NAMES(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,73,"QUOTE_FIELD_NAMES(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,96," Feature is enabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,97, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,85,* Feature is enabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,99,"UOTE_NON_NUMERIC_NUMBERS(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,87,"QUOTE_NON_NUMERIC_NUMBERS(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,114," Feature is disabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,115, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,102,* Feature is disabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,117,"RITE_NUMBERS_AS_STRINGS(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,104,"WRITE_NUMBERS_AS_STRINGS(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,128," Feature is enabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,129, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,115,* Feature is enabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,131,"LUSH_PASSED_TO_STREAM(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,117,"FLUSH_PASSED_TO_STREAM(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,140," Feature is disabled by default,"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,141, and it can be changed for generator instances.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,126,* Feature is disabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,143,"SCAPE_NON_ASCII(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,128,"ESCAPE_NON_ASCII(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,150," Whether feature can be used for instances (true), or"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,151, just for factory (false).
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,153,rivate final boolean _canUseForInstance;
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,172,"rivate Feature(boolean defaultState, boolean canUseForInstance)"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,151,private Feature(boolean defaultState) {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,176,canUseForInstance = canUseForInstance;
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,180,ublic boolean canUseForInstance() { return _canUseForInstance; }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,52, Note that some features can only be set for
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,53," {@link JsonFactory} (as defaults for parsers), while others"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,54, can also be changed directly for parser instances:
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,55, ones that can be used with instances return <code>true</code>
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,56, from {@link #canUseForInstance}.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,57, Trying enable/disable factory-only feature will result in
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,58, an {@link IllegalArgumentException}.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,74, Feature is enabled by default;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,75, and it can be changed for parser instances.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,66,* Feature is enabled by default.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,77,"UTO_CLOSE_SOURCE(true, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,68,"AUTO_CLOSE_SOURCE(true),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,92, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,94,"LLOW_COMMENTS(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,84,"ALLOW_COMMENTS(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,104, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,106,"LLOW_UNQUOTED_FIELD_NAMES(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,95,"ALLOW_UNQUOTED_FIELD_NAMES(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,118, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,120,"LLOW_SINGLE_QUOTES(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,108,"ALLOW_SINGLE_QUOTES(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,132, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,134,"LLOW_UNQUOTED_CONTROL_CHARS(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,121,"ALLOW_UNQUOTED_CONTROL_CHARS(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,144, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,146,"LLOW_BACKSLASH_ESCAPING_ANY_CHARACTER(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,132,"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,157, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,159,"LLOW_NUMERIC_LEADING_ZEROS(false, true),"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,144,"ALLOW_NUMERIC_LEADING_ZEROS(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,178, Feature can be changed for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,180,"LLOW_NON_NUMERIC_NUMBERS(false, true),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,182,/ // // Controlling canonicalization (interning etc)
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,164,"ALLOW_NON_NUMERIC_NUMBERS(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,185, Feature that determines whether JSON object field names are
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,186, to be canonicalized using {@link String#intern} or not:
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,187," if enabled, all field names will be intern()ed (and caller"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,188," can count on this being true for all such names); if disabled,"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,189, no intern()ing is done. There may still be basic
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,190," canonicalization (that is, same String will be used to represent"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,191, all identical object property names for a single document).
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,192,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,193, Note: this setting only has effect if
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,194, {@link #CANONICALIZE_FIELD_NAMES} is true -- otherwise no
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,195, canonicalization of any sort is done.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,196,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,197, This feature <b>can not</b> be changed for parser instances;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,198, it <b>must</b> be defined for {@link JsonFactory} before
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,199, constructing parser.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,201,"NTERN_FIELD_NAMES(true, false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,204, Feature that determines whether JSON object field names are
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,205, to be canonicalized (details of how canonicalization is done
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,206, then further specified by
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,207, {@link #INTERN_FIELD_NAMES}).
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,208,<p>
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,209, This feature <b>can not</b> be changed for parser instances;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,210, it <b>must</b> be defined for {@link JsonFactory} before
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,211, constructing parser.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,213,"ANONICALIZE_FIELD_NAMES(true, false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,222," Whether feature can be used for instances (true), or"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,223, just for factory (false).
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,225,rivate final boolean _canUseForInstance;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,242,"rivate Feature(boolean defaultState, boolean canUseForInstance)"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,188,private Feature(boolean defaultState) {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,245,canUseForInstance = canUseForInstance;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,249,ublic boolean canUseForInstance() { return _canUseForInstance; }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,251,ublic boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,193,//        public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,433,"checkFeature(f, true);"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,444,"checkFeature(f, false);"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,455,"checkFeature(f, state);"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,472, Helper method called to verify that given feature can be
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,473, modified for parser instances.
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,475, @since 2.0
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,477,"rotected void _checkFeature(Feature f, boolean state) {"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,478,f (!f.canUseForInstance()) {
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,479,"hrow new IllegalArgumentException(""Can not change Feature ""+f.name()+"" for JsonParser instance"");"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,95,"checkFeature(f, true);"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,107,"checkFeature(f, false);"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,125, Helper method called to verify that given feature can be
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,126, modified for parser instances.
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,128, @since 2.0
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,130,"rotected void _checkFeature(Feature f, boolean state) {"
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,131,f (!f.canUseForInstance()) {
False,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java,132,"hrow new IllegalArgumentException(""Can not change Feature ""+f.name()+"" for JsonParser instance"");"
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,221,"ublic JsonParser constructParser(int features, ObjectCodec codec, BytesToNameCanonicalizer rootByteSymbols, CharsToNameCanonicalizer rootCharSymbols)"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,221,"public JsonParser constructParser(int parserFeatures, ObjectCodec codec,"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,222,"BytesToNameCanonicalizer rootByteSymbols, CharsToNameCanonicalizer rootCharSymbols,"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,223,"boolean canonicalize, boolean intern)"
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,226,"/ As per [JACKSON-259], may want to fully disable canonicalization:"
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,227,oolean canonicalize = JsonParser.Feature.CANONICALIZE_FIELD_NAMES.enabledIn(features);
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,228,oolean intern = JsonParser.Feature.INTERN_FIELD_NAMES.enabledIn(features);
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,235,"eturn new UTF8StreamJsonParser(_context, features, _in, codec, can, _inputBuffer, _inputPtr, _inputEnd, _bufferRecyclable);"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,234,"return new UTF8StreamJsonParser(_context, parserFeatures, _in, codec, can, _inputBuffer, _inputPtr, _inputEnd, _bufferRecyclable);"
False,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,238,"eturn new ReaderBasedJsonParser(_context, features, constructReader(), codec, rootCharSymbols.makeChild(canonicalize, intern));"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,237,"return new ReaderBasedJsonParser(_context, parserFeatures, constructReader(), codec,"
True,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,src/main/java/com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.java,238,"rootCharSymbols.makeChild(canonicalize, intern));"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,119,"/ 12-Mar-2010, tatus: Sanity check, related to [JACKSON-259]:"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,120,f (!JsonParser.Feature.CANONICALIZE_FIELD_NAMES.enabledIn(features)) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,121,"/ should never construct non-canonical UTF-8/byte parser (instead, use Reader)"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,122,throwInternal();
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,28,"/ note: can NOT change interning on parser instance, only factory"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,29,/ but it defaults to true anyway
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,30,ssertTrue(jp.isEnabled(JsonParser.Feature.INTERN_FIELD_NAMES));
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,48,".configure(JsonParser.Feature.INTERN_FIELD_NAMES, enableIntern);"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,49,"ssertEquals(enableIntern, f.isEnabled(JsonParser.Feature.INTERN_FIELD_NAMES));"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,44,"f.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, enableIntern);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,45,"assertEquals(enableIntern, f.isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES));"
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,src/test/java/com/fasterxml/jackson/core/json/TestJsonParser.java,54,"ssertEquals(enableIntern, jp.isEnabled(JsonParser.Feature.INTERN_FIELD_NAMES));"
False,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,26,".configure(JsonParser.Feature.INTERN_FIELD_NAMES, true);"
False,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,27,ssertTrue(f.isEnabled(JsonParser.Feature.INTERN_FIELD_NAMES));
False,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,28,".configure(JsonParser.Feature.INTERN_FIELD_NAMES, false);"
False,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,29,ssertFalse(f.isEnabled(JsonParser.Feature.INTERN_FIELD_NAMES));
True,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,26,"f.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, true);"
True,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,27,assertTrue(f.isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES));
True,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,28,"f.configure(JsonFactory.Feature.INTERN_FIELD_NAMES, false);"
True,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/main/TestJsonFactory.java,29,assertFalse(f.isEnabled(JsonFactory.Feature.INTERN_FIELD_NAMES));
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,43,/ [JACKSON-730]
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,44,ublic void testFactoryOnlyFeatures() throws Exception
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,46,sonFactory f = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,47,"sonParser jp = f.createJsonParser(""{ }"");"
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,49,/ should be ok to enable/disable most settings:
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,50,p.enable(JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS);
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,52,"/ but not ones dealing with interning, canonicalization"
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,53,ry {
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,54,p.enable(JsonParser.Feature.CANONICALIZE_FIELD_NAMES);
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,55,"ail(""Should have failed with exception"");"
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,56, catch (IllegalArgumentException e) {
False,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,src/test/java/com/fasterxml/jackson/core/main/TestParserFeatures.java,57,"erifyException(e, ""Can not change Feature"");"
