is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1371,case 'I':
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1372,"_matchToken(""Infinity"", 1);"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1373,if (isEnabled(Feature.ALLOW_NON_NUMERIC_NUMBERS)) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1374,"return resetAsNaN(""Infinity"", Double.POSITIVE_INFINITY);"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1376,"_reportError(""Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow"");"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1377,break;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2263,case 'I':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2264,"_matchToken(""Infinity"", 1);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2265,if (isEnabled(Feature.ALLOW_NON_NUMERIC_NUMBERS)) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2266,"return resetAsNaN(""Infinity"", Double.POSITIVE_INFINITY);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2268,"_reportError(""Non-standard token 'Infinity': enable JsonParser.Feature.ALLOW_NON_NUMERIC_NUMBERS to allow"");"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2269,break;
False,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,401,"inal String JSON = ""[ -INF, +INF, +Infinity,-Infinity ]"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,401,"final String JSON = ""[ -INF, +INF, +Infinity, Infinity, -Infinity ]"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,443,"assertToken(JsonToken.VALUE_NUMBER_FLOAT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,444,d = jp.getDoubleValue();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,445,"assertEquals(""Infinity"", jp.getText());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,446,assertTrue(Double.isInfinite(d));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,447,assertTrue(d == Double.POSITIVE_INFINITY);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,src/test/java/com/fasterxml/jackson/core/json/TestParserNonStandard.java,468,"assertToken(JsonToken.VALUE_NUMBER_FLOAT, jp.nextToken());"
