is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,12,import java.util.List;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,368," Get the value of a header. This is a simplified header model, where a header may only have one value."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,369,"* Get the value of a header. If there is more than one header with the same name, returns the first header."
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,380, Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,381,* Get the values of a header.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,382,"* @param name header name, case insensitive."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,383,"* @return a list of values for this header, or an empty list if not set."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,385,List<String> headers(String name);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,388,* Set a header. This method will overwrite any existing header with the same case insensitive name. (If there
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,389,"* is more than one value for this header, this method will update the first matching header."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,393,"* @see #addHeader(String, String)"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,398,* Add a header. The header will be added regardless of whether a header with the same name already exists.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,399,* @param name Name of new header
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,400,* @param value Value of new header
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,401,"* @return this, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,403,"T addHeader(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,403, Remove a header by name
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,421,"* Remove headers by name. If there is more than one header with this name, they will all be removed."
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,410, Retrieve all of the request/response headers as a map
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,428,* Retrieve all of the request/response header names and corresponding values as a map. For headers with multiple
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,429,"* values, only the first header is returned."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,431,* @see #multiHeaders()
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,437,"* Retreive all of the headers, keyed by the header name, and with a list of values per header."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,438,* @return a list of multiple values per header.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,440,"Map<String, List<String>> multiHeaders();"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,42,import java.util.Collections;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,321,"ap<String, String> headers;"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,322,"Map<String, List<String>> headers;"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,351,tring val = getHeaderCaseInsensitive(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,352,List<String> vals = getHeadersCaseInsensitive(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,353,String val = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,354,if (vals.size() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,355,val = vals.get(0);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,364,@Override
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,365,"public T addHeader(String name, String value) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,366,Validate.notEmpty(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,367,Validate.notNull(value);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,369,List<String> values = headers(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,370,if (values.isEmpty()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,371,values = new ArrayList<>();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,372,"headers.put(name, values);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,374,values.add(value);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,376,return (T) this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,379,@Override
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,380,public List<String> headers(String name) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,381,Validate.notEmpty(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,382,return getHeadersCaseInsensitive(name);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,412,"eaders.put(name, value);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,438,"addHeader(name, value);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,418,eturn getHeaderCaseInsensitive(name) != null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,return getHeadersCaseInsensitive(name).size() != 0;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,425,eturn hasHeader(name) && header(name).equalsIgnoreCase(value);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,451,Validate.notEmpty(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,452,Validate.notEmpty(value);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,453,List<String> values = headers(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,454,for (String candidate : values) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,455,if (value.equalsIgnoreCase(candidate))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,456,return true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,458,return false;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,430,"ap.Entry<String, String> entry = scanHeaders(name); // remove is case insensitive too"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,463,"Map.Entry<String, List<String>> entry = scanHeaders(name); // remove is case insensitive too"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,470,"LinkedHashMap<String, String> map = new LinkedHashMap<>(headers.size());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,471,"for (Map.Entry<String, List<String>> entry : headers.entrySet()) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,472,String header = entry.getKey();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,473,List<String> values = entry.getValue();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,474,if (values.size() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,475,"map.put(header, values.get(0));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,477,return map;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,480,@Override
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,481,"public Map<String, List<String>> multiHeaders() {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,440,rivate String getHeaderCaseInsensitive(String name) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,441,"alidate.notNull(name, ""Header name must not be null"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,442,"/ quick evals for common case of title case, lower case, then scan for mixed"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,443,tring value = headers.get(name);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,f (value == null)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,445,alue = headers.get(lowerCase(name));
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,446,f (value == null) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,447,"ap.Entry<String, String> entry = scanHeaders(name);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,448,f (entry != null)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,449,alue = entry.getValue();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,485,private List<String> getHeadersCaseInsensitive(String name) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,486,Validate.notNull(name);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,488,"for (Map.Entry<String, List<String>> entry : headers.entrySet()) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,489,if (name.equalsIgnoreCase(entry.getKey()))
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,490,return entry.getValue();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,451,eturn value;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,493,return Collections.emptyList();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,454,"rivate Map.Entry<String, String> scanHeaders(String name) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,496,"private Map.Entry<String, List<String>> scanHeaders(String name) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,456,"or (Map.Entry<String, String> entry : headers.entrySet()) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,498,"for (Map.Entry<String, List<String>> entry : headers.entrySet()) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,505,rivate Request() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,547,Request() {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,511,"eaders.put(""Accept-Encoding"", ""gzip"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,512,"eaders.put(USER_AGENT, DEFAULT_UA);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,553,"addHeader(""Accept-Encoding"", ""gzip"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,554,"addHeader(USER_AGENT, DEFAULT_UA);"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,95,@Test public void multipleHeaders() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,96,Connection.Request req = new HttpConnection.Request();
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,97,"req.addHeader(""Accept"", ""Something"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,98,"req.addHeader(""Accept"", ""Everything"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,99,"req.addHeader(""Foo"", ""Bar"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,101,"assertTrue(req.hasHeader(""Accept""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,102,"assertTrue(req.hasHeader(""ACCEpt""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,103,"assertEquals(""Something"", req.header(""accept""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,104,"assertTrue(req.hasHeader(""fOO""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,105,"assertEquals(""Bar"", req.header(""foo""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,107,"List<String> accept = req.headers(""accept"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,108,"assertEquals(2, accept.size());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,109,"assertEquals(""Something"", accept.get(0));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,110,"assertEquals(""Everything"", accept.get(1));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,112,"Map<String, List<String>> headers = req.multiHeaders();"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,113,"assertEquals(accept, headers.get(""Accept""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,114,"assertEquals(""Bar"", headers.get(""Foo"").get(0));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,116,"assertTrue(req.hasHeader(""Accept""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,117,"assertTrue(req.hasHeaderWithValue(""accept"", ""Something""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,118,"assertTrue(req.hasHeaderWithValue(""accept"", ""Everything""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,119,"assertFalse(req.hasHeaderWithValue(""accept"", ""Something for nothing""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,121,"req.removeHeader(""accept"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,122,headers = req.multiHeaders();
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,123,"assertEquals(""Bar"", headers.get(""Foo"").get(0));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,124,"assertFalse(req.hasHeader(""Accept""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,125,"assertTrue(headers.get(""Accept"") == null);"
