is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,529,"eq.url(new URL(req.url(), encodeUrl(location)));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,529,"req.url(StringUtil.resolve(req.url(), encodeUrl(location)));"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,3,import java.net.MalformedURLException;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,4,import java.net.URL;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,157,"* Create a new absolute URL, from a provided existing absolute URL and a relative URL component."
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,158,* @param base the existing absolulte base URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,159,"* @param relUrl the relative URL to resolve. (If it's already absolute, it will be returned)"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,160,* @return the resolved absolute URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,161,* @throws MalformedURLException if an error occurred generating the URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,163,"public static URL resolve(URL base, String relUrl) throws MalformedURLException {"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,164,"// workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,165,"if (relUrl.startsWith(""?""))"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,166,relUrl = base.getPath() + relUrl;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,167,"// workaround: //example.com + ./foo = //example.com/./foo, not //example.com/foo"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,168,if (relUrl.indexOf('.') == 0 && base.getFile().indexOf('/') != 0) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,169,"base = new URL(base.getProtocol(), base.getHost(), base.getPort(), ""/"" + base.getFile());"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,171,"return new URL(base, relUrl);"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,175,"* Create a new absolute URL, from a provided existing absolute URL and a relative URL component."
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,176,* @param baseUrl the existing absolute base URL
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,177,"* @param relUrl the relative URL to resolve. (If it's already absolute, it will be returned)"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,178,"* @return an absolute URL if one was able to be generated, or the empty string if not"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,180,"public static String resolve(final String baseUrl, final String relUrl) {"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,181,URL base;
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,182,try {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,183,try {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,184,base = new URL(baseUrl);
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,185,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,186,"// the base is unsuitable, but the attribute/rel may be abs on its own, so try that"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,187,URL abs = new URL(relUrl);
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,188,return abs.toExternalForm();
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,190,"return resolve(base, relUrl).toExternalForm();"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,191,} catch (MalformedURLException e) {
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,192,"return """";"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,181,tring relUrl = attr(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,185,RL base;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,186,ry {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,187,ry {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,188,ase = new URL(baseUri);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,189, catch (MalformedURLException e) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,190,"/ the base is unsuitable, but the attribute may be abs on its own, so try that"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,191,RL abs = new URL(relUrl);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,192,eturn abs.toExternalForm();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,194,"/ workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,195,"f (relUrl.startsWith(""?""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,196,elUrl = base.getPath() + relUrl;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,197,"RL abs = new URL(base, relUrl);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,198,eturn abs.toExternalForm();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,199, catch (MalformedURLException e) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,200,"eturn """";"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,184,"return StringUtil.resolve(baseUri, attr(attributeKey));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,8,import static org.jsoup.helper.StringUtil.*;
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,61,"ssertEquals("" "", StringUtil.normaliseWhitespace(""    \r \n \r\n""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,62,"ssertEquals("" hello there "", StringUtil.normaliseWhitespace(""   hello   \r \n  there    \n""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,63,"ssertEquals(""hello"", StringUtil.normaliseWhitespace(""hello""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,64,"ssertEquals(""hello there"", StringUtil.normaliseWhitespace(""hello\nthere""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,62,"assertEquals("" "", normaliseWhitespace(""    \r \n \r\n""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,63,"assertEquals("" hello there "", normaliseWhitespace(""   hello   \r \n  there    \n""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,64,"assertEquals(""hello"", normaliseWhitespace(""hello""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,65,"assertEquals(""hello there"", normaliseWhitespace(""hello\nthere""));"
False,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,71,"ssertEquals(test71540charsExpectedSingleWhitespace, StringUtil.normaliseWhitespace(test71540chars));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,72,"assertEquals(test71540charsExpectedSingleWhitespace, normaliseWhitespace(test71540chars));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,77,@Test public void resolvesRelativeUrls() {
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,78,"assertEquals(""http://example.com/one/two?three"", resolve(""http://example.com"", ""./one/two?three""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,79,"assertEquals(""http://example.com/one/two?three"", resolve(""http://example.com?one"", ""./one/two?three""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,80,"assertEquals(""http://example.com/one/two?three#four"", resolve(""http://example.com"", ""./one/two?three#four""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,81,"assertEquals(""https://example.com/one"", resolve(""http://example.com/"", ""https://example.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,82,"assertEquals(""http://example.com/one/two.html"", resolve(""http://example.com/two/"", ""../one/two.html""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,83,"assertEquals(""https://example2.com/one"", resolve(""https://example.com/"", ""//example2.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,84,"assertEquals(""https://example.com:8080/one"", resolve(""https://example.com:8080"", ""./one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,85,"assertEquals(""https://example2.com/one"", resolve(""http://example.com/"", ""https://example2.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,86,"assertEquals(""https://example.com/one"", resolve(""wrong"", ""https://example.com/one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,87,"assertEquals(""https://example.com/one"", resolve(""https://example.com/one"", """"));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,88,"assertEquals("""", resolve(""wrong"", ""also wrong""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,89,"assertEquals(""ftp://example.com/one"", resolve(""ftp://example.com/two/"", ""../one""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,90,"assertEquals(""ftp://example.com/one/two.c"", resolve(""ftp://example.com/one/"", ""./two.c""));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,91,"assertEquals(""ftp://example.com/one/two.c"", resolve(""ftp://example.com/one/"", ""two.c""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,191,"assertEquals(doc.location(), ""http://direct.infohound.net/tools/ok.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,194,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,195,public void followsRelativeDotRedirect2() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,196,"//redirects to ""esportspenedes.cat/./ep/index.php"", should resolve to ""esportspenedes.cat/ep/index.php"""
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,197,"Connection con = Jsoup.connect(""http://esportspenedes.cat"")  // note lack of trailing / - server should redir to / first, then to ./ep/...; but doesn't'"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,198,.timeout(10000);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,199,Document doc = con.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,200,"assertEquals(doc.location(), ""http://esportspenedes.cat/ep/index.php"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,128,@Test public void absHandlesDotFromIndex() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,129,"Document doc = Jsoup.parse(""<a href='./one/two.html'>One</a>"", ""http://example.com"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,130,"Element a1 = doc.select(""a"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,131,"assertEquals(""http://example.com/one/two.html"", a1.absUrl(""href""));"
