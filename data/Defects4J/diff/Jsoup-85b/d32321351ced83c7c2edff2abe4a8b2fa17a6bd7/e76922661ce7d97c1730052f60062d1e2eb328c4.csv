is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1606,".matchConsume(""]]>"");"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1607,.transition(Data);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1606,"if (r.matchConsume(""]]>"") || r.isEmpty()) {"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1607,t.transition(Data);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1608,"}// otherwise, buffer underrun, stay in data section"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,5,import org.jsoup.nodes.Comment;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,8,import org.jsoup.nodes.TextNode;
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,84,@Test public void handleLargeText() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,85,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,86,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,87,"sb.append(""A Large Amount of Text"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,88,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,89,String text = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,90,"String html = ""<p>"" + text + ""</p>"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,92,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,93,"Elements els = doc.select(""p"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,94,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,95,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,97,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,98,"assertEquals(text, el.text());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,101,@Test public void handleLargeComment() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,102,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,103,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,104,"sb.append(""Quite a comment "");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,105,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,106,String comment = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,107,"String html = ""<p><!-- "" + comment + "" --></p>"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,109,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,110,"Elements els = doc.select(""p"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,111,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,112,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,114,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,115,Comment child = (Comment) el.childNode(0);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,116,"assertEquals("" "" + comment + "" "", child.getData());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,119,@Test public void handleLargeCdata() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,120,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,121,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,122,"sb.append(""Quite a lot of CDATA <><><><>"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,123,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,124,String cdata = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,125,"String html = ""<p><![CDATA["" + cdata + ""]]></p>"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,127,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,128,"Elements els = doc.select(""p"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,129,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,130,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,132,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,133,TextNode child = (TextNode) el.childNode(0);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,134,"assertEquals(cdata, el.text());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,135,"assertEquals(cdata, child.getWholeText());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,138,@Test public void handleLargeTitle() {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,139,StringBuilder sb = new StringBuilder(maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,140,do {
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,141,"sb.append(""Quite a long title"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,142,} while (sb.length() < maxBufferLen);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,143,String title = sb.toString();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,144,"String html = ""<title>"" + title + ""</title>"";"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,146,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,147,"Elements els = doc.select(""title"");"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,148,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,149,Element el = els.first();
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,151,assertNotNull(el);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,152,TextNode child = (TextNode) el.childNode(0);
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,153,"assertEquals(title, el.text());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,154,"assertEquals(title, child.getWholeText());"
True,src/test/java/org/jsoup/parser/TokeniserTest.java,src/test/java/org/jsoup/parser/TokeniserTest.java,155,"assertEquals(title, doc.title());"
