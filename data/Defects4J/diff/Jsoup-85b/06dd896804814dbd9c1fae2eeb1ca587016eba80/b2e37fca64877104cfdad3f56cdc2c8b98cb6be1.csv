is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,16,import javax.xml.transform.TransformerException;
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,19,mport javax.xml.transform.TransformerException;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,21,import java.util.HashMap;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,42,//set the factory to be namespace-aware
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,43,factory.setNamespaceAware(true);
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,68,rotected class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,72,protected static class W3CBuilder implements NodeVisitor {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,73,"private static final String xmlnsKey = ""xmlns"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,74,"private static final String xmlnsPrefix = ""xmlns:"";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,77,"private final HashMap<String, String> namespaces = new HashMap<String, String>(); // prefix => urn"
False,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,79,lement el = doc.createElement(sourceEl.tagName());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,88,String prefix = updateNamespaces(sourceEl);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,89,String namespace = namespaces.get(prefix);
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,91,"Element el = doc.createElementNS(namespace, sourceEl.tagName());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,129,* Finds any namespaces defined in this element. Returns any tag prefix.
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,131,private String updateNamespaces(org.jsoup.nodes.Element el) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,132,// scan the element for namespace declarations
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,133,"// like: xmlns=""blah"" or xmlns:prefix=""blah"""
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,134,Attributes attributes = el.attributes();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,135,for (Attribute attr : attributes) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,136,String key = attr.getKey();
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,137,String prefix;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,138,if (key.equals(xmlnsKey)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,139,"prefix = """";"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,140,} else if (key.startsWith(xmlnsPrefix)) {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,141,prefix = key.substring(xmlnsPrefix.length());
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,142,} else {
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,143,continue;
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,145,"namespaces.put(prefix, attr.getValue());"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,148,// get the element prefix if any
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,149,"int pos = el.tagName().indexOf("":"");"
True,src/main/java/org/jsoup/helper/W3CDom.java,src/main/java/org/jsoup/helper/W3CDom.java,150,"return pos > 0 ? el.tagName().substring(0, pos) : """";"
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,25,* @param namespace the namespace of the document
False,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,26,ublic void traverse(Node root) {
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,27,"public void traverse(Node root, String namespace) {"
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,50,public void traverse (Node root)
True,src/main/java/org/jsoup/select/NodeTraversor.java,src/main/java/org/jsoup/select/NodeTraversor.java,52,"traverse (root, null);"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,7,import org.w3c.dom.Node;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,48,Node htmlEl = wDoc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,49,"assertEquals(null, htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,50,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,51,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,57,@Test
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,58,public void namespacePreservation() throws IOException {
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,59,"File in = ParseTest.getFile(""/htmltests/namespaces.xhtml"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,60,org.jsoup.nodes.Document jsoupDoc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,61,"jsoupDoc = Jsoup.parse(in, ""UTF-8"");"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,63,Document doc;
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,64,org.jsoup.helper.W3CDom jDom = new org.jsoup.helper.W3CDom();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,65,doc = jDom.fromJsoup(jsoupDoc);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,67,Node htmlEl = doc.getChildNodes().item(0);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,68,"assertEquals(""http://www.w3.org/1999/xhtml"", htmlEl.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,69,"assertEquals(""html"", htmlEl.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,70,"assertEquals(""html"", htmlEl.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,72,Node epubTitle = htmlEl.getChildNodes().item(2).getChildNodes().item(3);
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,73,"assertEquals(""http://www.idpf.org/2007/ops"", epubTitle.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,74,"assertEquals(""title"", epubTitle.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,75,"assertEquals(""epub:title"", epubTitle.getNodeName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,77,Node xSection = epubTitle.getNextSibling().getNextSibling();
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,78,"assertEquals(""urn:test"", xSection.getNamespaceURI());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,79,"assertEquals(""section"", xSection.getLocalName());"
True,src/test/java/org/jsoup/helper/W3CDomTest.java,src/test/java/org/jsoup/helper/W3CDomTest.java,80,"assertEquals(""x:section"", xSection.getNodeName());"
