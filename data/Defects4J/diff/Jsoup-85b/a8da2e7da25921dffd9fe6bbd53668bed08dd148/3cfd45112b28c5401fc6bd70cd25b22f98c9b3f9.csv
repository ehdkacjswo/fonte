is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,62,"* Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed,"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,63,* and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,64,* only by your patience and the memory available on your machine). The amount actually read may be up to ~ 100K
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,65,"* larger, as a result of the internal stream read buffer."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,67,* @param bytes number of bytes to read from the input before truncating
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,68,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,70,public Connection maxBodySize(int bytes);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,357,"* Get the maximum body size, in milliseconds."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,358,"* @return the maximum body size, in milliseconds."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,360,public int maxBodySize();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,363,"* Update the maximum body size, in milliseconds."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,364,"* @param bytes maximum body size, in milliseconds."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,365,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,367,public Request maxBodySize(int bytes);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,108,tatic ByteBuffer readToByteBuffer(InputStream inStream) throws IOException {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,109,* Read the input stream into a byte buffer.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,110,* @param inStream the input stream to read from
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,111,* @param maxSize the maximum size in bytes to read from the stream. Set to 0 to be unlimited. Note that this size
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,"* is treated as a imprecise hint, and the actual amount read may be greater by up to the size of the internal"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,113,* read buffer.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,114,* @return the filled byte buffer
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,115,* @throws IOException if an exception occurs whilst reading from the input stream.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,117,"static ByteBuffer readToByteBuffer(InputStream inStream, int maxSize) throws IOException {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,118,"Validate.isTrue(maxSize >= 0, ""maxSize must be 0 (unlimited) or larger"");"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,111,nt read;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,112,hile(true) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,113,ead  = inStream.read(buffer);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,121,"int read, totalRead = 0;"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,122,while (true) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,123,read = inStream.read(buffer);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,124,totalRead += read;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,127,if (maxSize > 0 && totalRead >= maxSize) break;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,133,static ByteBuffer readToByteBuffer(InputStream inStream) throws IOException {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,134,"return readToByteBuffer(inStream, 0);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,71,public Connection maxBodySize(int bytes) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,72,req.maxBodySize(bytes);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,73,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,301,private int maxBodySizeBytes;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,310,maxBodySizeBytes = 1024 * 1024; // 1MB
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,328,public int maxBodySize() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,329,return maxBodySizeBytes;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,332,public Connection.Request maxBodySize(int bytes) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,333,"Validate.isTrue(bytes >= 0, ""maxSize must be 0 (unlimited) or larger"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,334,maxBodySizeBytes = bytes;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,335,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,447,es.byteData = DataUtil.readToByteBuffer(bodyStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,464,"res.byteData = DataUtil.readToByteBuffer(bodyStream, req.maxBodySize());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,225,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,226,public void maxBodySize() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,227,"String url = ""http://direct.infohound.net/tools/large.html""; // 280 K"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,229,Document defaultDoc = Jsoup.connect(url).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,230,Document smallDoc = Jsoup.connect(url).maxBodySize(50 * 1024).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,231,Document mediumDoc = Jsoup.connect(url).maxBodySize(200 * 1024).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,232,Document largeDoc = Jsoup.connect(url).maxBodySize(300 * 1024).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,233,Document unlimitedDoc = Jsoup.connect(url).maxBodySize(0).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,235,int actual = 269541;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,236,"assertEquals(actual, defaultDoc.text().length());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,237,"assertEquals(125812, smallDoc.text().length()); // asked for 50, but rounds up to buffer (~ 130K). ok."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,238,"assertEquals(251736, mediumDoc.text().length()); // as above, next multiple of 130K"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,239,"assertEquals(actual, largeDoc.text().length());"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,240,"assertEquals(actual, unlimitedDoc.text().length());"
