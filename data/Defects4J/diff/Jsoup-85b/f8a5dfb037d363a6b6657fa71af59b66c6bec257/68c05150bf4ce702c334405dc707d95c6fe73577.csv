is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,35,"ocument parse(String input, String baseUri, boolean trackErrors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,35,"Document parse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,37,"eturn super.parse(input, baseUri, trackErrors);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,37,"return super.parse(input, baseUri, errors);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,40,"ist<Node> parseFragment(String inputFragment, Element context, String baseUri, boolean trackErrors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,40,"List<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,42,"nitialiseParse(inputFragment, baseUri, trackErrors);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,42,"initialiseParse(inputFragment, baseUri, errors);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,140,f (trackErrors)
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,140,if (errors.canAddError())
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,1,package org.jsoup.parser;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,3,import java.util.ArrayList;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,6,* A container for ParseErrors.
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,8,* @author Jonathan Hedley
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,10,class ParseErrorList extends ArrayList<ParseError>{
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,11,private static final int INITIAL_CAPACITY = 16;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,12,private final int maxSize;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,14,"ParseErrorList(int initialCapacity, int maxSize) {"
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,15,super(initialCapacity);
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,16,this.maxSize = maxSize;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,19,boolean canAddError() {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,20,return size() < maxSize;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,23,int getMaxSize() {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,24,return maxSize;
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,27,static ParseErrorList noTracking() {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,28,"return new ParseErrorList(0, 0);"
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,31,static ParseErrorList tracking(int maxSize) {
True,src/main/java/org/jsoup/parser/ParseErrorList.java,src/main/java/org/jsoup/parser/ParseErrorList.java,32,"return new ParseErrorList(INITIAL_CAPACITY, maxSize);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,14,"private static final int DEFAULT_MAX_ERRORS = 0; // by default, error tracking is disabled."
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,15,rivate boolean trackErrors = false;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,16,rivate List<ParseError> errors;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,17,private int maxErrors = DEFAULT_MAX_ERRORS;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,18,private ParseErrorList errors;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,27,"ocument doc = treeBuilder.parse(html, baseUri, trackErrors);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,28,rrors = treeBuilder.getErrors();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,29,errors = isTrackErrors() ? ParseErrorList.tracking(maxErrors) : ParseErrorList.noTracking();
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,"Document doc = treeBuilder.parse(html, baseUri, errors);"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,56,eturn trackErrors;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,58,return maxErrors > 0;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,60, Enable or disable parse error tracking for the next parse/
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,61, @param trackErrors on/off
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,62,* Enable or disable parse error tracking for the next parse.
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,63,* @param maxErrors the maximum number of errors to track. Set to 0 to disable.
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,64,ublic Parser setTrackErrors(boolean trackErrors) {
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,65,his.trackErrors = trackErrors;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,66,public Parser setTrackErrors(int maxErrors) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,67,this.maxErrors = maxErrors;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,71," @return list of parse errors, if error tracking was enabled and errors occurred. If not enabled, returns null."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,73,"* @return list of parse errors, up to the size of the maximum errors tracked."
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,88,"eturn treeBuilder.parse(html, baseUri, false);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,90,"return treeBuilder.parse(html, baseUri, ParseErrorList.noTracking());"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,103,"eturn treeBuilder.parseFragment(fragmentHtml, context, baseUri, false);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,105,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking());"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,rivate boolean trackErrors;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,17,rivate List<ParseError> errors; // errors found while tokenising
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,private ParseErrorList errors; // errors found while tokenising
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,31,"okeniser(CharacterReader reader, List<ParseError> errors) {"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,30,"Tokeniser(CharacterReader reader, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,34,his.trackErrors = errors != null;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,205,f (trackErrors)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,203,if (errors.canAddError())
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,210,f (trackErrors)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,208,if (errors.canAddError())
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,215,f (trackErrors)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,213,if (errors.canAddError())
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,220,f (trackErrors)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,218,if (errors.canAddError())
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,21,rotected boolean trackErrors = false;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,rotected List<ParseError> errors; // null when not tracking errors
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,21,protected ParseErrorList errors; // null when not tracking errors
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,24,"rotected void initialiseParse(String input, String baseUri, boolean trackErrors) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,23,"protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,30,his.trackErrors = trackErrors;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,31,rrors = trackErrors ? new ArrayList<ParseError>() : null;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,29,this.errors = errors;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,"eturn parse(input, baseUri, false);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,36,"return parse(input, baseUri, ParseErrorList.noTracking());"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,41,"ocument parse(String input, String baseUri, boolean trackErrors) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,42,"nitialiseParse(input, baseUri, trackErrors);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,39,"Document parse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,40,"initialiseParse(input, baseUri, errors);"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,47,ist<ParseError> getErrors() {
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,48,eturn errors;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,13,"rotected void initialiseParse(String input, String baseUri, boolean trackErrors) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,14,"uper.initialiseParse(input, baseUri, trackErrors);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,13,"protected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,14,"super.initialiseParse(input, baseUri, errors);"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,637,arser parser = Parser.htmlParser().setTrackErrors(true);
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,638,"ocument doc = parser.parseInput(html, ""http://example.com"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,637,Parser parser = Parser.htmlParser().setTrackErrors(500);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,638,"Document doc = Jsoup.parse(html, ""http://example.com"", parser);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,649,@Test public void tracksLimitedErrorsWhenRequested() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,650,"String html = ""<p>One</p href='no'><!DOCTYPE html>&arrgh;<font /><br /><foo"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,651,Parser parser = Parser.htmlParser().setTrackErrors(3);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,652,"Document doc = parser.parseInput(html, ""http://example.com"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,654,List<ParseError> errors = parser.getErrors();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,655,"assertEquals(3, errors.size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,656,"assertEquals(""20: Attributes incorrectly present on end tag"", errors.get(0).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,657,"assertEquals(""35: Unexpected token [Doctype] when in state [InBody]"", errors.get(1).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,658,"assertEquals(""36: Invalid character reference: invalid named referenece 'arrgh'"", errors.get(2).toString());"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,652,"ocument doc = parser.parseInput(html, ""http://example.com"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,664,"Document doc = Jsoup.parse(html, ""http://example.com"", parser);"
False,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,655,ssertNull(errors);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,667,"assertEquals(0, errors.size());"
