is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,367,"* Find the first Element that matches the {@link Selector} CSS query, with this element as the starting context."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,368,"* <p>This is effectively the same as calling {@code element.select(query).first()}, but is more efficient as query"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,369,* execution stops on the first hit.</p>
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,370,* @param cssQuery cssQuery a {@link Selector} CSS-like query
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,371,"* @return the first matching element, or <b>{@code null}</b> if there is no match."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,373,public Element selectFirst(String cssQuery) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,374,"return Selector.selectFirst(cssQuery, this);"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,6,import static org.jsoup.select.NodeFilter.FilterResult.CONTINUE;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,7,import static org.jsoup.select.NodeFilter.FilterResult.STOP;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,55,"public static Element findFirst(Evaluator eval, Element root) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,56,"FirstFinder finder = new FirstFinder(root, eval);"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,57,"NodeTraversor.filter(finder, root);"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,58,return finder.match;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,61,private static class FirstFinder implements NodeFilter {
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,62,private final Element root;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,63,private Element match = null;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,64,private final Evaluator eval;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,66,"FirstFinder(Element root, Evaluator eval) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,67,this.root = root;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,68,this.eval = eval;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,71,@Override
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,72,"public FilterResult head(Node node, int depth) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,73,if (node instanceof Element) {
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,74,Element el = (Element) node;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,75,"if (eval.matches(root, el)) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,76,match = el;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,77,return STOP;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,80,return CONTINUE;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,83,@Override
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,84,"public FilterResult tail(Node node, int depth) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,85,return CONTINUE;
False,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,103,"eturn String.format("":or%s"", evaluators);"
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,103,"return StringUtil.join(evaluators, "", "");"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,77,rivate final Evaluator evaluator;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,78,rivate final Element root;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,80,"rivate Selector(String query, Element root) {"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,81,alidate.notNull(query);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,82,uery = query.trim();
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,83,alidate.notEmpty(query);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,84,alidate.notNull(root);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,86,his.evaluator = QueryParser.parse(query);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,88,his.root = root;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,91,"rivate Selector(Evaluator evaluator, Element root) {"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,92,alidate.notNull(evaluator);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,93,alidate.notNull(root);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,95,his.evaluator = evaluator;
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,96,his.root = root;
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,77,// not instantiable
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,78,private Selector() {}
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,108,"eturn new Selector(query, root).select();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,89,Validate.notEmpty(query);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,90,"return select(QueryParser.parse(query), root);"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,119,"eturn new Selector(evaluator, root).select();"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,101,Validate.notNull(evaluator);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,102,Validate.notNull(root);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,103,"return Collector.collect(evaluator, root);"
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,149,rivate Elements select() {
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,150,"eturn Collector.collect(evaluator, root);"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,151,* Find the first element that matches the query.
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,152,* @param cssQuery CSS selector
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,153,* @param root root element to descend into
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,154,"* @return the matching element, or <b>null</b> if none."
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,156,"public static Element selectFirst(String cssQuery, Element root) {"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,157,Validate.notEmpty(cssQuery);
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,158,"return Collector.findFirst(QueryParser.parse(cssQuery), root);"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,752,@Test public void selectFirst() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,753,"String html = ""<p>One<p>Two<p>Three"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,754,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,755,"assertEquals(""One"", doc.selectFirst(""p"").text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,758,@Test public void selectFirstWithAnd() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,759,"String html = ""<p>One<p class=foo>Two<p>Three"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,760,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,761,"assertEquals(""Two"", doc.selectFirst(""p.foo"").text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,764,@Test public void selectFirstWithOr() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,765,"String html = ""<p>One<p>Two<p>Three<div>Four"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,766,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,767,"assertEquals(""One"", doc.selectFirst(""p, div"").text());"
