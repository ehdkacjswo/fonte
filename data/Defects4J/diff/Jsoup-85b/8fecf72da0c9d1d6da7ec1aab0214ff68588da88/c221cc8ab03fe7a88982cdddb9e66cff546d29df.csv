is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,288,"eturn (end >= 0) ? queue.substring(start, end) : """";"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,288,"final String out = (end >= 0) ? queue.substring(start, end) : """";"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,289,if (depth > 0) {// ran out of queue before seeing enough )
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,290,"Validate.fail(""Did not find balanced maker at "" + out);"
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,292,return out;
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,38,ueryParser p = new QueryParser(query);
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,39,eturn p.parse();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,38,try {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,39,QueryParser p = new QueryParser(query);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,40,return p.parse();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,41,} catch (IllegalArgumentException e) {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,42,throw new Selector.SelectorParseException(e.getMessage());
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,167,"lement p = doc.select(""p:contains(Volt will be sold in the United States"").first();"
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,167,"Element p = doc.select(""p:contains(Volt will be sold in the United States)"").first();"
False,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,34,"okenQueue tq = new TokenQueue(""unbalanced(something(or another"");"
True,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,34,"TokenQueue tq = new TokenQueue(""unbalanced(something(or another)) else"");"
False,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,37,"ssertEquals(""something(or another"", match);"
True,src/test/java/org/jsoup/parser/TokenQueueTest.java,src/test/java/org/jsoup/parser/TokenQueueTest.java,37,"assertEquals(""something(or another)"", match);"
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,43,Test public void exceptionOnUncloseAttribute() {
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,44,oolean threw = false;
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,45,"ry {Evaluator parse = QueryParser.parse(""section > a[href=\"""");}"
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,46,atch (IllegalArgumentException e) {
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,47,hrew = true;
False,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,49,ssertTrue(threw);
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,43,@Test(expected = Selector.SelectorParseException.class) public void exceptionOnUncloseAttribute() {
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,44,"Evaluator parse = QueryParser.parse(""section > a[href=\""]"");"
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,47,@Test(expected = Selector.SelectorParseException.class)  public void testParsesSingleQuoteInContains() {
True,src/test/java/org/jsoup/select/QueryParserTest.java,src/test/java/org/jsoup/select/QueryParserTest.java,48,"Evaluator parse = QueryParser.parse(""p:contains(One \"" One)"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,333,"ssertEquals(0, doc.select(""DiV[TiTLE=BARBARELLA"").size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,333,"assertEquals(0, doc.select(""DiV[TiTLE=BARBARELLA]"").size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,475,"lements divs2 = doc.select(""div:has([class]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,475,"Elements divs2 = doc.select(""div:has([class])"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,690,"ssertEquals(""One"", doc.select(""div[data='End]'"").first().text());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,691,"ssertEquals(""Two"", doc.select(""div[data='[Another)]]'"").first().text());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,692,"ssertEquals(""One"", doc.select(""div[data=\""End]\"""").first().text());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,693,"ssertEquals(""Two"", doc.select(""div[data=\""[Another)]]\"""").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,690,"assertEquals(""One"", doc.select(""div[data='End]']"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,691,"assertEquals(""Two"", doc.select(""div[data='[Another)]]']"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,692,"assertEquals(""One"", doc.select(""div[data=\""End]\""]"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,693,"assertEquals(""Two"", doc.select(""div[data=\""[Another)]]\""]"").first().text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,718,@Test public void containsWithQuote() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,719,"String html = ""<p>One'One</p><p>One'Two</p>"";"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,720,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,721,"Elements els = doc.select(""p:contains(One\\'One)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,722,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,723,"assertEquals(""One'One"", els.text());"
