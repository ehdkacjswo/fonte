is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,5,import org.jsoup.nodes.Comment;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,8,import org.jsoup.nodes.Node;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,130,f (foundCharset == null && doc.childNodeSize() > 0 && doc.childNode(0) instanceof XmlDeclaration) {
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,131,mlDeclaration prolog = (XmlDeclaration) doc.childNode(0);
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,132,"f (prolog.name().equals(""xml""))"
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,133,"oundCharset = prolog.attr(""encoding"");"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,132,if (foundCharset == null && doc.childNodeSize() > 0) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,133,Node first = doc.childNode(0);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,134,XmlDeclaration decl = null;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,135,if (first instanceof XmlDeclaration)
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,136,decl = (XmlDeclaration) first;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,137,else if (first instanceof Comment) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,138,Comment comment = (Comment) first;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,139,if (comment.isXmlDeclaration())
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,140,decl = comment.asXmlDeclaration();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,142,if (decl != null) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,143,"if (decl.name().equalsIgnoreCase(""xml""))"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,144,"foundCharset = decl.attr(""encoding"");"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,3,import org.jsoup.Jsoup;
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,4,import org.jsoup.parser.Parser;
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,62,* Check if this comment looks like an XML Declaration.
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,63,"* @return true if it looks like, maybe, it's an XML Declaration."
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,65,public boolean isXmlDeclaration() {
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,66,String data = getData();
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,67,"return (data.length() > 1 && (data.startsWith(""!"") || data.startsWith(""?"")));"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,71,* Attempt to cast this comment to an XML Declaration note.
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,72,"* @return an XML declaration if it could be parsed as one, null otherwise."
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,74,public XmlDeclaration asXmlDeclaration() {
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,75,String data = getData();
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,76,"Document doc = Jsoup.parse(""<"" + data.substring(1, data.length() -1) + "">"", baseUri(), Parser.xmlParser());"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,77,XmlDeclaration decl = null;
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,78,if (doc.childNodeSize() > 0) {
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,79,Element el = doc.child(0);
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,80,"decl = new XmlDeclaration(doc.getParser().settings().normalizeTag(el.tagName()), data.startsWith(""!""));"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,81,decl.attributes().addAll(el.attributes());
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,83,return decl;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,3,mport org.jsoup.Jsoup;
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,93,"f (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,92,if (commentToken.bogus && comment.isXmlDeclaration()) {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,93,"// xml declarations are emitted as bogus comments (which is right for html, but not xml)"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,95,tring data = comment.getData();
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,96,"f (data.length() > 1 && (data.startsWith(""!"") || data.startsWith(""?""))) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,97,"ocument doc = Jsoup.parse(""<"" + data.substring(1, data.length() -1) + "">"", baseUri, Parser.xmlParser());"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,98,f (doc.childNodeSize() > 0) {
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,99,lement el = doc.child(0);
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,100,"nsert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(""!""));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,101,nsert.attributes().addAll(el.attributes());
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,102," // else, we couldn't parse it as a decl, so leave as a comment"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,95,"XmlDeclaration decl = comment.asXmlDeclaration(); // else, we couldn't parse it as a decl, so leave as a comment"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,96,if (decl != null)
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,97,insert = decl;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,168,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,169,public void supportsXmlCharsetDeclaration() throws IOException {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,170,"String encoding = ""iso-8859-1"";"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,171,InputStream soup = new ByteArrayInputStream((
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,172,"""<?xml version=\""1.0\"" encoding=\""iso-8859-1\""?>"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,173,"""<!DOCTYPE html PUBLIC \""-//W3C//DTD XHTML 1.0 Strict//EN\"" \""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"">"" +"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,174,"""<html xmlns=\""http://www.w3.org/1999/xhtml\"" lang=\""en\"" xml:lang=\""en\"">Hellö Wörld!</html>"""
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,175,).getBytes(encoding));
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,177,"Document doc = Jsoup.parse(soup, null, """");"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,178,"assertEquals(""Hellö Wörld!"", doc.body().text());"
