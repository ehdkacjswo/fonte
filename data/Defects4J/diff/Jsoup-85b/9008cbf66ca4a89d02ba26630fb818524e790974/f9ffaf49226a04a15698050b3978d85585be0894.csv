is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/select/ng/AndSelector.java,src/main/java/org/jsoup/select/ng/AndSelector.java,19,public AndSelector() {
True,src/main/java/org/jsoup/select/ng/AndSelector.java,src/main/java/org/jsoup/select/ng/AndSelector.java,20,super();
True,src/main/java/org/jsoup/select/ng/AndSelector.java,src/main/java/org/jsoup/select/ng/AndSelector.java,21,this.selectors = new ArrayList<Evaluator>();
True,src/main/java/org/jsoup/select/ng/AndSelector.java,src/main/java/org/jsoup/select/ng/AndSelector.java,35,public void addAll(Collection<Evaluator> e) {
True,src/main/java/org/jsoup/select/ng/AndSelector.java,src/main/java/org/jsoup/select/ng/AndSelector.java,36,selectors.addAll(e);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,1,package org.jsoup.select.ng.parser;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,3,import java.util.ArrayDeque;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,4,import java.util.ArrayList;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,5,import java.util.Deque;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,6,import java.util.List;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,7,import java.util.regex.Pattern;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,9,import org.jsoup.helper.StringUtil;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,10,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,11,import org.jsoup.nodes.Evaluator;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,12,import org.jsoup.parser.TokenQueue;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,13,import org.jsoup.select.ng.AndSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,14,import org.jsoup.select.ng.BasicSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,15,import org.jsoup.select.ng.ElementContainerSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,16,import org.jsoup.select.ng.ParentSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,18,public class Parser {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,19,TokenQueue tq;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,20,"private final static String[] combinators = {"","", "">"", ""+"", ""~"", "" ""};"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,21,String query;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,22,Deque<Evaluator> s = new ArrayDeque<Evaluator>();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,26,public Parser(String query) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,27,this.query = query;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,28,this.tq = new TokenQueue(query);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,31,public static Evaluator select(String query) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,32,Parser p = new Parser(query);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,33,return p.select();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,36,public Evaluator select() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,37,tq.consumeWhitespace();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,39,"if (tq.matchesAny(combinators)) { // if starts with a combinator, use root as elements"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,40,//elements.add(root);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,41,combinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,42,"} else if (tq.matches("":has("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,43,//elements.addAll(root.getAllElements());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,44,} else {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,45,//addElements(findElements()); // chomp first element matcher off queue
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,46,findElements();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,49,while (!tq.isEmpty()) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,50,// hierarchy and extras
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,51,boolean seenWhite = tq.consumeWhitespace();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,53,"if (tq.matchChomp("","")) { // group or"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,55,while (!tq.isEmpty()) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,56,"String subQuery = tq.chompTo("","");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,60,"//elements.addAll(select(subQuery, root));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,61,//select(subQuery);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,63,} else if (tq.matchesAny(combinators)) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,64,combinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,65,} else if (seenWhite) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,66,"combinator("" "");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,67,"} else { // E.class, E#id, E[attr] etc. AND"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,68,"findElements(); // take next el, #. etc off queue"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,72,if(s.size() == 1)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,73,return s.getFirst();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,75,return new AndSelector(s);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,78,private void combinator(String combinator) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,79,tq.consumeWhitespace();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,80,String subQuery = tq.consumeToAny(combinators); // support multi > childs
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,84,"if (combinator.equals("">"")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,85,"//output = filterForChildren(elements, select(subQuery, elements));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,86,"} else if (combinator.equals("" "")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,87,AndSelector a = new AndSelector();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,88,a.add(select(subQuery));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,89,a.add(new ParentSelector(new AndSelector(s)));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,90,s.clear();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,91,s.push(a);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,94,"//output = filterForDescendants(elements, select(subQuery, elements));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,95,"} else if (combinator.equals(""+"")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,96,"//output = filterForAdjacentSiblings(elements, select(subQuery, root));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,97,"} else if (combinator.equals(""~"")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,98,"//output = filterForGeneralSiblings(elements, select(subQuery, root));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,99,} else
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,100,"throw new IllegalStateException(""Unknown combinator: "" + combinator);"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,105,private void findElements() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,106,"if (tq.matchChomp(""#"")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,107,byId();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,108,"} else if (tq.matchChomp(""."")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,109,byClass();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,110,} else if (tq.matchesWord()) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,111,byTag();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,112,"} else if (tq.matches(""["")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,113,byAttribute();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,114,"} else if (tq.matchChomp(""*"")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,115,allElements();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,116,"} else if (tq.matchChomp("":lt("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,117,indexLessThan();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,118,"} else if (tq.matchChomp("":gt("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,119,indexGreaterThan();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,120,"} else if (tq.matchChomp("":eq("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,121,indexEquals();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,122,"} else if (tq.matches("":has("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,123,has();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,124,"} else if (tq.matches("":contains("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,125,contains(false);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,126,"} else if (tq.matches("":containsOwn("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,127,contains(true);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,128,"} else if (tq.matches("":matches("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,129,matches(false);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,130,"} else if (tq.matches("":matchesOwn("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,131,matches(true);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,132,"} else if (tq.matches("":not("")) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,133,not();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,134,} else { // unhandled
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,135,"throw new SelectorParseException(""Could not parse query '%s': unexpected token at '%s'"", query, tq.remainder());"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,140,private void byId() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,141,String id = tq.consumeCssIdentifier();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,142,Validate.notEmpty(id);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,143,ecPush(new Evaluator.Id(id));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,146,private void byClass() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,147,String className = tq.consumeCssIdentifier();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,148,Validate.notEmpty(className);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,149,ecPush(new Evaluator.Class(className));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,152,private void byTag() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,153,String tagName = tq.consumeElementSelector();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,154,Validate.notEmpty(tagName);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,156,"// namespaces: if element name is ""abc:def"", selector must be ""abc|def"", so flip:"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,157,"if (tagName.contains(""|""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,158,"tagName = tagName.replace(""|"", "":"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,160,ecPush(new Evaluator.Tag(tagName));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,163,private void byAttribute() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,164,"TokenQueue cq = new TokenQueue(tq.chompBalanced('[', ']')); // content queue"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,165,"String key = cq.consumeToAny(""="", ""!="", ""^="", ""$="", ""*="", ""~=""); // eq, not, start, end, contain, match, (no val)"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,166,Validate.notEmpty(key);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,167,cq.consumeWhitespace();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,169,if (cq.isEmpty()) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,170,"if(key.startsWith(""^""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,171,ecPush(new Evaluator.AttributeStarting(key.substring(1)));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,172,else
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,173,ecPush(new Evaluator.Attribute(key));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,174,} else {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,175,String value = cq.remainder();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,176,"if (cq.matchChomp(""=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,177,"ecPush(new Evaluator.AttributeWithValue(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,179,"else if (cq.matchChomp(""!=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,180,"ecPush(new Evaluator.AttributeWithValueNot(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,182,"else if (cq.matchChomp(""^=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,183,"ecPush(new Evaluator.AttributeWithValueStarting(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,185,"else if (cq.matchChomp(""$=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,186,"ecPush(new Evaluator.AttributeWithValueEnding(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,188,"else if (cq.matchChomp(""*=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,189,"ecPush(new Evaluator.AttributeWithValueContaining(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,191,"else if (cq.matchChomp(""~=""))"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,192,"ecPush(new Evaluator.AttributeWithValueMatching(key, Pattern.compile(value)));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,194,else
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,195,"throw new SelectorParseException(""Could not parse attribute query '%s': unexpected token at '%s'"", query, cq.remainder());"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,199,private void allElements() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,200,//return root.getAllElements();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,201,// TODO: add all parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,204,"// pseudo selectors :lt, :gt, :eq"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,205,private void indexLessThan() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,207,ecPush(new Evaluator.IndexLessThan(consumeIndex()));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,210,private void indexGreaterThan() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,211,ecPush(new Evaluator.IndexGreaterThan(consumeIndex()));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,214,private void indexEquals() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,215,ecPush(new Evaluator.IndexEquals(consumeIndex()));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,218,private int consumeIndex() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,219,"String indexS = tq.chompTo("")"").trim();"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,220,"Validate.isTrue(StringUtil.isNumeric(indexS), ""Index must be numeric"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,221,return Integer.parseInt(indexS);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,224,// pseudo selector :has(el)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,225,private void has() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,226,"tq.consume("":has"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,227,"String subQuery = tq.chompBalanced('(',')');"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,228,"Validate.notEmpty(subQuery, "":has(el) subselect must not be empty"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,229,// TODO: add has parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,232,"// pseudo selector :contains(text), containsOwn(text)"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,233,private void contains(boolean own) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,234,"tq.consume(own ? "":containsOwn"" : "":contains"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,235,"String searchText = TokenQueue.unescape(tq.chompBalanced('(',')'));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,236,"Validate.notEmpty(searchText, "":contains(text) query must not be empty"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,238,// TODO: add :contains parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,241,"// :matches(regex), matchesOwn(regex)"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,242,private void matches(boolean own) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,243,"tq.consume(own? "":matchesOwn"" : "":matches"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,244,"String regex = tq.chompBalanced('(', ')'); // don't unescape, as regex bits will be escaped"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,245,"Validate.notEmpty(regex, "":matches(regex) query must not be empty"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,247,// TODO: add :matches parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,251,// :not(selector)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,252,private void not() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,253,"tq.consume("":not"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,254,"String subQuery = tq.chompBalanced('(', ')');"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,255,"Validate.notEmpty(subQuery, "":not(selector) subselect must not be empty"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,257,// TODO: add :not parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,261,public static class SelectorParseException extends IllegalStateException {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,262,"public SelectorParseException(String msg, Object... params) {"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,263,"super(String.format(msg, params));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,267,void ecPush(Evaluator e) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,268,Evaluator p = s.peek();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,270,if(p == null || !(p instanceof ElementContainerSelector)) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,271,s.push(new ElementContainerSelector().add(e));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,272,return;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,275,ElementContainerSelector ec = (ElementContainerSelector) p;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,276,ec.add(e);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,280,public static void main(String[] args) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,281,"Evaluator e = select(""div p href"");"
