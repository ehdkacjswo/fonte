is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,141,"rrors.add(new ParseError(""Unexpected token"", state, currentToken, reader.pos()));"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,141,"errors.add(new ParseError(reader.pos(), ""Unexpected token [%s] when in state [%s]"", currentToken.tokenType(), state));"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,6,"/ todo: currently not ready for public consumption. revisit api, and exposure methods"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,8,rivate String errorMsg;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,10,rivate char c;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,11,rivate TokeniserState tokeniserState;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,12,rivate HtmlTreeBuilderState treeBuilderState;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,13,rivate Token token;
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,8,private String errorMsg;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,15,"arseError(String errorMsg, char c, TokeniserState tokeniserState, int pos) {"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,16,his.errorMsg = errorMsg;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,17,his.c = c;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,18,his.tokeniserState = tokeniserState;
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,10,"ParseError(int pos, String errorMsg) {"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,22,"arseError(String errorMsg, TokeniserState tokeniserState, int pos) {"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,24,his.tokeniserState = tokeniserState;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,25,his.pos = pos;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,28,"arseError(String errorMsg, int pos) {"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,29,his.errorMsg = errorMsg;
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,15,"ParseError(int pos, String errorFormat, Object... args) {"
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,16,"this.errorMsg = String.format(errorFormat, args);"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,33,"arseError(String errorMsg, HtmlTreeBuilderState treeBuilderState, Token token, int pos) {"
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,34,his.errorMsg = errorMsg;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,35,his.treeBuilderState = treeBuilderState;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,36,his.token = token;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,37,his.pos = pos;
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,40,tring getErrorMsg() {
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,20,public String getErrorMessage() {
False,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,44,nt getPos() {
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,24,public int getPosition() {
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,28,@Override
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,29,public String toString() {
True,src/main/java/org/jsoup/parser/ParseError.java,src/main/java/org/jsoup/parser/ParseError.java,30,"return pos + "": "" + errorMsg;"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,44,"* @return this, for chaining"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,45,ublic void setTreeBuilder(TreeBuilder treeBuilder) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,46,public Parser setTreeBuilder(TreeBuilder treeBuilder) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,48,return this;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,62,"* @return this, for chaining"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,61,ublic void setTrackErrors(boolean trackErrors) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,64,public Parser setTrackErrors(boolean trackErrors) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,66,return this;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,67," @return list of parse errors, if error tracking was enabled and errors occurred."
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,71,"* @return list of parse errors, if error tracking was enabled and errors occurred. If not enabled, returns null."
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,16,String tokenType() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,17,return this.getClass().getSimpleName();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,rivate boolean trackErrors = true;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,17,rivate List<ParseError> errors = new ArrayList<ParseError>(); // errors found while tokenising
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,16,private boolean trackErrors;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,17,private List<ParseError> errors; // errors found while tokenising
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,31,okeniser(CharacterReader reader) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,31,"Tokeniser(CharacterReader reader, List<ParseError> errors) {"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,33,this.errors = errors;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,34,this.trackErrors = errors != null;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,113,haracterReferenceError();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,115,"characterReferenceError(""numeric reference with no numerals"");"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,118,haracterReferenceError(); // missing semi
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,120,"characterReferenceError(""missing semicolon""); // missing semi"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,126,haracterReferenceError();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,128,"characterReferenceError(""character outside of valid range"");"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,138,String origNameRef = new String(nameRef); // for error reporting. nameRef gets chomped looking for matches
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,148,haracterReferenceError();
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,151,"characterReferenceError(String.format(""invalid named referenece '%s'"", origNameRef));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,158,haracterReferenceError(); // missing semi
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,161,"characterReferenceError(""missing semicolon""); // missing semi"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,201,oolean isTrackErrors() {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,202,eturn trackErrors;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,205,oid setTrackErrors(boolean trackErrors) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,206,his.trackErrors = trackErrors;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,211,"rrors.add(new ParseError(""Unexpected character in input"", reader.current(), state, reader.pos()));"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,206,"errors.add(new ParseError(reader.pos(), ""Unexpected character '%s' in input state [%s]"", reader.current(), state));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,216,"rrors.add(new ParseError(""Unexpectedly reached end of file (EOF)"", state, reader.pos()));"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,211,"errors.add(new ParseError(reader.pos(), ""Unexpectedly reached end of file (EOF) in input state [%s]"", state));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,219,rivate void characterReferenceError() {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,214,private void characterReferenceError(String message) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,"rrors.add(new ParseError(""Invalid character reference"", reader.pos()));"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,216,"errors.add(new ParseError(reader.pos(), ""Invalid character reference: %s"", message));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,226,"rrors.add(new ParseError(errorMsg, reader.pos()));"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,"errors.add(new ParseError(reader.pos(), errorMsg));"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,rotected List<ParseError> errors;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,protected List<ParseError> errors; // null when not tracking errors
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,30,okeniser = new Tokeniser(reader);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,30,this.trackErrors = trackErrors;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,31,errors = trackErrors ? new ArrayList<ParseError>() : null;
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,32,"tokeniser = new Tokeniser(reader, errors);"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,33,rrors = new ArrayList<ParseError>();
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,34,his.trackErrors = trackErrors;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,15,import static org.junit.Assert.assertNull;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,635,@Test public void tracksErrorsWhenRequested() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,636,"String html = ""<p>One</p href='no'><!DOCTYPE html>&arrgh;<font /><br /><foo"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,637,Parser parser = Parser.htmlParser().setTrackErrors(true);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,638,"Document doc = parser.parseInput(html, ""http://example.com"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,640,List<ParseError> errors = parser.getErrors();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,641,"assertEquals(5, errors.size());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,642,"assertEquals(""20: Attributes incorrectly present on end tag"", errors.get(0).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,643,"assertEquals(""35: Unexpected token [Doctype] when in state [InBody]"", errors.get(1).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,644,"assertEquals(""36: Invalid character reference: invalid named referenece 'arrgh'"", errors.get(2).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,645,"assertEquals(""50: Self closing flag not acknowledged"", errors.get(3).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,646,"assertEquals(""61: Unexpectedly reached end of file (EOF) in input state [TagName]"", errors.get(4).toString());"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,649,@Test public void noErrorsByDefault() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,650,"String html = ""<p>One</p href='no'>&arrgh;<font /><br /><foo"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,651,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,652,"Document doc = parser.parseInput(html, ""http://example.com"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,654,List<ParseError> errors = parser.getErrors();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,655,assertNull(errors);
