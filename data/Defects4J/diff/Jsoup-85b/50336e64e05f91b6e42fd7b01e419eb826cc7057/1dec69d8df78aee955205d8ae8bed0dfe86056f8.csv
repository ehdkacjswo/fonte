is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,9,import java.net.Proxy;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,64,* Set the proxy to use for this request. Set to <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,65,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,66,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,68,Connection proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,71,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,72,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,73,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,75,"Connection proxy(String host, int port);"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,427,* Get the proxy used for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,428,* @return the proxy; <code>null</code> if not enabled.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,430,Proxy proxy();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,433,* Update the proxy for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,434,* @param proxy the proxy ot use; <code>null</code> to disable.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,435,"* @return this Request, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,437,Request proxy(Proxy proxy);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,440,* Set the HTTP proxy to use for this request.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,441,* @param proxy proxy to use
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,442,"* @return this Connection, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,444,"Request proxy(String host, int port);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,3,mport org.jsoup.Connection;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,4,mport org.jsoup.HttpStatusException;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,5,mport org.jsoup.UnsupportedMimeTypeException;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,3,import org.jsoup.*;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,12,mport java.net.HttpURLConnection;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,13,mport java.net.MalformedURLException;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,14,mport java.net.URL;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,15,mport java.net.URLEncoder;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,10,import java.net.*;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,30,"private static final int HTTP_TEMP_REDIR = 307; // http/1.1 temporary redirect, not in Java's set."
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,79,public Connection proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,80,req.proxy(proxy);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,81,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,84,"public Connection proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,85,"req.proxy(host, port);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,86,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,359,private Proxy proxy; // nullable
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,381,public Proxy proxy() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,382,return proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,385,public Request proxy(Proxy proxy) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,386,this.proxy = proxy;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,387,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,390,"public Request proxy(String host, int port) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,391,"this.proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(host, port));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,392,return this;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,523,eq.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,524,eq.data().clear();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,544,if (status != HTTP_TEMP_REDIR) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,545,req.method(Method.GET); // always redirect with a get. any data param from original req are dropped.
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,546,req.data().clear();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,560,nputStream dataStream = null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,562,ataStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,563,"odyStream = res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,564,ew BufferedInputStream(new GZIPInputStream(dataStream)) :
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,565,ew BufferedInputStream(dataStream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,584,bodyStream = conn.getErrorStream() != null ? conn.getErrorStream() : conn.getInputStream();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,585,"if (res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip""))"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,586,bodyStream = new GZIPInputStream(bodyStream);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,570,f (dataStream != null) dataStream.close();
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,628,ttpURLConnection conn = (HttpURLConnection) req.url().openConnection();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,648,final HttpURLConnection conn = (HttpURLConnection) (
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,649,req.proxy() == null ?
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,650,req.url().openConnection() :
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,651,req.url().openConnection(req.proxy())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,361,Validate.notNull(text);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,374,Validate.notNull(text);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,440,ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,443,nsureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,445,reindexChildren(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,446,eindexChildren(index);
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,128,final char[] val = input;
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,131,f (input[pos] == c)
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,132,if (val[pos] == c)
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,369,"f (rangeEquals(start, count, cached)) {"
False,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,370,/ hit
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,370,"if (rangeEquals(start, count, cached)) { // hit"
True,src/main/java/org/jsoup/parser/CharacterReader.java,src/main/java/org/jsoup/parser/CharacterReader.java,374,"cache[index] = cached; // update the cache, as recently used strings are more likely to show up again"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,73,"private String pendingAttributeValueS; // try to get attr vals in one shot, vs Builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,84,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,97,"ttribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,99,"attribute = new Attribute(pendingAttributeName,"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,100,pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,111,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,156,endingAttributeValue.append(append);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,160,if (pendingAttributeValue.length() == 0) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,161,pendingAttributeValueS = append;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,162,} else {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,163,pendingAttributeValue.append(append);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,183,"// if on second hit, we'll need to move to the builder"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,184,if (pendingAttributeValueS != null) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,185,pendingAttributeValue.append(pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,186,pendingAttributeValueS = null;
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,783,tring value = r.consumeToAnySorted(attributeDoubleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,783,String value = r.consumeToAny(attributeDoubleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,815,tring value = r.consumeToAnySorted(attributeSingleValueCharsSorted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,815,String value = r.consumeToAny(attributeSingleValueCharsSorted);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,847,"tring value = r.consumeToAny('\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`');"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,847,String value = r.consumeToAnySorted(attributeValueUnquoted);
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1660,"private static final char[] attributeValueUnquoted = new char[]{'\t', '\n', '\r', '\f', ' ', '&', '>', nullChar, '""', '\'', '<', '=', '`'};"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1670,Arrays.sort(attributeValueUnquoted);
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,283,"f (value.startsWith(""\"""") && value.endsWith(""\"""")) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,283,"if (value.startsWith(""\"""") && value.endsWith(""\"""")"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,284,"|| value.startsWith(""'"") && value.endsWith(""'"")) {"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,20,mport java.net.MalformedURLException;
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,21,mport java.net.URL;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,20,import java.net.*;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,564,"Proxy tests. Assumes local proxy running on 8888, without system propery set (so that specifying it is required)."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,567,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,568,public void fetchViaHttpProxy() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,569,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,570,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8888));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,571,Document doc = Jsoup.connect(url).proxy(proxy).get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,572,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,575,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,576,public void fetchViaHttpProxySetByArgument() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,577,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,578,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8888).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,579,"assertTrue(doc.title().contains(""jsoup""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,582,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,583,public void invalidProxyFails() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,584,boolean caught = false;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,585,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,586,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,587,"Document doc = Jsoup.connect(url).proxy(""localhost"", 8889).get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,588,} catch (IOException e) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,589,caught = e instanceof ConnectException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,591,assertTrue(caught);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,594,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,595,public void proxyGetAndSet() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,596,"String url = ""http://jsoup.org"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,597,"Proxy proxy = new Proxy(Proxy.Type.HTTP, InetSocketAddress.createUnresolved(""localhost"", 8889)); // invalid"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,598,final Connection con = Jsoup.connect(url).proxy(proxy);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,600,assert con.request().proxy() == proxy;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,601,con.request().proxy(null); // disable
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,602,Document doc = con.get();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,603,"assertTrue(doc.title().contains(""jsoup"")); // would fail if actually went via proxy"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,5,mport org.jsoup.helper.StringUtil;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,10,mport static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,9,import java.util.*;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,12,mport java.util.ArrayList;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,13,mport java.util.LinkedHashSet;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,14,mport java.util.List;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,15,mport java.util.Set;
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,16,mport java.util.Map;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,11,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,378,@Test(expected = IllegalArgumentException.class) public void testThrowsOnAddNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,379,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,380,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,381,div.appendText(null);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,384,@Test(expected = IllegalArgumentException.class)  public void testThrowsOnPrependNullText() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,385,"Document doc = Jsoup.parse(""<div id=1><p>Hello</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,386,"Element div = doc.getElementById(""1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,387,div.prependText(null);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,861,@Test
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,862,public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,863,"Document doc = new Document("""");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,864,"Element body = doc.appendElement(""body"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,865,"body.appendElement(""div1"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,866,"body.appendElement(""div2"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,867,"final Element div3 = body.appendElement(""div3"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,868,"div3.text(""Check"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,869,"final Element div4 = body.appendElement(""div4"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,871,ArrayList<Element> toMove = new ArrayList<Element>();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,872,toMove.add(div3);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,873,toMove.add(div4);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,875,"body.insertChildren(0, toMove);"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,877,"String result = doc.toString().replaceAll(""\\s+"", """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,878,"assertEquals(""<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>"", result);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,880,@Test public void testUsingSingleQuotesInQueries() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,881,"String body = ""<body> <div class='main'>hello</div></body>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,882,Document doc = Jsoup.parse(body);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,883,"Elements main = doc.select(""div[class='main']"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,884,"assertEquals(""hello"", main.text());"
