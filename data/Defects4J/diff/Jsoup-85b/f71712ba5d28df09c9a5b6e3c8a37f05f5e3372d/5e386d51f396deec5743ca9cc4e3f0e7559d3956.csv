is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,80,"et a new attribute, or replace an existing one by key."
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,81,param key attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,82,param value attribute value
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,80,"* Set a new attribute, or replace an existing one by key."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,81,* @param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,82,* @param value attribute value
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,83,"* @return these attributes, for chaining"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,84,"ublic void put(String key, String value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,85,"public Attributes put(String key, String value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,88,return this;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,99,"et a new boolean attribute, remove attribute if value is false."
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,100,param key attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,101,param value attribute value
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,103,"ublic void put(String key, boolean value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,101,"* Set a new boolean attribute, remove attribute if value is false."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,102,* @param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,103,* @param value attribute value
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,104,"* @return these attributes, for chaining"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,106,"public Attributes put(String key, boolean value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,111,return this;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,117,"@return these attributes, for chaining"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,114,ublic void put(Attribute attribute) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,119,public Attributes put(Attribute attribute) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,124,return this;
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,9,ublic class Comment extends Node {
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,9,public class Comment extends LeafNode {
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,15,param baseUri base URI
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,16,public Comment(String data) {
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,17,value = data;
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,21,Create a new comment node.
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,22,@param data The contents of the comment
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,23,@param baseUri base URI not used. This is a leaf node.
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,24,@deprecated
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,18,uper(baseUri);
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,19,"ttributes.put(COMMENT_KEY, data);"
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,27,this(data);
False,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,31,eturn attributes.get(COMMENT_KEY);
True,src/main/java/org/jsoup/nodes/Comment.java,src/main/java/org/jsoup/nodes/Comment.java,39,return coreValue();
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,9,ublic class DataNode extends Node{
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,10,"rivate static final String DATA_KEY = ""data"";"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,9,public class DataNode extends LeafNode {
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,15,param baseUri base URI
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,15,public DataNode(String data) {
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,16,value = data;
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,20,Create a new DataNode.
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,21,@param data data contents
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,22,"@param baseUri Unused, Leaf Nodes do not hold base URis"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,23,@deprecated
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,18,uper(baseUri);
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,19,"ttributes.put(DATA_KEY, data);"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,26,this(data);
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,31,eturn attributes.get(DATA_KEY);
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,38,return coreValue();
False,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,40,"ttributes.put(DATA_KEY, data);"
True,src/main/java/org/jsoup/nodes/DataNode.java,src/main/java/org/jsoup/nodes/DataNode.java,47,coreValue(data);
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,153,"ody().prependChild(new TextNode("" "", """"));"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,153,"body().prependChild(new TextNode("" ""));"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,166,oMove.addAll(dupe.childNodes);
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,166,toMove.addAll(dupe.ensureChildNodes());
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,184,or (Node child: node.childNodes) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,185,"lement found = findFirstElementByTagName(tag, child);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,184,int size = node.childNodeSize();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,185,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,186,"Element found = findFirstElementByTagName(tag, node.childNode(i));"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,345,"ecl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,346,"decl = new XmlDeclaration(""xml"", false);"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,352,"mlDeclaration decl = new XmlDeclaration(""xml"", baseUri, false);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,353,"XmlDeclaration decl = new XmlDeclaration(""xml"", false);"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,3,mport java.io.IOException;
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,6,mport org.jsoup.nodes.Document.OutputSettings.*;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,4,import org.jsoup.nodes.Document.OutputSettings.Syntax;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,6,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,11,ublic class DocumentType extends Node {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,11,public class DocumentType extends LeafNode {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,12,// todo needs a bit of a chunky cleanup. this level of detail isn't needed
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,25, @param baseUri the doctype's base URI
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,27,"ublic DocumentType(String name, String publicId, String systemId, String baseUri) {"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,28,uper(baseUri);
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,27,"public DocumentType(String name, String publicId, String systemId) {"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,28,"attr(NAME, name);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,29,"attr(PUBLIC_ID, publicId);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,30,if (has(PUBLIC_ID)) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,31,"attr(PUB_SYS_KEY, PUBLIC_KEY);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,33,"attr(SYSTEM_ID, systemId);"
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,37,* Create a new doctype element.
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,38,* @param name the doctype's name
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,39,* @param publicId the doctype's public ID
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,40,* @param systemId the doctype's system ID
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,41,* @param baseUri unused
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,42,* @deprecated
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,44,"public DocumentType(String name, String publicId, String systemId, String baseUri) {"
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,43, @param baseUri the doctype's base URI
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,58,* @param baseUri unused
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,59,* @deprecated
False,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,46,uper(baseUri);
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,69,public void setPubSysKey(String value) {
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,70,if (value != null)
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,71,"attr(PUB_SYS_KEY, value);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,3,import org.jsoup.helper.ChangeNotifyingArrayList;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,41,private static final List<Node> EMPTY_NODES = Collections.emptyList();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,42,"private static final Pattern classSplit = Pattern.compile(""\\s+"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,43,"rivate static final Pattern classSplit = Pattern.compile(""\\s+"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,45,List<Node> childNodes;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,46,private Attributes attributes;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,47,private String baseUri;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,63,"uper(baseUri, attributes);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,65,alidate.notNull(tag);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,67,Validate.notNull(tag);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,68,Validate.notNull(baseUri);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,69,childNodes = EMPTY_NODES;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,70,this.baseUri = baseUri;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,71,this.attributes = attributes;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,78,"his(tag, baseUri, new Attributes());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,84,"this(tag, baseUri, null);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,87,protected List<Node> ensureChildNodes() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,88,if (childNodes == EMPTY_NODES) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,89,childNodes = new NodeList(4);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,91,return childNodes;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,94,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,95,protected boolean hasAttributes() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,96,return attributes != null;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,99,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,100,public Attributes attributes() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,101,if (!hasAttributes())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,102,attributes = new Attributes();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,103,return attributes;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,106,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,107,public String baseUri() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,108,return baseUri;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,111,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,112,protected void doSetBaseUri(String baseUri) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,113,this.baseUri = baseUri;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,116,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,117,public int childNodeSize() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,118,return childNodes.size();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,133,"eturn attributes.getIgnoreCase(""id"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,173,"return attributes().getIgnoreCase(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,158,"ttributes.put(attributeKey, attributeValue);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,198,"attributes().put(attributeKey, attributeValue);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,176,eturn attributes.dataset();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,216,return attributes().dataset();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,461,"extNode node = new TextNode(text, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,501,TextNode node = new TextNode(text);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,474,"extNode node = new TextNode(text, baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,514,TextNode node = new TextNode(text);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1055,"extNode textNode = new TextNode(text, baseUri);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1095,TextNode textNode = new TextNode(text);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1138,"ttributes.put(""class"", StringUtil.join(classNames, "" ""));"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1178,"attributes().put(""class"", StringUtil.join(classNames, "" ""));"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1149,"inal String classAttr = attributes.getIgnoreCase(""class"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1189,"final String classAttr = attributes().getIgnoreCase(""class"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1275,"ttributes.html(accum, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1315,if (hasAttributes())
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1316,"attributes.html(accum, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1389,@Override
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1390,protected Element doClone(Node parent) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1391,Element clone = (Element) super.doClone(parent);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1392,clone.attributes = attributes != null ? attributes.clone() : null;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1393,clone.baseUri = baseUri;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1394,clone.childNodes = new NodeList(childNodes.size());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1396,clone.childNodes.addAll(childNodes);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1398,return clone;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1401,private final class NodeList extends ChangeNotifyingArrayList<Node> {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1402,NodeList(int initialCapacity) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1403,super(initialCapacity);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1406,public void onContentsChanged() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1407,nodelistChanged();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,1,package org.jsoup.nodes;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,3,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,5,import java.util.List;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,7,abstract class LeafNode extends Node {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,8,"Object value; // either a string value, or an attribute map (in the rare case multiple attributes are set)"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,10,protected final boolean hasAttributes() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,11,return value instanceof Attributes;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,14,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,15,public final Attributes attributes() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,16,ensureAttributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,17,return (Attributes) value;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,20,private void ensureAttributes() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,21,if (!hasAttributes()) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,22,Object coreValue = value;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,23,Attributes attributes = new Attributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,24,value = attributes;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,25,if (coreValue != null)
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,26,"attributes.put(nodeName(), (String) coreValue);"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,30,String coreValue() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,31,return attr(nodeName());
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,34,void coreValue(String value) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,35,"attr(nodeName(), value);"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,38,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,39,public String attr(String key) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,40,Validate.notNull(key);
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,41,if (!hasAttributes()) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,42,return key.equals(nodeName()) ? (String) value : EmptyString;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,44,return super.attr(key);
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,47,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,48,"public Node attr(String key, String value) {"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,49,if (!hasAttributes() && key.equals(nodeName())) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,50,this.value = value;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,51,} else {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,52,ensureAttributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,53,"super.attr(key, value);"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,55,return this;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,58,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,59,public boolean hasAttr(String key) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,60,ensureAttributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,61,return super.hasAttr(key);
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,64,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,65,public Node removeAttr(String key) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,66,ensureAttributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,67,return super.removeAttr(key);
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,70,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,71,public String absUrl(String key) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,72,ensureAttributes();
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,73,return super.absUrl(key);
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,76,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,77,public String baseUri() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,78,"return hasParent() ? parent().baseUri() : """";"
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,81,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,82,protected void doSetBaseUri(String baseUri) {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,83,// noop
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,86,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,87,public int childNodeSize() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,88,return 0;
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,91,@Override
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,92,protected List<Node> ensureChildNodes() {
True,src/main/java/org/jsoup/nodes/LeafNode.java,src/main/java/org/jsoup/nodes/LeafNode.java,93,"throw new UnsupportedOperationException(""Leaf Nodes do not have child nodes."");"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,4,mport org.jsoup.helper.ChangeNotifyingArrayList;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,25,rivate static final List<Node> EMPTY_NODES = Collections.emptyList();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,24,"static final String EmptyString = """";"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,27,ist<Node> childNodes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,28,ttributes attributes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,29,tring baseUri;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,33,reate a new Node.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,34,param baseUri base URI
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,35,"param attributes attributes (not null, but may be empty)"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,37,"rotected Node(String baseUri, Attributes attributes) {"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,38,alidate.notNull(baseUri);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,39,alidate.notNull(attributes);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,41,hildNodes = EMPTY_NODES;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,42,his.baseUri = baseUri.trim();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,43,his.attributes = attributes;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,46,rotected Node(String baseUri) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,47,"his(baseUri, new Attributes());"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,54,hildNodes = EMPTY_NODES;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,55,ttributes = null;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,41,* Check if this Node has an actual Attributes object.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,43,protected abstract boolean hasAttributes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,45,public boolean hasParent() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,46,return parentNode != null;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,66,if (!hasAttributes())
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,67,return EmptyString;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,82,tring val = attributes.getIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,69,String val = attributes().getIgnoreCase(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,94,ublic Attributes attributes() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,95,eturn attributes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,81,public abstract Attributes attributes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,106,"ttributes.putIgnoreCase(attributeKey, attributeValue);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,91,"attributes().putIgnoreCase(attributeKey, attributeValue);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,120,"f (attributes.hasKeyIgnoreCase(key) && !absUrl(key).equals(""""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,105,"if (attributes().hasKeyIgnoreCase(key) && !absUrl(key).equals(""""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,123,eturn attributes.hasKeyIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,108,return attributes().hasKeyIgnoreCase(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,133,ttributes.removeIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,118,attributes().removeIgnoreCase(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,142,terator<Attribute> it = attributes.iterator();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,127,Iterator<Attribute> it = attributes().iterator();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,154,ublic String baseUri() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,155,eturn baseUri;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,139,public abstract String baseUri();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,142,"* Set the baseUri for just this node (not its descendants), if this Node tracks base URIs."
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,143,* @param baseUri
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,145,protected abstract void doSetBaseUri(String baseUri);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,167,ode.baseUri = baseUri;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,156,node.doSetBaseUri(baseUri);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,204,"eturn StringUtil.resolve(baseUri, attr(attributeKey));"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,193,"return StringUtil.resolve(baseUri(), attr(attributeKey));"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,197,protected abstract List<Node> ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,214,eturn childNodes.get(index);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,205,return ensureChildNodes().get(index);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,223,eturn Collections.unmodifiableList(childNodes);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,214,return Collections.unmodifiableList(ensureChildNodes());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,232,ist<Node> children = new ArrayList<>(childNodes.size());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,233,or (Node node : childNodes) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,223,final List<Node> nodes = ensureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,224,final ArrayList<Node> children = new ArrayList<>(nodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,225,for (Node node : nodes) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,243,ublic final int childNodeSize() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,244,eturn childNodes.size();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,235,public abstract int childNodeSize();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,248,eturn childNodes.toArray(new Node[childNodeSize()]);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,238,return ensureChildNodes().toArray(new Node[childNodeSize()]);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,279, Gets the Document associated with this Node.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,269,* Gets the Document associated with this Node.
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,349,lement context = parent() instanceof Element ? (Element) parent() : null;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,339,Element context = parent() instanceof Element ? (Element) parent() : null;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,392,final List<Node> childNodes = ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,446,"hildNodes.set(index, in);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,436,"ensureChildNodes().set(index, in);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,455,hildNodes.remove(index);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,445,ensureChildNodes().remove(index);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,452,final List<Node> nodes = ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,464,nsureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,465,hildNodes.add(child);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,466,hild.setSiblingIndex(childNodes.size()-1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,456,nodes.add(child);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,457,child.setSiblingIndex(nodes.size()-1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,472,nsureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,463,final List<Node> nodes = ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,476,"hildNodes.add(index, in);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,468,"nodes.add(index, in);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,481,rotected void ensureChildNodes() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,482,f (childNodes == EMPTY_NODES) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,483,hildNodes = new NodeList(4);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,480,final List<Node> childNodes = ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,508,ist<Node> nodes = parentNode.childNodes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,496,List<Node> nodes = parentNode.ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,524,inal List<Node> siblings = parentNode.childNodes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,512,final List<Node> siblings = parentNode.ensureChildNodes();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,541,eturn parentNode.childNodes.get(siblingIndex-1);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,529,return parentNode.ensureChildNodes().get(siblingIndex-1);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,659,inkedList<Node> nodesToProcess = new LinkedList<>();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,647,final LinkedList<Node> nodesToProcess = new LinkedList<>();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,665,or (int i = 0; i < currParent.childNodes.size(); i++) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,666,ode childClone = currParent.childNodes.get(i).doClone(currParent);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,667,"urrParent.childNodes.set(i, childClone);"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,653,final int size = currParent.childNodeSize();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,654,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,655,final List<Node> childNodes = currParent.ensureChildNodes();
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,656,Node childClone = childNodes.get(i).doClone(currParent);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,657,"childNodes.set(i, childClone);"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,690,lone.attributes = attributes != null ? attributes.clone() : null;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,691,lone.baseUri = baseUri;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,692,lone.childNodes = new NodeList(childNodes.size());
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,694,lone.childNodes.addAll(childNodes);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,727,rivate final class NodeList extends ChangeNotifyingArrayList<Node> {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,728,odeList(int initialCapacity) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,729,uper(initialCapacity);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,732,ublic void onContentsChanged() {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,733,odelistChanged();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,3,mport java.io.IOException;
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,6,import java.io.IOException;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,12,ublic class TextNode extends Node {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,14,"extNode is a node, and so by default comes with attributes and children. The attributes are seldom used, but use"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,15,"emory, and the child nodes are never used. So we don't have them, and override accessors to attributes to create"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,16,hem as needed on the fly.
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,12,public class TextNode extends LeafNode {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,15,Create a new TextNode representing the supplied (unencoded) text).
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,17,@param text raw text
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,18,@see #createFromEncoded(String)
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,18,"rivate static final String TEXT_KEY = ""text"";"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,19,tring text;
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,20,public TextNode(String text) {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,21,value = text;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,25,param baseUri base uri
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,28,@param baseUri base uri - ignored for this node type
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,30,@deprecated use {@link TextNode(String)}
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,29,his.baseUri = baseUri;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,30,his.text = text;
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,33,this(text);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,52,his.text = text;
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,53,f (attributes != null)
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,54,"ttributes.put(TEXT_KEY, text);"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,55,coreValue(text);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,63,eturn attributes == null ? text : attributes.get(TEXT_KEY);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,64,return coreValue();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,71,eturn StringUtil.isBlank(getWholeText());
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,72,return StringUtil.isBlank(coreValue());
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,82,final String text = coreValue();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,84,"tring head = getWholeText().substring(0, offset);"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,85,tring tail = getWholeText().substring(offset);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,86,"String head = text.substring(0, offset);"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,87,String tail = text.substring(offset);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,100,"ntities.escape(accum, getWholeText(), out, false, normaliseWhite, false);"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,102,"Entities.escape(accum, coreValue(), out, false, normaliseWhite, false);"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,117,"* @deprecated use {@link TextNode#createFromEncoded(String)} instead, as LeafNodes don't carry base URIs."
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,118,"eturn new TextNode(text, baseUri);"
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,121,return new TextNode(text);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,125,* Create a new TextNode from HTML encoded (aka escaped) data.
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,126,* @param encodedText Text containing encoded HTML (e.g. &amp;lt;)
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,127,* @return TextNode containing unencoded data (e.g. &lt;)
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,129,public static TextNode createFromEncoded(String encodedText) {
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,130,String text = Entities.unescape(encodedText);
True,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,131,return new TextNode(text);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,134,/ attribute fiddling. create on first access.
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,135,rivate void ensureAttributes() {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,136,f (attributes == null) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,137,ttributes = new Attributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,138,"ttributes.put(TEXT_KEY, text);"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,142,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,143,ublic String attr(String attributeKey) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,144,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,145,eturn super.attr(attributeKey);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,148,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,149,ublic Attributes attributes() {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,150,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,151,eturn super.attributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,154,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,155,"ublic Node attr(String attributeKey, String attributeValue) {"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,156,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,157,"eturn super.attr(attributeKey, attributeValue);"
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,160,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,161,ublic boolean hasAttr(String attributeKey) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,162,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,163,eturn super.hasAttr(attributeKey);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,166,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,167,ublic Node removeAttr(String attributeKey) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,168,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,169,eturn super.removeAttr(attributeKey);
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,172,Override
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,173,ublic String absUrl(String attributeKey) {
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,174,nsureAttributes();
False,src/main/java/org/jsoup/nodes/TextNode.java,src/main/java/org/jsoup/nodes/TextNode.java,175,eturn super.absUrl(attributeKey);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,3,import org.jsoup.SerializationException;
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,8,n XML Declaration.
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,10,"author Jonathan Hedley, jonathan@hedley.net */"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,11,ublic class XmlDeclaration extends Node {
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,12,rivate final String name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,9,* An XML Declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,11,public class XmlDeclaration extends LeafNode {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,12,"// todo this impl isn't really right, the data shouldn't be attributes, just a run of text after the name"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,16,reate a new XML declaration
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,17,param name of declaration
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,18,param baseUri base uri
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,19,param isProcessingInstruction is processing instruction
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,16,* Create a new XML declaration
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,17,* @param name of declaration
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,18,* @param isProcessingInstruction is processing instruction
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,21,"ublic XmlDeclaration(String name, String baseUri, boolean isProcessingInstruction) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,22,uper(baseUri);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,20,"public XmlDeclaration(String name, boolean isProcessingInstruction) {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,24,his.name = name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,22,value = name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,27,* Create a new XML declaration
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,28,* @param name of declaration
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,29,* @param baseUri Leaf Nodes don't have base URIs; they inherit from their Element
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,30,* @param isProcessingInstruction is processing instruction
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,31,"* @see XmlDeclaration#XmlDeclaration(String, boolean)"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,32,* @deprecated
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,34,"public XmlDeclaration(String name, String baseUri, boolean isProcessingInstruction) {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,35,"this(name, isProcessingInstruction);"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,38,eturn name;
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,47,return coreValue();
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,42,et the unencoded XML declaration.
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,43,return XML declaration
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,51,* Get the unencoded XML declaration.
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,52,* @return XML declaration
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,46,"eturn attributes.html().trim(); // attr html starts with a "" """
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,55,StringBuilder sb = new StringBuilder();
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,56,try {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,57,"getWholeDeclaration(sb, new Document.OutputSettings());"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,58,} catch (IOException e) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,59,throw new SerializationException(e);
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,61,return sb.toString().trim();
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,49,"oid outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,64,"private void getWholeDeclaration(Appendable accum, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,65,for (Attribute attribute : attributes()) {
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,66,if (!attribute.getKey().equals(nodeName())) { // skips coreValue (name)
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,67,accum.append(' ');
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,68,"attribute.html(accum, out);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,73,"void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,53,append(name);
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,54,"ttributes.html(accum, out);"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,77,.append(coreValue());
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,78,"getWholeDeclaration(accum, out);"
False,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,60,"oid outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}"
True,src/main/java/org/jsoup/nodes/XmlDeclaration.java,src/main/java/org/jsoup/nodes/XmlDeclaration.java,84,"void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,247,"omment comment = new Comment(commentToken.getData(), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,247,Comment comment = new Comment(commentToken.getData());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,256,"ode = new DataNode(characterToken.getData(), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,256,node = new DataNode(characterToken.getData());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,258,"ode = new TextNode(characterToken.getData(), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,258,node = new TextNode(characterToken.getData());
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,23,"b.settings.normalizeTag(d.getName()), d.getPubSysKey(), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,23,"tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,24,doctype.setPubSysKey(d.getPubSysKey());
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,84,"omment comment = new Comment(commentToken.getData(), baseUri);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,84,Comment comment = new Comment(commentToken.getData());
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,92,"nsert = new XmlDeclaration(settings.normalizeTag(el.tagName()), comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,92,"insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(""!""));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,100,"ode node = new TextNode(characterToken.getData(), baseUri);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,100,Node node = new TextNode(characterToken.getData());
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,105,"ocumentType doctypeNode = new DocumentType(settings.normalizeTag(d.getName()), d.getPubSysKey(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,105,"DocumentType doctypeNode = new DocumentType(settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,106,doctypeNode.setPubSysKey(d.getPubSysKey());
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,122,"extNode destText = new TextNode(sourceText.getWholeText(), source.baseUri());"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,122,TextNode destText = new TextNode(sourceText.getWholeText());
False,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,126,"ataNode destData = new DataNode(sourceData.getWholeData(), source.baseUri());"
True,src/main/java/org/jsoup/safety/Cleaner.java,src/main/java/org/jsoup/safety/Cleaner.java,126,DataNode destData = new DataNode(sourceData.getWholeData());
False,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,406,"mlDeclaration decl = new XmlDeclaration(""xml"", """", false);"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,406,"XmlDeclaration decl = new XmlDeclaration(""xml"", false);"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,17,"ocumentType fail = new DocumentType("""","""", """", """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,17,"DocumentType fail = new DocumentType("""","""", """");"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,22,"ocumentType fail = new DocumentType(""html"", null, null, """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,22,"DocumentType fail = new DocumentType(""html"", null, null);"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,27,"ocumentType fail = new DocumentType(""html"","""", """","""");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,27,"DocumentType fail = new DocumentType(""html"","""", """");"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,31,"ocumentType html5 = new DocumentType(""html"", """", """", """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,31,"DocumentType html5 = new DocumentType(""html"", """", """");"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,34,"ocumentType publicDocType = new DocumentType(""html"", ""-//IETF//DTD HTML//"", """", """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,34,"DocumentType publicDocType = new DocumentType(""html"", ""-//IETF//DTD HTML//"", """");"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,37,"ocumentType systemDocType = new DocumentType(""html"", """", ""http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"", """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,37,"DocumentType systemDocType = new DocumentType(""html"", """", ""http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd"");"
False,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,40,"ocumentType combo = new DocumentType(""notHtml"", ""--public"", ""--system"", """");"
True,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,src/test/java/org/jsoup/nodes/DocumentTypeTest.java,40,"DocumentType combo = new DocumentType(""notHtml"", ""--public"", ""--system"");"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,786,"extNode tn1 = new TextNode(""Text4"", """");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,786,"TextNode tn1 = new TextNode(""Text4"");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,15,"extNode one = new TextNode("""", """");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,16,"extNode two = new TextNode(""     "", """");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,17,"extNode three = new TextNode(""  \n\n   "", """");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,18,"extNode four = new TextNode(""Hello"", """");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,19,"extNode five = new TextNode(""  \nHello "", """");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,15,"TextNode one = new TextNode("""");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,16,"TextNode two = new TextNode(""     "");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,17,"TextNode three = new TextNode(""  \n\n   "");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,18,"TextNode four = new TextNode(""Hello"");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,19,"TextNode five = new TextNode(""  \nHello "");"
False,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,43,"n.attr(""text"", ""kablam &"");"
True,src/test/java/org/jsoup/nodes/TextNodeTest.java,src/test/java/org/jsoup/nodes/TextNodeTest.java,43,"tn.attr(tn.nodeName(), ""kablam &"");"
