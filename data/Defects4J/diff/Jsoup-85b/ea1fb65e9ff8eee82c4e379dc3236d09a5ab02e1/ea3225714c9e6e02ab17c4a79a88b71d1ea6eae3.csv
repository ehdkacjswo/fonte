is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,13,/ memoised padding up to 10
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,14,"rivate static final String[] padding = {"""", "" "", ""  "", ""   "", ""    "", ""     "", ""      "", ""       "", ""        "", ""         "", ""          ""};"
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,13,// memoised padding up to 21
True,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,14,"static final String[] padding = {"""", "" "", ""  "", ""   "", ""    "", ""     "", ""      "", ""       "", ""        "","
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,11, single key + value attribute. Keys are trimmed and normalised to lower-case.
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,13,"author Jonathan Hedley, jonathan@hedley.net */"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,11,A single key + value attribute. (Only used for presentation.)
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,23,rivate String value;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,22,private String val;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,23,Attributes parent; // used to update the holding Attributes when the key / value is changed via this interface
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,32,"this(key, value, null);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,36,* Create a new attribute from unencoded (raw) key and value.
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,37,* @param key attribute key; case is preserved.
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,38,* @param val attribute value
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,39,* @param parent the containing Attributes (this Attribute is not automatically added to said Attributes)
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,40,* @see #createFromEncoded*/
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,41,"public Attribute(String key, String val, Attributes parent) {"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,33,alidate.notNull(value);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,36,his.value = value;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,45,this.val = val;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,46,this.parent = parent;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,53,his.key = key.trim();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,63,key = key.trim();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,64,if (parent != null) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,65,int i = parent.indexOfKey(this.key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,66,if (i != Attributes.NotFound)
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,67,parent.keys[i] = key;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,69,this.key = key;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,61,eturn value;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,77,return val;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,66,param value the new attribute value; must not be null
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,82,@param val the new attribute value; must not be null
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,68,ublic String setValue(String value) {
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,69,alidate.notNull(value);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,70,tring old = this.value;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,71,his.value = value;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,72,eturn old;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,84,public String setValue(String val) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,85,String oldVal = parent.get(this.key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,86,if (parent != null) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,87,int i = parent.indexOfKey(this.key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,88,if (i != Attributes.NotFound)
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,89,parent.vals[i] = val;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,91,this.val = val;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,92,return oldVal;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,90,"rotected void html(Appendable accum, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,110,"protected static void html(String key, String val, Appendable accum, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,92,f (!shouldCollapseAttribute(out)) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,112,"if (!shouldCollapseAttribute(key, val, out)) {"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,94,"ntities.escape(accum, value, out, true, false, false);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,114,"Entities.escape(accum, Attributes.checkNotNull(val) , out, true, false, false);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,119,"protected void html(Appendable accum, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,120,"html(key, val, accum, out);"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,116,"eturn new Attribute(unencodedKey, value);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,140,"return new Attribute(unencodedKey, value, null); // parent will get set when Put"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,144,return isDataAttribute(key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,147,protected static boolean isDataAttribute(String key) {
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,130,"eturn ("""".equals(value) || value.equalsIgnoreCase(key))"
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,131,& out.syntax() == Document.OutputSettings.Syntax.html
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,132,& isBooleanAttribute();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,158,"return shouldCollapseAttribute(key, val, out);"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,161,"protected static boolean shouldCollapseAttribute(String key, String val, Document.OutputSettings out) {"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,162,// todo: optimize
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,163,"return (val == null || """".equals(val) || val.equalsIgnoreCase(key))"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,164,&& out.syntax() == Document.OutputSettings.Syntax.html
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,165,&& isBooleanAttribute(key);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,169,* @deprecated
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,172,"return Arrays.binarySearch(booleanAttributes, key) >= 0 || val == null;"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,176,* Checks if this attribute name is defined as a boolean attribute in HTML5
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,178,protected static boolean isBooleanAttribute(final String key) {
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,140,ublic boolean equals(Object o) {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,183,public boolean equals(Object o) { // note parent not considered
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,142,f (!(o instanceof Attribute)) return false;
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,185,if (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,147,eturn !(value != null ? !value.equals(attribute.value) : attribute.value != null);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,188,return val != null ? val.equals(attribute.val) : attribute.val == null;
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,151,ublic int hashCode() {
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,192,public int hashCode() { // note parent not considered
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,153,esult = 31 * result + (value != null ? value.hashCode() : 0);
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,194,result = 31 * result + (val != null ? val.hashCode() : 0);
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,160,"eturn (Attribute) super.clone(); // only fields are immutable strings key and value, so no more deep copy required"
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,201,return (Attribute) super.clone();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,10,import java.util.Arrays;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,12,mport java.util.LinkedHashMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,17,import static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,23," Attribute name and value comparisons are  <b>case sensitive</b>. By default for HTML, attribute names are"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,25,"* Attribute name and value comparisons are  generally <b>case sensitive</b>. By default for HTML, attribute names are"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,34,"private static final int InitialCapacity = 4; // todo - analyze Alexa 1MM sites, determine best setting"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,36,// manages the key/val arrays
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,37,private static final int GrowthFactor = 2;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,38,private static final String[] Empty = {};
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,39,static final int NotFound = -1;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,40,"private static final String EmptyString = """";"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,42,"private int size = 0; // number of slots used (not capacity, which is keys.length"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,43,String[] keys = Empty;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,44,String[] vals = Empty;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,46,// check there's room for more
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,47,private void checkCapacity(int minNewSize) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,48,Validate.isTrue(minNewSize >= size);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,49,int curSize = keys.length;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,50,if (curSize >= minNewSize)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,51,return;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,33,"rivate LinkedHashMap<String, Attribute> attributes = null;"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,34,/ linked hash map to preserve insertion order.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,35,/ null be default as so many elements have no attributes -- saves a good chunk of memory
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,53,int newSize = curSize >= InitialCapacity ? size * GrowthFactor : InitialCapacity;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,54,if (minNewSize > newSize)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,newSize = minNewSize;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,57,"keys = Arrays.copyOf(keys, newSize);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,58,"vals = Arrays.copyOf(vals, newSize);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,61,int indexOfKey(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,62,Validate.notNull(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,63,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,64,if (key.equals(keys[i]))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,65,return i;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,67,return NotFound;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,70,private int indexOfKeyIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,71,Validate.notNull(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,72,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,73,if (key.equalsIgnoreCase(keys[i]))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,74,return i;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,76,return NotFound;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,79,// we track boolean attributes as null in values - they're just keys. so returns empty for consumers
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,80,static final String checkNotNull(String val) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,81,return val == null ? EmptyString : val;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,40,return the attribute value if set; or empty string if not set.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,87,@return the attribute value if set; or empty string if not set (or a boolean attribute).
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,44,alidate.notEmpty(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,46,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,47,"eturn """";"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,49,ttribute attr = attributes.get(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,50,"eturn attr != null ? attr.getValue() : """";"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,91,int i = indexOfKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,92,return i == NotFound ? EmptyString : checkNotNull(vals[i]);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,56, @return the first matching attribute value if set; or empty string if not set.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,98,* @return the first matching attribute value if set; or empty string if not set (ora boolean attribute).
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,59,ttribute attr = getAttributeIgnoreCase(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,60,"eturn attr != null ? attr.getValue() : """";"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,101,int i = indexOfKeyIgnoreCase(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,102,return i == NotFound ? EmptyString : checkNotNull(vals[i]);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,63,rivate Attribute getAttributeIgnoreCase(String key) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,64,alidate.notEmpty(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,65,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,66,eturn null;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,68,ttribute attr = attributes.get(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,69,f (attr != null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,70,eturn attr;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,72,or (String attrKey : attributes.keySet()) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,73,f (attrKey.equalsIgnoreCase(key))
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,74,eturn attributes.get(attrKey);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,76,eturn null;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,105,// adds without checking if this key exists
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,106,"private void add(String key, String value) {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,107,checkCapacity(size + 1);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,108,keys[size] = key;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,109,vals[size] = value;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,110,size++;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,81, @param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,115,* @param key case sensitive attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,86,"ttribute attr = new Attribute(key, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,87,ut(attr);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,120,int i = indexOfKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,121,if (i != NotFound)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,122,vals[i] = value;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,123,else
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,124,"add(key, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,92,ttribute oldAttr = getAttributeIgnoreCase(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,93,f (oldAttr != null && !oldAttr.getKey().equals(key)) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,94,ttributes.remove(oldAttr.getKey());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,129,int i = indexOfKeyIgnoreCase(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,130,if (i != NotFound) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,131,vals[i] = value;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,132,"if (!keys[i].equals(key)) // case changed, update"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,133,keys[i] = key;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,97,"ut(key, value);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,135,else
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,136,"add(key, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,102, @param key attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,141,* @param key case <b>insensitive</b> attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,108,ut(new BooleanAttribute(key));
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,147,"putIgnoreCase(key, null);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,116,param attribute attribute
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,155,@param attribute attribute with case sensitive key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,121,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,122,ttributes = new LinkedHashMap<>(2);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,123,"ttributes.put(attribute.getKey(), attribute);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,160,"put(attribute.getKey(), attribute.getValue());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,161,attribute.parent = this;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,165,// removes and shifts up
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,166,private void remove(int index) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,167,Validate.isFalse(index >= size);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,168,int shifted = size - index - 1;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,169,if (shifted > 0) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,170,"System.arraycopy(keys, index + 1, keys, index, shifted);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,171,"System.arraycopy(vals, index + 1, vals, index, shifted);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,173,size--;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,174,keys[size] = null; // release hold
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,175,vals[size] = null;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,132,alidate.notEmpty(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,133,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,134,eturn;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,135,ttributes.remove(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,183,int i = indexOfKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,184,if (i != NotFound)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,185,remove(i);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,143,alidate.notEmpty(key);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,144,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,145,eturn;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,146,or (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,147,tring attrKey = it.next();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,148,f (attrKey.equalsIgnoreCase(key))
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,149,t.remove();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,193,int i = indexOfKeyIgnoreCase(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,194,if (i != NotFound)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,195,remove(i);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,159,eturn attributes != null && attributes.containsKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,204,return indexOfKey(key) != NotFound;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,168,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,169,eturn false;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,170,or (String attrKey : attributes.keySet()) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,171,f (attrKey.equalsIgnoreCase(key))
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,172,eturn true;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,174,eturn false;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,213,return indexOfKeyIgnoreCase(key) != NotFound;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,182,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,183,eturn 0;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,184,eturn attributes.size();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,221,return size;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,194,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,195,ttributes = new LinkedHashMap<>(incoming.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,196,ttributes.putAll(incoming.attributes);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,231,checkCapacity(size + incoming.size);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,233,for (Attribute attr : incoming) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,234,// todo - should this be case insensitive?
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,235,put(attr);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,200,f (attributes == null || attributes.isEmpty()) {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,201,eturn Collections.<Attribute>emptyList().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,241,return new Iterator<Attribute>() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,242,int i = 0;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,204,eturn attributes.values().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,244,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,245,public boolean hasNext() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,246,return i < size;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,249,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,250,public Attribute next() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,251,"final Attribute attr = new Attribute(keys[i], vals[i], Attributes.this);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,252,i++;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,253,return attr;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,256,@Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,257,public void remove() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,258,"Attributes.this.remove(--i); // next() advanced, so rewind"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,208,"et the attributes as a List, for iteration. Do not modify the keys of the attributes via this view, as changes"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,209,o keys will not be recognised in the containing set.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,210,return an view of the attributes as a List.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,264,"Get the attributes as a List, for iteration."
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,265,@return an view of the attributes as an unmodifialbe List.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,213,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,214,eturn Collections.emptyList();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,216,ist<Attribute> list = new ArrayList<>(attributes.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,217,"or (Map.Entry<String, Attribute> entry : attributes.entrySet()) {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,218,ist.add(entry.getValue());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,268,ArrayList<Attribute> list = new ArrayList<>(size);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,269,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,270,Attribute attr = vals[i] == null ?
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,271,"new BooleanAttribute(keys[i]) : // deprecated class, but maybe someone still wants it"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,272,"new Attribute(keys[i], vals[i], Attributes.this);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,273,list.add(attr);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,229,eturn new Dataset();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,284,return new Dataset(this);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,247,"oid html(Appendable accum, Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,248,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,249,eturn;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,251,"or (Map.Entry<String, Attribute> entry : attributes.entrySet()) {"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,252,ttribute attribute = entry.getValue();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,253,"ccum.append("" "");"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,254,"ttribute.html(accum, out);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,302,"final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,303,final int sz = size;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,304,for (int i = 0; i < sz; i++) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,305,// inlined from Attribute.html()
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,306,final String key = keys[i];
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,307,final String val = vals[i];
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,308,accum.append(' ').append(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,310,"// collapse checked=null, checked="""", checked=checked; write out others"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,311,if (!(out.syntax() == Document.OutputSettings.Syntax.html
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,312,&& (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,314,"accum.append(""=\"""");"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,315,"Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,316,"accum.append('""');"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,271,f (!(o instanceof Attributes)) return false;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,334,if (o == null || getClass() != o.getClass()) return false;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,275,eturn !(attributes != null ? !attributes.equals(that.attributes) : that.attributes != null);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,338,if (size != that.size) return false;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,339,"if (!Arrays.equals(keys, that.keys)) return false;"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,340,"return Arrays.equals(vals, that.vals);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,284,eturn attributes != null ? attributes.hashCode() : 0;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,349,int result = size;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,350,result = 31 * result + Arrays.hashCode(keys);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,351,result = 31 * result + Arrays.hashCode(vals);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,352,return result;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,289,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,290,eturn new Attributes();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,298,lone.attributes = new LinkedHashMap<>(attributes.size());
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,299,or (Attribute attribute: this)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,300,"lone.attributes.put(attribute.getKey(), attribute.clone());"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,363,clone.size = size;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,364,"keys = Arrays.copyOf(keys, size);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,365,"vals = Arrays.copyOf(vals, size);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,304,"rivate class Dataset extends AbstractMap<String, String> {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,370,* Internal method. Lowercases all keys.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,372,public void normalize() {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,373,for (int i = 0; i < size; i++) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,374,keys[i] = lowerCase(keys[i]);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,378,"private static class Dataset extends AbstractMap<String, String> {"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,379,private final Attributes attributes;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,306,rivate Dataset() {
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,307,f (attributes == null)
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,308,ttributes = new LinkedHashMap<>(2);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,381,private Dataset(Attributes attributes) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,382,this.attributes = attributes;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,319,tring oldValue = hasKey(dataKey) ? attributes.get(dataKey).getValue() : null;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,320,"ttribute attr = new Attribute(dataKey, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,321,"ttributes.put(dataKey, attr);"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,393,String oldValue = attributes.hasKey(dataKey) ? attributes.get(dataKey) : null;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,394,"attributes.put(dataKey, value);"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,332,Override
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,405,@Override
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,343,rivate Iterator<Attribute> attrIter = attributes.values().iterator();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,416,private Iterator<Attribute> attrIter = attributes.iterator();
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,5,* @deprecated just use null values (vs empty string) for booleans.
False,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,12,"uper(key, """");"
True,src/main/java/org/jsoup/nodes/BooleanAttribute.java,src/main/java/org/jsoup/nodes/BooleanAttribute.java,13,"super(key, null);"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,375,"/ enables the doc to be shared in multiple threads, without creating new encoders on every traverse"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,376,rivate final ThreadLocal<CharsetEncoder> encoder = new ThreadLocal<CharsetEncoder>() {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,377,Override
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,378,rotected CharsetEncoder initialValue() {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,379,eturn charset.newEncoder();
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,375,CharsetEncoder encoder; // initialized by start of OuterHtmlVisitor and cleared at end
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,376,Entities.CoreCharset coreCharset; // fast encoders for ascii and utf8
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,433,ncoder.remove();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,447,harsetEncoder encoder() {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,448,harsetEncoder ce = encoder.get();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,449,/ check that the charset wasn't changed since accessed in this thread
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,450,/ (this is probably overkill for something we're not advertising as threadsafe)
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,451,f (!ce.charset().equals(charset)) {
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,452,ncoder.remove();
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,453,e = encoder.get(); // retrips initialValue()
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,455,eturn ce;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,442,CharsetEncoder prepareEncoder() {
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,443,"encoder = charset.newEncoder(); // created at start of OuterHtmlVisitor so each pass has own encoder, so OutputSettings can be shared among threads"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,444,coreCharset = Entities.CoreCharset.byName(encoder.charset().name());
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,445,return encoder;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,4,import org.jsoup.helper.Validate;
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,29,Validate.notNull(name);
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,30,Validate.notNull(publicId);
True,src/main/java/org/jsoup/nodes/DocumentType.java,src/main/java/org/jsoup/nodes/DocumentType.java,31,Validate.notNull(systemId);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1024,"ccum.append("" "");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1024,accum.append(' ');
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1303,"oid outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1303,"void outerHtmlHead(final Appendable accum, int depth, final Document.OutputSettings out) throws IOException {"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1312,ccum
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1313,"append(""<"")"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1314,append(tagName());
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1315,f (hasAttributes())
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1316,"ttributes.html(accum, out);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1312,accum.append('<').append(tagName());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1313,"if (attributes != null) attributes.html(accum, out);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1326,"ccum.append("">"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1323,accum.append('>');
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1335,"ccum.append(""</"").append(tagName()).append("">"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,1332,"accum.append(""</"").append(tagName()).append('>');"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,164,inal CharsetEncoder encoder = out.encoder();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,165,inal CoreCharset coreCharset = CoreCharset.byName(encoder.charset().name());
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,164,final CharsetEncoder encoder = out.encoder != null ? out.encoder : out.prepareEncoder();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,165,final CoreCharset coreCharset = out.coreCharset; // init in out.prepareEncoder()
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,281,rivate enum CoreCharset {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,281,enum CoreCharset {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,284,rivate static CoreCharset byName(String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,284,static CoreCharset byName(final String name) {
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,17,mport static org.jsoup.internal.Normalizer.lowerCase;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,72,"lse if (lowerCase(attributeKey).startsWith(""abs:""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,70,"else if (attributeKey.startsWith(""abs:""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,585,"bstract void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException;"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,583,"abstract void outerHtmlHead(final Appendable accum, int depth, final Document.OutputSettings out) throws IOException;"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,587,"bstract void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException;"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,585,"abstract void outerHtmlTail(final Appendable accum, int depth, final Document.OutputSettings out) throws IOException;"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,605,"ccum.append(""\n"").append(StringUtil.padding(depth * out.indentAmount()));"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,603,accum.append('\n').append(StringUtil.padding(depth * out.indentAmount()));
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,689,out.prepareEncoder();
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,3,mport org.jsoup.nodes.Attribute;
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,55,or (Attribute attr : attributes) {
False,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,56,ttr.setKey(lowerCase(attr.getKey()));
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,54,attributes.normalize();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,4,mport org.jsoup.nodes.Attribute;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,6,mport org.jsoup.nodes.BooleanAttribute;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,110,ttribute attribute;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,108,String value;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,112,"ttribute = new Attribute(pendingAttributeName,"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,113,endingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,110,value = pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,115,"ttribute = new Attribute(pendingAttributeName, """");"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,112,"value = """";"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,117,ttribute = new BooleanAttribute(pendingAttributeName);
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,118,ttributes.put(attribute);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,114,value = null;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,115,"attributes.put(pendingAttributeName, value);"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,26,"assertEquals(""                                             "", StringUtil.padding(45));"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,29,@Test public void paddingInACan() {
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,30,String[] padding = StringUtil.padding;
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,31,"assertEquals(21, padding.length);"
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,32,for (int i = 0; i < padding.length; i++) {
True,src/test/java/org/jsoup/helper/StringUtilTest.java,src/test/java/org/jsoup/helper/StringUtilTest.java,33,"assertEquals(i, padding[i].length());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,6,import java.util.Map;
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,33,"ssertEquals(1, a.dataset().size());"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,34,"ssertEquals(""Jsoup"", a.dataset().get(""name""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,34,"Map<String, String> dataset = a.dataset();"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,35,"assertEquals(1, dataset.size());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,36,"assertEquals(""Jsoup"", dataset.get(""name""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,51,"assertTrue(a.hasKey(""Tot""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,51,terator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,54,Attribute attr = iterator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,55,"assertEquals(""Tot"", attr.getKey());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,58,attr = iterator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,59,"assertEquals(""Hello"", attr.getKey());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,60,"assertEquals(""There"", attr.getValue());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,62,// make sure that's flowing to the underlying attributes object
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,63,"assertEquals(2, a.size());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,64,"assertEquals(""There"", a.get(""Hello""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,65,"assertFalse(a.hasKey(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,68,@Test
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,69,public void testIteratorUpdateable() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,70,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,71,"a.put(""Tot"", ""a&p"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,72,"a.put(""Hello"", ""There"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,74,"assertFalse(a.hasKey(""Foo""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,75,Iterator<Attribute> iterator = a.iterator();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,76,Attribute attr = iterator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,77,"attr.setKey(""Foo"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,78,attr = iterator.next();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,79,"attr.setKey(""Bar"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,80,"attr.setValue(""Qux"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,82,"assertEquals(""a&p"", a.get(""Foo""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,83,"assertEquals(""Qux"", a.get(""Bar""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,84,"assertFalse(a.hasKey(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,85,"assertFalse(a.hasKey(""Hello""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,88,@Test public void testIteratorHasNext() {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,89,Attributes a = new Attributes();
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,90,"a.put(""Tot"", ""1"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,91,"a.put(""Hello"", ""2"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,92,"a.put(""data-name"", ""3"");"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,94,int seen = 0;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,95,for (Attribute attribute : a) {
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,96,seen++;
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,97,"assertEquals(String.valueOf(seen), attribute.getValue());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,99,"assertEquals(3, seen);"
