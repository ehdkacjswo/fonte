is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,1,package org.jsoup.helper;
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,3,import java.util.Iterator;
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,4,import java.util.LinkedList;
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,5,import java.util.ListIterator;
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,9,* Provides a descending iterator and other 1.6 methods to allow support on the 1.5 JRE.
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,11,public class DescendableLinkedList<E> extends LinkedList<E> {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,14,* Create a new DescendableLinkedList.
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,16,public DescendableLinkedList() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,17,super();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,21,* Add a new element to the start of the list.
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,22,* @param e element to add
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,24,public void push(E e) {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,25,addFirst(e);
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,29,"* Look at the last element, if there is one."
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,30,"* @return the last element, or null"
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,32,public E peekLast() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,33,return size() == 0 ? null : getLast();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,37,"* Remove and return the last element, if there is one"
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,38,"* @return the last element, or null"
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,40,public E pollLast() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,41,return size() == 0 ? null : removeLast();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,45,* Get an iterator that starts and the end of the list and works towards the start.
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,46,* @return an iterator that starts and the end of the list and works towards the start.
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,48,public Iterator<E> descendingIterator() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,49,return new DescendingIterator<E>(size());
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,52,private class DescendingIterator<E> implements Iterator<E> {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,53,private final ListIterator<E> iter;
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,55,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,56,private DescendingIterator(int index) {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,57,iter = (ListIterator<E>) listIterator(index);
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,60,public boolean hasNext() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,61,return iter.hasPrevious();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,64,public E next() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,65,return iter.previous();
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,68,public void remove() {
True,src/main/java/org/jsoup/helper/DescendableLinkedList.java,src/main/java/org/jsoup/helper/DescendableLinkedList.java,69,iter.remove();
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,71,alidate.isFalse(tagName.isEmpty());
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,71,Validate.isFalse(tagName.length() == 0);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,3,import org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,22,rivate LinkedList<Element> stack; // the stack of open elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,23,private DescendableLinkedList<Element> stack; // the stack of open elements
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,29,rivate LinkedList<Element> formattingElements = new LinkedList<Element>(); // active (open) formatting elements
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,30,private DescendableLinkedList<Element> formattingElements = new DescendableLinkedList<Element>(); // active (open) formatting elements
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,45,tack = new LinkedList<Element>();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,46,stack = new DescendableLinkedList<Element>();
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,246,inkedList<Element> getStack() {
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,247,DescendableLinkedList<Element> getStack() {
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,254,"rivate boolean isElementInQueue(LinkedList<Element> queue, Element element) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,255,"private boolean isElementInQueue(DescendableLinkedList<Element> queue, Element element) {"
True,src/main/java/org/jsoup/parser/TreeBuilderState.java,src/main/java/org/jsoup/parser/TreeBuilderState.java,3,import org.jsoup.helper.DescendableLinkedList;
False,src/main/java/org/jsoup/parser/TreeBuilderState.java,src/main/java/org/jsoup/parser/TreeBuilderState.java,764,inkedList<Element> stack = tb.getStack();
True,src/main/java/org/jsoup/parser/TreeBuilderState.java,src/main/java/org/jsoup/parser/TreeBuilderState.java,765,DescendableLinkedList<Element> stack = tb.getStack();
