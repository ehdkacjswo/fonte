is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,6,import java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,import java.io.InputStream;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,mport java.util.Map;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,9,mport java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,10,import java.util.Map;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,13, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,14,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,16, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,17,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,18, or by methods in the Connection.Request object directly. All request configuration must be made before the request
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19, is executed.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19,* or by methods in the Connection.Request object directly. All request configuration must be made before the request is
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,20,* executed.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,109," Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,110, body for POSTs. A request may have multiple values of the same name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,110,"* Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,111,* request body for POSTs. A request may have multiple values of the same name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,119,"* Add an input stream as a request data paramater. For GETs, has no effect, but for POSTS this will upload the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,120,* input stream.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,121,* @param key data key (form item name)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,122,"* @param filename the name of the file to present to the remove server. Typically just the name, not path,"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,123,* component.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,124,"* @param inputStream the input stream to upload, that you probably obtained from a {@link java.io.FileInputStream}."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,125,* You must close the InputStream in a {@code finally} block.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,126,"* @return this Connections, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,128,"public Connection data(String key, String filename, InputStream inputStream);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,132," Add a number of request data parameters. Multiple parameters may be set at once, e.g.:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,133," <code>.data(""name"", ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,145,"* Add a number of request data parameters. Multiple parameters may be set at once, e.g.: <code>.data(""name"","
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,146,"* ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,265, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,277,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,275, Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,287,* Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,302,"* Check if a header is present, with the given value"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,303,* @param name header name (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,304,* @param value value (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,305,* @return if the header and value pair are set in this req/res
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,307,"public boolean hasHeaderWithValue(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,304, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,324,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,388, @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,406,* @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,407,* thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,393, Configures the request to ignore HTTP errors in the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,394, @param ignoreHttpErrors set to true to ignore HTTP errors.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,412,* Configures the request to ignore HTTP errors in the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,413,* @param ignoreHttpErrors set to true to ignore HTTP errors.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,401, @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,420,* @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,421,* be thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,406, Configures the request to ignore the Content-Type of the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,407, @param ignoreContentType set to true to ignore the content type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,426,* Configures the request to ignore the Content-Type of the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,427,* @param ignoreContentType set to true to ignore the content type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,540,* Add or update an input stream to this keyVal
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,541,* @param inputStream new input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,542,"* @return this KeyVal, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,544,public KeyVal inputStream(InputStream inputStream);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,547,"* Get the input stream associated with this keyval, if any"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,548,"* @return input stream if set, or null"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,550,public InputStream inputStream();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,553,* Does this keyval have an input stream?
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,554,* @return true if this keyval does indeed have an input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,556,public boolean hasInputStream();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,11,import java.util.Random;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,19,ublic class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,20,public final class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,24,private static final char[] mimeBoundaryChars =
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,25,"""-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"".toCharArray();"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,26,static final int boundaryLength = 32;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,71,* Writes the input stream to the output stream. Doesn't close them.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,72,* @param in input stream to read from
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,73,* @param out output stream to write to
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,74,* @throws IOException on IO error
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,76,"static void crossStreams(final InputStream in, final OutputStream out) throws IOException {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,77,final byte[] buffer = new byte[bufferSize];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,78,int len;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,79,while ((len = in.read(buffer)) != -1) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,80,"out.write(buffer, 0, len);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,213,"* Creates a random string, suitable for use as a mime boundary"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,215,static String mimeBoundary() {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,216,final StringBuilder mime = new StringBuilder(boundaryLength);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,217,final Random rand = new Random();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,218,for (int i = 0; i < boundaryLength -2; i++) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,219,mime.append(mimeBoundaryChars[rand.nextInt(mimeBoundaryChars.length)]);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,221,return mime.toString();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,27,"public static final String  CONTENT_ENCODING = ""Content-Encoding"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,28,"private static final String CONTENT_TYPE = ""Content-Type"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,29,"private static final String MULTIPART_FORM_DATA = ""multipart/form-data"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,49,private static String encodeMimeName(String val) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,50,if (val == null)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,51,return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,52,"return val.replaceAll(""\"""", ""%22"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,125,"public Connection data(String key, String filename, InputStream inputStream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,126,"req.data(KeyVal.create(key, filename, inputStream));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,127,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,268,* Test if the request has a header with this value (case insensitive).
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,270,"public boolean hasHeaderWithValue(String name, String value) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,271,return hasHeader(name) && header(name).equalsIgnoreCase(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,316,ublic static class Request extends Base<Connection.Request> implements Connection.Request {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,337,public static class Request extends HttpConnection.Base<Connection.Request> implements Connection.Request {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,402,ublic static class Response extends Base<Connection.Response> implements Connection.Response {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,423,public static class Response extends HttpConnection.Base<Connection.Response> implements Connection.Response {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,444,f (req.method() == Connection.Method.GET && req.data().size() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,465,String mimeBoundary = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,466,if (req.method() == Connection.Method.GET && req.data().size() > 0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,468,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,469,mimeBoundary = setupMultipartModeIfNeeded(req);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,451,"ritePost(req.data(), conn.getOutputStream());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,476,"writePost(req, conn.getOutputStream(), mimeBoundary);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,494,"odyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,519,"bodyStream = res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,620,"rivate static void writePost(Collection<Connection.KeyVal> data, OutputStream outputStream) throws IOException {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,621,"utputStreamWriter w = new OutputStreamWriter(outputStream, DataUtil.defaultCharset);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,622,oolean first = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,623,or (Connection.KeyVal keyVal : data) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,624,f (!first)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,625,.append('&');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,626,lse
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,627,irst = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,645,private static String setupMultipartModeIfNeeded(final Connection.Request req) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,646,"// multipart mode, for files. add the header if we see something with an inputstream, and return a non-null boundary"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,647,boolean needsMulti = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,648,for (Connection.KeyVal keyVal : req.data()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,649,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,650,needsMulti = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,651,break;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,654,if (needsMulti) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,655,final String bound = DataUtil.mimeBoundary();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,656,"req.header(CONTENT_TYPE, MULTIPART_FORM_DATA + ""; boundary="" + bound);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,657,return bound;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,659,return null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,629,".write(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,630,.write('=');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,631,".write(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,662,"private static void writePost(final Connection.Request req, final OutputStream outputStream, final String bound) throws IOException {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,663,final Collection<Connection.KeyVal> data = req.data();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,664,"final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,666,if (bound != null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,667,// boundary will be set if we're in multipart mode
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,668,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,669,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,670,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,671,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,672,"w.write(""Content-Disposition: form-data; name=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,673,"w.write(encodeMimeName(keyVal.key())); // encodes "" to %22"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,674,"w.write(""\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,675,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,676,"w.write(""; filename=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,677,w.write(encodeMimeName(keyVal.value()));
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,678,"w.write(""\""\r\nContent-Type: application/octet-stream\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,679,w.flush(); // flush
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,680,"DataUtil.crossStreams(keyVal.inputStream(), outputStream);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,681,outputStream.flush();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,682,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,683,"w.write(""\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,684,w.write(keyVal.value());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,686,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,688,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,689,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,690,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,691,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,692,// regular form data (application/x-www-form-urlencoded)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,693,boolean first = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,694,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,695,if (!first)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,696,w.append('&');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,697,else
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,698,first = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,700,"w.write(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,701,w.write('=');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,702,"w.write(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,756,private InputStream stream;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,686,"alidate.notEmpty(key, ""Data key must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,687,"alidate.notNull(value, ""Data value must not be null"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,688,"eturn new KeyVal(key, value);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,759,return new KeyVal().key(key).value(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,691,"rivate KeyVal(String key, String value) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,692,his.key = key;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,693,his.value = value;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,762,"public static KeyVal create(String key, String filename, InputStream stream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,763,return new KeyVal().key(key).value(filename).inputStream(stream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,766,private KeyVal() {}
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,788,public KeyVal inputStream(InputStream inputStream) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,789,"Validate.notNull(value, ""Data input stream must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,790,this.stream = inputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,791,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,794,public InputStream inputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,795,return stream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,798,public boolean hasInputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,799,return stream != null;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,85,boolean set = false;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,88,set = true;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,90,if (!set) {
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,91,"Element option = el.select(""option"").first();"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,92,if (option != null)
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,93,"data.add(HttpConnection.KeyVal.create(name, option.val()));"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,mport static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,67,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,68,public void generatesMimeBoundaries() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,69,String m1 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,70,String m2 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,72,"assertEquals(DataUtil.boundaryLength, m1.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,73,"assertEquals(DataUtil.boundaryLength, m2.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,74,"assertNotSame(m1, m2);"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,75,"assertTrue(m1.startsWith(""--""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,5,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,144,@Test public void inputStream() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,145,"Connection.KeyVal kv = HttpConnection.KeyVal.create(""file"", ""thumb.jpg"", ParseTest.inputStreamFrom(""Check""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,146,"assertEquals(""file"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,147,"assertEquals(""thumb.jpg"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,148,assertTrue(kv.hasInputStream());
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,150,"kv = HttpConnection.KeyVal.create(""one"", ""two"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,151,"assertEquals(""one"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,152,"assertEquals(""two"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,153,assertFalse(kv.hasInputStream());
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,ublic File getFile(String resourceName) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,public static File getFile(String resourceName) {
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,rivate InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,public static InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,8,import org.jsoup.nodes.FormElement;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,12,import java.io.File;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,13,import java.io.FileInputStream;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,14,import java.io.FileNotFoundException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,333,"* Test fetching a form, and submitting it with a file attached."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,335,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,336,public void postHtmlFile() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,337,"Document index = Jsoup.connect(""http://direct.infohound.net/tidy/"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,338,"FormElement form = index.select(""[name=tidy]"").forms().get(0);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,339,Connection post = form.submit();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,341,"File uploadFile = ParseTest.getFile(""/htmltests/google-ipod.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,342,FileInputStream stream = new FileInputStream(uploadFile);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,344,// todo: need to add a better way to get an existing data field
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,345,for (Connection.KeyVal keyVal : post.request().data()) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,346,"if (keyVal.key().equals(""_file"")) {"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,347,"keyVal.value(""check.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,348,keyVal.inputStream(stream);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,352,Connection.Response res;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,353,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,354,res = post.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,355,} finally {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,356,stream.close();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,359,Document out = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,360,"assertTrue(out.text().contains(""HTML Tidy Complete""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,364,* Tests upload of binary content to a remote service.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,366,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,367,public void postJpeg() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,368,"File thumb = ParseTest.getFile(""/htmltests/thumb.jpg"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,369,Document result = Jsoup
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,370,".connect(""http://regex.info/exif.cgi"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,371,".data(""f"", thumb.getName(), new FileInputStream(thumb))"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,372,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,374,"assertEquals(""Baseline DCT, Huffman coding"", result.select(""td:contains(Process) + td"").text());"
