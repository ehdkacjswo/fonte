is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,27, @param key attribute key
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,27,* @param key attribute key; case is preserved.
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,34,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,34,this.key = key.trim();
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,47,et the attribute key. Gets normalised as per the constructor method.
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,47,Set the attribute key; case is preserved.
False,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,52,his.key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Attribute.java,src/main/java/org/jsoup/nodes/Attribute.java,52,this.key = key.trim();
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,7,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,7,import java.util.AbstractMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,8,import java.util.AbstractSet;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,9,import java.util.ArrayList;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,10,import java.util.Collections;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,11,import java.util.Iterator;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,12,import java.util.LinkedHashMap;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,13,import java.util.List;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,14,import java.util.Map;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,15,import java.util.Set;
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,12, Attributes are treated as a map: there can be only one value associated with an attribute key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,20,* Attributes are treated as a map: there can be only one value associated with an attribute key/name.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,15," Attribute key and value comparisons are done case insensitively, and keys are normalised to"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,16, lower-case.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,23,"* Attribute name and value comparisons are  <b>case sensitive</b>. By default for HTML, attribute names are"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,24,* normalized to lower-case on parsing. That means you should use lower-case strings when referring to attributes by
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,25,* name.
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,30,param key the attribute key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,39,@param key the (case-sensitive) attribute key
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,40,ttribute attr = attributes.get(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,49,Attribute attr = attributes.get(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,54,* Get an attribute's value by case-insensitive key
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,55,* @param key the attribute name
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,56,* @return the first matching attribute value if set; or empty string if not set.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,58,public String getIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,59,Validate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,60,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,61,"return """";"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,63,for (String attrKey : attributes.keySet()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,64,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,65,return attributes.get(attrKey).getValue();
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,67,"return """";"
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,78,emove an attribute by key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,104,Remove an attribute by key. <b>Case sensitive.</b>
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,85,ttributes.remove(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,111,attributes.remove(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,115,Remove an attribute by key. <b>Case insensitive.</b>
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,116,@param key attribute key to remove
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,118,public void removeIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,119,Validate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,120,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,121,return;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,122,for (String attrKey : attributes.keySet()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,123,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,124,attributes.remove(attrKey);
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,90,param key key to check for
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,130,@param key case-sensitive key to check for
False,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,94,eturn attributes != null && attributes.containsKey(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,134,return attributes != null && attributes.containsKey(key);
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,138,Tests if these attributes contain an attribute with this key.
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,139,@param key key to check for
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,140,"@return true if key exists, false otherwise"
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,142,public boolean hasKeyIgnoreCase(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,143,if (attributes == null)
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,144,return false;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,145,for (String attrKey : attributes.keySet()) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,146,if (attrKey.equalsIgnoreCase(key))
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,147,return true;
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,149,return false;
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,5,import org.jsoup.parser.ParseSettings;
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,30,"uper(Tag.valueOf(""#root""), baseUri);"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,31,"super(Tag.valueOf(""#root"", ParseSettings.htmlDefault), baseUri);"
False,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,106,"eturn new Element(Tag.valueOf(tagName), this.baseUri());"
True,src/main/java/org/jsoup/nodes/Document.java,src/main/java/org/jsoup/nodes/Document.java,107,"return new Element(Tag.valueOf(tagName, ParseSettings.preserveCase), this.baseUri());"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,5,import org.jsoup.parser.ParseSettings;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,61, @see Tag#valueOf(String)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,62,"* @see Tag#valueOf(String, ParseSettings)"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,90,ag = Tag.valueOf(tagName);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,91,"tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,119,"eturn attributes.get(""id"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,120,"return attributes.getIgnoreCase(""id"");"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,671,ey = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,672,key = key.trim();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,684,eyPrefix = keyPrefix.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,685,keyPrefix = keyPrefix.trim();
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,61, Get an attribute's value by its key.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,61,* Get an attribute's value by its key. <b>Case insensitive</b>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,78,f (attributes.hasKey(attributeKey))
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,79,eturn attributes.get(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,78,String val = attributes.getIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,79,if (val.length() > 0)
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,80,return val;
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,105, Test if this element has an attribute.
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,106,* Test if this element has an attribute. <b>Case insensitive</b>
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,114,"f (attributes.hasKey(key) && !absUrl(key).equals(""""))"
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,115,"if (attributes.hasKeyIgnoreCase(key) && !absUrl(key).equals(""""))"
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,117,eturn attributes.hasKey(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,118,return attributes.hasKeyIgnoreCase(attributeKey);
False,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,127,ttributes.remove(attributeKey);
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,128,attributes.removeIgnoreCase(attributeKey);
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,48,ParseSettings defaultSettings() {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,49,return ParseSettings.htmlDefault;
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,49,"ocument parse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,53,"Document parse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,52,"eturn super.parse(input, baseUri, errors);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,56,"return super.parse(input, baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,55,"ist<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,59,"List<Node> parseFragment(String inputFragment, Element context, String baseUri, ParseErrorList errors, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,58,"nitialiseParse(inputFragment, baseUri, errors);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,62,"initialiseParse(inputFragment, baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,82,"oot = new Element(Tag.valueOf(""html""), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,86,"root = new Element(Tag.valueOf(""html"", settings), baseUri);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,181,"lement el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,185,"Element el = new Element(Tag.valueOf(startTag.name(), settings), baseUri, settings.normalizeAttributes(startTag.attributes));"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,187,"lement el = new Element(Tag.valueOf(startTagName), baseUri);"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,191,"Element el = new Element(Tag.valueOf(startTagName, settings), baseUri);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,198,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,202,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,214,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,src/main/java/org/jsoup/parser/HtmlTreeBuilder.java,218,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,22,"ocumentType doctype = new DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,22,DocumentType doctype = new DocumentType(
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,23,"tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier(), tb.getBaseUri());"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,44," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,45,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,47," else if (t.isEndTag() && (StringUtil.in(t.asEndTag().name(), ""head"", ""body"", ""html"", ""br""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,48,"} else if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), ""head"", ""body"", ""html"", ""br""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,73," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,74,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,75," else if (t.isStartTag() && t.asStartTag().name().equals(""head"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,76,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""head"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,79," else if (t.isEndTag() && (StringUtil.in(t.asEndTag().name(), ""head"", ""body"", ""html"", ""br""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,80,"} else if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), ""head"", ""body"", ""html"", ""br""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,107,tring name = start.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,108,String name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,142,ame = end.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,143,name = end.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,168," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,169,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,170," else if (t.isEndTag() && t.asEndTag().name().equals(""noscript"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,171,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""noscript"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,173," else if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,174,"} else if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,176," else if (t.isEndTag() && t.asEndTag().name().equals(""br"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,177,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""br"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,178," else if ((t.isStartTag() && StringUtil.in(t.asStartTag().name(), ""head"", ""noscript"")) || t.isEndTag()) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,179,"} else if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), ""head"", ""noscript"")) || t.isEndTag()) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,203,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,204,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,226,"f (StringUtil.in(t.asEndTag().name(), ""body"", ""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,227,"if (StringUtil.in(t.asEndTag().normalName(), ""body"", ""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,273,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,274,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,558,ame = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,559,name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,611,"lement replacement = new Element(Tag.valueOf(node.nodeName()), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,612,"Element replacement = new Element(Tag.valueOf(node.nodeName(), ParseSettings.preserveCase), tb.getBaseUri());"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,613,// case will follow the original node (so honours ParseSettings)
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,762,tring name = t.asEndTag().name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,764,String name = t.asEndTag().normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,816,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,818,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,862,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,864,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,940,"f (t.isEndTag() && t.asEndTag().name().equals(""caption"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,942,"if (t.isEndTag() && t.asEndTag().normalName().equals(""caption"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,942,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,944,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,955,".isStartTag() && StringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,"t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,957,".isEndTag() && t.asEndTag().name().equals(""table""))"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,959,"t.isEndTag() && t.asEndTag().normalName().equals(""table""))"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,963," else if (t.isEndTag() && StringUtil.in(t.asEndTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,965,"} else if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,988,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,990,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,998,ame = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1000,name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1033,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1035,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1049,ame = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1051,name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1092,tring name = startTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1094,String name = startTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1106,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1108,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1153,tring name = endTag.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1155,String name = endTag.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1181,"tringUtil.in(t.asStartTag().name(),"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1183,"StringUtil.in(t.asStartTag().normalName(),"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1226,tring name = start.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1228,String name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1255,ame = end.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1257,name = end.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1296,"f (t.isStartTag() && StringUtil.in(t.asStartTag().name(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1298,"if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1300," else if (t.isEndTag() && StringUtil.in(t.asEndTag().name(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1302,"} else if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), ""caption"", ""table"", ""tbody"", ""tfoot"", ""thead"", ""tr"", ""td"", ""th"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1302,f (tb.inTableScope(t.asEndTag().name())) {
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1304,if (tb.inTableScope(t.asEndTag().normalName())) {
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1321," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1323,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1323," else if (t.isEndTag() && t.asEndTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1325,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1351,tring name = start.name();
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1353,String name = start.normalName();
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1364," else if (t.isEndTag() && t.asEndTag().name().equals(""frameset"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1366,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""frameset"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1395," else if (t.isStartTag() && t.asStartTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1397,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1397," else if (t.isEndTag() && t.asEndTag().name().equals(""html"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1399,"} else if (t.isEndTag() && t.asEndTag().normalName().equals(""html"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1399," else if (t.isStartTag() && t.asStartTag().name().equals(""noframes"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1401,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""noframes"")) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1414," else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().name().equals(""html""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1416,"} else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(""html""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1430," else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().name().equals(""html""))) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1432,"} else if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(""html""))) {"
False,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1434," else if (t.isStartTag() && t.asStartTag().name().equals(""noframes"")) {"
True,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java,1436,"} else if (t.isStartTag() && t.asStartTag().normalName().equals(""noframes"")) {"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,1,package org.jsoup.parser;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,3,import org.jsoup.nodes.Attribute;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,4,import org.jsoup.nodes.Attributes;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,7,"* Controls parser settings, to optionally preserve tag and/or attribute name case."
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,9,public class ParseSettings {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,11,* HTML default settings: both tag and attribute names are lower-cased during parsing.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,13,public static final ParseSettings htmlDefault;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,15,* Preserve both tag and attribute case.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,17,public static final ParseSettings preserveCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,19,static {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,20,"htmlDefault = new ParseSettings(false, false);"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,21,"preserveCase = new ParseSettings(true, true);"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,24,private final boolean preserveTagCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,25,private final boolean preserveAttributeCase;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,28,* Define parse settings.
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,29,* @param tag preserve tag case?
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,30,* @param attribute preserve attribute name case?
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,32,"public ParseSettings(boolean tag, boolean attribute) {"
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,33,preserveTagCase = tag;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,34,preserveAttributeCase = attribute;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,37,String normalizeTag(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,38,name = name.trim();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,39,if (!preserveTagCase)
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,40,name = name.toLowerCase();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,41,return name;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,44,String normalizeAttribute(String name) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,45,name = name.trim();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,46,if (!preserveAttributeCase)
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,47,name = name.toLowerCase();
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,48,return name;
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,51,Attributes normalizeAttributes(Attributes attributes) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,52,if (!preserveAttributeCase) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,53,for (Attribute attr : attributes) {
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,54,attr.setKey(attr.getKey().toLowerCase());
True,src/main/java/org/jsoup/parser/ParseSettings.java,src/main/java/org/jsoup/parser/ParseSettings.java,57,return attributes;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,19,private ParseSettings settings;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,27,settings = treeBuilder.defaultSettings();
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,30,"eturn treeBuilder.parse(html, baseUri, errors);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,32,"return treeBuilder.parse(html, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,80,public Parser settings(ParseSettings settings) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,81,this.settings = settings;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,82,return this;
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,85,public ParseSettings settings() {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,86,return settings;
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,89,"eturn treeBuilder.parse(html, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,100,"return treeBuilder.parse(html, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,104,"eturn treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,115,"return treeBuilder.parseFragment(fragmentHtml, context, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,116,"eturn treeBuilder.parseFragment(fragmentXml, baseUri, ParseErrorList.noTracking());"
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,127,"return treeBuilder.parseFragment(fragmentXml, baseUri, ParseErrorList.noTracking(), treeBuilder.defaultSettings());"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,his.tagName = tagName.toLowerCase();
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,28,this.tagName = tagName;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,47,* @param settings used to control tag name sensitivity
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,49,ublic static Tag valueOf(String tagName) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,50,"public static Tag valueOf(String tagName, ParseSettings settings) {"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,54,agName = tagName.trim().toLowerCase();
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,55,tagName = settings.normalizeTag(tagName);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,70,"* Get a Tag by name. If not previously defined (unknown), returns a new generic tag, that can do anything."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,71,* <p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,72,"* Pre-defined tags (P, DIV etc) will be ==, but unknown tags are not registered and will only .equals()."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,73,* </p>
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,75,"* @param tagName Name of tag, e.g. ""p"". <b>Case sensitive</b>."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,76,"* @return The tag, either defined or new generic."
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,78,public static Tag valueOf(String tagName) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,79,"return valueOf(tagName, ParseSettings.preserveCase);"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,71,"protected String normalName; // lc version of tag name, for case insensitive tree build"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,83,normalName = null;
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,122,inal String name() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,124,"final String name() { // preserves case, for input into Tag.valueOf (which may drop case)"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,129,"final String normalName() { // loses case, used in tree building for working out where in tree it should go"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,130,return normalName;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,135,normalName = name.toLowerCase();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,151,normalName = tagName.toLowerCase();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,217,normalName = tagName.toLowerCase();
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,19,rivate CharacterReader reader; // html input
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,20,rivate ParseErrorList errors; // errors found while tokenising
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,19,private final CharacterReader reader; // html input
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,20,private final ParseErrorList errors; // errors found while tokenising
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,eturn lastStartTag != null && tagPending.tagName.equals(lastStartTag);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,221,return lastStartTag != null && tagPending.name().equalsIgnoreCase(lastStartTag);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,146,tring tagName = r.consumeTagName().toLowerCase();
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,146,String tagName = r.consumeTagName();
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,197,.tagPending.appendTagName(Character.toLowerCase(r.current()));
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,198,.dataBuffer.append(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,197,t.tagPending.appendTagName(r.current());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,198,t.dataBuffer.append(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,210,.tagPending.appendTagName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,210,t.tagPending.appendTagName(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,411,.dataBuffer.append(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,411,t.dataBuffer.append(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,427,.tagPending.appendTagName(Character.toLowerCase(r.current()));
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,427,t.tagPending.appendTagName(r.current());
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,594,.tagPending.appendAttributeName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,594,t.tagPending.appendAttributeName(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1146,.doctypePending.name.append(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1146,t.doctypePending.name.append(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1625,.tagPending.appendTagName(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1625,t.tagPending.appendTagName(name);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1704,.dataBuffer.append(name.toLowerCase());
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1704,t.dataBuffer.append(name);
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,21,protected ParseSettings settings;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,25,"rotected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,26,abstract ParseSettings defaultSettings();
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,28,"protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,33,this.settings = settings;
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,37,"ocument parse(String input, String baseUri) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,38,"eturn parse(input, baseUri, ParseErrorList.noTracking());"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,41,"ocument parse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,42,"nitialiseParse(input, baseUri, errors);"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,41,"Document parse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,42,"initialiseParse(input, baseUri, errors, settings);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,17,ParseSettings defaultSettings() {
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,18,return ParseSettings.preserveCase;
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,21,"Document parse(String input, String baseUri) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,22,"return parse(input, baseUri, ParseErrorList.noTracking(), ParseSettings.preserveCase);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,18,"rotected void initialiseParse(String input, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,19,"uper.initialiseParse(input, baseUri, errors);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,26,"protected void initialiseParse(String input, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,27,"super.initialiseParse(input, baseUri, errors, settings);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,56,ag tag = Tag.valueOf(startTag.name());
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,64,"Tag tag = Tag.valueOf(startTag.name(), settings);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,58,"lement el = new Element(tag, baseUri, startTag.attributes);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,66,"Element el = new Element(tag, baseUri, settings.normalizeAttributes(startTag.attributes));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,79,"nsert = new XmlDeclaration(el.tagName(), comment.baseUri(), data.startsWith(""!""));"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,87,"insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), comment.baseUri(), data.startsWith(""!""));"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,92,"ocumentType doctypeNode = new DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,100,"DocumentType doctypeNode = new DocumentType(settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri);"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,124,"ist<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors) {"
False,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,125,"nitialiseParse(inputFragment, baseUri, errors);"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,132,"List<Node> parseFragment(String inputFragment, String baseUri, ParseErrorList errors, ParseSettings settings) {"
True,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,src/main/java/org/jsoup/parser/XmlTreeBuilder.java,133,"initialiseParse(inputFragment, baseUri, errors, settings);"
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,45,eturn (element.tagName().equals(tagName));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,45,return (element.tagName().equalsIgnoreCase(tagName));
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,127,his.keyPrefix = keyPrefix;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,127,Validate.notEmpty(keyPrefix);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,128,this.keyPrefix = keyPrefix.toLowerCase();
False,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,134,f (attribute.getKey().startsWith(keyPrefix))
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,135,if (attribute.getKey().toLowerCase().startsWith(keyPrefix))
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,209,vals.add(new Evaluator.Class(className.trim().toLowerCase()));
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,209,evals.add(new Evaluator.Class(className.trim()));
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,220,vals.add(new Evaluator.Tag(tagName.trim().toLowerCase()));
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,220,evals.add(new Evaluator.Tag(tagName.trim()));
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,15," A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,15,"* A selector is a chain of simple selectors, separated by combinators. Selectors are <b>case insensitive</b> (including against"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,20,"ssertTrue(a.hasKey(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,20,"assertTrue(a.hasKey(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,23,"assertFalse(a.hasKey(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,24,"assertTrue(a.hasKeyIgnoreCase(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,25,"assertEquals(""There"", a.getIgnoreCase(""hEllo""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,25,"ssertEquals(""a&p"", a.get(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,29,"assertEquals("""", a.get(""tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,30,"assertEquals(""a&p"", a.get(""Tot""));"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,31,"assertEquals(""a&p"", a.getIgnoreCase(""tot""));"
False,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,27,"ssertEquals("" tot=\""a&amp;p\"" hello=\""There\"" data-name=\""Jsoup\"""", a.html());"
True,src/test/java/org/jsoup/nodes/AttributesTest.java,src/test/java/org/jsoup/nodes/AttributesTest.java,33,"assertEquals("" Tot=\""a&amp;p\"" Hello=\""There\"" data-name=\""Jsoup\"""", a.html());"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,302,"iv.appendElement(""P"").attr(""class"", ""second"").text(""now"");"
False,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,303,"ssertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><p class=\""second\"">now</p></div></body></html>"","
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,302,"div.appendElement(""P"").attr(""CLASS"", ""second"").text(""now"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,303,"// manually specifying tag and attributes should now preserve case, regardless of parse mode"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,304,"assertEquals(""<html><head></head><body><div id=\""1\""><p>Hello</p><p>there</p><P CLASS=\""second\"">now</P></div></body></html>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,903,@Test public void testHtmlLowerCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,904,"String html = ""<!doctype HTML><DIV ID=1>One</DIV>"";"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,905,Document doc = Jsoup.parse(html);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,906,"assertEquals(""<!doctype html> <html> <head></head> <body> <div id=\""1\""> One </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,909,@Test public void canPreserveTagCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,910,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,911,"parser.settings(new ParseSettings(true, false));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,912,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,913,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <SPAN id=\""2\""></SPAN> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,916,@Test public void canPreserveAttributeCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,917,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,918,"parser.settings(new ParseSettings(false, true));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,919,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,920,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <span ID=\""2\""></span> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,923,@Test public void canPreserveBothCase() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,924,Parser parser = Parser.htmlParser();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,925,"parser.settings(new ParseSettings(true, true));"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,926,"Document doc = parser.parseInput(""<div id=1><SPAN ID=2>"", """");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,927,"assertEquals(""<html> <head></head> <body> <div id=\""1\""> <SPAN ID=\""2\""></SPAN> </div> </body> </html>"", StringUtil.normaliseWhitespace(doc.outerHtml()));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,1,package org.jsoup.parser;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,3,import org.junit.Test;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,4,import static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,6,public class ParserSettingsTest {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,7,@Test
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,8,public void caseSupport() {
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,9,"ParseSettings bothOn = new ParseSettings(true, true);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,10,"ParseSettings bothOff = new ParseSettings(false, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,11,"ParseSettings tagOn = new ParseSettings(true, false);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,12,"ParseSettings attrOn = new ParseSettings(false, true);"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,14,"assertEquals(""FOO"", bothOn.normalizeTag(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,15,"assertEquals(""FOO"", bothOn.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,17,"assertEquals(""foo"", bothOff.normalizeTag(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,18,"assertEquals(""foo"", bothOff.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,20,"assertEquals(""FOO"", tagOn.normalizeTag(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,21,"assertEquals(""foo"", tagOn.normalizeAttribute(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,23,"assertEquals(""foo"", attrOn.normalizeTag(""FOO""));"
True,src/test/java/org/jsoup/parser/ParserSettingsTest.java,src/test/java/org/jsoup/parser/ParserSettingsTest.java,24,"assertEquals(""FOO"", attrOn.normalizeAttribute(""FOO""));"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,11,Test public void isCaseInsensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,11,@Test public void isCaseSensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,14,assertFalse(p1.equals(p2));
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,17,@Test public void canBeInsensitive() {
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,18,"Tag p1 = Tag.valueOf(""P"", ParseSettings.htmlDefault);"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,19,"Tag p2 = Tag.valueOf(""p"", ParseSettings.htmlDefault);"
False,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,52,"ag foo = Tag.valueOf(""foo""); // not defined"
True,src/test/java/org/jsoup/parser/TagTest.java,src/test/java/org/jsoup/parser/TagTest.java,58,"Tag foo = Tag.valueOf(""FOO""); // not defined"
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,53,"tring xml = ""<!DOCTYPE html><!-- a comment -->One <qux />Two"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,53,"String xml = ""<!DOCTYPE HTML><!-- a comment -->One <qux />Two"";"
False,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,56,"ssertEquals(""<!DOCTYPE html><!-- a comment -->One <qux />Two"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,56,"assertEquals(""<!DOCTYPE HTML><!-- a comment -->One <qux />Two"","
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,159,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,160,public void caseSensitiveDeclaration() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,161,"String xml = ""<?XML version='1' encoding='UTF-8' something='else'?>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,162,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,163,"assertEquals(""<?XML version=\""1\"" encoding=\""UTF-8\"" something=\""else\""?>"", doc.outerHtml());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,178,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,179,public void preservesCaseByDefault() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,180,"String xml = ""<TEST ID=1>Check</TEST>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,181,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser());"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,182,"assertEquals(""<TEST ID=\""1\"">Check</TEST>"", TextUtil.stripNewlines(doc.html()));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,185,@Test
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,186,public void canNormalizeCase() {
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,187,"String xml = ""<TEST ID=1>Check</TEST>"";"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,188,"Document doc = Jsoup.parse(xml, """", Parser.xmlParser().settings(ParseSettings.htmlDefault));"
True,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,src/test/java/org/jsoup/parser/XmlTreeBuilderTest.java,189,"assertEquals(""<test id=\""1\"">Check</test>"", TextUtil.stripNewlines(doc.html()));"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,17,"lements els = Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><div id=3>"").select(""div"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,17,// should be case insensitive
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,18,"Elements els = Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><DIV id=3>"").select(""DIV"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,38,"lements els = Jsoup.parse(""<p id=0 class='one two'><p id=1 class='one'><p id=2 class='two'>"").select(""p.one"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,39,"Elements els = Jsoup.parse(""<p id=0 class='ONE two'><p id=1 class='one'><p id=2 class='two'>"").select(""P.One"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,58,"lements foo = doc.select(""[title=foo]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,59,"Elements foo = doc.select(""[TITLE=foo]"");"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,203,"lement root = doc.getElementsByClass(""head"").first();"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,204,"Element root = doc.getElementsByClass(""HEAD"").first();"
