is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,35,public boolean hasKey(String key) {
True,src/main/java/org/jsoup/nodes/Attributes.java,src/main/java/org/jsoup/nodes/Attributes.java,36,return attributes.containsKey(key.toLowerCase());
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,6,import org.jsoup.select.Collector;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,import org.jsoup.select.Evaluator;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,7,mport java.util.ArrayList;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,8,mport java.util.Collections;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,9,mport java.util.LinkedList;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,10,mport java.util.List;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,9,import java.util.*;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,18,private Set<String> classNames;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,121,ist<Element> elements = new ArrayList<Element>();
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,122,f (this.tag.getName().equals(tagName))
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,123,lements.add(this);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,124,or (Element child : elementChildren) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,125,lements.addAll(child.getElementsByTag(tagName));
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,127,eturn Collections.unmodifiableList(elements);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,121,"return Collector.collect(new Evaluator.Tag(tagName), this);"
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,142,f (this.id().equals(id))
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,eturn this;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,144,or (Element child : elementChildren) {
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,145,lement byId = child.getElementById(id);
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,146,f (byId != null)
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,147,eturn byId;
False,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,149,eturn null;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,136,"List<Element> elements = Collector.collect(new Evaluator.Id(id), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,137,if (elements.size() > 0)
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,138,return elements.get(0);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,139,else
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,140,return null;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,143,public List<Element> getElementsWithClass(String className) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,144,Validate.notEmpty(className);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,146,"return Collector.collect(new Evaluator.Class(className), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,149,public List<Element> getElementsWithAttribute(String attributeKey) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,150,Validate.notEmpty(attributeKey);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,151,attributeKey = attributeKey.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,153,"return Collector.collect(new Evaluator.Attribute(attributeKey), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,156,"public List<Element> getElementsWithAttributeValue(String key, String value) {"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,157,Validate.notEmpty(key);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,158,key = key.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,159,Validate.notEmpty(value);
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,160,value = value.trim().toLowerCase();
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,162,"return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,184,"* Gets the literal value of this element's ""class"" attribute, which may include multiple class names, space"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,185,"* separated (e.g. <code>&lt;div class=""header gray""></code> returns ""<code>header gray</code>"")"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,186,"* @return The literal class attribute, or <b>empty string</b> if no class attribute set."
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,188,public String className() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,189,"return attributes.hasKey(""class"") ? attributes.get(""class"") : """";"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,192,public Set<String> classNames() {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,193,if (classNames == null) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,194,"String[] names = className().split(""\\s+"");"
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,195,classNames = new HashSet<String>(Arrays.asList(names));
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,197,return classNames;
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,200,public boolean hasClass(String className) {
True,src/main/java/org/jsoup/nodes/Element.java,src/main/java/org/jsoup/nodes/Element.java,201,return classNames().contains(className);
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,1,package org.jsoup.select;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,3,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,5,import java.util.ArrayList;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,6,import java.util.Collections;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,7,import java.util.List;
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,10,* Collects a list of elements that match the supplied criteria.
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,12,* @author Jonathan Hedley
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,14,public class Collector {
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,15,"public static List<Element> collect (Evaluator eval, Element root) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,16,List<Element> elements = new ArrayList<Element>();
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,17,"accumulateMatches(eval, elements, root);"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,18,return Collections.unmodifiableList(elements);
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,21,"private static void accumulateMatches(Evaluator eval, List<Element> elements, Element element) {"
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,22,if (eval.matches(element))
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,23,elements.add(element);
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,24,for (Element child: element.children())
True,src/main/java/org/jsoup/select/Collector.java,src/main/java/org/jsoup/select/Collector.java,25,"accumulateMatches(eval, elements, child);"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,1,package org.jsoup.select;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,3,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,6,* Evaluates that an element matches the selector.
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,8,* @author Jonathan Hedley
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,10,public abstract class Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,11,abstract boolean matches(Element element);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,13,public static class Tag extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,14,private String tagName;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,15,public Tag (String tagName) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,16,this.tagName = tagName;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,19,boolean matches(Element element) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,20,return (element.tagName().equals(tagName));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,24,public static class Id extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,25,private String id;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,26,public Id (String id) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,27,this.id = id;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,30,boolean matches(Element element) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,31,return (id.equals(element.id()));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,35,public static class Class extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,36,private String className;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,37,public Class(String className) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,38,this.className = className;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,41,boolean matches(Element element) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,42,return (element.hasClass(className));
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,46,public static class Attribute extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,47,private String key;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,49,public Attribute (String key) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,50,this.key = key;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,53,boolean matches(Element element) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,54,return (element.attr(key) != null);
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,58,public static class AttributeWithValue extends Evaluator {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,59,private String key;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,60,private String value;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,62,"public AttributeWithValue(String key, String value) {"
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,63,this.key = key;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,64,this.value = value;
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,67,boolean matches(Element element) {
True,src/main/java/org/jsoup/select/Evaluator.java,src/main/java/org/jsoup/select/Evaluator.java,68,return (value.equals(element.attr(key)));
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,9,import java.util.Set;
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,69,@Test public void testGetElementsWithClass() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,70,"Document doc = Jsoup.parse(""<div class='mellow yellow'><span class=mellow>Hello <b class='yellow'>Yellow!</b></span><p>Empty</p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,72,"List<Element> els = doc.getElementsWithClass(""mellow"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,73,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,74,"assertEquals(""div"", els.get(0).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,75,"assertEquals(""span"", els.get(1).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,77,"List<Element> els2 = doc.getElementsWithClass(""yellow"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,78,"assertEquals(2, els2.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,79,"assertEquals(""div"", els2.get(0).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,80,"assertEquals(""b"", els2.get(1).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,82,"List<Element> none = doc.getElementsWithClass(""solo"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,83,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,86,@Test public void testGetElementsWithAttribute() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,87,"Document doc = Jsoup.parse(""<div style='bold'><p><p><b style></b></p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,88,"List<Element> els = doc.getElementsWithAttribute(""style"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,89,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,90,"assertEquals(""div"", els.get(0).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,91,"assertEquals(""b"", els.get(1).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,93,"List<Element> none = doc.getElementsWithAttribute(""class"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,94,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,97,@Test public void testGetElementsWithAttributeValue() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,98,"Document doc = Jsoup.parse(""<div style='bold'><p><p><b style></b></p></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,99,"List<Element> els = doc.getElementsWithAttributeValue(""style"", ""bold"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,100,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,101,"assertEquals(""div"", els.get(0).tagName());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,103,"List<Element> none = doc.getElementsWithAttributeValue(""style"", ""none"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,104,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,107,@Test public void testClassDomMethods() {
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,108,"Document doc = Jsoup.parse(""<div><span class='mellow yellow'>Hello <b>Yellow</b></span></div>"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,109,"List<Element> els = doc.getElementsWithAttribute(""class"");"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,110,Element span = els.get(0);
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,111,"assertEquals(""mellow yellow"", span.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,112,"assertTrue(span.hasClass(""mellow""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,113,"assertTrue(span.hasClass(""yellow""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,114,Set<String> classes = span.classNames();
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,115,"assertEquals(2, classes.size());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,116,"assertTrue(classes.contains(""mellow""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,117,"assertTrue(classes.contains(""yellow""));"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,119,"assertEquals("""", doc.className());"
True,src/test/java/org/jsoup/nodes/ElementTest.java,src/test/java/org/jsoup/nodes/ElementTest.java,120,"assertFalse(doc.hasClass(""mellow""));"
