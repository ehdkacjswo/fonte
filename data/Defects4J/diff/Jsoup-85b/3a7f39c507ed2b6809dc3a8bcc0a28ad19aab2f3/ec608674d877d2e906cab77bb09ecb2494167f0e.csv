is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,61,if (currentToken == start) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,62,return process(new Token.StartTag().name(name));
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,68,if (currentToken == start) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,69,"return process(new Token.StartTag().nameAttr(name, attrs));"
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,77,if (currentToken == end) { // don't recycle an in-use token
True,src/main/java/org/jsoup/parser/TreeBuilder.java,src/main/java/org/jsoup/parser/TreeBuilder.java,78,return process(new Token.EndTag().name(name));
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,6,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,11,import java.io.File;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,12,import java.io.IOException;
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,854,@Test
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,855,public void testInvalidTableContents() throws IOException {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,856,"File in = ParseTest.getFile(""/htmltests/table-invalid-elements.html"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,857,"Document doc = Jsoup.parse(in, ""UTF-8"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,858,doc.outputSettings().prettyPrint(true);
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,859,String rendered = doc.toString();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,860,"int endOfEmail = rendered.indexOf(""Comment"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,861,"int guarantee = rendered.indexOf(""Why am I here?"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,862,"assertTrue(""Comment not found"", endOfEmail > -1);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,863,"assertTrue(""Search text not found"", guarantee > -1);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,864,"assertTrue(""Search text did not come after comment"", guarantee > endOfEmail);"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,867,@Test public void testNormalisesIsIndex() {
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,868,"Document doc = Jsoup.parse(""<body><isindex action='/submit'></body>"");"
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,869,String html = doc.outerHtml();
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,870,"assertEquals(""<form action=\""/submit\""> <hr> <label>This is a searchable index. Enter search keywords: <input name=\""isindex\""></label> <hr> </form>"","
True,src/test/java/org/jsoup/parser/HtmlParserTest.java,src/test/java/org/jsoup/parser/HtmlParserTest.java,871,StringUtil.normaliseWhitespace(doc.body().html()));
