is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,6,import java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,import java.io.InputStream;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,7,mport java.util.Map;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,9,mport java.io.IOException;
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,10,import java.util.Map;
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,13, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,14,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,16, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,17,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,18, or by methods in the Connection.Request object directly. All request configuration must be made before the request
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19, is executed.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,19,* or by methods in the Connection.Request object directly. All request configuration must be made before the request is
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,20,* executed.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,115," Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,116, body for POSTs. A request may have multiple values of the same name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,116,"* Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,117,* request body for POSTs. A request may have multiple values of the same name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,125,"* Add an input stream as a request data paramater. For GETs, has no effect, but for POSTS this will upload the"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,126,* input stream.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,127,* @param key data key (form item name)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,128,"* @param filename the name of the file to present to the remove server. Typically just the name, not path,"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,129,* component.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,130,"* @param inputStream the input stream to upload, that you probably obtained from a {@link java.io.FileInputStream}."
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,131,* You must close the InputStream in a {@code finally} block.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,132,"* @return this Connections, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,134,"public Connection data(String key, String filename, InputStream inputStream);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,138," Add a number of request data parameters. Multiple parameters may be set at once, e.g.:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,139," <code>.data(""name"", ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,151,"* Add a number of request data parameters. Multiple parameters may be set at once, e.g.: <code>.data(""name"","
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,152,"* ""jsoup"", ""language"", ""Java"", ""language"", ""English"");</code> creates a query string like:"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,271, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,283,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,281, Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,293,* Set a header. This method will overwrite any existing header with the same case insensitive name.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,308,"* Check if a header is present, with the given value"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,309,* @param name header name (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,310,* @param value value (case insensitive)
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,311,* @return if the header and value pair are set in this req/res
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,313,"public boolean hasHeaderWithValue(String name, String value);"
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,310, <p>
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,330,* <p/>
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,396, @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,414,* @return true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,415,* thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,401, Configures the request to ignore HTTP errors in the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,402, @param ignoreHttpErrors set to true to ignore HTTP errors.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,420,* Configures the request to ignore HTTP errors in the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,421,* @param ignoreHttpErrors set to true to ignore HTTP errors.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,409, @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,428,* @return true if invalid content-types will be ignored; false (default) if they will cause an IOException to
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,429,* be thrown.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,414, Configures the request to ignore the Content-Type of the response.
False,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,415, @param ignoreContentType set to true to ignore the content type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,434,* Configures the request to ignore the Content-Type of the response.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,435,* @param ignoreContentType set to true to ignore the content type.
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,561,* Add or update an input stream to this keyVal
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,562,* @param inputStream new input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,563,"* @return this KeyVal, for chaining"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,565,public KeyVal inputStream(InputStream inputStream);
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,568,"* Get the input stream associated with this keyval, if any"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,569,"* @return input stream if set, or null"
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,571,public InputStream inputStream();
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,574,* Does this keyval have an input stream?
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,575,* @return true if this keyval does indeed have an input stream
True,src/main/java/org/jsoup/Connection.java,src/main/java/org/jsoup/Connection.java,577,public boolean hasInputStream();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,11,import java.util.Random;
False,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,19,ublic class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,20,public final class DataUtil {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,24,private static final char[] mimeBoundaryChars =
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,25,"""-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"".toCharArray();"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,26,static final int boundaryLength = 32;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,71,* Writes the input stream to the output stream. Doesn't close them.
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,72,* @param in input stream to read from
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,73,* @param out output stream to write to
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,74,* @throws IOException on IO error
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,76,"static void crossStreams(final InputStream in, final OutputStream out) throws IOException {"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,77,final byte[] buffer = new byte[bufferSize];
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,78,int len;
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,79,while ((len = in.read(buffer)) != -1) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,80,"out.write(buffer, 0, len);"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,213,"* Creates a random string, suitable for use as a mime boundary"
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,215,static String mimeBoundary() {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,216,final StringBuilder mime = new StringBuilder(boundaryLength);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,217,final Random rand = new Random();
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,218,for (int i = 0; i < boundaryLength; i++) {
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,219,mime.append(mimeBoundaryChars[rand.nextInt(mimeBoundaryChars.length)]);
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,221,return mime.toString();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,31,"public static final String  CONTENT_ENCODING = ""Content-Encoding"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,32,"private static final String CONTENT_TYPE = ""Content-Type"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,33,"private static final String MULTIPART_FORM_DATA = ""multipart/form-data"";"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,53,private static String encodeMimeName(String val) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,54,if (val == null)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,55,return null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,56,"return val.replaceAll(""\"""", ""%22"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,134,"public Connection data(String key, String filename, InputStream inputStream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,135,"req.data(KeyVal.create(key, filename, inputStream));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,136,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,277,* Test if the request has a header with this value (case insensitive).
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,279,"public boolean hasHeaderWithValue(String name, String value) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,280,return hasHeader(name) && header(name).equalsIgnoreCase(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,298,"alidate.notNull(name, ""Cookie name must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,319,"Validate.notEmpty(name, ""Cookie name must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,310,"alidate.notEmpty(""Cookie name must not be empty"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,331,"Validate.notEmpty(name, ""Cookie name must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,315,"alidate.notEmpty(""Cookie name must not be empty"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,336,"Validate.notEmpty(name, ""Cookie name must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,325,ublic static class Request extends Base<Connection.Request> implements Connection.Request {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,346,public static class Request extends HttpConnection.Base<Connection.Request> implements Connection.Request {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,421,ublic static class Response extends Base<Connection.Response> implements Connection.Response {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,442,public static class Response extends HttpConnection.Base<Connection.Response> implements Connection.Response {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,464,f (req.method() == Connection.Method.GET && req.data().size() > 0)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,485,String mimeBoundary = null;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,486,if (req.method() == Connection.Method.GET && req.data().size() > 0) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,488,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,489,mimeBoundary = setupMultipartModeIfNeeded(req);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,471,"ritePost(req.data(), conn.getOutputStream());"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,496,"writePost(req, conn.getOutputStream(), mimeBoundary);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,514,"odyStream = res.hasHeader(""Content-Encoding"") && res.header(""Content-Encoding"").equalsIgnoreCase(""gzip"") ?"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,539,"bodyStream = res.hasHeaderWithValue(CONTENT_ENCODING, ""gzip"") ?"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,685,"rivate static void writePost(Collection<Connection.KeyVal> data, OutputStream outputStream) throws IOException {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,686,"utputStreamWriter w = new OutputStreamWriter(outputStream, DataUtil.defaultCharset);"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,687,oolean first = true;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,688,or (Connection.KeyVal keyVal : data) {
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,689,f (!first)
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,690,.append('&');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,691,lse
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,692,irst = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,710,private static String setupMultipartModeIfNeeded(final Connection.Request req) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,711,"// multipart mode, for files. add the header if we see something with an inputstream, and return a non-null boundary"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,712,boolean needsMulti = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,713,for (Connection.KeyVal keyVal : req.data()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,714,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,715,needsMulti = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,716,break;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,719,if (needsMulti) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,720,final String bound = DataUtil.mimeBoundary();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,721,"req.header(CONTENT_TYPE, MULTIPART_FORM_DATA + ""; boundary="" + bound);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,722,return bound;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,724,return null;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,694,".write(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset));"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,695,.write('=');
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,696,".write(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,727,"private static void writePost(final Connection.Request req, final OutputStream outputStream, final String bound) throws IOException {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,728,final Collection<Connection.KeyVal> data = req.data();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,729,"final BufferedWriter w = new BufferedWriter(new OutputStreamWriter(outputStream, DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,731,if (bound != null) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,732,// boundary will be set if we're in multipart mode
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,733,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,734,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,735,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,736,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,737,"w.write(""Content-Disposition: form-data; name=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,738,"w.write(encodeMimeName(keyVal.key())); // encodes "" to %22"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,739,"w.write(""\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,740,if (keyVal.hasInputStream()) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,741,"w.write(""; filename=\"""");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,742,w.write(encodeMimeName(keyVal.value()));
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,743,"w.write(""\""\r\nContent-Type: application/octet-stream\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,744,w.flush(); // flush
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,745,"DataUtil.crossStreams(keyVal.inputStream(), outputStream);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,746,outputStream.flush();
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,747,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,748,"w.write(""\r\n\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,749,w.write(keyVal.value());
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,751,"w.write(""\r\n"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,753,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,754,w.write(bound);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,755,"w.write(""--"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,756,} else {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,757,// regular form data (application/x-www-form-urlencoded)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,758,boolean first = true;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,759,for (Connection.KeyVal keyVal : data) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,760,if (!first)
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,761,w.append('&');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,762,else
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,763,first = false;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,765,"w.write(URLEncoder.encode(keyVal.key(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,766,w.write('=');
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,767,"w.write(URLEncoder.encode(keyVal.value(), DataUtil.defaultCharset));"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,821,private InputStream stream;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,751,"alidate.notEmpty(key, ""Data key must not be empty"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,752,"alidate.notNull(value, ""Data value must not be null"");"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,753,"eturn new KeyVal(key, value);"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,824,return new KeyVal().key(key).value(value);
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,756,"rivate KeyVal(String key, String value) {"
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,757,his.key = key;
False,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,758,his.value = value;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,827,"public static KeyVal create(String key, String filename, InputStream stream) {"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,828,return new KeyVal().key(key).value(filename).inputStream(stream);
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,831,private KeyVal() {}
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,853,public KeyVal inputStream(InputStream inputStream) {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,854,"Validate.notNull(value, ""Data input stream must not be null"");"
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,855,this.stream = inputStream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,856,return this;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,859,public InputStream inputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,860,return stream;
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,863,public boolean hasInputStream() {
True,src/main/java/org/jsoup/helper/HttpConnection.java,src/main/java/org/jsoup/helper/HttpConnection.java,864,return stream != null;
False,src/main/java/org/jsoup/helper/StringUtil.java,src/main/java/org/jsoup/helper/StringUtil.java,123, @return
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,85,boolean set = false;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,88,set = true;
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,90,if (!set) {
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,91,"Element option = el.select(""option"").first();"
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,92,if (option != null)
True,src/main/java/org/jsoup/nodes/FormElement.java,src/main/java/org/jsoup/nodes/FormElement.java,93,"data.add(HttpConnection.KeyVal.create(name, option.val()));"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,39,You can remove any setting from an existing whitelist with:
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,40,<ul>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,41,<li>{@link #removeTags}
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,42,<li>{@link #removeAttributes}
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,43,<li>{@link #removeEnforcedAttribute}
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,44,<li>{@link #removeProtocols}
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,45,</ul>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,46,<p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,204,"Remove a list of allowed elements from a whitelist. (If a tag is not allowed, it will be removed from the HTML.)"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,206,@param tags tag names to disallow
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,207,@return this (for chaining)
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,209,public Whitelist removeTags(String... tags) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,210,Validate.notNull(tags);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,212,for(String tag: tags) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,213,Validate.notEmpty(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,214,TagName tagName = TagName.valueOf(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,216,if(tagNames.remove(tagName)) { // Only look in sub-maps if tag was allowed
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,217,attributes.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,218,enforcedAttributes.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,219,protocols.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,222,return this;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,261,"Remove a list of allowed attributes from a tag. (If an attribute is not allowed on an element, it will be removed.)"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,262,<p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,263,"E.g.: <code>removeAttributes(""a"", ""href"", ""class"")</code> disallows <code>href</code> and <code>class</code>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,264,attributes on <code>a</code> tags.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,265,<p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,266,"To make an attribute invalid for <b>all tags</b>, use the pseudo tag <code>:all</code>, e.g."
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,267,"<code>removeAttributes("":all"", ""class"")</code>."
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,269,@param tag  The tag the attributes are for.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,270,@param keys List of invalid attributes for the tag
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,271,@return this (for chaining)
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,273,"public Whitelist removeAttributes(String tag, String... keys) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,274,Validate.notEmpty(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,275,Validate.notNull(keys);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,276,"Validate.isTrue(keys.length > 0, ""No attributes supplied."");"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,278,TagName tagName = TagName.valueOf(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,279,Set<AttributeKey> attributeSet = new HashSet<AttributeKey>();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,280,for (String key : keys) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,281,Validate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,282,attributeSet.add(AttributeKey.valueOf(key));
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,284,if(tagNames.contains(tagName) && attributes.containsKey(tagName)) { // Only look in sub-maps if tag was allowed
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,285,Set<AttributeKey> currentSet = attributes.get(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,286,currentSet.removeAll(attributeSet);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,288,if(currentSet.isEmpty()) // Remove tag from attribute map if no attributes are allowed for tag
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,289,attributes.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,291,"if(tag.equals("":all"")) // Attribute needs to be removed from all individually set tags"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,292,for(TagName name: attributes.keySet()) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,293,Set<AttributeKey> currentSet = attributes.get(name);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,294,currentSet.removeAll(attributeSet);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,296,if(currentSet.isEmpty()) // Remove tag from attribute map if no attributes are allowed for tag
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,297,attributes.remove(name);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,299,return this;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,336,Remove a previously configured enforced attribute from a tag.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,338,@param tag   The tag the enforced attribute is for.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,339,@param key   The attribute key
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,340,@return this (for chaining)
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,342,"public Whitelist removeEnforcedAttribute(String tag, String key) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,343,Validate.notEmpty(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,344,Validate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,346,TagName tagName = TagName.valueOf(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,347,if(tagNames.contains(tagName) && enforcedAttributes.containsKey(tagName)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,348,AttributeKey attrKey = AttributeKey.valueOf(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,349,"Map<AttributeKey, AttributeValue> attrMap = enforcedAttributes.get(tagName);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,350,attrMap.remove(attrKey);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,352,if(attrMap.isEmpty()) // Remove tag from enforced attribute map if no enforced attributes are present
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,353,enforcedAttributes.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,355,return this;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,382,<p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,383,"To allow a link to an in-page URL anchor (i.e. <code>&lt;a href=""#anchor""&gt;</code>, add a <code>#</code>:<br>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,384,"E.g.: <code>addProtocols(""a"", ""href"", ""#"")</code>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,422,Remove allowed URL protocols for an element's URL attribute.
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,423,<p/>
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,424,"E.g.: <code>removeProtocols(""a"", ""href"", ""ftp"")</code>"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,426,@param tag       Tag the URL protocol is for
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,427,@param key       Attribute key
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,428,@param protocols List of invalid protocols
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,429,"@return this, for chaining"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,431,"public Whitelist removeProtocols(String tag, String key, String... protocols) {"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,432,Validate.notEmpty(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,433,Validate.notEmpty(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,434,Validate.notNull(protocols);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,436,TagName tagName = TagName.valueOf(tag);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,437,AttributeKey attrKey = AttributeKey.valueOf(key);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,439,if(this.protocols.containsKey(tagName)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,440,"Map<AttributeKey, Set<Protocol>> attrMap = this.protocols.get(tagName);"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,441,if(attrMap.containsKey(attrKey)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,442,Set<Protocol> protSet = attrMap.get(attrKey);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,443,for (String protocol : protocols) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,444,Validate.notEmpty(protocol);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,445,Protocol prot = Protocol.valueOf(protocol);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,446,protSet.remove(prot);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,449,if(protSet.isEmpty()) { // Remove protocol set if empty
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,450,attrMap.remove(attrKey);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,451,if(attrMap.isEmpty()) // Remove entry for tag if empty
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,452,this.protocols.remove(tagName);
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,456,return this;
False,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,368,"tring prot = protocol.toString() + "":"";"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,504,String prot = protocol.toString();
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,506,"if (prot.equals(""#"")) { // allows anchor links"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,507,if (isValidAnchor(value)) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,508,return true;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,509,} else {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,510,continue;
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,514,"prot += "":"";"
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,523,private boolean isValidAnchor(String value) {
True,src/main/java/org/jsoup/safety/Whitelist.java,src/main/java/org/jsoup/safety/Whitelist.java,524,"return value.startsWith(""#"") && !value.matches("".*\\s.*"");"
False,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,mport static org.junit.Assert.assertEquals;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,10,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,67,@Test
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,68,public void generatesMimeBoundaries() {
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,69,String m1 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,70,String m2 = DataUtil.mimeBoundary();
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,72,"assertEquals(DataUtil.boundaryLength, m1.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,73,"assertEquals(DataUtil.boundaryLength, m2.length());"
True,src/test/java/org/jsoup/helper/DataUtilTest.java,src/test/java/org/jsoup/helper/DataUtilTest.java,74,"assertNotSame(m1, m2);"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,5,import org.jsoup.integration.ParseTest;
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,144,@Test public void inputStream() {
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,145,"Connection.KeyVal kv = HttpConnection.KeyVal.create(""file"", ""thumb.jpg"", ParseTest.inputStreamFrom(""Check""));"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,146,"assertEquals(""file"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,147,"assertEquals(""thumb.jpg"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,148,assertTrue(kv.hasInputStream());
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,150,"kv = HttpConnection.KeyVal.create(""one"", ""two"");"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,151,"assertEquals(""one"", kv.key());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,152,"assertEquals(""two"", kv.value());"
True,src/test/java/org/jsoup/helper/HttpConnectionTest.java,src/test/java/org/jsoup/helper/HttpConnectionTest.java,153,assertFalse(kv.hasInputStream());
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,ublic File getFile(String resourceName) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,171,public static File getFile(String resourceName) {
False,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,rivate InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/ParseTest.java,src/test/java/org/jsoup/integration/ParseTest.java,180,public static InputStream inputStreamFrom(String s) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,8,import org.jsoup.nodes.FormElement;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,12,import java.io.File;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,13,import java.io.FileInputStream;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,14,import java.io.FileNotFoundException;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,354,"* Test fetching a form, and submitting it with a file attached."
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,356,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,357,public void postHtmlFile() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,358,"Document index = Jsoup.connect(""http://direct.infohound.net/tidy/"").get();"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,359,"FormElement form = index.select(""[name=tidy]"").forms().get(0);"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,360,Connection post = form.submit();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,362,"File uploadFile = ParseTest.getFile(""/htmltests/google-ipod.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,363,FileInputStream stream = new FileInputStream(uploadFile);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,365,// todo: need to add a better way to get an existing data field
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,366,for (Connection.KeyVal keyVal : post.request().data()) {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,367,"if (keyVal.key().equals(""_file"")) {"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,368,"keyVal.value(""check.html"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,369,keyVal.inputStream(stream);
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,373,Connection.Response res;
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,374,try {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,375,res = post.execute();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,376,} finally {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,377,stream.close();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,380,Document out = res.parse();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,381,"assertTrue(out.text().contains(""HTML Tidy Complete""));"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,385,* Tests upload of binary content to a remote service.
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,387,@Test
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,388,public void postJpeg() throws IOException {
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,389,"File thumb = ParseTest.getFile(""/htmltests/thumb.jpg"");"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,390,Document result = Jsoup
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,391,".connect(""http://regex.info/exif.cgi"")"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,392,".data(""f"", thumb.getName(), new FileInputStream(thumb))"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,393,.post();
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,395,"assertEquals(""Baseline DCT, Huffman coding"", result.select(""td:contains(Process) + td"").text());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,49,@Test public void testRemoveTags() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,50,"String h = ""<div><p><A HREF='HTTP://nice.com'>Nice</a></p><blockquote>Hello</blockquote>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,51,"String cleanHtml = Jsoup.clean(h, Whitelist.basic().removeTags(""a""));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,53,"assertEquals(""<p>Nice</p><blockquote>Hello</blockquote>"", TextUtil.stripNewlines(cleanHtml));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,56,@Test public void testRemoveAttributes() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,57,"String h = ""<div><p>Nice</p><blockquote cite='http://example.com/quotations'>Hello</blockquote>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,58,"String cleanHtml = Jsoup.clean(h, Whitelist.basic().removeAttributes(""blockquote"", ""cite""));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,60,"assertEquals(""<p>Nice</p><blockquote>Hello</blockquote>"", TextUtil.stripNewlines(cleanHtml));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,63,@Test public void testRemoveEnforcedAttributes() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,64,"String h = ""<div><p><A HREF='HTTP://nice.com'>Nice</a></p><blockquote>Hello</blockquote>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,65,"String cleanHtml = Jsoup.clean(h, Whitelist.basic().removeEnforcedAttribute(""a"", ""rel""));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,67,"assertEquals(""<p><a href=\""http://nice.com\"">Nice</a></p><blockquote>Hello</blockquote>"","
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,68,TextUtil.stripNewlines(cleanHtml));
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,71,@Test public void testRemoveProtocols() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,72,"String h = ""<p>Contact me <a href='mailto:info@example.com'>here</a></p>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,73,"String cleanHtml = Jsoup.clean(h, Whitelist.basic().removeProtocols(""a"", ""href"", ""ftp"", ""mailto""));"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,75,"assertEquals(""<p>Contact me <a rel=\""nofollow\"">here</a></p>"","
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,76,TextUtil.stripNewlines(cleanHtml));
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,109,@Test public void testCleanAnchorProtocol() {
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,110,"String validAnchor = ""<a href=\""#valid\"">Valid anchor</a>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,111,"String invalidAnchor = ""<a href=\""#anchor with spaces\"">Invalid anchor</a>"";"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,113,// A Whitelist that does not allow anchors will strip them out.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,114,"String cleanHtml = Jsoup.clean(validAnchor, Whitelist.relaxed());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,115,"assertEquals(""<a>Valid anchor</a>"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,117,"cleanHtml = Jsoup.clean(invalidAnchor, Whitelist.relaxed());"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,118,"assertEquals(""<a>Invalid anchor</a>"", cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,120,// A Whitelist that allows them will keep them.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,121,"Whitelist relaxedWithAnchor = Whitelist.relaxed().addProtocols(""a"", ""href"", ""#"");"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,123,"cleanHtml = Jsoup.clean(validAnchor, relaxedWithAnchor);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,124,"assertEquals(validAnchor, cleanHtml);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,126,// An invalid anchor is never valid.
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,127,"cleanHtml = Jsoup.clean(invalidAnchor, relaxedWithAnchor);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,128,"assertEquals(""<a>Invalid anchor</a>"", cleanHtml);"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,273,@Test public void classWithHyphen() {
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,274,"Document doc = Jsoup.parse(""<p class='tab-nav'>Check</p>"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,275,"Elements els = doc.getElementsByClass(""tab-nav"");"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,276,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/ElementsTest.java,src/test/java/org/jsoup/select/ElementsTest.java,277,"assertEquals(""Check"", els.text());"
