is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,217,* Returns a deep copy of this node's children. Changes made to these nodes will not be reflected in the original
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,218,* nodes
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,219,* @return a deep copy of this node's children
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,221,public List<Node> childNodesCopy() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,222,List<Node> children = new ArrayList<Node>(childNodes.size());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,223,for (Node node : childNodes) {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,224,children.add(node.clone());
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,226,return children;
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,226,@Test public void childNodesCopy() {
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,227,"Document doc = Jsoup.parse(""<div id=1>Text 1 <p>One</p> Text 2 <p>Two<p>Three</div><div id=2>"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,228,"Element div1 = doc.select(""#1"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,229,"Element div2 = doc.select(""#2"").first();"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,230,List<Node> divChildren = div1.childNodesCopy();
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,231,"assertEquals(5, divChildren.size());"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,232,TextNode tn1 = (TextNode) div1.childNode(0);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,233,TextNode tn2 = (TextNode) divChildren.get(0);
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,234,"tn2.text(""Text 1 updated"");"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,235,"assertEquals(""Text 1 "", tn1.text());"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,236,"div2.insertChildren(-1, divChildren);"
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,237,"assertEquals(""<div id=\""1\"">Text 1 <p>One</p> Text 2 <p>Two</p><p>Three</p></div><div id=\""2\"">Text 1 updated"""
True,src/test/java/org/jsoup/nodes/NodeTest.java,src/test/java/org/jsoup/nodes/NodeTest.java,238,"+""<p>One</p> Text 2 <p>Two</p><p>Three</p></div>"", TextUtil.stripNewlines(doc.body().html()));"
