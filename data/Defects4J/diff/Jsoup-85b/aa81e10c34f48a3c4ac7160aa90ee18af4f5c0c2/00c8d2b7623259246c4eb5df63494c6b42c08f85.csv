is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,7,import java.io.BufferedReader;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,10,import java.io.InputStreamReader;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,10,mport java.util.*;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,12,import java.util.Arrays;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,13,import java.util.HashMap;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,14,import java.util.regex.Matcher;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,15,import java.util.regex.Pattern;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,17,import static org.jsoup.nodes.Entities.EscapeMode.base;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,18,import static org.jsoup.nodes.Entities.EscapeMode.extended;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,26,"private static Pattern entityPattern = Pattern.compile(""^(\\w+)=(\\w+)(?:,(\\w+))?;(\\w+)$"");"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,27,static final int empty = -1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,28,"static final String emptyName = """";"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,29,static final int codepointRadix = 36;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,20,"html(xhtmlByVal),"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,33,"xhtml(""entities-xhtml.properties"", 4),"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,22,"ase(baseByVal),"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,35,"base(""entities-base.properties"", 106),"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,24,xtended(fullByVal);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,37,"extended(""entities-full.properties"", 2125);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,39,// table of named references to their codepoints. sorted so we can binary search. built by BuildEntities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,40,private String[] nameKeys;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,41,private int[] codeVals; // limitation is the few references with multiple characters; those go into multipoints.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,43,// table of codepoints to named entities.
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,44,private int[] codeKeys; // we don' support multicodepoints to single named value currently
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,45,private String[] nameVals;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,26,"rivate Map<Character, String> map;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,47,"EscapeMode(String file, int size) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,48,"load(this, file, size);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,51,int codepointForName(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,52,"int index = Arrays.binarySearch(nameKeys, name);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,53,return index >= 0 ? codeVals[index] : empty;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,28,"scapeMode(Map<Character, String> map) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,29,his.map = map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,56,String nameForCodepoint(final int codepoint) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,57,"final int index = Arrays.binarySearch(codeKeys, codepoint);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,58,if (index >= 0) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,59,"// the results are ordered so lower case versions of same codepoint come after uppercase, and we prefer to emit lower"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,60,// (and binary search for same item with multi results is undefined
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,61,return (index < nameVals.length-1 && codeKeys[index+1] == codepoint) ?
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,62,nameVals[index+1] : nameVals[index];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,64,return emptyName;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,32,"ublic Map<Character, String> getMap() {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,33,eturn map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,67,private int size() {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,68,return nameKeys.length;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,37,"rivate static final Map<String, Character> full;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,38,"rivate static final Map<Character, String> xhtmlByVal;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,39,"rivate static final Map<String, Character> base;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,40,"rivate static final Map<Character, String> baseByVal;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,41,"rivate static final Map<Character, String> fullByVal;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,72,"private static final HashMap<String, String> multipoints = new HashMap<String, String>(); // name -> multiple character references"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,43,rivate Entities() {}
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,74,private Entities() {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,50,ublic static boolean isNamedEntity(String name) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,51,eturn full.containsKey(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,82,public static boolean isNamedEntity(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,83,return extended.codepointForName(name) != empty;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,60,ublic static boolean isBaseNamedEntity(String name) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,61,eturn base.containsKey(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,public static boolean isBaseNamedEntity(final String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,93,return base.codepointForName(name) != empty;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,100,* @deprecated does not support characters outside the BMP or multiple character names
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,70,eturn full.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,103,return (char) extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,107,* Get the character(s) represented by the named entitiy
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,108,"* @param name entity (e.g. ""lt"" or ""amp"")"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,109,"* @return the string value of the character(s) represented by this entity, or """" if not defined"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,111,public static String getByName(String name) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,112,String val = multipoints.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,113,if (val != null)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,114,return val;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,115,int codepoint = extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,116,if (codepoint != empty)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,117,"return new String(new int[]{codepoint}, 0, 1);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,118,return emptyName;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,121,"public static int codepointsForName(final String name, final int[] codepoints) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,122,String val = multipoints.get(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,123,if (val != null) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,124,codepoints[0] = val.codePointAt(0);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,125,codepoints[1] = val.codePointAt(1);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,126,return 2;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,128,int codepoint = extended.codepointForName(name);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,129,if (codepoint != empty) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,130,codepoints[0] = codepoint;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,131,return 1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,133,return 0;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,"inal Map<Character, String> map = escapeMode.getMap();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,147,lse if (map.containsKey(c))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,148,ccum.append('&').append(map.get(c)).append(';');
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,150,"ccum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,210,"appendEncoded(accum, escapeMode, codePoint);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,157,"ccum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,217,"appendEncoded(accum, escapeMode, codePoint);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,222,"private static void appendEncoded(Appendable accum, EscapeMode escapeMode, int codePoint) throws IOException {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,223,final String name = escapeMode.nameForCodepoint(codePoint);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,224,if (name != emptyName) // ok for identity check
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,225,accum.append('&').append(name).append(';');
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,226,else
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,227,"accum.append(""&#x"").append(Integer.toHexString(codePoint)).append(';');"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,281,"private static void load(EscapeMode e, String file, int size) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,282,e.nameKeys = new String[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,283,e.codeVals = new int[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,284,e.codeKeys = new int[size];
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,285,e.nameVals = new String[size];
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,215,/ xhtml has restricted entities
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,216,rivate static final Object[][] xhtmlArray = {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,217,"""quot"", 0x00022},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,218,"""amp"", 0x00026},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,219,"""lt"", 0x0003C},"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,220,"""gt"", 0x0003E}"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,223,tatic {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,224,"htmlByVal = new HashMap<Character, String>();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,225,"ase = loadEntities(""entities-base.properties"");  // most common / default"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,226,aseByVal = toCharacterKey(base);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,227,"ull = loadEntities(""entities-full.properties""); // extended and overblown."
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,228,ullByVal = toCharacterKey(full);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,230,or (Object[] entity : xhtmlArray) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,231,haracter c = Character.valueOf((char) ((Integer) entity[1]).intValue());
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,232,"htmlByVal.put(c, ((String) entity[0]));"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,236,"rivate static Map<String, Character> loadEntities(String filename) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,237,roperties properties = new Properties();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,238,"ap<String, Character> entities = new HashMap<String, Character>();"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,287,InputStream stream = Entities.class.getResourceAsStream(file);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,288,if (stream == null)
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,289,"throw new IllegalStateException(""Could not read resource "" + file + "". Make sure you copy resources for "" + Entities.class.getCanonicalName());"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,290,BufferedReader reader = new BufferedReader(new InputStreamReader(stream));
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,291,String entry;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,292,int i = 0;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,240,nputStream in = Entities.class.getResourceAsStream(filename);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,241,roperties.load(in);
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,242,n.close();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,243, catch (IOException e) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,244,"hrow new MissingResourceException(""Error loading entities resource: "" + e.getMessage(), ""Entities"", filename);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,294,while ((entry = reader.readLine()) != null) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,295,"// NotNestedLessLess=10913,824;1887"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,296,final Matcher match = entityPattern.matcher(entry);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,297,if (match.find()) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,298,final String name = match.group(1);
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,299,"final int cp1 = Integer.parseInt(match.group(2), codepointRadix);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,300,"final int cp2 = match.group(3) != null ? Integer.parseInt(match.group(3), codepointRadix) : empty;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,301,"final int index = Integer.parseInt(match.group(4), codepointRadix);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,247,or (Map.Entry entry: properties.entrySet()) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,248,"haracter val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,249,tring name = (String) entry.getKey();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,250,"ntities.put(name, val);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,252,eturn entities;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,303,e.nameKeys[i] = name;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,304,e.codeVals[i] = cp1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,305,e.codeKeys[index] = cp1;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,306,e.nameVals[index] = name;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,255,"rivate static Map<Character, String> toCharacterKey(Map<String, Character> inMap) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,256,"ap<Character, String> outMap = new HashMap<Character, String>();"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,257,"or (Map.Entry<String, Character> entry: inMap.entrySet()) {"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,258,haracter character = entry.getValue();
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,259,tring name = entry.getKey();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,308,if (cp2 != empty) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,309,"multipoints.put(name, new String(new int[]{cp1, cp2}, 0, 2));"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,311,i++;
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,261,f (outMap.containsKey(character)) {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,262,"/ dupe, prefer the lower case version"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,263,f (name.toLowerCase().equals(name))
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,264,"utMap.put(character, name);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,265, else {
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,266,"utMap.put(character, name);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,315,reader.close();
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,316,} catch (IOException err) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,317,"throw new IllegalStateException(""Error reading resource "" + file);"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,269,eturn outMap;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,185,final void appendAttributeValue(int[] appendCodepoints) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,186,ensureAttributeValue();
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,187,for (int codepoint : appendCodepoints) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,188,pendingAttributeValue.appendCodePoint(codepoint);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,104,void emit(int[] codepoints) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,105,"emit(new String(codepoints, 0, codepoints.length));"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,125,inal private char[] charRefHolder = new char[1]; // holder to not have to keep creating arrays
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,126,"har[] consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,129,final private int[] codepointHolder = new int[1]; // holder to not have to keep creating arrays
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,130,final private int[] multipointHolder = new int[2];
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,131,"int[] consumeCharacterReference(Character additionalAllowedCharacter, boolean inAttribute) {"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,134,inal char[] charRef = charRefHolder;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,139,final int[] codeRef = codepointHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,154,harRef[0] = replacementChar;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,155,eturn charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,159,codeRef[0] = replacementChar;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,return codeRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,159,f (charval < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,160,harRef[0] = (char) charval;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,161,eturn charRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,162, else
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,163,eturn Character.toChars(charval);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,164,codeRef[0] = charval;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,165,return codeRef;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,185,harRef[0] = Entities.getCharacterByName(nameRef);
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,186,eturn charRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,187,"int numChars = Entities.codepointsForName(nameRef, multipointHolder);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,188,if (numChars == 1) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,189,codeRef[0] = multipointHolder[0];
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,190,return codeRef;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,191,} else if (numChars ==2) {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,192,return multipointHolder;
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,193,} else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,194,"Validate.fail(""Unexpected characters returned for "" + nameRef);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,195,return multipointHolder;
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,268,"har[] c = consumeCharacterReference(null, inAttribute);"
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,278,"int[] c = consumeCharacterReference(null, inAttribute);"
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,271,lse
False,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,272,uilder.append(c);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,281,else {
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,282,builder.appendCodePoint(c[0]);
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,283,if (c.length == 2)
True,src/main/java/org/jsoup/parser/Tokeniser.java,src/main/java/org/jsoup/parser/Tokeniser.java,284,builder.appendCodePoint(c[1]);
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,740,"har[] ref = t.consumeCharacterReference('""', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,740,"int[] ref = t.consumeCharacterReference('""', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,772,"har[] ref = t.consumeCharacterReference('\'', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,772,"int[] ref = t.consumeCharacterReference('\'', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,806,"har[] ref = t.consumeCharacterReference('>', true);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,806,"int[] ref = t.consumeCharacterReference('>', true);"
False,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1683,"har[] c = t.consumeCharacterReference(null, false);"
True,src/main/java/org/jsoup/parser/TokeniserState.java,src/main/java/org/jsoup/parser/TokeniserState.java,1683,"int[] c = t.consumeCharacterReference(null, false);"
False,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,39,"rivate static String browserUa = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36"";"
True,src/test/java/org/jsoup/integration/UrlConnectTest.java,src/test/java/org/jsoup/integration/UrlConnectTest.java,39,"public static String browserUa = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,1,package org.jsoup.nodes;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,3,import com.google.gson.Gson;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,4,import com.google.gson.reflect.TypeToken;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,5,import org.jsoup.Connection;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,6,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,7,import org.jsoup.integration.UrlConnectTest;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,8,import org.jsoup.nodes.Entities;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,10,import java.io.File;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,11,import java.io.FileWriter;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,12,import java.io.IOException;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,13,import java.util.ArrayList;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,14,import java.util.Collections;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,15,import java.util.Comparator;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,16,import java.util.Map;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,19,"* Fetches HTML entity names from w3.org json, and outputs data files for optimized used in Entities."
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,20,"* I refuse to believe that entity names like ""NotNestedLessLess"" are valuable or useful for HTML authors. Implemented"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,21,* only to be complete.
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,23,class BuildEntities {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,24,"private static final String projectDir = ""/Users/jhy/projects/jsoup"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,26,public static void main(String[] args) throws IOException {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,27,"String url = ""https://www.w3.org/TR/2012/WD-html5-20121025/entities.json"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,28,Connection.Response res = Jsoup.connect(url)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,29,.ignoreContentType(true)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,30,.userAgent(UrlConnectTest.browserUa)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,31,.execute();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,33,Gson gson = new Gson();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,34,"Map<String, CharacterRef> input = gson.fromJson(res.body(),"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,35,"new TypeToken<Map<String, CharacterRef>>() {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,36,}.getType());
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,39,// build name sorted base and full character lists:
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,40,ArrayList<CharacterRef> base = new ArrayList<CharacterRef>();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,41,ArrayList<CharacterRef> full = new ArrayList<CharacterRef>();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,43,"for (Map.Entry<String, CharacterRef> entry : input.entrySet()) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,44,"String name = entry.getKey().substring(1); // name is like &acute or &acute; , trim &"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,45,CharacterRef ref = entry.getValue();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,46,"if (name.endsWith("";"")) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,47,"name = name.substring(0, name.length() - 1);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,48,full.add(ref);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,49,} else {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,50,base.add(ref);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,52,ref.name = name;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,54,"Collections.sort(base, byName);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,55,"Collections.sort(full, byName);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,57,// now determine code point order
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,58,ArrayList<CharacterRef> baseByCode = new ArrayList<CharacterRef>(base);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,59,ArrayList<CharacterRef> fullByCode = new ArrayList<CharacterRef>(full);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,60,"Collections.sort(baseByCode, byCode);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,61,"Collections.sort(fullByCode, byCode);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,63,// and update their codepoint index. Don't
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,64,"ArrayList<CharacterRef>[] codelists = new ArrayList[]{baseByCode, fullByCode};"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,65,for (ArrayList<CharacterRef> codelist : codelists) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,66,for (int i = 0; i < codelist.size(); i++) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,67,codelist.get(i).codeIndex = i;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,71,// now write them
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,72,"persist(""entities-full.properties"", full);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,73,"persist(""entities-base.properties"", base);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,75,"System.out.println(""Full size: "" + full.size() + "", base size: "" + base.size());"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,78,"private static void persist(String name, ArrayList<CharacterRef> refs) throws IOException {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,79,"String base = projectDir + ""/src/main/java/org/jsoup/nodes"";"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,80,"File file = new File(base, name);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,81,"FileWriter writer = new FileWriter(file, false);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,82,for (CharacterRef ref : refs) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,83,"writer.append(ref.toString()).append(""\n"");"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,85,writer.close();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,89,private static class CharacterRef {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,90,int[] codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,91,String name;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,92,int codeIndex;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,94,@Override
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,95,public String toString() {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,96,return name
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,98,+ d(codepoints[0])
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,99,"+ (codepoints.length > 1 ? "","" + d(codepoints[1]) : """")"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,100,"+ "";"" + d(codeIndex);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,104,private static String d(int d) {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,105,"return Integer.toString(d, Entities.codepointRadix);"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,108,private static class ByName implements Comparator<CharacterRef> {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,109,"public int compare(CharacterRef o1, CharacterRef o2) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,110,return o1.name.compareTo(o2.name);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,114,private static class ByCode implements Comparator<CharacterRef> {
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,115,"public int compare(CharacterRef o1, CharacterRef o2) {"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,116,int[] c1 = o1.codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,117,int[] c2 = o2.codepoints;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,118,int first = c1[0] - c2[0];
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,119,if (first != 0)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,120,return first;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,121,"if (c1.length == 1 && c2.length == 1) { // for the same code, use the shorter name"
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,122,int len = o2.name.length() - o1.name.length();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,123,if (len != 0)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,124,return len;
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,125,return o1.name.compareTo(o2.name);
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,127,if (c1.length == 2 && c2.length == 2)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,128,return c1[1] - c2[1];
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,129,else
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,130,return c2.length - c1.length; // pushes multi down the list so hits on singles first (don't support multi lookup by codepoint yet)
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,134,private static ByName byName = new ByName();
True,src/test/java/org/jsoup/nodes/BuildEntities.java,src/test/java/org/jsoup/nodes/BuildEntities.java,135,private static ByCode byCode = new ByCode();
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,34,@Test public void escapedSupplemtary() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,35,"String text = ""\uD835\uDD59"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,36,"String escapedAscii = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(base));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,37,"assertEquals(""&#x1d559;"", escapedAscii);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,38,"String escapedAsciiFull = Entities.escape(text, new OutputSettings().charset(""ascii"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,39,"assertEquals(""&hopf;"", escapedAsciiFull);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,40,"String escapedUtf= Entities.escape(text, new OutputSettings().charset(""UTF-8"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,41,"assertEquals(text, escapedUtf);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,44,@Test public void unescapeMultiChars() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,45,"String text = ""&NestedGreaterGreater; &nGg; &nGt; &nGtv; &Gt; &gg;""; // gg is not combo, but 8811 could conflict with NestedGreaterGreater or others"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,46,"String un = ""≫ ⋙̸ ≫⃒ ≫̸ ≫ ≫"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,47,"assertEquals(un, Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,48,"String escaped = Entities.escape(un, new OutputSettings().charset(""ascii"").escapeMode(extended));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,49,"assertEquals(""&Gt; &Gg;&#x338; &Gt;&#x20d2; &Gt;&#x338; &Gt; &Gt;"", escaped);"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,50,"assertEquals(un, Entities.unescape(escaped));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,53,@Test public void xhtml() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,54,"String text = ""&amp; &gt; &lt; &quot;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,55,"assertEquals(38, xhtml.codepointForName(""amp""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,56,"assertEquals(62, xhtml.codepointForName(""gt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,57,"assertEquals(60, xhtml.codepointForName(""lt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,58,"assertEquals(34, xhtml.codepointForName(""quot""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,60,"assertEquals(""amp"", xhtml.nameForCodepoint(38));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,61,"assertEquals(""gt"", xhtml.nameForCodepoint(62));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,62,"assertEquals(""lt"", xhtml.nameForCodepoint(60));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,63,"assertEquals(""quot"", xhtml.nameForCodepoint(34));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,66,@Test public void getByName() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,67,"assertEquals(""≫⃒"", Entities.getByName(""nGt""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,68,"assertEquals(""fj"", Entities.getByName(""fjlig""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,69,"assertEquals(""≫"", Entities.getByName(""gg""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,70,"assertEquals(""©"", Entities.getByName(""copy""));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,81,@Test public void notMissingMultis() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,82,"String text = ""&nparsl;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,83,"String un = ""\u2AFD\u20E5"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,84,"assertEquals(un, Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,87,@Test public void notMissingSupplementals() {
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,88,"String text = ""&npolint; &qfr;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,89,"String un = ""⨔ \uD835\uDD2E""; // 𝔮"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,90,"assertEquals(un, Entities.unescape(text));"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,43,"tring text = ""Hello &amp;&LT&gt; &reg &angst; &angst &#960; &#960 &#x65B0; there &! &frac34; &copy; &COPY;"";"
False,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,44,"ssertEquals(""Hello &<> ® Å &angst π π 新 there &! ¾ © ©"", Entities.unescape(text));"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,94,"String text = ""Hello &AElig; &amp;&LT&gt; &reg &angst; &angst &#960; &#960 &#x65B0; there &! &frac34; &copy; &COPY;"";"
True,src/test/java/org/jsoup/nodes/EntitiesTest.java,src/test/java/org/jsoup/nodes/EntitiesTest.java,95,"assertEquals(""Hello Æ &<> ® Å &angst π π 新 there &! ¾ © ©"", Entities.unescape(text));"
False,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,213,"ssertEquals(""<div><p>&bernou;</p></div>"", customOut);"
True,src/test/java/org/jsoup/safety/CleanerTest.java,src/test/java/org/jsoup/safety/CleanerTest.java,213,"assertEquals(""<div><p>&Bscr;</p></div>"", customOut); // entities now prefers shorted names if aliased"
