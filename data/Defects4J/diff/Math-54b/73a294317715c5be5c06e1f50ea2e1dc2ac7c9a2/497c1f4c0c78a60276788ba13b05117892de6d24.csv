is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,29,mport org.apache.commons.math.util.Pair;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,29,import org.apache.commons.math.util.SerializablePair;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,44,"rivate final List<Pair<Localizable, Object[]>> messages"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,45," new ArrayList<Pair<Localizable, Object[]>>();"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,44,"private final List<SerializablePair<Localizable, Object[]>> messages"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,45,"= new ArrayList<SerializablePair<Localizable, Object[]>>();"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,68,"essages.add(new Pair<Localizable, Object[]>(pattern, ArgUtils.flatten(arguments)));"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,68,"messages.add(new SerializablePair<Localizable, Object[]>(pattern,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,69,ArgUtils.flatten(arguments)));
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,132,"or (Pair<Localizable, Object[]> pair : messages) {"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,133,"inal MessageFormat fmt = new MessageFormat(pair.getKey().getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,133,"for (SerializablePair<Localizable, Object[]> pair : messages) {"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,134,"final MessageFormat fmt = new MessageFormat(pair.getKey().getLocalizedString(locale),"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,135,locale);
False,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,52,"air(Pair<? extends K, ? extends V> entry) {"
True,src/main/java/org/apache/commons/math/util/Pair.java,src/main/java/org/apache/commons/math/util/Pair.java,52,"public Pair(Pair<? extends K, ? extends V> entry) {"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,17,package org.apache.commons.math.util;
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,19,import java.io.Serializable;
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,22,* Generic pair.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,23,* Immutable class.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,25,* @param <K> Key type.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,26,* @param <V> Value type.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,28,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,29,* @since 3.0
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,31,"public class SerializablePair<K extends Serializable, V extends Serializable>"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,32,"extends Pair<K, V>"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,33,implements Serializable {
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,35,* Create an entry representing a mapping from the specified key to the
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,36,* specified value.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,38,* @param k Key.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,39,* @param v Value.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,41,"public SerializablePair(K k, V v) {"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,42,"super(k, v);"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,46,* Create an entry representing the same mapping as the specified entry.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,48,* @param entry Entry to copy.
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,50,"public SerializablePair(SerializablePair<? extends K, ? extends V> entry) {"
True,src/main/java/org/apache/commons/math/util/SerializablePair.java,src/main/java/org/apache/commons/math/util/SerializablePair.java,51,super(entry);
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,126,/ XXX Why was the message supposed to be empty?
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,127,"/ With the current code it is ""org.apache.commons.math.util.Pair""."
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,128,"/ assertEquals(0, ioe.getMessage().length());"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,126,"assertEquals(0, ioe.getMessage().length());"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,142,hrow new MathUserException();
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,139,"throw new MathUserException(LocalizedFormats.SIMPLE_MESSAGE, """");"
