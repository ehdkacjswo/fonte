is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,28,ublic class OpenMapRealMatrix extends AbstractRealMatrix {
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,28,public class OpenMapRealMatrix extends AbstractRealMatrix implements SparseRealMatrix {
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,66,ublic RealMatrix copy() {
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,66,public OpenMapRealMatrix copy() {
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,72,"ublic RealMatrix createMatrix(int rowDimension, int columnDimension)"
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,72,"public OpenMapRealMatrix createMatrix(int rowDimension, int columnDimension)"
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,85,ublic RealMatrix add(final RealMatrix m)
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,85,public OpenMapRealMatrix add(final RealMatrix m)
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,90,eturn super.add(m);
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,90,return (OpenMapRealMatrix) super.add(m);
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,101,ublic RealMatrix add(OpenMapRealMatrix m) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,101,public OpenMapRealMatrix add(OpenMapRealMatrix m) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,106,inal RealMatrix out = new OpenMapRealMatrix(this);
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,106,final OpenMapRealMatrix out = new OpenMapRealMatrix(this);
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,120,ublic RealMatrix subtract(final RealMatrix m)
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,120,public OpenMapRealMatrix subtract(final RealMatrix m)
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,125,eturn super.add(m);
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,125,return (OpenMapRealMatrix) super.subtract(m);
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,136,ublic RealMatrix subtract(OpenMapRealMatrix m) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,136,public OpenMapRealMatrix subtract(OpenMapRealMatrix m) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,141,inal RealMatrix out = new OpenMapRealMatrix(this);
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,141,final OpenMapRealMatrix out = new OpenMapRealMatrix(this);
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,289,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,290,public MatrixShape getShape() {
True,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java,291,return MatrixShape.Any;
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,28,ublic class OpenMapRealVector implements RealVector {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,28,public class OpenMapRealVector implements SparseRealVector {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,49," #SparseRealVector(OpenMapRealVector, int)} constructor"
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,49,"* #OpenMapRealVector(OpenMapRealVector, int)} constructor"
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,223,ublic RealVector add(RealVector v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,223,public OpenMapRealVector add(RealVector v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,232, Optimized method to add two SparseRealVectors.
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,232,* Optimized method to add two OpenMapRealVectors.
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,254,ublic RealVector add(double[] v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,254,public OpenMapRealVector add(double[] v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,264, Optimized method to append a SparseRealVector.
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,264,* Optimized method to append a OpenMapRealVector.
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,279,ublic RealVector append(RealVector v) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,279,public OpenMapRealVector append(RealVector v) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,287,ublic RealVector append(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,288,"ealVector res = new OpenMapRealVector(this, 1);"
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,287,public OpenMapRealVector append(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,288,"OpenMapRealVector res = new OpenMapRealVector(this, 1);"
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,294,ublic RealVector append(double[] a) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,295,"ealVector res = new OpenMapRealVector(this, a.length);"
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,294,public OpenMapRealVector append(double[] a) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,295,"OpenMapRealVector res = new OpenMapRealVector(this, a.length);"
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,303,ublic RealVector copy() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,303,public OpenMapRealVector copy() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,336,ublic RealVector ebeDivide(RealVector v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,336,public OpenMapRealVector ebeDivide(RealVector v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,348,ublic RealVector ebeDivide(double[] v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,348,public OpenMapRealVector ebeDivide(double[] v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,360,ublic RealVector ebeMultiply(RealVector v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,360,public OpenMapRealVector ebeMultiply(RealVector v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,372,ublic RealVector ebeMultiply(double[] v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,372,public OpenMapRealVector ebeMultiply(double[] v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,384,"ublic RealVector getSubVector(int index, int n) throws MatrixIndexException {"
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,384,"public OpenMapRealVector getSubVector(int index, int n) throws MatrixIndexException {"
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,631,ublic RealVector mapAbs() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,631,public OpenMapRealVector mapAbs() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,636,ublic RealVector mapAbsToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,636,public OpenMapRealVector mapAbsToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,646,ublic RealVector mapAcos() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,646,public OpenMapRealVector mapAcos() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,651,ublic RealVector mapAcosToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,651,public OpenMapRealVector mapAcosToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,659,ublic RealVector mapAdd(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,659,public OpenMapRealVector mapAdd(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,664,ublic RealVector mapAddToSelf(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,664,public OpenMapRealVector mapAddToSelf(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,672,ublic RealVector mapAsin() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,672,public OpenMapRealVector mapAsin() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,677,ublic RealVector mapAsinToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,677,public OpenMapRealVector mapAsinToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,687,ublic RealVector mapAtan() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,687,public OpenMapRealVector mapAtan() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,692,ublic RealVector mapAtanToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,692,public OpenMapRealVector mapAtanToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,702,ublic RealVector mapCbrt() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,702,public OpenMapRealVector mapCbrt() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,707,ublic RealVector mapCbrtToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,707,public OpenMapRealVector mapCbrtToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,717,ublic RealVector mapCeil() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,717,public OpenMapRealVector mapCeil() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,722,ublic RealVector mapCeilToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,722,public OpenMapRealVector mapCeilToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,732,ublic RealVector mapCos() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,732,public OpenMapRealVector mapCos() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,737,ublic RealVector mapCosToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,737,public OpenMapRealVector mapCosToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,745,ublic RealVector mapCosh() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,745,public OpenMapRealVector mapCosh() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,750,ublic RealVector mapCoshToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,750,public OpenMapRealVector mapCoshToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,758,ublic RealVector mapDivide(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,758,public OpenMapRealVector mapDivide(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,763,ublic RealVector mapDivideToSelf(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,763,public OpenMapRealVector mapDivideToSelf(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,773,ublic RealVector mapExp() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,773,public OpenMapRealVector mapExp() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,778,ublic RealVector mapExpToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,778,public OpenMapRealVector mapExpToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,786,ublic RealVector mapExpm1() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,786,public OpenMapRealVector mapExpm1() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,791,ublic RealVector mapExpm1ToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,791,public OpenMapRealVector mapExpm1ToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,801,ublic RealVector mapFloor() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,801,public OpenMapRealVector mapFloor() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,806,ublic RealVector mapFloorToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,806,public OpenMapRealVector mapFloorToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,816,ublic RealVector mapInv() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,816,public OpenMapRealVector mapInv() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,821,ublic RealVector mapInvToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,821,public OpenMapRealVector mapInvToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,829,ublic RealVector mapLog() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,829,public OpenMapRealVector mapLog() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,834,ublic RealVector mapLog10() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,834,public OpenMapRealVector mapLog10() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,839,ublic RealVector mapLog10ToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,839,public OpenMapRealVector mapLog10ToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,847,ublic RealVector mapLog1p() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,847,public OpenMapRealVector mapLog1p() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,852,ublic RealVector mapLog1pToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,852,public OpenMapRealVector mapLog1pToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,862,ublic RealVector mapLogToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,862,public OpenMapRealVector mapLogToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,870,ublic RealVector mapMultiply(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,870,public OpenMapRealVector mapMultiply(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,875,ublic RealVector mapMultiplyToSelf(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,875,public OpenMapRealVector mapMultiplyToSelf(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,884,ublic RealVector mapPow(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,884,public OpenMapRealVector mapPow(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,889,ublic RealVector mapPowToSelf(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,889,public OpenMapRealVector mapPowToSelf(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,899,ublic RealVector mapRint() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,899,public OpenMapRealVector mapRint() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,904,ublic RealVector mapRintToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,904,public OpenMapRealVector mapRintToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,914,ublic RealVector mapSignum() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,914,public OpenMapRealVector mapSignum() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,919,ublic RealVector mapSignumToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,919,public OpenMapRealVector mapSignumToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,929,ublic RealVector mapSin() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,929,public OpenMapRealVector mapSin() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,934,ublic RealVector mapSinToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,934,public OpenMapRealVector mapSinToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,944,ublic RealVector mapSinh() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,944,public OpenMapRealVector mapSinh() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,949,ublic RealVector mapSinhToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,949,public OpenMapRealVector mapSinhToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,960,ublic RealVector mapSqrt() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,960,public OpenMapRealVector mapSqrt() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,965,ublic RealVector mapSqrtToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,965,public OpenMapRealVector mapSqrtToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,975,ublic RealVector mapSubtract(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,975,public OpenMapRealVector mapSubtract(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,980,ublic RealVector mapSubtractToSelf(double d) {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,980,public OpenMapRealVector mapSubtractToSelf(double d) {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,985,ublic RealVector mapTan() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,985,public OpenMapRealVector mapTan() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,990,ublic RealVector mapTanToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,990,public OpenMapRealVector mapTanToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1000,ublic RealVector mapTanh() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1000,public OpenMapRealVector mapTanh() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1005,ublic RealVector mapTanhToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1005,public OpenMapRealVector mapTanhToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1015,ublic RealVector mapUlp() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1015,public OpenMapRealVector mapUlp() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1020,ublic RealVector mapUlpToSelf() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1020,public OpenMapRealVector mapUlpToSelf() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1092,ublic RealVector projection(double[] v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1092,public OpenMapRealVector projection(double[] v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1094,eturn projection(new OpenMapRealVector(v));
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1094,return (OpenMapRealVector) projection(new OpenMapRealVector(v));
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1131, Optimized method to subtract SparseRealVectors.
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1131,* Optimized method to subtract OpenMapRealVectors.
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1153,ublic RealVector subtract(RealVector v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1153,public OpenMapRealVector subtract(RealVector v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1162,ublic RealVector subtract(double[] v) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1162,public OpenMapRealVector subtract(double[] v) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1177,ublic RealVector unitVector() {
False,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1178,ealVector res = copy();
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1177,public OpenMapRealVector unitVector() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1178,OpenMapRealVector res = copy();
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1300,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1301,public double getSparcity() {
True,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/java/org/apache/commons/math/linear/OpenMapRealVector.java,1302,return (double)entries.size()/(double)getDimension();
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,18,package org.apache.commons.math.linear;
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,21,* Marker interface for {@link RealMatrix} implementations that require sparse backing storage
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,23,"* @version $Revision: 775768 $ $Date: 2009-05-17 15:12:50 -0700 (Sun, 17 May 2009) $"
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,24,* @since 2.0
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,27,public interface SparseRealMatrix extends RealMatrix {
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,30,* Type to identify the shape of the matrix
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,32,public static enum MatrixShape  {Any};
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,36,* @return the shape of the matrix
True,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,src/java/org/apache/commons/math/linear/SparseRealMatrix.java,38,MatrixShape getShape();
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,17,package org.apache.commons.math.linear;
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,20,* Marker interface for RealVectors that require sparse backing storage
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,21,"* @version $Revision: 728186 $ $Date: 2009-05-17 15:12:50 -0700 (Sun, 17 May 2009) $"
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,22,* @since 2.0
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,25,public interface SparseRealVector extends RealVector {
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,29,* @return the percentage of none zero elements as a decimal percent.
True,src/java/org/apache/commons/math/linear/SparseRealVector.java,src/java/org/apache/commons/math/linear/SparseRealVector.java,31,double getSparcity ();
