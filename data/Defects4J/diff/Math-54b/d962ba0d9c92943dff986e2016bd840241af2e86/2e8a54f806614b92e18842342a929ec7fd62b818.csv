is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1702,ouble di = main[0];
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1702,// avoid zero divide on indefinite matrix
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1703,final double mu = realEigenvalues[m-1] <= 0 && realEigenvalues[0] > 0 ? 0.5-realEigenvalues[m-1] : 0;
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1704,double di = main[0]+mu;
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1707,i       = main[i] - eiM1 * ratio;
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1709,di       = main[i] - eiM1 * ratio + mu;
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1714,"igenvectors[i] = findEigenvector(realEigenvalues[i], d, l);"
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,1716,"eigenvectors[i] = findEigenvector(realEigenvalues[i]+mu, d, l);"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,247,* Verifies operation on indefinite matrix
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,249,public void testZeroDivide() {
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,250,RealMatrix indefinite = MatrixUtils.createRealMatrix(new double [][] {
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,251,"{ 0.0, 1.0, -1.0 },"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,252,"{ 1.0, 1.0, 0.0 },"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,253,"{ -1.0,0.0, 1.0 }"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,255,"EigenDecomposition ed = new EigenDecompositionImpl(indefinite, MathUtils.SAFE_MIN);"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,256,"checkEigenValues((new double[] {2, 1, -1}), ed, 1E-12);"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,257,double isqrt3 = 1/Math.sqrt(3.0);
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,258,"checkEigenVector((new double[] {isqrt3,isqrt3,-isqrt3}), ed, 1E-12);"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,259,double isqrt2 = 1/Math.sqrt(2.0);
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,260,"checkEigenVector((new double[] {0.0,-isqrt2,-isqrt2}), ed, 1E-12);"
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,261,double isqrt6 = 1/Math.sqrt(6.0);
True,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java,262,"checkEigenVector((new double[] {2*isqrt6,-isqrt6,isqrt6}), ed, 1E-12);"
