is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,33, @version $Revision: 1.27 $ $Date: 2004/05/24 05:30:33 $
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,33,* @version $Revision: 1.28 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,329,hrows IllegalArgumentException {
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,329,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,333,"""Input arrays must have the same (positive) length."");"
True,src/java/org/apache/commons/math/stat/StatUtils.java,src/java/org/apache/commons/math/stat/StatUtils.java,333,"(""Input arrays must have the same (positive) length."");"
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,25, @version $Revision: 1.5 $ $Date: 2004/06/06 23:14:09 $
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,25,* @version $Revision: 1.6 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,122, expected;
True,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java,122,/ expected;
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,27, @version $Revision: 1.6 $ $Date: 2004/06/06 22:28:25 $
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,27,* @version $Revision: 1.7 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,756,eturn (m1 - m2) / Math.sqrt((v1 / n1) + (v2 / n2));
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,756,return (m1 - m2) / Math.sqrt((v1 / n1) + (v2 / n2));
False,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,801,"egreesOfFreedom= df(v1, v2, n1, n2);"
True,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,src/java/org/apache/commons/math/stat/inference/TTestImpl.java,801,"degreesOfFreedom= df(v1, v2, n1, n2);"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,37, @version $Revision: 1.6 $ $Date: 2004/06/01 21:34:35 $
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,37,* @version $Revision: 1.7 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,45, Create an instance of a <code>DescriptiveStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,45,* Create an instance of a <code>DescriptiveStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,48, @return a new factory.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,48,* @return a new factory.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,56,"ublic static DescriptiveStatistics newInstance(String cls) throws InstantiationException, IllegalAccessException, ClassNotFoundException {"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,57,eturn newInstance(Class.forName(cls));
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,56,"public static DescriptiveStatistics newInstance(String cls) throws InstantiationException, IllegalAccessException, ClassNotFoundException {"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,57,return newInstance(Class.forName(cls));
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,61, Create an instance of a <code>DescriptiveStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,61,* Create an instance of a <code>DescriptiveStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,64, @return a new factory.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,64,* @return a new factory.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,70,"ublic static DescriptiveStatistics newInstance(Class cls) throws InstantiationException, IllegalAccessException {"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,71,eturn (DescriptiveStatistics)cls.newInstance();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,75, Create an instance of a <code>DescriptiveStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,76, @return a new factory.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,78,ublic static DescriptiveStatistics newInstance() {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,79,escriptiveStatistics factory = null;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,80,ry {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,81,iscoverClass dc = new DiscoverClass();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,82,actory = (DescriptiveStatistics) dc.newInstance(
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,83,"escriptiveStatistics.class,"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,84,"org.apache.commons.math.stat.univariate.DescriptiveStatisticsImpl"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,85, catch(Exception ex) {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,70,"public static DescriptiveStatistics newInstance(Class cls) throws InstantiationException, IllegalAccessException {"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,71,return (DescriptiveStatistics)cls.newInstance();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,75,* Create an instance of a <code>DescriptiveStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,76,* @return a new factory.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,78,public static DescriptiveStatistics newInstance() {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,79,DescriptiveStatistics factory = null;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,80,try {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,81,DiscoverClass dc = new DiscoverClass();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,82,factory = (DescriptiveStatistics) dc.newInstance(
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,83,"DescriptiveStatistics.class,"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,84,"""org.apache.commons.math.stat.univariate.DescriptiveStatisticsImpl"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,85,} catch(Exception ex) {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,87,/ ignore as default implementation will be used.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,89,eturn factory;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,93, This constant signals that a Univariate implementation
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,94, takes into account the contributions of an infinite number of
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,95," elements.  In other words, if getWindow returns this"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,96," constant, there is, in effect, no ""window""."
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,98,ublic static final int INFINITE_WINDOW = -1;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,87,// ignore as default implementation will be used.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,89,return factory;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,93,* This constant signals that a Univariate implementation
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,94,* takes into account the contributions of an infinite number of
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,95,"* elements.  In other words, if getWindow returns this"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,96,"* constant, there is, in effect, no ""window""."
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,98,public static final int INFINITE_WINDOW = -1;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,101, Adds the value to the set of numbers
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,102, @param v the value to be added
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,104,ublic abstract void addValue(double v);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,101,* Adds the value to the set of numbers
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,102,* @param v the value to be added
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,104,public abstract void addValue(double v);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,107," Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,108, arithmetic mean </a> of the available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,109, @return The mean or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,107,"* Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,108,* arithmetic mean </a> of the available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,109,* @return The mean or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,112,eturn apply(new Mean());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,112,return apply(new Mean());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,116," Returns the <a href=""http://www.xycoon.com/geometric_mean.htm"">"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,117, geometric mean </a> of the available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,118," @return The geometricMean, Double.NaN if no values have been added,"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,119, or if the productof the available values is less than or equal to 0.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,116,"* Returns the <a href=""http://www.xycoon.com/geometric_mean.htm"">"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,117,* geometric mean </a> of the available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,118,"* @return The geometricMean, Double.NaN if no values have been added,"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,119,* or if the productof the available values is less than or equal to 0.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,122,eturn apply(new GeometricMean());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,122,return apply(new GeometricMean());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,126, Returns the variance of the available values.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,127," @return The variance, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,128, or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,126,* Returns the variance of the available values.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,127,"* @return The variance, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,128,* or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,131,eturn apply(new Variance());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,131,return apply(new Variance());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,135, Returns the standard deviation of the available values.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,136," @return The standard deviation, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,137, or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,135,* Returns the standard deviation of the available values.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,136,"* @return The standard deviation, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,137,* or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,140,ouble stdDev = Double.NaN;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,141,f (getN() > 0) {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,142,f (getN() > 1) {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,143,tdDev = Math.sqrt(getVariance());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,144, else {
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,145,tdDev = 0.0;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,148,eturn (stdDev);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,140,double stdDev = Double.NaN;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,141,if (getN() > 0) {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,142,if (getN() > 1) {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,143,stdDev = Math.sqrt(getVariance());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,144,} else {
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,145,stdDev = 0.0;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,148,return (stdDev);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,152, Returns the skewness of the available values. Skewness is a
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,153, measure of the assymetry of a given distribution.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,154," @return The skewness, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,155, or 0.0 for a value set &lt;=2.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,152,* Returns the skewness of the available values. Skewness is a
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,153,* measure of the assymetry of a given distribution.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,154,"* @return The skewness, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,155,* or 0.0 for a value set &lt;=2.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,158,eturn apply(new Skewness());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,158,return apply(new Skewness());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,162, Returns the Kurtosis of the available values. Kurtosis is a
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,163," measure of the ""peakedness"" of a distribution"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,164," @return The kurtosis, Double.NaN if no values have been added, or 0.0"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,165, for a value set &lt;=3.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,162,* Returns the Kurtosis of the available values. Kurtosis is a
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,163,"* measure of the ""peakedness"" of a distribution"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,164,"* @return The kurtosis, Double.NaN if no values have been added, or 0.0"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,165,* for a value set &lt;=3.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,168,eturn apply(new Kurtosis());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,168,return apply(new Kurtosis());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,172, Returns the maximum of the available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,173, @return The max or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,172,* Returns the maximum of the available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,173,* @return The max or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,176,eturn apply(new Max());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,176,return apply(new Max());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,180, Returns the minimum of the available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,181, @return The min or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,180,* Returns the minimum of the available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,181,* @return The min or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,184,eturn apply(new Min());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,184,return apply(new Min());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,188, Returns the number of available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,189, @return The number of available values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,191,ublic abstract long getN();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,188,* Returns the number of available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,189,* @return The number of available values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,191,public abstract long getN();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,194, Returns the sum of the values that have been added to Univariate.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,195, @return The sum or Double.NaN if no values have been added
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,194,* Returns the sum of the values that have been added to Univariate.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,195,* @return The sum or Double.NaN if no values have been added
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,198,eturn apply(new Sum());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,198,return apply(new Sum());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,202, Returns the sum of the squares of the available values.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,203, @return The sum of the squares or Double.NaN if no
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,204, values have been added.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,202,* Returns the sum of the squares of the available values.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,203,* @return The sum of the squares or Double.NaN if no
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,204,* values have been added.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,207,eturn apply(new SumOfSquares());
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,207,return apply(new SumOfSquares());
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,211, Resets all statistics and storage
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,213,ublic abstract void clear();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,211,* Resets all statistics and storage
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,213,public abstract void clear();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,216, Univariate has the ability to return only measures for the
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,217, last N elements added to the set of values.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,218, @return The current window size or -1 if its Infinite.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,216,* Univariate has the ability to return only measures for the
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,217,* last N elements added to the set of values.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,218,* @return The current window size or -1 if its Infinite.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,221,ublic abstract int getWindowSize();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,221,public abstract int getWindowSize();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,224, WindowSize controls the number of values which contribute
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,225," to the values returned by Univariate.  For example, if"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,226," windowSize is set to 3 and the values {1,2,3,4,5}"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,227, have been added <strong> in that order</strong>
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,228," then the <i>available values</i> are {3,4,5} and all"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,229, reported statistics will be based on these values
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,230, @param windowSize sets the size of the window.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,232,ublic abstract void setWindowSize(int windowSize);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,224,* WindowSize controls the number of values which contribute
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,225,"* to the values returned by Univariate.  For example, if"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,226,"* windowSize is set to 3 and the values {1,2,3,4,5}"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,227,* have been added <strong> in that order</strong>
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,228,"* then the <i>available values</i> are {3,4,5} and all"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,229,* reported statistics will be based on these values
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,230,* @param windowSize sets the size of the window.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,232,public abstract void setWindowSize(int windowSize);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,243,ublic abstract double[] getValues();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,243,public abstract double[] getValues();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,264,ublic abstract double getElement(int index);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,264,public abstract double getElement(int index);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,284,eturn apply(new Percentile(p));
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,284,return apply(new Percentile(p));
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,294,tringBuffer outBuffer = new StringBuffer();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,295,"utBuffer.append(""UnivariateImpl:\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,296,"utBuffer.append(""n: "" + getN() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,297,"utBuffer.append(""min: "" + getMin() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,298,"utBuffer.append(""max: "" + getMax() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,299,"utBuffer.append(""mean: "" + getMean() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,300,"utBuffer.append(""std dev: "" + getStandardDeviation() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,301,"utBuffer.append(""skewness: "" + getSkewness() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,302,"utBuffer.append(""kurtosis: "" + getKurtosis() + ""\n"");"
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,303,eturn outBuffer.toString();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,294,StringBuffer outBuffer = new StringBuffer();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,295,"outBuffer.append(""UnivariateImpl:\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,296,"outBuffer.append(""n: "" + getN() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,297,"outBuffer.append(""min: "" + getMin() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,298,"outBuffer.append(""max: "" + getMax() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,299,"outBuffer.append(""mean: "" + getMean() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,300,"outBuffer.append(""std dev: "" + getStandardDeviation() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,301,"outBuffer.append(""skewness: "" + getSkewness() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,302,"outBuffer.append(""kurtosis: "" + getKurtosis() + ""\n"");"
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,303,return outBuffer.toString();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,307, Apply the given statistic to the data associated with this set of statistics.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,308, @param stat the statistic to apply
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,309, @return the computed value of the statistic.
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,311,ublic abstract double apply(UnivariateStatistic stat);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,307,* Apply the given statistic to the data associated with this set of statistics.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,308,* @param stat the statistic to apply
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,309,* @return the computed value of the statistic.
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatistics.java,311,public abstract double apply(UnivariateStatistic stat);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,26, @version $Revision: 1.7 $ $Date: 2004/06/14 21:41:33 $
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,26,* @version $Revision: 1.8 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,33,** hold the window size **/
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,34,rotected int windowSize;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,33,/** hold the window size **/
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,34,protected int windowSize;
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,45,his(INFINITE_WINDOW);
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,45,this(INFINITE_WINDOW);
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,53,uper();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,54,DA = new ResizableDoubleArray();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,53,super();
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,54,eDA = new ResizableDoubleArray();
False,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,63,eturn windowSize;
True,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/DescriptiveStatisticsImpl.java,63,return windowSize;
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,21, @version $Revision: 1.2 $ $Date: 2004/04/27 04:37:59 $
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,21,* @version $Revision: 1.3 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,25," Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,26, arithmetic mean </a> of the available values
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,27, @return The mean or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,29,ublic abstract double getMean();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,31, Returns the variance of the available values.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,32," @return The variance, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,33, or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,35,ublic abstract double getVariance();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,37, Returns the standard deviation of the available values.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,38," @return The standard deviation, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,39, or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,41,ublic abstract double getStandardDeviation();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,43, Returns the maximum of the available values
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,44, @return The max or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,46,ublic abstract double getMax();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,48, Returns the minimum of the available values
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,49, @return The min or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,51,ublic abstract double getMin();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,53, Returns the number of available values
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,54, @return The number of available values
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,56,ublic abstract long getN();
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,58, Returns the sum of the values that have been added to Univariate.
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,59, @return The sum or Double.NaN if no values have been added
False,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,61,ublic abstract double getSum();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,25,"* Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,26,* arithmetic mean </a> of the available values
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,27,* @return The mean or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,29,public abstract double getMean();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,31,* Returns the variance of the available values.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,32,"* @return The variance, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,33,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,35,public abstract double getVariance();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,37,* Returns the standard deviation of the available values.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,38,"* @return The standard deviation, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,39,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,41,public abstract double getStandardDeviation();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,43,* Returns the maximum of the available values
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,44,* @return The max or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,46,public abstract double getMax();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,48,* Returns the minimum of the available values
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,49,* @return The min or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,51,public abstract double getMin();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,53,* Returns the number of available values
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,54,* @return The number of available values
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,56,public abstract long getN();
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,58,* Returns the sum of the values that have been added to Univariate.
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,59,* @return The sum or Double.NaN if no values have been added
True,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,src/java/org/apache/commons/math/stat/univariate/StatisticalSummary.java,61,public abstract double getSum();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,25, @version $Revision: 1.6 $ $Date: 2004/06/01 21:34:35 $
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,25,* @version $Revision: 1.7 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,33, Create an instance of a <code>SummaryStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,33,* Create an instance of a <code>SummaryStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,44,"ublic static SummaryStatistics newInstance(String cls) throws InstantiationException, IllegalAccessException, ClassNotFoundException {"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,45,eturn newInstance(Class.forName(cls));
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,44,"public static SummaryStatistics newInstance(String cls) throws InstantiationException, IllegalAccessException, ClassNotFoundException {"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,45,return newInstance(Class.forName(cls));
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,49, Create an instance of a <code>DescriptiveStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,49,* Create an instance of a <code>DescriptiveStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,58,"ublic static SummaryStatistics newInstance(Class cls) throws InstantiationException, IllegalAccessException {"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,59,eturn (SummaryStatistics)cls.newInstance();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,63, Create an instance of a <code>DescriptiveStatistics</code>
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,64, @return a new factory.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,66,ublic static SummaryStatistics newInstance() {
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,67,ummaryStatistics factory = null;
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,68,ry {
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,69,iscoverClass dc = new DiscoverClass();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,70,actory = (SummaryStatistics) dc.newInstance(
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,71,"ummaryStatistics.class,"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,72,"org.apache.commons.math.stat.univariate.SummaryStatisticsImpl"");"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,73, catch(Exception ex) {
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,74,/ ignore as default implementation will be used.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,76,eturn factory;
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,58,"public static SummaryStatistics newInstance(Class cls) throws InstantiationException, IllegalAccessException {"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,59,return (SummaryStatistics)cls.newInstance();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,63,* Create an instance of a <code>DescriptiveStatistics</code>
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,64,* @return a new factory.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,66,public static SummaryStatistics newInstance() {
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,67,SummaryStatistics factory = null;
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,68,try {
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,69,DiscoverClass dc = new DiscoverClass();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,70,factory = (SummaryStatistics) dc.newInstance(
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,71,"SummaryStatistics.class,"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,72,"""org.apache.commons.math.stat.univariate.SummaryStatisticsImpl"");"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,73,} catch(Exception ex) {
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,74,// ignore as default implementation will be used.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,76,return factory;
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,81, Return a StatisticalSummaryValues instance reporting current statistics.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,83, @return Current values of statistics
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,85,ublic StatisticalSummary getSummary() {
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,86,"eturn new StatisticalSummaryValues(getMean(), getVariance(), getN(),"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,87,"etMax(), getMin(), getSum());"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,91, Adds the value to the data to be summarized
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,92, @param v the value to be added
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,94,ublic abstract void addValue(double v);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,81,* Return a StatisticalSummaryValues instance reporting current statistics.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,83,* @return Current values of statistics
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,85,public StatisticalSummary getSummary() {
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,86,"return new StatisticalSummaryValues(getMean(), getVariance(), getN(),"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,87,"getMax(), getMin(), getSum());"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,91,* Adds the value to the data to be summarized
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,92,* @param v the value to be added
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,94,public abstract void addValue(double v);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,97," Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,98, arithmetic mean </a> of the available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,99, @return The mean or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,101,ublic abstract double getMean();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,97,"* Returns the <a href=""http://www.xycoon.com/arithmetic_mean.htm"">"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,98,* arithmetic mean </a> of the available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,99,* @return The mean or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,101,public abstract double getMean();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,104," Returns the <a href=""http://www.xycoon.com/geometric_mean.htm"">"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,105, geometric mean </a> of the available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,106," @return The geometricMean, Double.NaN if no values have been added,"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,107, or if the productof the available values is less than or equal to 0.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,109,ublic abstract double getGeometricMean();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,104,"* Returns the <a href=""http://www.xycoon.com/geometric_mean.htm"">"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,105,* geometric mean </a> of the available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,106,"* @return The geometricMean, Double.NaN if no values have been added,"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,107,* or if the productof the available values is less than or equal to 0.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,109,public abstract double getGeometricMean();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,112, Returns the variance of the available values.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,113," @return The variance, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,114, or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,116,ublic abstract double getVariance();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,112,* Returns the variance of the available values.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,113,"* @return The variance, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,114,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,116,public abstract double getVariance();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,119, Returns the standard deviation of the available values.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,120," @return The standard deviation, Double.NaN if no values have been added"
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,121, or 0.0 for a single value set.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,123,ublic abstract double getStandardDeviation();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,119,* Returns the standard deviation of the available values.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,120,"* @return The standard deviation, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,121,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,123,public abstract double getStandardDeviation();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,126, Returns the maximum of the available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,127, @return The max or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,129,ublic abstract double getMax();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,126,* Returns the maximum of the available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,127,* @return The max or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,129,public abstract double getMax();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,132, Returns the minimum of the available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,133, @return The min or Double.NaN if no values have been added.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,135,ublic abstract double getMin();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,132,* Returns the minimum of the available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,133,* @return The min or Double.NaN if no values have been added.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,135,public abstract double getMin();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,138, Returns the number of available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,139, @return The number of available values
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,141,ublic abstract long getN();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,138,* Returns the number of available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,139,* @return The number of available values
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,141,public abstract long getN();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,144, Returns the sum of the values that have been added to Univariate.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,145, @return The sum or Double.NaN if no values have been added
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,147,ublic abstract double getSum();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,144,* Returns the sum of the values that have been added to Univariate.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,145,* @return The sum or Double.NaN if no values have been added
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,147,public abstract double getSum();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,150, Returns the sum of the squares of the available values.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,151, @return The sum of the squares or Double.NaN if no
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,152, values have been added.
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,154,ublic abstract double getSumsq();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,150,* Returns the sum of the squares of the available values.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,151,* @return The sum of the squares or Double.NaN if no
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,152,* values have been added.
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,154,public abstract double getSumsq();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,157, Resets all statistics
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,159,ublic abstract void clear();
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,157,* Resets all statistics
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatistics.java,159,public abstract void clear();
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,32, @version $Revision: 1.3 $ $Date: 2004/06/01 21:34:35 $
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,32,* @version $Revision: 1.4 $ $Date: 2004/06/14 23:26:53 $
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,88,um.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,89,umsq.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,90,in.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,91,ax.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,92,umLog.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,93,eoMean.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,94,econdMoment.increment(value);
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,95,++;
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,88,sum.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,89,sumsq.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,90,min.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,91,max.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,92,sumLog.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,93,geoMean.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,94,secondMoment.increment(value);
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,95,n++;
False,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,217, Resets all statistics and storage
True,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,src/java/org/apache/commons/math/stat/univariate/SummaryStatisticsImpl.java,217,* Resets all statistics and storage
