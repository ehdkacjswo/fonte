is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,5,* reserved.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,9,* are met:
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,17,*    distribution.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,54,package org.apache.commons.math.stat.distribution;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,58,* Base class for various discrete distributions.  It provides default
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,59,* implementations for some of the methods that do not vary from distribution
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,60,* to distribution.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,62,* @version $Revision: 1.1 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,64,public abstract class AbstractDiscreteDistribution
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,65,implements DiscreteDistribution {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,68,* Default constructor.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,70,protected AbstractDiscreteDistribution() {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,71,super();
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,75,"* For this disbution, X, this method returns P(x0 &le; X &le; x1)."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,76,"* @param x0 the inclusive, lower bound"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,77,"* @param x1 the inclusive, upper bound"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,78,* @return the cummulative probability.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,80,"public double cummulativeProbability(int x0, int x1) {"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,81,return cummulativeProbability(x1) -
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,82,cummulativeProbability(x0 - 1);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,86,"* For this distribution, X, this method returns the critical point x, such"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,87,* that P(X &le; x) &le; <code>p</code>.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,89,* @param p the desired probability
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,90,"* @return x, such that P(X &lt; x) = <code>p</code>"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,92,public int inverseCummulativeProbability(final double p) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,93,if (p < 0.0 || p > 1.0) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,94,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,95,"""p must be between 0.0 and 1.0, inclusive."");"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,98,"// by default, do simple bisection."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,99,// subclasses can override if there is a better method.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,100,int x0 = getDomainLowerBound(p);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,101,int x1 = getDomainUpperBound(p);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,102,double pm;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,103,while (x0 < x1) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,104,int xm = x0 + (x1 - x0) / 2;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,105,pm = cummulativeProbability(xm);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,106,if (pm > p) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,107,// update x1
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,108,if (xm == x1) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,109,// this can happen with integer division
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,110,// simply decrement x1
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,111,--x1;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,112,} else {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,113,// update x1 normally
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,114,x1 = xm;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,116,} else {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,117,// update x0
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,118,if (xm == x0) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,119,// this can happen with integer division
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,120,// simply increment x0
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,121,++x0;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,122,} else {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,123,// update x0 normally
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,124,x0 = xm;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,129,// insure x0 is the correct critical point
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,130,pm = cummulativeProbability(x0);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,131,while (pm > p) {
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,132,--x0;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,133,pm = cummulativeProbability(x0);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,136,return x0;
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,140,"* Access the domain value lower bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,141,* bracket a PDF root.  This method is used by
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,142,* {@link #inverseCummulativeProbability(int)} to find critical values.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,144,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,145,"* @return domain value lower bound, i.e."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,146,*         P(X &lt; <i>lower bound</i>) &lt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,148,protected abstract int getDomainLowerBound(double p);
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,151,"* Access the domain value upper bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,152,* bracket a PDF root.  This method is used by
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,153,* {@link #inverseCummulativeProbability(int)} to find critical values.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,155,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,156,"* @return domain value upper bound, i.e."
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,157,*         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,159,protected abstract int getDomainUpperBound(double p);
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,5,* reserved.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,9,* are met:
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,17,*    distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,54,package org.apache.commons.math.stat.distribution;
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,57,* The Binomial Distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,59,* Instances of BinomialDistribution objects should be created using
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,60,"* {@link DistributionFactory#createBinomailDistribution(int, double)}."
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,62,* References:
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,63,* <ul>
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,64,"* <li><a href=""http://mathworld.wolfram.com/BinomialDistribution.html"">"
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,65,* Binomial Distribution</a></li>
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,66,* </ul>
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,68,* @version $Revision: 1.1 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,70,public interface BinomialDistribution extends DiscreteDistribution {
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,72,* Access the number of trials for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,73,* @return the number of trials.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,75,int getNumberOfTrials();
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,78,* Access the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,79,* @return the probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,81,double getProbabilityOfSuccess();
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,84,* Change the number of trials for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,85,* @param trials the new number of trials.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,87,void setNumberOfTrials(int trials);
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,90,* Change the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,91,* @param p the new probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,src/java/org/apache/commons/math/distribution/BinomialDistribution.java,93,void setProbabilityOfSuccess(double p);
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,5,* reserved.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,9,* are met:
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,17,*    distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,54,package org.apache.commons.math.stat.distribution;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,56,import org.apache.commons.math.special.Beta;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,57,import org.apache.commons.math.util.MathUtils;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,60,* The default implementation of {@link BinomialDistribution}.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,62,* @version $Revision: 1.1 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,64,public class BinomialDistributionImpl extends AbstractDiscreteDistribution
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,65,implements BinomialDistribution {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,67,/** The number of trials. */
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,68,private int numberOfTrials;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,70,/** The probability of success. */
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,71,private double probabilityOfSuccess;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,74,* Create a binomial distribution with the given number of trials and
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,75,* probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,76,* @param trials the number of trials.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,77,* @param p the probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,79,"public BinomialDistributionImpl(int trials, double p) {"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,80,super();
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,81,setNumberOfTrials(trials);
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,82,setProbabilityOfSuccess(p);
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,86,* Access the number of trials for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,87,* @return the number of trials.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,89,public int getNumberOfTrials() {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,90,return numberOfTrials;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,94,* Access the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,95,* @return the probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,97,public double getProbabilityOfSuccess() {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,98,return probabilityOfSuccess;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,102,* Change the number of trials for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,103,* @param trials the new number of trials.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,105,public void setNumberOfTrials(int trials) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,106,if (trials < 0) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,107,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,108,"""number of trials must be non-negative."");"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,110,numberOfTrials = trials;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,114,* Change the probability of success for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,115,* @param p the new probability of success.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,117,public void setProbabilityOfSuccess(double p) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,118,if (p < 0.0 || p > 1.0) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,119,throw new IllegalArgumentException(
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,120,"""probability of success must be between 0.0 and 1.0, inclusive."");"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,122,probabilityOfSuccess = p;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,126,"* Access the domain value lower bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,127,* bracket a PDF root.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,129,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,130,"* @return domain value lower bound, i.e."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,131,*         P(X &lt; <i>lower bound</i>) &lt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,133,protected int getDomainLowerBound(double p) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,134,return -1;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,138,"* Access the domain value upper bound, based on <code>p</code>, used to"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,139,* bracket a PDF root.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,141,* @param p the desired probability for the critical value
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,142,"* @return domain value upper bound, i.e."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,143,*         P(X &lt; <i>upper bound</i>) &gt; <code>p</code>
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,145,protected int getDomainUpperBound(double p) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,146,return getNumberOfTrials();
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,150,"* For this disbution, X, this method returns P(X &le; x)."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,151,* @param x the value at which the PDF is evaluated.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,152,* @return PDF for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,154,public double cummulativeProbability(int x) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,155,double ret;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,156,if (x < 0) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,157,ret = 0.0;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,158,} else if (x >= getNumberOfTrials()) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,159,ret = 1.0;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,160,} else {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,161,"ret = 1.0 - Beta.regularizedBeta(getProbabilityOfSuccess(),"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,162,"x + 1.0, getNumberOfTrials() - x);"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,164,return ret;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,168,"* For this disbution, X, this method returns P(X = x)."
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,169,* @param x the value at which the PMF is evaluated.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,170,* @return PMF for this distribution.
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,172,public double probability(int x) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,173,double ret;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,174,if (x < 0 || x > getNumberOfTrials()) {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,175,ret = 0.0;
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,176,} else {
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,177,"ret = MathUtils.binomialCoefficientDouble(getNumberOfTrials(), x) *"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,178,"Math.pow(getProbabilityOfSuccess(), x) *"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,179,"Math.pow(1.0 - getProbabilityOfSuccess(),"
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,180,getNumberOfTrials() - x);
True,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,182,return ret;
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,5,* reserved.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,9,* are met:
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,17,*    distribution.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,54,package org.apache.commons.math.stat.distribution;
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,57,* Base interface for various discrete distributions.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,59,* @version $Revision: 1.1 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,61,public interface DiscreteDistribution {
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,63,"* For this disbution, X, this method returns P(X = x)."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,64,* @param x the value at which the PMF is evaluated.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,65,* @return PMF for this distribution.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,67,double probability(int x);
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,70,"* For this disbution, X, this method returns P(X &le; x)."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,71,* @param x the value at which the PDF is evaluated.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,72,* @return PDF for this distribution.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,74,double cummulativeProbability(int x);
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,77,"* For this disbution, X, this method returns P(x0 &le; X &le; x1)."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,78,"* @param x0 the inclusive, lower bound"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,79,"* @param x1 the inclusive, upper bound"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,80,* @return the cummulative probability.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,82,"double cummulativeProbability(int x0, int x1);"
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,85,"* For this disbution, X, this method returns x such that P(X &le; x) <= p."
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,86,* @param p the cummulative probability.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,87,* @return x.
True,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,src/java/org/apache/commons/math/distribution/DiscreteDistribution.java,89,int inverseCummulativeProbability(double p);
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,60,* <li>Binomial</li>
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,62,* <li>Exponential</li>
False,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,73, @version $Revision: 1.9 $ $Date: 2003/07/30 21:58:11 $
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,75,* @version $Revision: 1.10 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,96,* Create a binomial distribution with the given number of trials and
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,97,* probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,98,* @param numberOfTrials the number of trials.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,99,* @param probabilityOfSuccess the probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,100,* @return a new binomial distribution.
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,102,public abstract BinomialDistribution createBinomailDistribution(
True,src/java/org/apache/commons/math/distribution/DistributionFactory.java,src/java/org/apache/commons/math/distribution/DistributionFactory.java,103,"int numberOfTrials, double probabilityOfSuccess);"
False,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,61, @version $Revision: 1.7 $ $Date: 2003/07/09 20:03:23 $
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,61,* @version $Revision: 1.8 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,126,* Create a binomial distribution with the given number of trials and
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,127,* probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,128,* @param numberOfTrials the number of trials.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,129,* @param probabilityOfSuccess the probability of success.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,130,* @return a new binomial distribution.
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,132,public BinomialDistribution createBinomailDistribution(
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,133,"int numberOfTrials, double probabilityOfSuccess) {"
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,134,"return new BinomialDistributionImpl(numberOfTrials,"
True,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,src/java/org/apache/commons/math/distribution/DistributionFactoryImpl.java,135,probabilityOfSuccess);
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,5,* reserved.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,9,* are met:
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,54,package org.apache.commons.math.stat.distribution;
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,56,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,59,* @author Brent Worden
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,61,public class BinomialDistributionTest extends TestCase {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,62,private BinomialDistribution b;
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,65,* Constructor for ChiSquareDistributionTest.
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,66,* @param name
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,68,public BinomialDistributionTest(String name) {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,69,super(name);
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,73,* @see TestCase#setUp()
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,75,protected void setUp() throws Exception {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,76,super.setUp();
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,77,"b = DistributionFactory.newInstance().createBinomailDistribution(10, 0.70);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,81,* @see TestCase#tearDown()
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,83,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,84,b = null;
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,85,super.tearDown();
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,88,public void testInverseCummulativeProbability001() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,89,"testValue(1, .001);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,92,public void testInverseCumulativeProbability010() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,93,"testValue(2, .010);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,96,public void testInverseCumulativeProbability025() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,97,"testValue(3, .025);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,100,public void testInverseCumulativeProbability050() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,101,"testValue(4, .050);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,104,public void testInverseCumulativeProbability100() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,105,"testValue(4, .100);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,108,public void testInverseCummulativeProbability999() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,109,"testValue(9, .999);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,112,public void testInverseCumulativeProbability990() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,113,"testValue(9, .990);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,116,public void testInverseCumulativeProbability975() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,117,"testValue(9, .975);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,120,public void testInverseCumulativeProbability950() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,121,"testValue(8, .950);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,124,public void testInverseCumulativeProbability900() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,125,"testValue(8, .900);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,128,public void testCummulativeProbability1() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,129,"testProbability(1, .00014);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,132,public void testCumulativeProbability2() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,133,"testProbability(2, .00159);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,136,public void testCumulativeProbability3() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,137,"testProbability(3, .01059);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,140,public void testCumulativeProbability4() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,141,"testProbability(4, .04735);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,144,public void testCumulativeProbability9() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,145,"testProbability(9, .97175);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,148,public void testCummulativeProbability8() {
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,149,"testProbability(8, .85069);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,152,"private void testProbability(int x, double expected){"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,153,double actual = b.cummulativeProbability(x);
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,154,"assertEquals(expected, actual, 10e-4);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,157,"private void testValue(int expected, double p){"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,158,int actual = b.inverseCummulativeProbability(p);
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,159,"assertEquals(expected, actual);"
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,160,assertTrue(b.cummulativeProbability(actual) <= p);
True,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,src/test/org/apache/commons/math/distribution/BinomialDistributionTest.java,161,assertTrue(b.cummulativeProbability(actual + 1) >= p);
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,201,public void testBinomialDistributionNegativePositive(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,202,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,203,"factory.createBinomailDistribution(-1, 0.5);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,204,"fail(""negative number of trials.  IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,205,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,209,public void testBinomialDistributionZeroPositive(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,210,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,211,"factory.createBinomailDistribution(0, 0.5);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,212,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,213,"fail(""zero number of trials.  IllegalArgumentException is not expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,217,public void testBinomialDistributionPositivePositive(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,218,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,219,"factory.createBinomailDistribution(10, 0.5);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,220,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,221,"fail(""positive number of trials.  IllegalArgumentException is not expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,225,public void testBinomialDistributionPositiveNegative(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,226,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,227,"factory.createBinomailDistribution(10, -0.5);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,228,"fail(""negative probability of success.  IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,229,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,233,public void testBinomialDistributionPositiveZero(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,234,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,235,"factory.createBinomailDistribution(10, 0.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,236,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,237,"fail(""zero probability of success.  IllegalArgumentException is not expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,241,public void testBinomialDistributionPositiveOne(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,242,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,243,"factory.createBinomailDistribution(10, 1.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,244,} catch (IllegalArgumentException ex ) {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,245,"fail(""valid probability of success.  IllegalArgumentException is not expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,249,public void testBinomialDistributionPositiveTwo(){
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,250,try {
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,251,"factory.createBinomailDistribution(10, 2.0);"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,252,"fail(""high probability of success.  IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,src/test/org/apache/commons/math/distribution/DistributionFactoryImplTest.java,253,} catch (IllegalArgumentException ex ) {
