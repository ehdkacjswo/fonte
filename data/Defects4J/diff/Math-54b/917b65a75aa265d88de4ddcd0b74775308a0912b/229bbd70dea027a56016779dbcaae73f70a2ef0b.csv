is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,25,import org.apache.commons.math.stat.descriptive.moment.Variance;
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,151,ouble sigma = calculateYVariance();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,152,RealVector residuals = calculateResiduals();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,153,double sigma = calculateErrorVariance();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,170,* Estimates the variance of the error.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,172,* @return estimate of the error variance
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,174,public double estimateErrorVariance() {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,175,return calculateErrorVariance();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,180,* Estimates the standard error of the regression.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,182,* @return regression standard error
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,184,public double estimateRegressionStandardError() {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,185,return Math.sqrt(estimateErrorVariance());
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,183, Calculates the Y variance of multiple linear regression.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,205,* Calculates the variance of the y values.
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,187,rotected abstract double calculateYVariance();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,209,protected double calculateYVariance() {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,210,return new Variance().evaluate(Y.getData());
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,214,* <p>Calculates the variance of the error term.</p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,215,* Uses the formula <pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,216,* var(u) = u &middot; u / (n - k)
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,217,* </pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,218,* where n and k are the row and column dimensions of the design
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,219,* matrix X.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,221,* @return error variance estimate
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,223,protected double calculateErrorVariance() {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,224,RealVector residuals = calculateResiduals();
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,225,return residuals.dotProduct(residuals) /
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,226,(X.getRowDimension() - X.getColumnDimension());
False,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,104, Calculates the variance on the beta by GLS.
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,103,* Calculates the variance on the beta.
False,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,118, Calculates the variance on the y by GLS.
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,118,* Calculates the estimated variance of the error term using the formula
False,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,120,  Var(y)=Tr(u' Omega^-1 u)/(n-k)
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,120,*  Var(u) = Tr(u' Omega^-1 u)/(n-k)
False,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,122, @return The Y variance
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,122,* where n and k are the row and column dimensions of the design
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,123,* matrix X.
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,125,* @return error variance
False,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,125,rotected double calculateYVariance() {
True,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java,128,protected double calculateErrorVariance() {
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,52," Given Q and R, the last equation is solved by back-subsitution.</p>"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,52,"* Given Q and R, the last equation is solved by back-substitution.</p>"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,166, <p>Calculates the variance on the Y by OLS.
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,167, </p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,168, <p> Var(y) = Tr(u<sup>T</sup>u)/(n - k)
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,169, </p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,170, @return The Y variance
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,172,Override
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,173,rotected double calculateYVariance() {
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,174,ealVector residuals = calculateResiduals();
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,175,eturn residuals.dotProduct(residuals) /
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,176,X.getRowDimension() - X.getColumnDimension());
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,21,import org.apache.commons.math.TestUtils;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,22,import org.apache.commons.math.stat.StatUtils;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,127,* test calculateYVariance
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,129,@Test
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,130,public void testYVariance() {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,132,"// assumes: y = new double[]{11.0, 12.0, 13.0, 14.0, 15.0, 16.0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,134,GLSMultipleLinearRegression model = new GLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,135,"model.newSampleData(y, x, omega);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,136,"TestUtils.assertEquals(model.calculateYVariance(), 3.5, 0);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,27,import org.apache.commons.math.stat.StatUtils;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,85,ublic void testPerfectFit() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,86,public void testPerfectFit() throws Exception {
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,125,ublic void testLongly() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,127,public void testLongly() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,186,// Check regression standard error against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,187,"assertEquals(304.8540735619638, model.estimateRegressionStandardError(), 1E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,189,checkVarianceConsistency(model);
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,190,ublic void testSwissFertility() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,197,public void testSwissFertility() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,294,// Check regression standard error against R
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,295,"assertEquals(7.73642194433223, model.estimateRegressionStandardError(), 1E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,297,checkVarianceConsistency(model);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,371,* test calculateYVariance
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,373,@Test
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,374,public void testYVariance() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,376,"// assumes: y = new double[]{11.0, 12.0, 13.0, 14.0, 15.0, 16.0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,378,OLSMultipleLinearRegression model = new OLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,379,"model.newSampleData(y, x);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,380,"TestUtils.assertEquals(model.calculateYVariance(), 3.5, 0);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,384,* Verifies that calculateYVariance and calculateResidualVariance return consistent
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,385,"* values with direct variance computation from Y, residuals, respectively."
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,387,protected void checkVarianceConsistency(OLSMultipleLinearRegression model) throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,388,// Check Y variance consistency
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,389,"TestUtils.assertEquals(StatUtils.variance(model.Y.getData()), model.calculateYVariance(), 0);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,391,// Check residual variance consistency
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,392,double[] residuals = model.calculateResiduals().getData();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,393,RealMatrix X = model.X;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,394,TestUtils.assertEquals(
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,395,"StatUtils.variance(model.calculateResiduals().getData()) * (residuals.length - 1),"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,396,"model.calculateErrorVariance() * (X.getRowDimension() - X.getColumnDimension()), 1E-20);"
