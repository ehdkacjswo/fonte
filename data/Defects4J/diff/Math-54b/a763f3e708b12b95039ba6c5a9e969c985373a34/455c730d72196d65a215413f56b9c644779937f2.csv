is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,22,import java.util.Set;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,134,** Gets the pattern used to build the message of this throwable.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,136, @return the pattern used to build the message of this throwable
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,137, @since 1.2
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,138, @deprecated as of 2.2 replaced by {@link #getSpecificPattern()} and {@link #getGeneralPattern()}
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,140,Deprecated
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,141,ublic String getPattern() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,142,eturn pattern.getSourceString();
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,135,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,136,"public void addMessage(Localizable pat,"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,137,Object ... args) {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,138,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,146,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,147,eturn null;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,142,"public void setContext(String key, Object value) {"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,143,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,151,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,152,eturn pattern;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,147,public Object getContext(String key) {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,148,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,156,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,157,eturn arguments.clone();
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,152,public Set<String> getContextKeys() {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,153,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,156,/** Gets the pattern used to build the message of this throwable.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,158,* @return the pattern used to build the message of this throwable
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,159,* @since 1.2
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,160,* @deprecated as of 2.2.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,162,@Deprecated
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,163,public String getPattern() {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,164,return pattern.getSourceString();
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,27,import java.util.Set;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,128,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,129,"public void addMessage(Localizable pat,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,130,Object ... args) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,131,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,134,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,135,"public void setContext(String key, Object value) {"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,136,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,139,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,140,public Object getContext(String key) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,141,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,144,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,145,public Set<String> getContextKeys() {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,146,"throw new UnsupportedOperationException(""This class is deprecated; calling this method is a bug."");"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,143, @deprecated as of 2.2 replaced by {@link #getSpecificPattern()} and {@link #getGeneralPattern()}
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,165,* @deprecated as of 2.2
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,150,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,151,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,152,eturn null;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,155,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,156,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,157,eturn pattern;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,160,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,161,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,162,eturn arguments.clone();
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,91,"hrow new MathUserException(ex,"
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,92,"x.getSpecificPattern(), ex.getGeneralPattern(),"
False,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,93,x.getArguments());
True,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java,91,throw new MathUserException(ex);
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,44,"uper(specific,"
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,45,"ocalizedFormats.DIMENSIONS_MISMATCH,"
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,46,"rong, expected);"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,44,"super(specific, wrong, expected);"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,36, @param args Arguments.
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,36,* Default constructor.
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,38,ublic MathArithmeticException(Object ... args) {
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,39,"his(null, args);"
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,38,public MathArithmeticException() {
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,39,"addMessage(LocalizedFormats.ARITHMETIC_EXCEPTION, null);"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,42, @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,43,* Constructor with a specific message.
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,45,* @param pattern Message pattern providing the specific context of
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,46,"ublic MathArithmeticException(Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,49,"public MathArithmeticException(Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,48,"uper(null, specific, LocalizedFormats.ARITHMETIC_EXCEPTION, args);"
True,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,src/main/java/org/apache/commons/math/exception/MathArithmeticException.java,51,"addMessage(pattern, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,36, @param specific Message pattern providing the specific context of
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,37, the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,38, @param general Message pattern explaining the cause of the error.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,36,* @param pattern Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,41,"ublic MathIllegalArgumentException(Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,42,"ocalizable general,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,39,"public MathIllegalArgumentException(Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,44,"uper(null, specific, general, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,47, @param general Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,48, @param args Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,50,"ublic MathIllegalArgumentException(Localizable general,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,51,bject ... args) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,52,"his(null, general, args);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,41,"addMessage(pattern, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,41, @param specific Localizable pattern.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,42, @param general Localizable pattern.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,43, @param wrong Wrong number.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,44, @param arguments Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,46,"rotected MathIllegalNumberException(Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,47,"ocalizable general,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,48,"umber wrong,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,49,bject ... arguments) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,50,"uper(specific, general, wrong, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,51,rgument = wrong;
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,55, Construct an exception.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,57, @param general Localizable pattern.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,39,* @param pattern Localizable pattern.
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,61,"rotected MathIllegalNumberException(Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,43,"protected MathIllegalNumberException(Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,64,"uper(general, wrong, arguments);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,46,"super(pattern, wrong, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,35, @param specific Message pattern providing the specific context of
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,36, the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,37, @param general Message pattern explaining the cause of the error.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,36,* @param pattern Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,40,"ublic MathIllegalStateException(Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,41,"ocalizable general,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,39,"public MathIllegalStateException(Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,43,"uper(null, specific, general, args);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,41,"addMessage(pattern, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,48, @param cause root cause
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,49, @param specific Message pattern providing the specific context of
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,50, the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,51, @param general Message pattern explaining the cause of the error.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,47,* @param cause Root cause.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,48,* @param pattern Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,55,"ocalizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,56,"ocalizable general,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,52,"Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,58,"uper(cause, null, specific, general, args);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,54,super(cause);
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,55,"addMessage(pattern, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,62, Simple constructor.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,63, @param specific Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,64, @param args Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,66,"ublic MathIllegalStateException(Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,67,bject ... args) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,68,"his(specific, LocalizedFormats.ILLEGAL_STATE, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,72, Simple constructor.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,73, @param cause root cause
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,74, @param specific Message pattern explaining the cause of the error.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,75, @param args Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,77,"ublic MathIllegalStateException(Throwable cause,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,78,"ocalizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,79,bject ... args) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,80,"uper(cause, specific, LocalizedFormats.ILLEGAL_STATE, args);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,84, @param args Arguments.
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,59,* Default constructor.
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,86,ublic MathIllegalStateException(Object ... args) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,87,"his(null, args);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,61,public MathIllegalStateException() {
True,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java,62,"addMessage(LocalizedFormats.ILLEGAL_STATE, null);"
False,src/main/java/org/apache/commons/math/exception/MathInternalError.java,src/main/java/org/apache/commons/math/exception/MathInternalError.java,39,"uper(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);"
True,src/main/java/org/apache/commons/math/exception/MathInternalError.java,src/main/java/org/apache/commons/math/exception/MathInternalError.java,37,"addMessage(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);"
False,src/main/java/org/apache/commons/math/exception/MathInternalError.java,src/main/java/org/apache/commons/math/exception/MathInternalError.java,47,"uper(LocalizedFormats.INTERNAL_ERROR, REPORT_URL);"
True,src/main/java/org/apache/commons/math/exception/MathInternalError.java,src/main/java/org/apache/commons/math/exception/MathInternalError.java,45,"super(cause, LocalizedFormats.INTERNAL_ERROR, REPORT_URL);"
False,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,41,"uper(null, null, LocalizedFormats.CANNOT_PARSE_AS_TYPE,"
False,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,42,"rong, Integer.valueOf(position), type.getName());"
True,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,41,"addMessage(LocalizedFormats.CANNOT_PARSE_AS_TYPE,"
True,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,42,"wrong, Integer.valueOf(position), type.getName());"
False,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,52,"uper(null, null, LocalizedFormats.CANNOT_PARSE,"
False,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,53,"rong, Integer.valueOf(position));"
True,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,52,"addMessage(LocalizedFormats.CANNOT_PARSE,"
True,src/main/java/org/apache/commons/math/exception/MathParseException.java,src/main/java/org/apache/commons/math/exception/MathParseException.java,53,"wrong, Integer.valueOf(position));"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,19,import java.util.List;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,20,import java.util.ArrayList;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,21,import java.util.Set;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,22,import java.util.Map;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,23,import java.util.HashMap;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,24,import java.text.MessageFormat;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,23,mport org.apache.commons.math.exception.util.MessageFactory;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,29,import org.apache.commons.math.util.Pair;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,26, This class is primarily intended as a base class for exceptions
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,27, that must wrap low-level exceptions in order to propagate an
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,28, exception that better corresponds to the high-level action that
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,29, triggered the problem.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,32,* This class is the base class for all exceptions.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,39, Pattern used to build the specific part of the message (problem description).
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,42,* Various informations that enrich the informative message.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,41,rivate final Localizable specific;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,44,"private final List<Pair<Localizable, Object[]>> messages"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,45,"= new ArrayList<Pair<Localizable, Object[]>>();"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,43, Pattern used to build the general part of the message (problem description).
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,47,* Arbitrary context information.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,45,rivate final Localizable general;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,49,"private final Map<String, Object> context = new HashMap<String, Object>();"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,47, Arguments used to build the message.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,52,* Builds an exception.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,49,rivate final Object[] arguments;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,54,public MathRuntimeException() {}
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,52, Build an exception from two patterns (specific and general) and
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,53, an argument list.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,57,* Builds an exception.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,56, @param specific Format specifier for the specific part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,57, @param general Format specifier for the general part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,58, @param arguments Format arguments. They will be substituted in
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,59, <em>both</em> the {@code general} and {@code specific} format specifiers.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,61,"ublic MathRuntimeException(final Throwable cause,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,62,"inal Localizable specific,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,63,"inal Localizable general,"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,64,inal Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,61,public MathRuntimeException(final Throwable cause) {
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,66,his.specific = specific;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,67,his.general = general;
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,68,his.arguments = ArgUtils.flatten(arguments);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,72, Wrap an exception.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,74, @param cause Cause of the error (may be null).
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,76,ublic MathRuntimeException(final Throwable cause) {
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,77,"his(cause, null, null);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,65,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,66,"public void addMessage(Localizable pattern,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,67,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,68,"messages.add(new Pair<Localizable, Object[]>(pattern, ArgUtils.flatten(arguments)));"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,81,ublic Localizable getSpecificPattern() {
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,82,eturn specific;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,72,"public void setContext(String key, Object value) {"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,73,"context.put(key, value);"
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,86,ublic Localizable getGeneralPattern() {
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,87,eturn general;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,77,public Object getContext(String key) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,78,return context.get(key);
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,91,ublic Object[] getArguments() {
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,92,eturn arguments.clone();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,82,public Set<String> getContextKeys() {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,83,return context.keySet();
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,96, Get the message in a specified locale.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,87,* Gets the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,102,"eturn MessageFactory.buildMessage(locale, specific, general, arguments);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,93,"return buildMessage(locale, "": "");"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,97,* Gets the message in a specified locale.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,99,* @param locale Locale in which the message should be translated.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,100,* @param separator Separator inserted between the message parts.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,101,* @return the localized message.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,103,"public String getMessage(final Locale locale,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,104,final String separator) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,105,"return buildMessage(locale, separator);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,121,* Builds a message string.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,123,* @param locale Locale in which the message should be translated.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,124,* @param separator Message separator.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,125,* @return a localized message string.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,127,"private String buildMessage(Locale locale,"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,128,String separator) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,129,final StringBuilder sb = new StringBuilder();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,130,int count = 0;
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,131,final int len = messages.size();
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,132,"for (Pair<Localizable, Object[]> pair : messages) {"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,133,"final MessageFormat fmt = new MessageFormat(pair.getKey().getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,134,sb.append(fmt.format(pair.getValue()));
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,135,if (++count < len) {
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,136,// Add a separator if there are other messages.
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,137,sb.append(separator);
True,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,src/main/java/org/apache/commons/math/exception/MathRuntimeException.java,141,return sb.toString();
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,20,import java.util.Set;
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,32,* Sets a message.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,34,* @param pattern Message pattern.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,35,* @param arguments Values for replacing the placeholders in the message
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,36,* pattern.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,38,"void addMessage(Localizable pattern,"
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,39,Object ... arguments);
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,31,** Gets the localizable pattern used to build the specific part of the message of this throwable.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,32, @return localizable pattern used to build the specific part of the message of this throwable
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,42,"* Sets the context (key, value) pair."
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,43,* Keys are assumed to be unique within an instance. If the same key is
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,44,"* assigned a new value, the previous one will be lost."
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,46,* @param key Context key (not null).
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,47,* @param value Context value.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,34,ocalizable getSpecificPattern();
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,49,"void setContext(String key, Object value);"
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,36,** Gets the localizable pattern used to build the general part of the message of this throwable.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,37, @return localizable pattern used to build the general part of the message of this throwable
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,52,* Gets the value associated to the given context key.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,54,* @param key Context key.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,55,* @return the context value or {@code null} if the key does not exist.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,39,ocalizable getGeneralPattern();
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,57,Object getContext(String key);
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,41,** Gets the arguments used to build the message of this throwable.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,42, @return the arguments used to build the message of this throwable
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,60,* Gets all the keys stored in the exception
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,62,* @return the set of keys.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,44,bject[] getArguments();
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,64,Set<String> getContextKeys();
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,46,** Gets the message in a specified locale.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,67,* Gets the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,52,** Gets the message in a conventional US locale.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,75,* Gets the message in a conventional US locale.
False,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,57,** Gets the message in the system default locale.
True,src/main/java/org/apache/commons/math/exception/MathThrowable.java,src/main/java/org/apache/commons/math/exception/MathThrowable.java,82,* Gets the message in the system default locale.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,36, @param args Arguments.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,36,* Default constructor.
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,38,ublic MathUnsupportedOperationException(Object ... args) {
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,39,"his(null, args);"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,38,public MathUnsupportedOperationException() {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,39,"this(LocalizedFormats.UNSUPPORTED_OPERATION, null);"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,42, @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,42,* @param pattern Message pattern providing the specific context of
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,46,"ublic MathUnsupportedOperationException(Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,46,"public MathUnsupportedOperationException(Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,48,"uper(null, specific, LocalizedFormats.UNSUPPORTED_OPERATION, args);"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,48,"addMessage(pattern, args);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,39,his((Throwable) null);
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,39,"addMessage(LocalizedFormats.USER_EXCEPTION, null);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,47,"his(cause, LocalizedFormats.USER_EXCEPTION);"
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,47,super(cause);
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,48,"addMessage(LocalizedFormats.USER_EXCEPTION, null);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,51, Build an exception with a localizable message.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,52, @param pattern Format specifier.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,53, @param arguments Format arguments.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,55,"ublic MathUserException(final Localizable pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,56,"his((Throwable) null, pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,60, Build an exception with a localizable message.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,61, @param cause Cause of the error (may be null).
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,52,* Builds an exception with a localizable message.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,65,"ublic MathUserException(final Throwable cause,"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,66,"inal Localizable pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,67,"his(cause, (Localizable) null, pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,71, Builds an exception from two patterns (specific and general) and
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,72, an argument list.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,74, @param specific Format specifier for the specific part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,75, @param general Format specifier for the general part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,76, @param arguments Format arguments. They will be substituted in
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,77, <em>both</em> the {@code general} and {@code specific} format specifiers.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,79,"ublic MathUserException(final Localizable specific, final Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,57,"public MathUserException(final Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,81,"his((Throwable) null, specific, general, arguments);"
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,59,"addMessage(pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,85, Builds an exception from two patterns (specific and general) and
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,86, an argument list.
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,63,* Builds an exception with a localizable message.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,89, @param specific Format specifier for the specific part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,90, @param general Format specifier for the general part (may be null).
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,91, @param arguments Format arguments. They will be substituted in
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,92, <em>both</em> the {@code general} and {@code specific} format specifiers.
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,66,* @param pattern Format specifier.
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,67,* @param arguments Format arguments.
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,95,"inal Localizable specific, final Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,70,"final Localizable pattern,"
False,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,97,"uper(cause, specific, general, arguments);"
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,72,super(cause);
True,src/main/java/org/apache/commons/math/exception/MathUserException.java,src/main/java/org/apache/commons/math/exception/MathUserException.java,73,"addMessage(pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,42,"his(null, max);"
True,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,42,"this(LocalizedFormats.MAX_COUNT_EXCEEDED, max);"
False,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,54,"uper(specific, LocalizedFormats.MAX_COUNT_EXCEEDED, max, args);"
True,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java,54,"super(specific, max, args);"
False,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,45,"his(null, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,45,"this(LocalizedFormats.DIMENSIONS_MISMATCH, wrong, expected);"
False,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,59,"uper(specific, LocalizedFormats.DIMENSIONS_MISMATCH, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/MultiDimensionMismatchException.java,59,"super(specific, wrong, expected);"
False,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,51,"his(null, lo, hi, fLo, fHi);"
True,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,51,"this(LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, lo, hi, fLo, fHi);"
False,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,68,"uper(specific, LocalizedFormats.SAME_SIGN_AT_ENDPOINTS, lo, hi, fLo, fHi, args);"
True,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,src/main/java/org/apache/commons/math/exception/NoBracketingException.java,68,"super(specific, lo, hi, fLo, fHi, args);"
False,src/main/java/org/apache/commons/math/exception/NoDataException.java,src/main/java/org/apache/commons/math/exception/NoDataException.java,37,his(null);
True,src/main/java/org/apache/commons/math/exception/NoDataException.java,src/main/java/org/apache/commons/math/exception/NoDataException.java,37,this(LocalizedFormats.NO_DATA);
False,src/main/java/org/apache/commons/math/exception/NoDataException.java,src/main/java/org/apache/commons/math/exception/NoDataException.java,45,"uper(specific, LocalizedFormats.NO_DATA, (Object[]) null);"
True,src/main/java/org/apache/commons/math/exception/NoDataException.java,src/main/java/org/apache/commons/math/exception/NoDataException.java,45,"super(specific, null);"
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,40,"his(null, wrong, args);"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,40,"this(LocalizedFormats.NOT_FINITE_NUMBER, wrong, args);"
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,53,"uper(specific, LocalizedFormats.NOT_FINITE_NUMBER,"
False,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,54,"rong, args);"
True,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,src/main/java/org/apache/commons/math/exception/NotFiniteNumberException.java,53,"super(specific, wrong, args);"
False,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,41,uper(LocalizedFormats.NULL_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,41,"this(LocalizedFormats.NULL_NOT_ALLOWED, null);"
False,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,44, @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,44,* @param pattern Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,46,* @param arguments Values for replacing the placeholders in {@code pattern}.
False,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,47,ublic NullArgumentException(Localizable specific) {
False,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,48,"uper(specific, LocalizedFormats.NULL_NOT_ALLOWED);"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,48,"public NullArgumentException(Localizable pattern,"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,49,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,50,"super(pattern, arguments);"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,52,"his(null, wrong, max, boundIsAllowed);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,50,this(boundIsAllowed ?
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,51,LocalizedFormats.NUMBER_TOO_LARGE :
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,52,"LocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,53,"wrong, max, boundIsAllowed);"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,66,"uper(specific,"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,67,oundIsAllowed ?
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,68,ocalizedFormats.NUMBER_TOO_LARGE :
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,69,"ocalizedFormats.NUMBER_TOO_LARGE_BOUND_EXCLUDED,"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,70,"rong, max);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java,67,"super(specific, wrong, max);"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,52,"his(null, wrong, min, boundIsAllowed);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,50,this(boundIsAllowed ?
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,51,LocalizedFormats.NUMBER_TOO_SMALL :
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,52,"LocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED,"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,53,"wrong, min, boundIsAllowed);"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,67,"uper(specific,"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,68,oundIsAllowed ?
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,69,ocalizedFormats.NUMBER_TOO_SMALL :
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,70,"ocalizedFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED,"
False,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,71,"rong, min);"
True,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java,68,"super(specific, wrong, min);"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,46,"his(null, wrong, lo, hi);"
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,46,"this(LocalizedFormats.OUT_OF_RANGE_SIMPLE, wrong, lo, hi);"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,62,"uper(specific, LocalizedFormats.OUT_OF_RANGE_SIMPLE,"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,63,"rong, lo, hi);"
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,62,"super(specific, wrong, lo, hi);"
False,src/main/java/org/apache/commons/math/exception/ZeroException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,37,his(null);
True,src/main/java/org/apache/commons/math/exception/ZeroException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,37,this(LocalizedFormats.ZERO_NOT_ALLOWED);
False,src/main/java/org/apache/commons/math/exception/ZeroException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,46,"uper(specific, LocalizedFormats.ZERO_NOT_ALLOWED, 0);"
True,src/main/java/org/apache/commons/math/exception/ZeroException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,46,"super(specific, 0);"
False,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,31, Get the source (non-localized) string.
False,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,32, @return source string
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,30,* Gets the source (non-localized) string.
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,32,* @return the source string.
False,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,37, Get the localized string.
False,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,38, @param locale locale into which to get the string
False,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,39, @return localized string or the source string if no localized version is available
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,37,* Gets the localized string.
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,39,* @param locale locale into which to get the string.
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,40,* @return the localized string or the source string if no
True,src/main/java/org/apache/commons/math/exception/util/Localizable.java,src/main/java/org/apache/commons/math/exception/util/Localizable.java,41,* localized version is available.
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1633,"tring msg = ""overflow: subtract"";"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1638,hrow new MathArithmeticException(msg);
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,1637,"throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_ADDITION, a, -b);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,39,ublic void testConstructorPatternArguments(){
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,40,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,41,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,42,"onvergenceException ex = new ConvergenceException(pattern, arguments);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,43,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,44,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,45,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,46,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,47,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,49,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,50,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,60,ublic void testConstructorPatternArgumentsCause(){
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,61,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,62,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,63,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,64,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,65,"onvergenceException ex = new ConvergenceException(cause, pattern, arguments);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,66,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,67,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,68,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,69,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,70,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,72,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java,73,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,38,ublic void testConstructorPatternArguments(){
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,39,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,40,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,41,"athConfigurationException ex = new MathConfigurationException(pattern, arguments);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,42,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,43,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,44,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,45,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,46,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,48,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,49,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,59,ublic void testConstructorPatternArgumentsCause(){
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,60,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,61,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,62,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,63,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,64,"athConfigurationException ex = new MathConfigurationException(cause, pattern, arguments);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,65,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,66,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,67,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,68,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,69,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,71,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java,72,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,43,ublic void testConstructorPatternArguments(){
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,44,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,45,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,46,"athException ex = new MathException(pattern, arguments);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,47,ssertNull(ex.getCause());
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,48,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,49,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,50,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,51,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,53,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,54,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,64,ublic void testConstructorPatternArgumentsCause(){
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,65,ocalizedFormats pattern = LocalizedFormats.ROTATION_MATRIX_DIMENSIONS;
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,66,"bject[] arguments = { Integer.valueOf(6), Integer.valueOf(4) };"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,67,"tring inMsg = ""inner message"";"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,68,xception cause = new Exception(inMsg);
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,69,"athException ex = new MathException(cause, pattern, arguments);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,70,"ssertEquals(cause, ex.getCause());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,71,"ssertEquals(pattern, ex.getGeneralPattern());"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,72,"ssertEquals(arguments.length, ex.getArguments().length);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,73,or (int i = 0; i < arguments.length; ++i) {
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,74,"ssertEquals(arguments[i], ex.getArguments()[i]);"
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,76,ssertFalse(pattern.equals(ex.getMessage()));
False,src/test/java/org/apache/commons/math/MathExceptionTest.java,src/test/java/org/apache/commons/math/MathExceptionTest.java,77,ssertFalse(ex.getMessage().equals(ex.getMessage(Locale.FRENCH)));
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,17,package org.apache.commons.math.exception;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,19,import java.util.Locale;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,20,import java.util.Arrays;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,22,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,24,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,25,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,28,* Test for {@link MathRuntimeException}.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,30,* @version $Id$
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,32,public class MathRuntimeExceptionTest {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,33,@Test
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,34,public void testMessageChain() {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,35,final MathRuntimeException mre = new MathRuntimeException();
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,36,"final String sep = "": "";"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,37,"final String m1 = ""column index (0)"";"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,38,"mre.addMessage(LocalizedFormats.COLUMN_INDEX, 0);"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,39,"final String m2 = ""got 1x2 but expected 3x4"";"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,40,"mre.addMessage(LocalizedFormats.DIMENSIONS_MISMATCH_2x2, 1, 2, 3, 4);"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,41,"final String m3 = ""It didn't work out"";"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,43,try {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,44,try {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,45,throw mre;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,46,} catch (MathRuntimeException e) {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,47,"e.addMessage(LocalizedFormats.SIMPLE_MESSAGE, m3);"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,48,throw e;
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,50,} catch (MathRuntimeException e) {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,51,"Assert.assertEquals(e.getMessage(Locale.US, sep),"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,52,m1 + sep + m2 + sep + m3);
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,56,@Test
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,57,public void testContext() {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,58,final MathRuntimeException mre = new MathRuntimeException();
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,60,"final String[] keys = {""Key 1"", ""Key 2""};"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,61,"final Object[] values = {""Value 1"", Integer.valueOf(2)};"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,63,for (int i = 0; i < keys.length; i++) {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,64,"mre.setContext(keys[i], values[i]);"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,67,// Check that all keys are present.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,68,Assert.assertTrue(mre.getContextKeys().containsAll(Arrays.asList(keys)));
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,70,// Check that all values are correctly stored.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,71,for (int i = 0; i < keys.length; i++) {
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,72,"Assert.assertEquals(values[i], mre.getContext(keys[i]));"
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,75,// Check behaviour on missing key.
True,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,src/test/java/org/apache/commons/math/exception/MathRuntimeExceptionTest.java,76,"Assert.assertNull(mre.getContext(""xyz""));"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,126,"ssertEquals(0, ioe.getMessage().length());"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,126,// XXX Why was the message supposed to be empty?
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,127,"// With the current code it is ""org.apache.commons.math.util.Pair""."
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,128,"// assertEquals(0, ioe.getMessage().length());"
False,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,140,"hrow new MathUserException((Localizable) null, LocalizedFormats.SIMPLE_MESSAGE, """");"
True,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java,142,"throw new MathUserException(LocalizedFormats.SIMPLE_MESSAGE, null);"
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,74,hrow new MathArithmeticException(
False,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,75,"error computing binomial coefficient"");"
True,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,src/test/java/org/apache/commons/math/util/MathUtilsTest.java,74,throw new MathArithmeticException();
