is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,5,* reserved.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,9,* are met:
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,17,*    distribution.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,52,* <http://www.apache.org/>.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,54,package org.apache.commons.math;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,56,import java.util.Iterator;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,57,import java.util.List;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,59,import org.apache.commons.beanutils.PropertyUtils;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,62,* This implementation of StoreUnivariate uses commons-beanutils to gather
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,63,* univariate statistics for a List of Java Beans by property.  This
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,64,"* implementation uses beanutils' PropertyUtils to get a simple, nested,"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,65,"* indexed, mapped, or combined property from an element of a List."
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,67,"* @author <a href=""mailto:tobrien@apache.org"">Tim O'Brien</a>"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,69,public class BeanListUnivariateImpl extends ListUnivariateImpl {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,71,private String propertyName;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,73,public BeanListUnivariateImpl(List list) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,74,super( list );
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,77,"public BeanListUnivariateImpl(List list, String propertyName) {"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,78,super( list );
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,79,setPropertyName( propertyName );
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,82,public String getPropertyName() {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,83,return propertyName;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,86,public void setPropertyName(String propertyName) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,87,"System.out.println( ""Set prop name; "" + propertyName );"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,88,this.propertyName = propertyName;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,92,/* (non-Javadoc)
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,93,* @see org.apache.commons.math.Univariate#addValue(double)
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,95,public void addValue(double v) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,96,"String msg = ""The BeanListUnivariateImpl does not accept values "" +"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,97,"""through the addValue method.  Because elements of this list "" +"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,98,"""are JavaBeans, one must be sure to set the 'propertyName' "" +"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,99,"""property and add new Beans to the underlying list via the "" +"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,100,"""addBean(Object bean) method"";"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,101,throw new UnsupportedOperationException( msg );
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,105,* Adds a bean to this list.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,107,* @param bean Bean to add to the list
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,109,public void addObject(Object bean) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,110,list.add(bean);
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,114,* Reads the property of an element in the list.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,116,* @param index The location of the value in the internal List
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,117,* @return A Number object representing the value at a given
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,118,*         index
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,120,protected Number getInternalIndex(int index) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,122,try {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,123,"Number n = (Number) PropertyUtils.getProperty( list.get( index ),"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,124,propertyName );
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,126,return n;
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,127,} catch( Exception e ) {
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,128,// TODO: We could use a better strategy for error handling
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,129,// here.
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,131,"// This is a somewhat foolish design decision, but until"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,132,"// we figure out what needs to be done, let's return NaN"
True,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/BeanListUnivariateImpl.java,133,return new Double(Double.NaN);
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,81,"/ If we've got a windowSize, we might not care about the entire list."
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,82,ist effectiveList = list;
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,81,int startIndex = 0;
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,82,int endIndex = list.size() - 1;
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,90,"ffectiveList = list.subList((list.size() - 1) - windowSize,"
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,91,list.size()-1));
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,91,startIndex = (list.size() - 1) - windowSize;
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,95,ouble[] copiedArray = new double[effectiveList.size()];
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,95,double[] copiedArray = new double[list.size() - startIndex];
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,97,nt i = 0;
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,98,terator it = effectiveList.iterator();
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,99,hile(it.hasNext()) {
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,100,umber n = (Number) it.next();
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,97,for( int i = startIndex; i <= endIndex; i++ ) {
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,98,Number n = (Number) getInternalIndex( i );
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,119,umber n = (Number) list.get(calcIndex);
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,117,Number n = (Number) getInternalIndex(calcIndex);
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,122,umber n = (Number) list.get(index);
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,120,Number n = (Number) getInternalIndex(index);
False,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,125,"ystem.out.println( ""Returning value: "" + value );"
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,173,* This function exists to support the function of classes which
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,174,* extend the ListUnivariateImpl.
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,176,* @param index The location of the value in the internal List
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,177,* @return A Number object representing the value at a given
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,178,*         index
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,180,protected Number getInternalIndex(int index) {
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,182,Number n = (Number) list.get( index );
True,src/java/org/apache/commons/math/ListUnivariateImpl.java,src/java/org/apache/commons/math/ListUnivariateImpl.java,183,return n;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,5,* reserved.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,9,* are met:
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,54,package org.apache.commons.math;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,56,import java.util.ArrayList;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,57,import java.util.List;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,63,import org.apache.commons.math.beans.*;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,66,* Test cases for the {@link BeanListUnivariateImpl} class.
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,68,"* @author <a href=""mailto:tobrien@apache.org"">Tim O'Brien</a>"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,69,* @version $Revision: 1.1 $ $Date: 2003/05/29 19:41:31 $
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,72,public final class BeanListUnivariateImplTest extends TestCase {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,74,private List patientList = null;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,75,private double tolerance = Double.MIN_VALUE;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,77,public BeanListUnivariateImplTest(String name) {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,78,super(name);
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,81,public void setUp() {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,82,patientList = new ArrayList();
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,84,// Create and add patient bean 1
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,85,"VitalStats vs1 = new VitalStats( new Double(120.0),"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,86,new Double(96.4) );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,87,"Patient p1 = new Patient( vs1, new Integer( 35 ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,88,patientList.add( p1 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,90,// Create and add patient bean 2
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,91,"VitalStats vs2 = new VitalStats( new Double(70.0),"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,92,new Double(97.4) );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,93,"Patient p2 = new Patient( vs2, new Integer( 23 ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,94,patientList.add( p2 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,96,// Create and add patient bean 3
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,97,"VitalStats vs3 = new VitalStats( new Double(90.0),"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,98,new Double(98.6) );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,99,"Patient p3 = new Patient( vs3, new Integer( 42 ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,100,patientList.add( p3 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,103,public static Test suite() {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,104,TestSuite suite = new TestSuite(BeanListUnivariateImplTest.class);
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,105,"suite.setName(""Freq Tests"");"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,106,return suite;
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,109,/** test stats */
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,110,public void testStats() {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,112,StoreUnivariate u = new BeanListUnivariateImpl( patientList );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,114,"assertEquals(""total count"",3,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,116,u.clear();
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,117,"assertEquals(""total count"",0,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,120,public void testPropStats() {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,122,"StoreUnivariate heartU = new BeanListUnivariateImpl( patientList,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,123,"""vitalStats.heartRate"" );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,127,"assertEquals( ""Mean heart rate unexpected"", 93.333,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,128,"heartU.getMean(), 0.001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,129,"assertEquals( ""Max heart rate unexpected"", 120.0,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,130,"heartU.getMax(), 0.001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,132,"StoreUnivariate ageU = new BeanListUnivariateImpl( patientList,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,133,"""age"" );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,135,"assertEquals( ""Mean age unexpected"", 33.333,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,136,"ageU.getMean(), 0.001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,137,"assertEquals( ""Max age unexpected"", 42.0,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,138,"ageU.getMax(), 0.001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,142,/*    public void testN0andN1Conditions() throws Exception {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,143,List list = new ArrayList();
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,145,StoreUnivariate u = new ListUnivariateImpl( list );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,147,"assertTrue(""Mean of n = 0 set should be NaN"", Double.isNaN( u.getMean() ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,148,"assertTrue(""Standard Deviation of n = 0 set should be NaN"", Double.isNaN( u.getStandardDeviation() ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,149,"assertTrue(""Variance of n = 0 set should be NaN"", Double.isNaN(u.getVariance() ) );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,151,list.add( new Double(one));
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,153,"assertTrue( ""Mean of n = 1 set should be value of single item n1"", u.getMean() == one);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,154,"assertTrue( ""StdDev of n = 1 set should be zero, instead it is: "" + u.getStandardDeviation(), u.getStandardDeviation() == 0);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,155,"assertTrue( ""Variance of n = 1 set should be zero"", u.getVariance() == 0);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,158,public void testSkewAndKurtosis() {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,159,StoreUnivariate u = new StoreUnivariateImpl();
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,161,"double[] testArray = { 12.5, 12, 11.8, 14.2, 14.9, 14.5, 21, 8.2, 10.3, 11.3, 14.1,"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,162,"9.9, 12.2, 12, 12.1, 11, 19.8, 11, 10, 8.8, 9, 12.3 };"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,163,for( int i = 0; i < testArray.length; i++) {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,164,u.addValue( testArray[i]);
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,167,"assertEquals(""mean"", 12.40455, u.getMean(), 0.0001);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,168,"assertEquals(""variance"", 10.00236, u.getVariance(), 0.0001);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,169,"assertEquals(""skewness"", 1.437424, u.getSkewness(), 0.0001);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,170,"assertEquals(""kurtosis"", 2.37719, u.getKurtosis(), 0.0001);"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,173,public void testProductAndGeometricMean() throws Exception {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,174,ListUnivariateImpl u = new ListUnivariateImpl(new ArrayList());
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,175,u.setWindowSize(10);
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,177,u.addValue( 1.0 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,178,u.addValue( 2.0 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,179,u.addValue( 3.0 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,180,u.addValue( 4.0 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,182,"assertEquals( ""Product not expected"", 24.0, u.getProduct(), Double.MIN_VALUE );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,183,"assertEquals( ""Geometric mean not expected"", 2.213364, u.getGeometricMean(), 0.00001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,185,// Now test rolling - UnivariateImpl should discount the contribution
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,186,// of a discarded element
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,187,for( int i = 0; i < 10; i++ ) {
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,188,u.addValue( i + 2 );
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,190,"// Values should be (2,3,4,5,6,7,8,9,10,11)"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,192,"assertEquals( ""Product not expected"", 39916800.0, u.getProduct(), 0.00001 );"
True,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/BeanListUnivariateImplTest.java,193,"assertEquals( ""Geometric mean not expected"", 5.755931, u.getGeometricMean(), 0.00001 );"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,5,* reserved.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,9,* are met:
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,17,*    distribution.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,54,package org.apache.commons.math.beans;
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,56,public class Patient {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,58,private VitalStats vitalStats;
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,59,private Integer age;
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,61,public Patient() {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,64,"public Patient(VitalStats vitalStats, Integer age) {"
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,65,setVitalStats( vitalStats );
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,66,setAge( age );
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,69,public VitalStats getVitalStats() {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,70,return( vitalStats );
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,73,public void setVitalStats(VitalStats vitalStats) {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,74,this.vitalStats = vitalStats;
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,77,public Integer getAge() {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,78,return age;
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,81,public void setAge(Integer age) {
True,src/test/org/apache/commons/math/beans/Patient.java,src/test/org/apache/commons/math/beans/Patient.java,82,this.age = age;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,5,* reserved.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,9,* are met:
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,17,*    distribution.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,54,package org.apache.commons.math.beans;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,56,public class VitalStats {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,58,private Double heartrate;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,59,private Double temperature;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,61,public VitalStats() {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,64,"public VitalStats(Double heartrate, Double temperature) {"
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,65,setHeartRate( heartrate );
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,66,setTemperature( temperature );
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,69,public Double getHeartRate() {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,70,return heartrate;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,73,public void setHeartRate(Double heartrate) {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,74,this.heartrate = heartrate;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,77,public Double getTemperature() {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,78,return temperature;
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,81,public void setTemperature(Double temperature) {
True,src/test/org/apache/commons/math/beans/VitalStats.java,src/test/org/apache/commons/math/beans/VitalStats.java,82,this.temperature = temperature;
