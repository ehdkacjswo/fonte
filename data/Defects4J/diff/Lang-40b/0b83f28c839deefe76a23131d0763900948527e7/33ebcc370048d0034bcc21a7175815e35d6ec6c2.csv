is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,17,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,19,mport java.text.ChoiceFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,20,mport java.text.DateFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,21,mport java.text.DecimalFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,22,mport java.text.DecimalFormatSymbols;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,23,mport java.text.FieldPosition;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,24,mport java.text.Format;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,25,mport java.text.MessageFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,26,mport java.text.NumberFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,27,mport java.text.SimpleDateFormat;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,28,mport java.util.Calendar;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,29,mport java.util.GregorianCalendar;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,30,mport java.util.Locale;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,32,mport org.apache.commons.lang.SystemUtils;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,34,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,37, Abstract testcase to verify behavior of default-configuration
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,38, ExtendedMessageFormat vs. MessageFormat.
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,40, @author Matt Benson
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,41, @since 2.4
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,42, @version $Id$
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,44,ublic abstract class AbstractMessageFormatTest extends TestCase {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,45,"rotected static final Double[] NUMBERS = { new Double(0.1),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,46,"ew Double(1.1), new Double(2.1) };"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,48,rotected static final Object[] DATES = {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,49,"ew GregorianCalendar(1970, Calendar.JANUARY, 01, 0, 15, 20)"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,50,"getTime(),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,51,"ew GregorianCalendar(1970, Calendar.FEBRUARY, 02, 12, 30, 35)"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,52,"getTime(),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,53,"ew GregorianCalendar(1970, Calendar.MARCH, 03, 18, 45, 50)"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,54,getTime() };
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,56,rotected Locale locale;
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,59, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,61,rotected void setUp() throws Exception {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,62,uper.setUp();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,63,his.locale = getLocale();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,67, Create a MessageFormat.
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,68, @param pattern
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,69, @param locale
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,70, @return
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,72,"rotected abstract MessageFormat createMessageFormat(String pattern,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,73,ocale locale);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,76, Get the Locale to use.
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,77, @return
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,79,rotected abstract Locale getLocale();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,81,"rotected void doAssertions(String expected, String pattern, Object[] args) {"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,82,"oAssertions(expected, pattern, args, pattern);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,85,"rotected void doAssertions(String expected, String pattern, Object[] args,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,86,tring toPattern) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,87,"essageFormat f = createMessageFormat(pattern, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,88,"ssertEquals(expected, f.format(args));"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,89,f (SystemUtils.isJavaVersionAtLeast(140)) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,90,"ssertEquals(toPattern, f.toPattern());"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,94,"rotected void doAssertions(Format format, Object[] args) {"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,95,"oAssertions(format, args, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,98,"rotected void doAssertions(Format format, Object[] args, String formatName) {"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,99,"oAssertions(format, args, formatName, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,102,"rotected void doAssertions(Format format, Object[] args,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,103,"tring formatName, String decodeFormatName) {"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,104,tringBuffer pattern = new StringBuffer();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,105,tringBuffer expected = new StringBuffer();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,106,tringBuffer decodePattern = new StringBuffer();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,107,or (int i = 0; i < args.length; i++) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,108,"attern.append(i).append("": {"").append(i);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,109,f (formatName != null) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,110,"attern.append(',').append(formatName);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,112,"attern.append(""}; "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,113,"xpected.append(i).append("": "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,114,f (format != null) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,115,"ormat.format(args[i], expected, new FieldPosition(0));"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,116, else {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,117,xpected.append(String.valueOf(args[i]));
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,119,"xpected.append(""; "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,120,"ecodePattern.append(i).append("": {"").append(i);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,121,f (decodeFormatName != null || formatName != null) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,122,"ecodePattern.append(',').append("
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,123,ecodeFormatName == null ? formatName
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,124, decodeFormatName);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,126,"ecodePattern.append(""}; "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,128,"oAssertions(expected.toString(), pattern.toString(), args,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,129,ecodePattern.toString());
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,132,ublic void testNoFormatElements() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,133,tringBuffer pattern = new StringBuffer();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,134,or (int i = 0; i < NUMBERS.length; i++) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,135,f (i > 0) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,136,"attern.append(""; "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,138,"attern.append(i).append("": "").append(NUMBERS[i]);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,140,tring p = pattern.toString();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,141,"oAssertions(p, p, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,144,ublic void testSimpleStrings() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,145,"oAssertions(null, new Object[] { ""foo"", ""bar"", ""baz""}, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,148,ublic void testSimpleNumbers() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,149,"oAssertions(NumberFormat.getInstance(locale), NUMBERS, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,152,ublic void testSimpleDates() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,153,"oAssertions(DateFormat.getDateTimeInstance(DateFormat.SHORT,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,154,"ateFormat.SHORT, locale), DATES, null);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,157,ublic void testNumber() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,158,"oAssertions(NumberFormat.getInstance(locale), NUMBERS, ""number"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,161,ublic void testNumberLooseFormatting() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,162,"oAssertions(NumberFormat.getInstance(locale), NUMBERS, "" number "","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,163,"number"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,166,ublic void testInteger() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,167,"oAssertions(getIntegerNumberFormat(locale), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,168,"number,integer"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,171,ublic void testIntegerLooseFormatting() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,172,"oAssertions(getIntegerNumberFormat(locale), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,173," number , integer "", ""number,integer"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,176,ublic void testCurrency() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,177,"oAssertions(NumberFormat.getCurrencyInstance(locale), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,178,"number,currency"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,181,ublic void testPercent() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,182,"oAssertions(NumberFormat.getPercentInstance(locale), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,183,"number,percent"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,186,ublic void testNumberPattern() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,187,"oAssertions(new DecimalFormat(""#000.000"", new DecimalFormatSymbols("
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,188,"ocale)), NUMBERS, ""number,#000.000"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,191,ublic void testDate() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,192,"oAssertions(DateFormat.getDateInstance(DateFormat.DEFAULT, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,193,"ATES, ""date"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,196,ublic void testDateLooseFormatting() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,197,"oAssertions(DateFormat.getDateInstance(DateFormat.DEFAULT, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,198,"ATES, "" date "", ""date"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,201,ublic void testShortDate() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,202,"ateFormat shortDf = DateFormat.getDateInstance(DateFormat.SHORT, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,203,"ateFormat defaultDf = DateFormat.getDateInstance(DateFormat.DEFAULT, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,204,"oAssertions(shortDf, DATES, ""date,short"","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,205,"hortDf.equals(defaultDf) ? ""date"" : ""date,short"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,208,ublic void testShortDateLooseFormatting() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,209,"ateFormat shortDf = DateFormat.getDateInstance(DateFormat.SHORT, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,210,"ateFormat defaultDf = DateFormat.getDateInstance(DateFormat.DEFAULT, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,211,"oAssertions(shortDf, DATES, "" date , short "","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,212,"hortDf.equals(defaultDf) ? ""date"" : ""date,short"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,215,ublic void testMediumDate() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,216,"oAssertions(DateFormat.getDateInstance(DateFormat.MEDIUM, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,217,"ATES, ""date,medium"", ""date"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,220,ublic void testLongDate() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,221,"ateFormat longDf = DateFormat.getDateInstance(DateFormat.LONG, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,222,"ateFormat defaultDf = DateFormat.getDateInstance(DateFormat.DEFAULT,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,223,ocale);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,224,"oAssertions(longDf, DATES, ""date,long"","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,225,"ongDf.equals(defaultDf) ? ""date"" : ""date,long"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,228,ublic void testFullDate() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,229,"ateFormat fullDf = DateFormat.getDateInstance(DateFormat.FULL, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,230,"ateFormat longDf = DateFormat.getDateInstance(DateFormat.LONG, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,231,"oAssertions(fullDf, DATES, ""date,full"","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,232,"ullDf.equals(longDf) ? ""date,long"" : ""date,full"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,235,ublic void testDatePattern() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,236,"oAssertions(new SimpleDateFormat(""Gyyyy.D"", locale), DATES,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,237,"date,Gyyyy.D"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,240,ublic void testTime() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,241,"oAssertions(DateFormat.getTimeInstance(DateFormat.DEFAULT, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,242,"ATES, ""time"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,245,ublic void testShortTime() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,246,"oAssertions(DateFormat.getTimeInstance(DateFormat.SHORT, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,247,"ATES, ""time,short"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,250,ublic void testMediumTime() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,251,"oAssertions(DateFormat.getTimeInstance(DateFormat.MEDIUM, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,252,"ATES, ""time,medium"", ""time"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,255,ublic void testLongTime() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,256,"oAssertions(DateFormat.getTimeInstance(DateFormat.LONG, locale),"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,257,"ATES, ""time,long"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,260,ublic void testFullTime() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,261,"ateFormat fullDf = DateFormat.getTimeInstance(DateFormat.FULL, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,262,"ateFormat longDf = DateFormat.getTimeInstance(DateFormat.LONG, locale);"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,263,"oAssertions(fullDf, DATES, ""time,full"","
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,264,"ullDf.equals(longDf) ? ""time,long"" : ""time,full"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,267,ublic void testTimePattern() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,268,"oAssertions(new SimpleDateFormat(""aHms"", locale), DATES, ""date,aHms"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,271,ublic void testChoice() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,272,"oAssertions(new ChoiceFormat(""0.0#x|1.0#y|2.0#z""), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,273,"choice,0.0#x|1.0#y|2.0#z"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,276,ublic void testChoiceLooseFormatting() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,277,"oAssertions(new ChoiceFormat(""0.0#x |1.0#y |2.0#z ""), NUMBERS,"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,278,"choice,0.0#x |1.0#y |2.0#z "");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,281,ublic void testChoiceRecursive() {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,282,umberFormat nf = NumberFormat.getInstance(locale);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,283,tringBuffer choice = new StringBuffer();
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,284,"tringBuffer format = new StringBuffer(""choice,"");"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,285,or (int i = 0; i < NUMBERS.length; i++) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,286,ouble d = new Double(Math.floor(NUMBERS[i].doubleValue()));
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,287,f (i > 0) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,288,hoice.append('|');
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,289,ormat.append('|');
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,291,hoice.append(d).append('#').append(
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,292,f.format(NUMBERS[i].doubleValue()));
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,293,ormat.append(d).append('#').append('{').append(i).append('}');
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,295,"oAssertions(new ChoiceFormat(choice.toString()), NUMBERS, format"
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,296,toString());
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,299,rivate NumberFormat getIntegerNumberFormat(Locale locale) {
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,300,umberFormat result = NumberFormat.getInstance(locale);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,301,esult.setMaximumFractionDigits(0);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,302,esult.setParseIntegerOnly(true);
False,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,src/test/org/apache/commons/lang/text/AbstractMessageFormatTest.java,303,eturn result;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,17,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,19,mport java.text.MessageFormat;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,20,mport java.util.Locale;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,23, Baseline tests for ExtendedMessageFormat
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,25, @author Matt Benson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,26, @since 2.4
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,27, @version $Id$
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,29,ublic abstract class ExtendedMessageFormatBaselineTest extends
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,30,bstractMessageFormatTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,33, Tests for <code>Locale.US</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,35, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,37,ublic static class US extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,39, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,41,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,42,eturn Locale.US;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,47, Tests for <code>Locale.UK</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,49, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,51,ublic static class UK extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,53, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,55,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,56,eturn Locale.UK;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,61, Tests for <code>Locale.GERMANY</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,63, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,65,ublic static class DE extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,67, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,69,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,70,eturn Locale.GERMANY;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,75, Tests for <code>Locale.ITALY</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,77, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,79,ublic static class IT extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,81, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,83,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,84,eturn Locale.ITALY;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,89, Tests for <code>Locale.JAPAN</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,91, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,93,ublic static class JP extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,95, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,97,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,98,eturn Locale.JAPAN;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,103, Tests for <code>Locale.CHINA</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,105, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,107,ublic static class CN extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,109, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,111,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,112,eturn Locale.CHINA;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,117, Tests for <code>Locale.CANADA</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,119, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,121,ublic static class CA extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,123, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,125,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,126,eturn Locale.CANADA;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,131, Tests for <code>Locale.FRANCE</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,133, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,135,ublic static class FR extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,137, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,139,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,140,eturn Locale.FRANCE;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,145, Tests for <code>Locale.KOREA</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,147, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,149,ublic static class KR extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,151, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,153,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,154,eturn Locale.KOREA;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,159, Tests for <code>Locale.TAIWAN</code>
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,161, @author mbenson
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,163,ublic static class TW extends ExtendedMessageFormatBaselineTest {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,165, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,167,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,168,eturn Locale.TAIWAN;
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,173, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,175,"rotected MessageFormat createMessageFormat(String pattern, Locale locale) {"
False,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatBaselineTest.java,176,"eturn new ExtendedMessageFormat(pattern, locale);"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,30,import junit.framework.Test;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,32,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,51,* Return a new test suite containing this test case.
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,53,* @return a new test suite containing this test case
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,55,public static Test suite() {
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,56,TestSuite suite = new TestSuite(ExtendedMessageFormatTest.class);
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,57,"suite.setName(""ExtendedMessageFormat Tests"");"
True,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,src/test/org/apache/commons/lang/text/ExtendedMessageFormatTest.java,58,return suite;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,17,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,19,mport java.text.DateFormat;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,20,mport java.text.FieldPosition;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,21,mport java.text.Format;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,22,mport java.text.MessageFormat;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,23,mport java.text.ParsePosition;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,24,mport java.util.Calendar;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,25,mport java.util.Date;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,26,mport java.util.GregorianCalendar;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,27,mport java.util.HashMap;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,28,mport java.util.Locale;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,31, Extension tests for {@link ExtendedMessageFormat}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,33, @author Matt Benson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,34, @since 2.4
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,35, @version $Id$
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,37,ublic abstract class MessageFormatExtensionTest extends
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,38,bstractMessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,40, Tests for <code>Locale.US</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,42, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,44,ublic static class US extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,46, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,48,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,49,eturn Locale.US;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,54, Tests for <code>Locale.UK</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,56, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,58,ublic static class UK extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,60, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,62,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,63,eturn Locale.UK;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,68, Tests for <code>Locale.GERMANY</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,70, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,72,ublic static class DE extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,74, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,76,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,77,eturn Locale.GERMANY;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,82, Tests for <code>Locale.ITALY</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,84, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,86,ublic static class IT extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,88, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,90,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,91,eturn Locale.ITALY;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,96, Tests for <code>Locale.JAPAN</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,98, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,100,ublic static class JP extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,102, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,104,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,105,eturn Locale.JAPAN;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,110, Tests for <code>Locale.CHINA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,112, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,114,ublic static class CN extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,116, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,118,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,119,eturn Locale.CHINA;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,124, Tests for <code>Locale.CANADA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,126, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,128,ublic static class CA extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,130, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,132,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,133,eturn Locale.CANADA;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,138, Tests for <code>Locale.FRANCE</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,140, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,142,ublic static class FR extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,144, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,146,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,147,eturn Locale.FRANCE;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,152, Tests for <code>Locale.KOREA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,154, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,156,ublic static class KR extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,158, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,160,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,161,eturn Locale.KOREA;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,166, Tests for <code>Locale.TAIWAN</code>
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,168, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,170,ublic static class TW extends MessageFormatExtensionTest {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,172, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,174,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,175,eturn Locale.TAIWAN;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,179,tatic class ProperNameCapitalizationFormat extends Format {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,180,rivate static final long serialVersionUID = -6081911520622186866L;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,181,rivate static final StrMatcher MATCH = StrMatcher
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,182,"charSetMatcher("" ,."");"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,185, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,187,"ublic StringBuffer format(Object obj, StringBuffer toAppendTo,"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,188,ieldPosition fpos) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,189,f (!(obj instanceof String)) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,190,hrow new IllegalArgumentException();
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,192,har[] buffer = ((String) obj).toCharArray();
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,193,arsePosition pos = new ParsePosition(0);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,194,hile (pos.getIndex() < buffer.length) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,195,har c = buffer[pos.getIndex()];
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,196,f (Character.isLowerCase(c)) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,197, = Character.toUpperCase(c);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,199,f (Character.isUpperCase(c)) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,200,oAppendTo.append(c);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,201,ext(pos);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,203,nt start = pos.getIndex();
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,204,"eekDelimiter(buffer, pos);"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,205,"oAppendTo.append(new String(buffer, start, pos.getIndex()"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,206, start).toLowerCase());
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,208,eturn toAppendTo;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,212, Unable to do much; return the String.
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,214,"ublic Object parseObject(String source, ParsePosition pos) {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,215,eturn source.substring(pos.getIndex());
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,218,"rivate static void seekDelimiter(char[] buffer, ParsePosition pos) {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,219,or (; pos.getIndex() < buffer.length
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,220,"& MATCH.isMatch(buffer, pos.getIndex()) == 0; next(pos))"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,222,f (pos.getIndex() >= buffer.length) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,223,eturn;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,225,nt len = 0;
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,226,o {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,227,"en = MATCH.isMatch(buffer, pos.getIndex());"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,228,os.setIndex(pos.getIndex() + len);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,229, while (len > 0 && pos.getIndex() < buffer.length);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,232,rivate static void next(ParsePosition pos) {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,233,os.setIndex(pos.getIndex() + 1);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,238, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,240,"rotected MessageFormat createMessageFormat(String pattern, Locale locale) {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,241,inal ProperNameCapitalizationFormat properNameCapitalizationFormat = new ProperNameCapitalizationFormat();
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,242,inal FormatFactory ff = new FormatFactory() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,243,"ublic Format getFormat(String name, String arguments, Locale locale) {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,244,"eturn ""properName"".equals(name) ? properNameCapitalizationFormat : null;"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,247,"eturn new ExtendedMessageFormat(pattern, locale, new HashMap() { { put(""properName"", ff); }});"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,250,ublic void testProperName() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,251,"oAssertions(""John Q. Public; John Q. Public"","
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,252,"{0,properName}; {1,properName}"", new String[] {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,253,"JOHN Q. PUBLIC"", ""john q. public"" });"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,256,ublic void testMixed() {
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,257,"tringBuffer expected = new StringBuffer(""John Q. Public was born on "");"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,258,"ate dob = new GregorianCalendar(1970, Calendar.JANUARY, 01, 0, 15, 20)"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,259,getTime();
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,260,"ateFormat longDf = DateFormat.getDateInstance(DateFormat.LONG, locale);"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,261,"ongDf.format(dob, expected, new FieldPosition(0));"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,262,xpected.append('.');
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,263,"tring pattern = ""{0,properName} was born on {1,date,long}."";"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,264,tringBuffer toPattern = new StringBuffer(pattern);
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,265,"f (longDf.equals(DateFormat.getDateInstance(DateFormat.DEFAULT, locale))) {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,266,"nt idx = pattern.indexOf("",long"");"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,267,"oPattern.delete(idx, idx + "",long"".length());"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,269,"oAssertions(expected.toString(),"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,270,"attern, new Object[] {"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,271,"john q. public"","
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,272,"ew GregorianCalendar(1970, Calendar.JANUARY, 01, 0,"
False,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,src/test/org/apache/commons/lang/text/MessageFormatExtensionTest.java,273,"5, 20).getTime() }, toPattern.toString());"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,17,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,19,mport java.text.MessageFormat;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,20,mport java.util.Locale;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,23, Baseline tests for java.text.MessageFormat.
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,25, @author Matt Benson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,26, @since 2.4
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,27, @version $Id$
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,29,ublic abstract class MessageFormatTest extends AbstractMessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,32, Tests for <code>Locale.US</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,34, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,36,ublic static class US extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,38, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,40,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,41,eturn Locale.US;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,46, Tests for <code>Locale.UK</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,48, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,50,ublic static class UK extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,52, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,54,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,55,eturn Locale.UK;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,60, Tests for <code>Locale.GERMANY</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,62, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,64,ublic static class DE extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,66, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,68,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,69,eturn Locale.GERMANY;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,74, Tests for <code>Locale.ITALY</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,76, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,78,ublic static class IT extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,80, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,82,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,83,eturn Locale.ITALY;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,88, Tests for <code>Locale.JAPAN</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,90, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,92,ublic static class JP extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,94, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,96,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,97,eturn Locale.JAPAN;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,102, Tests for <code>Locale.CHINA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,104, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,106,ublic static class CN extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,108, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,110,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,111,eturn Locale.CHINA;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,116, Tests for <code>Locale.CANADA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,118, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,120,ublic static class CA extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,122, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,124,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,125,eturn Locale.CANADA;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,130, Tests for <code>Locale.FRANCE</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,132, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,134,ublic static class FR extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,136, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,138,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,139,eturn Locale.FRANCE;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,144, Tests for <code>Locale.KOREA</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,146, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,148,ublic static class KR extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,150, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,152,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,153,eturn Locale.KOREA;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,158, Tests for <code>Locale.TAIWAN</code>
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,160, @author mbenson
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,162,ublic static class TW extends MessageFormatTest {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,164, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,166,rotected Locale getLocale() {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,167,eturn Locale.TAIWAN;
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,172, {@inheritDoc}
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,174,"rotected MessageFormat createMessageFormat(String pattern, Locale locale) {"
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,175,essageFormat result = new MessageFormat(pattern);
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,176,f (!Locale.getDefault().equals(locale)) {
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,177,esult.setLocale(locale);
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,178,esult.applyPattern(pattern);
False,src/test/org/apache/commons/lang/text/MessageFormatTest.java,src/test/org/apache/commons/lang/text/MessageFormatTest.java,180,eturn result;
True,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,53,suite.addTest(ExtendedMessageFormatTest.suite());
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,59,uite.addTestSuite(MessageFormatTest.US.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,60,uite.addTestSuite(MessageFormatTest.UK.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,61,uite.addTestSuite(MessageFormatTest.DE.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,62,uite.addTestSuite(MessageFormatTest.IT.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,63,uite.addTestSuite(MessageFormatTest.JP.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,64,uite.addTestSuite(MessageFormatTest.CA.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,65,uite.addTestSuite(MessageFormatTest.CN.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,66,uite.addTestSuite(MessageFormatTest.FR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,67,uite.addTestSuite(MessageFormatTest.KR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,68,uite.addTestSuite(MessageFormatTest.TW.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,69,uite.addTestSuite(ExtendedMessageFormatBaselineTest.US.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,70,uite.addTestSuite(ExtendedMessageFormatBaselineTest.UK.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,71,uite.addTestSuite(ExtendedMessageFormatBaselineTest.DE.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,72,uite.addTestSuite(ExtendedMessageFormatBaselineTest.IT.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,73,uite.addTestSuite(ExtendedMessageFormatBaselineTest.JP.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,74,uite.addTestSuite(ExtendedMessageFormatBaselineTest.CA.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,75,uite.addTestSuite(ExtendedMessageFormatBaselineTest.CN.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,76,uite.addTestSuite(ExtendedMessageFormatBaselineTest.FR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,77,uite.addTestSuite(ExtendedMessageFormatBaselineTest.KR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,78,uite.addTestSuite(ExtendedMessageFormatBaselineTest.TW.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,79,uite.addTestSuite(MessageFormatExtensionTest.US.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,80,uite.addTestSuite(MessageFormatExtensionTest.UK.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,81,uite.addTestSuite(MessageFormatExtensionTest.DE.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,82,uite.addTestSuite(MessageFormatExtensionTest.IT.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,83,uite.addTestSuite(MessageFormatExtensionTest.JP.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,84,uite.addTestSuite(MessageFormatExtensionTest.CA.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,85,uite.addTestSuite(MessageFormatExtensionTest.CN.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,86,uite.addTestSuite(MessageFormatExtensionTest.FR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,87,uite.addTestSuite(MessageFormatExtensionTest.KR.class);
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,88,uite.addTestSuite(MessageFormatExtensionTest.TW.class);
