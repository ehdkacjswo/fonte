is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,113,* @author Arun Mammen Thomas
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,114," @version $Id: EqualsBuilder.java,v 1.22 2003/12/26 22:04:49 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,115,"* @version $Id: EqualsBuilder.java,v 1.23 2004/02/11 20:08:49 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,513,lass lhsClass = lhs[i].getClass();
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,514,f (!lhsClass.isInstance(rhs[i])) {
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,515,"sEquals = false; //If the types don't match, not equal"
False,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,src/java/org/apache/commons/lang/builder/EqualsBuilder.java,516,reak;
False,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,67," @version $Id: EqualsBuilderTest.java,v 1.7 2003/08/18 02:22:26 bayard Exp $"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,67,* @author Maarten Coene
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,68,"* @version $Id: EqualsBuilderTest.java,v 1.8 2004/02/11 20:08:49 ggregory Exp $"
False,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,421,estObject[] obj1 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,422,TestObject[] obj1 = new TestObject[3];
False,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,424,estObject[] obj2 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,425,obj1[2] = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,426,TestObject[] obj2 = new TestObject[3];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,429,obj2[2] = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,432,"assertTrue(new EqualsBuilder().append(obj2, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,436,obj1[1].setA(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,437,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,438,obj1[2] = obj1[1];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,439,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,440,obj1[2] = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,441,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
