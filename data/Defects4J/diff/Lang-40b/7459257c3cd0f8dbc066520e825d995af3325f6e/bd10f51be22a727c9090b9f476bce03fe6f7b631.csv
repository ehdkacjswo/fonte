is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,6,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,7,* reserved.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,11,* are met:
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,19,*    distribution.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,28,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,35,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,58,* <code>HashCode</code> generation routines.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,59,* <p>
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,60,* This class enables a good hashcode to be built for any class. It follows
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,61,"* the rules laid out in the book Effective Java, by Joshua Bloch. Writing a"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,62,* good hashCode is actually quite difficult. This class aims to simplify the
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,63,* process.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,64,* <p>
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,65,* All relevant fields from the object should be included in the hashCode. Derived
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,66,"* fields may be excluded. In general, any field used in the equals method must be"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,67,* used in the hashCode method.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,68,* <p>
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,69,* To use this class write code as follows:
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,70,* <code>
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,71,* public class Person {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,72,*   String name;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,73,*   int age;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,74,*   boolean isSmoker;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,78,*   public int hashCode() {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,79,"*     int total = 17;  // you pick a random, non-zero, odd number"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,80,"*     total = HashCodeUtils.buildHashCode(total, name);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,81,"*     total = HashCodeUtils.buildHashCode(total, age);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,82,"*     total = HashCodeUtils.buildHashCode(total, isSmoker);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,83,*     return total;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,86,* </code>
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,88,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,89,"* @version $Id: HashCodeUtils.java,v 1.1 2002/08/10 12:12:49 scolebourne Exp $"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,91,public class HashCodeUtils {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,93,"// According to Bloch, its a random odd prime"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,94,private static final int CONSTANT = 37;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,97,* Prevent construction of HashCodeUtils instances
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,99,private HashCodeUtils() {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,103,* Build a hashCode for an Object.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,105,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,106,* @param object  the object to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,107,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,109,"public static int buildHashCode(int totalSoFar, Object object) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,110,if (object == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,111,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,112,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,113,return totalSoFar * CONSTANT + object.hashCode();
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,118,* Build a hashCode for a long.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,120,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,121,* @param value  the long to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,122,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,124,"public static int buildHashCode(int totalSoFar, long value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,125,return totalSoFar * CONSTANT + ((int) (value ^ (value >> 32)));
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,129,* Build a hashCode for an int.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,131,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,132,* @param value  the int to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,133,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,135,"public static int buildHashCode(int totalSoFar, int value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,136,return totalSoFar * CONSTANT + value;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,140,* Build a hashCode for a short.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,142,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,143,* @param value  the short to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,144,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,146,"public static int buildHashCode(int totalSoFar, short value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,147,return totalSoFar * CONSTANT + (int) value;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,151,* Build a hashCode for a char.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,153,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,154,* @param value  the char to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,155,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,157,"public static int buildHashCode(int totalSoFar, char value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,158,return totalSoFar * CONSTANT + (int) value;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,162,* Build a hashCode for a byte.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,164,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,165,* @param value  the byte to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,166,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,168,"public static int buildHashCode(int totalSoFar, byte value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,169,return totalSoFar * CONSTANT + (int) value;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,173,* Build a hashCode for a double.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,175,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,176,* @param value  the double to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,177,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,179,"public static int buildHashCode(int totalSoFar, double value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,180,"return buildHashCode(totalSoFar, Double.doubleToLongBits(value));"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,184,* Build a hashCode for a float.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,186,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,187,* @param value  the float to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,188,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,190,"public static int buildHashCode(int totalSoFar, float value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,191,return totalSoFar * CONSTANT + Float.floatToIntBits(value);
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,195,* Build a hashCode for a long.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,197,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,198,* @param value  the long to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,199,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,201,"public static int buildHashCode(int totalSoFar, boolean value) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,202,return totalSoFar * CONSTANT + (value ? 0 : 1);
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,206,* Build a hashCode for an Object array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,208,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,209,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,210,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,212,"public static int buildHashCode(int totalSoFar, Object[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,213,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,214,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,215,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,216,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,217,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,219,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,224,* Build a hashCode for a long array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,226,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,227,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,228,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,230,"public static int buildHashCode(int totalSoFar, long[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,231,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,232,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,233,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,234,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,235,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,237,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,242,* Build a hashCode for an int array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,244,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,245,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,246,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,248,"public static int buildHashCode(int totalSoFar, int[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,249,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,250,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,251,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,252,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,253,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,255,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,260,* Build a hashCode for a short array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,262,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,263,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,264,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,266,"public static int buildHashCode(int totalSoFar, short[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,267,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,268,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,269,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,270,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,271,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,273,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,278,* Build a hashCode for a char array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,280,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,281,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,282,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,284,"public static int buildHashCode(int totalSoFar, char[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,285,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,286,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,287,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,288,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,289,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,291,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,296,* Build a hashCode for a byte array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,298,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,299,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,300,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,302,"public static int buildHashCode(int totalSoFar, byte[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,303,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,304,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,305,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,306,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,307,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,309,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,314,* Build a hashCode for a double array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,316,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,317,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,318,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,320,"public static int buildHashCode(int totalSoFar, double[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,321,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,322,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,323,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,324,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,325,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,327,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,332,* Build a hashCode for a float array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,334,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,335,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,336,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,338,"public static int buildHashCode(int totalSoFar, float[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,339,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,340,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,341,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,342,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,343,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,345,return totalSoFar;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,350,* Build a hashCode for a boolean array.
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,352,* @param totalSoFar  the hashCode total so far
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,353,* @param array  the array to add to the hashCode
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,354,* @return updated totalSoFar
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,356,"public static int buildHashCode(int totalSoFar, boolean[] array) {"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,357,if (array == null) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,358,return totalSoFar * CONSTANT;
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,359,} else {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,360,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,361,"totalSoFar = buildHashCode(totalSoFar, array[i]);"
True,src/java/org/apache/commons/lang/HashCodeUtils.java,src/java/org/apache/commons/lang/HashCodeUtils.java,363,return totalSoFar;
