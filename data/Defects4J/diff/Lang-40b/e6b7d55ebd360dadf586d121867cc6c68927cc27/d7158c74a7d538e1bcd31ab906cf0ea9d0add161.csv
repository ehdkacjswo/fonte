is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,22,import java.util.Arrays;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,32, This class uses reflection to determine the fields to append. Because these
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,33," fields are usually private, the class uses"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,34," {@link java.lang.reflect.AccessibleObject#setAccessible(java.lang.reflect.AccessibleObject[], boolean)}"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,35, to change the visibility of the fields. This will fail under a security
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,36," manager, unless the appropriate permissions are set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,34,"* This class uses reflection to determine the fields to append. Because these fields are usually private, the class"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,35,"* uses {@link java.lang.reflect.AccessibleObject#setAccessible(java.lang.reflect.AccessibleObject[], boolean)} to"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,36,"* change the visibility of the fields. This will fail under a security manager, unless the appropriate permissions are"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,37,* set up correctly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,67," For example, this method does <i>not</i> include the <code>password</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,68, field in the returned <code>String</code>:
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,68,"* For example, this method does <i>not</i> include the <code>password</code> field in the returned"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,69,* <code>String</code>:
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,83, The exact format of the <code>toString</code> is determined by the
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,84, {@link ToStringStyle} passed into the constructor.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,84,* The exact format of the <code>toString</code> is determined by the {@link ToStringStyle} passed into the
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,85,* constructor.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,91," @version $Id: ReflectionToStringBuilder.java,v 1.15 2003/12/02 19:11:58"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,92,               ggregory Exp $
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,92,* @version $Id$
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,97, A registry of objects used by <code>reflectionToString</code> methods
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,98, to detect cyclical object references and avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,97,* A registry of objects used by <code>reflectionToString</code> methods to detect cyclical object references and
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,98,* avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,111, Returns the registry of objects being traversed by the <code>reflectionToString</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,112, methods in the current thread.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,111,* Returns the registry of objects being traversed by the <code>reflectionToString</code> methods in the current
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,112,* thread.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,123, Returns <code>true</code> if the registry contains the given object.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,124, Used by the reflection methods to avoid infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,123,* Returns <code>true</code> if the registry contains the given object. Used by the reflection methods to avoid
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,124,* infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,128,                  The object to lookup in the registry.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,129, @return boolean <code>true</code> if the registry contains the given
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,130,             object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,128,*            The object to lookup in the registry.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,129,* @return boolean <code>true</code> if the registry contains the given object.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,138, Registers the given object. Used by the reflection methods to avoid
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,139, infinite loops.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,137,* Registers the given object. Used by the reflection methods to avoid infinite loops.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,143,                  The object to register.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,141,*            The object to register.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,155, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,156, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,157," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,158, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,153,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,154,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,155,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,162," Transient members will be not be included, as they are likely derived."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,163, Static fields will not be included. Superclass fields will be appended.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,159,"* Transient members will be not be included, as they are likely derived. Static fields will not be included."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,160,* Superclass fields will be appended.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,167,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,164,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,170,                  if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,167,*             if the Object is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,182, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,183, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,184," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,185, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,179,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,180,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,181,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,189," Transient members will be not be included, as they are likely derived."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,190, Static fields will not be included. Superclass fields will be appended.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,185,"* Transient members will be not be included, as they are likely derived. Static fields will not be included."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,186,* Superclass fields will be appended.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,194," If the style is <code>null</code>, the default <code>ToStringStyle</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,195, is used.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,190,"* If the style is <code>null</code>, the default <code>ToStringStyle</code> is used."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,199,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,194,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,201,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,202,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,196,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,205,                  if the Object or <code>ToStringStyle</code> is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,199,*             if the Object or <code>ToStringStyle</code> is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,217, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,218, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,219," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,220, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,211,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,212,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,213,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,224," If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,225," transient members will be output, otherwise they are ignored, as they"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,226," are likely derived fields, and not part of the value of the Object."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,217,"* If the <code>outputTransients</code> is <code>true</code>, transient members will be output, otherwise they"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,218,"* are ignored, as they are likely derived fields, and not part of the value of the Object."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,234," If the style is <code>null</code>, the default <code>ToStringStyle</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,235, is used.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,226,"* If the style is <code>null</code>, the default <code>ToStringStyle</code> is used."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,239,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,230,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,241,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,242,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,232,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,244,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,234,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,247,                  if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,237,*             if the Object is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,259, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,260, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,261," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,262, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,249,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,250,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,251,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,266," If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,267," transient fields will be output, otherwise they are ignored, as they are"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,268," likely derived fields, and not part of the value of the Object."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,255,"* If the <code>outputTransients</code> is <code>true</code>, transient fields will be output, otherwise they"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,256,"* are ignored, as they are likely derived fields, and not part of the value of the Object."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,272," If the <code>outputStatics</code> is <code>true</code>, static"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,273," fields will be output, otherwise they are ignored."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,260,"* If the <code>outputStatics</code> is <code>true</code>, static fields will be output, otherwise they are"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,261,* ignored.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,281," If the style is <code>null</code>, the default <code>ToStringStyle</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,282, is used.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,269,"* If the style is <code>null</code>, the default <code>ToStringStyle</code> is used."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,286,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,273,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,288,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,289,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,275,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,291,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,277,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,293,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,279,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,296,                  if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,282,*             if the Object is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,309, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,310, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,311," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,312, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,295,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,296,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,297,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,316," If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,317," transient fields will be output, otherwise they are ignored, as they are"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,318," likely derived fields, and not part of the value of the Object."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,301,"* If the <code>outputTransients</code> is <code>true</code>, transient fields will be output, otherwise they"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,302,"* are ignored, as they are likely derived fields, and not part of the value of the Object."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,322," If the <code>outputStatics</code> is <code>true</code>, static"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,323," fields will be output, otherwise they are ignored."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,306,"* If the <code>outputStatics</code> is <code>true</code>, static fields will be output, otherwise they are"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,307,* ignored.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,327, Superclass fields will be appended up to and including the specified
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,328, superclass. A null superclass is treated as <code>java.lang.Object</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,311,* Superclass fields will be appended up to and including the specified superclass. A null superclass is treated as
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,312,* <code>java.lang.Object</code>.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,332," If the style is <code>null</code>, the default <code>ToStringStyle</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,333, is used.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,316,"* If the style is <code>null</code>, the default <code>ToStringStyle</code> is used."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,337,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,320,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,339,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,340,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,322,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,342,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,324,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,344,                  whether to include static fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,326,*            whether to include static fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,346,"                  the superclass to reflect up to (inclusive), may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,328,"*            the superclass to reflect up to (inclusive), may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,349,                  if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,331,*             if the Object is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,364, It uses <code>AccessibleObject.setAccessible</code> to gain access to
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,365, private fields. This means that it will throw a security exception if
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,366," run under a security manager, if the permissions are not set up"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,367, correctly. It is also not as efficient as testing explicitly.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,346,* It uses <code>AccessibleObject.setAccessible</code> to gain access to private fields. This means that it will
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,347,"* throw a security exception if run under a security manager, if the permissions are not set up correctly. It is"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,348,* also not as efficient as testing explicitly.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,371," If the <code>outputTransients</code> is <code>true</code>,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,372," transient members will be output, otherwise they are ignored, as they"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,373," are likely derived fields, and not part of the value of the Object."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,352,"* If the <code>outputTransients</code> is <code>true</code>, transient members will be output, otherwise they"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,353,"* are ignored, as they are likely derived fields, and not part of the value of the Object."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,377, Static fields will not be included. Superclass fields will be appended
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,378, up to and including the specified superclass. A null superclass is
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,379, treated as <code>java.lang.Object</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,357,* Static fields will not be included. Superclass fields will be appended up to and including the specified
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,358,* superclass. A null superclass is treated as <code>java.lang.Object</code>.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,383," If the style is <code>null</code>, the default <code>ToStringStyle</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,384, is used.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,362,"* If the style is <code>null</code>, the default <code>ToStringStyle</code> is used."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,387, @deprecated Use
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,388,"                     {@link #toString(Object,ToStringStyle,boolean,boolean,Class)}"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,365,"* @deprecated Use {@link #toString(Object,ToStringStyle,boolean,boolean,Class)}"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,391,                  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,368,*            the Object to be output
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,393,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,394,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,370,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,396,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,372,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,398,"                  the superclass to reflect up to (inclusive), may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,374,"*            the superclass to reflect up to (inclusive), may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,401,                  if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,377,*             if the Object is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,404,"ublic static String toString(Object object, ToStringStyle style, boolean outputTransients,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,405,lass reflectUpToClass) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,380,"public static String toString(Object object, ToStringStyle style, boolean outputTransients, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,385,* Builds a String for a toString method excluding the given field name.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,387,* @param object
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,388,"*            The object to ""toString""."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,389,* @param excludeFieldName
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,390,*            The field name to exclude
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,391,* @return The toString value.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,393,"public static String toStringExclude(Object object, final String excludeFieldName) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,394,"return toStringExclude(object, new String[]{excludeFieldName});"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,398,* Builds a String for a toString method excluding the given field name.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,400,* @param object
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,401,"*            The object to ""toString""."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,402,* @param excludeFieldNames
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,403,*            The field names to exclude
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,404,* @return The toString value.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,406,"public static String toStringExclude(Object object, String[] excludeFieldNames) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,407,return new ReflectionToStringBuilder(object).setExcludeFieldNames(excludeFieldNames).toString();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,419,                  The object to unregister.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,420,*            The object to unregister.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,437,"* Which field names to exclude from output. Intended for fields like <code>""password""</code>."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,439,private String[] excludeFieldNames;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,450,"                  the Object to build a <code>toString</code> for, must not"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,451,                  be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,456,"*            the Object to build a <code>toString</code> for, must not be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,453,                  if the Object passed in is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,458,*             if the Object passed in is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,469,"                  the Object to build a <code>toString</code> for, must not"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,470,                  be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,474,"*            the Object to build a <code>toString</code> for, must not be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,472,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,473,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,476,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,475,                  if the Object passed in is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,478,*             if the Object passed in is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,495,                  the Object to build a <code>toString</code> for
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,498,*            the Object to build a <code>toString</code> for
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,497,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,498,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,500,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,500,"                  the <code>StringBuffer</code> to populate, may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,502,"*            the <code>StringBuffer</code> to populate, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,502,                  if the Object passed in is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,504,*             if the Object passed in is <code>null</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,511, @deprecated Use
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,512,"                     {@link #ReflectionToStringBuilder(Object,ToStringStyle,StringBuffer,Class,boolean,boolean)}."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,513,"* @deprecated Use {@link #ReflectionToStringBuilder(Object,ToStringStyle,StringBuffer,Class,boolean,boolean)}."
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,515,                  the Object to build a <code>toString</code> for
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,516,*            the Object to build a <code>toString</code> for
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,517,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,518,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,518,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,520,"                  the <code>StringBuffer</code> to populate, may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,520,"*            the <code>StringBuffer</code> to populate, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,522,"                  the superclass to reflect up to (inclusive), may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,522,"*            the superclass to reflect up to (inclusive), may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,524,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,524,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,537,                  the Object to build a <code>toString</code> for
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,537,*            the Object to build a <code>toString</code> for
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,539,"                  the style of the <code>toString</code> to create, may be"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,540,                  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,539,"*            the style of the <code>toString</code> to create, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,542,"                  the <code>StringBuffer</code> to populate, may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,541,"*            the <code>StringBuffer</code> to populate, may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,544,"                  the superclass to reflect up to (inclusive), may be <code>null</code>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,543,"*            the superclass to reflect up to (inclusive), may be <code>null</code>"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,546,                  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,545,*            whether to include transient fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,548,                  whether to include static fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,547,*            whether to include static fields
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,562, <li>Transient fields are appended only if {@link #isAppendTransients()}
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,563, returns <code>true</code>.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,564, <li>Static fields are appended only if {@link #isAppendStatics()}
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,565, returns <code>true</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,561,* <li>Transient fields are appended only if {@link #isAppendTransients()} returns <code>true</code>.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,562,* <li>Static fields are appended only if {@link #isAppendStatics()} returns <code>true</code>.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,570,                  The Field to test.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,567,*            The Field to test.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,579,/ transients.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,576,// Reject transient fields.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,583,/ transients.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,580,// Rject static fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,581,return false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,583,if (this.getExcludeFieldNames() != null
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,584,"&& Arrays.binarySearch(this.getExcludeFieldNames(), field.getName()) >= 0) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,585,// Reject fields from the getExcludeFieldNames list.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,591, Appends the fields and values defined by the given object of the given
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,592, Class.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,593,* Appends the fields and values defined by the given object of the given Class.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,596," If a cycle is detected as an object is &quot;toString()'ed&quot;, such"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,597, an object is rendered as if <code>Object.toString()</code> had been
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,598, called and not implemented by the object.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,597,"* If a cycle is detected as an object is &quot;toString()'ed&quot;, such an object is rendered as if"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,598,* <code>Object.toString()</code> had been called and not implemented by the object.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,602,                  The class of object parameter
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,602,*            The class of object parameter
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,637,"/    builder.append(fieldName, fieldValue);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,637,"// builder.append(fieldName, fieldValue);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,649,/this can't happen. Would get a Security exception
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,649,// this can't happen. Would get a Security exception
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,651,/throw a runtime exception in case the impossible
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,651,// throw a runtime exception in case the impossible
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,663,* @return Returns the excludeFieldNames.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,665,public String[] getExcludeFieldNames() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,666,return this.excludeFieldNames;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,679,                  The Field to query.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,686,*            The Field to query.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,683,                  see {@link java.lang.reflect.Field#get(Object)}
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,690,*             see {@link java.lang.reflect.Field#get(Object)}
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,685,                  see {@link java.lang.reflect.Field#get(Object)}
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,692,*             see {@link java.lang.reflect.Field#get(Object)}
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,722,                  the array to add to the <code>toString</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,729,*            the array to add to the <code>toString</code>
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,732, Registers this builder's source object to avoid infinite loops when
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,733, processing circular object references.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,739,* Registers this builder's source object to avoid infinite loops when processing circular object references.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,746,                  Whether or not to append static fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,752,*            Whether or not to append static fields.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,759,                  Whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,765,*            Whether or not to append transient fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,772,* Sets the field names to exclude.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,774,* @param excludeFieldNamesParam
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,775,*            The excludeFieldNames to set.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,776,* @return <code>this</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,778,public ReflectionToStringBuilder setExcludeFieldNames(String[] excludeFieldNamesParam) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,779,if (excludeFieldNamesParam == null) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,780,this.excludeFieldNames = null;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,782,this.excludeFieldNames = (String[]) excludeFieldNamesParam.clone();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,783,Arrays.sort(this.excludeFieldNames);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,784,return this;
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,771,                  The last super class to stop appending fields for.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,793,*            The last super class to stop appending fields for.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,799, Unregisters this builder's source object to avoid infinite loops when
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,800, processing circular object references.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,821,* Unregisters this builder's source object to avoid infinite loops when processing circular object references.
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,50,uite.addTest(CompareToBuilderTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,51,uite.addTest(EqualsBuilderTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,52,uite.addTest(HashCodeBuilderTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,53,uite.addTest(HashCodeBuilderAndEqualsBuilderTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,54,uite.addTest(ToStringBuilderTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,55,uite.addTest(DefaultToStringStyleTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,56,uite.addTest(NoFieldNamesToStringStyleTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,57,uite.addTest(MultiLineToStringStyleTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,58,uite.addTest(SimpleToStringStyleTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,59,uite.addTest(StandardToStringStyleTest.suite());
False,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,60,uite.addTest(ToStringStyleTest.suite());
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,50,suite.addTestSuite(CompareToBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,51,suite.addTestSuite(EqualsBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,52,suite.addTestSuite(HashCodeBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,53,suite.addTestSuite(HashCodeBuilderAndEqualsBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,54,suite.addTestSuite(ToStringBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,55,suite.addTestSuite(DefaultToStringStyleTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,56,suite.addTestSuite(NoFieldNamesToStringStyleTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,57,suite.addTestSuite(MultiLineToStringStyleTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,58,suite.addTestSuite(ReflectionToStringBuilderExcludeTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,59,suite.addTestSuite(SimpleToStringStyleTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,60,suite.addTestSuite(StandardToStringStyleTest.class);
True,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,src/test/org/apache/commons/lang/builder/BuilderTestSuite.java,61,suite.addTestSuite(ToStringStyleTest.class);
