is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,114,* @author Chris Hyzer
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2959,f (text == null || isEmpty(repl) || with == null || max == 0) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2960,if (isEmpty(text) || isEmpty(repl) || with == null || max == 0) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2963,tringBuffer buf = new StringBuffer(text.length());
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2964,"nt start = 0, end = 0;"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2965,"hile ((end = text.indexOf(repl, start)) != -1) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2963,int start = 0;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2964,"int end = text.indexOf(repl, start);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2965,if (end == -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2966,return text;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2968,int increase = with.length() - repl.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2969,increase = (increase < 0 ? 0 : increase);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2970,increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2971,StringBuffer buf = new StringBuffer(text.length() + increase);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2972,while (end != -1) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,2978,"end = text.indexOf(repl, start);"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,807,"assertEquals("""", StringUtils.replace("""", null, null, 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,808,"assertEquals("""", StringUtils.replace("""", null, ""any"", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,809,"assertEquals("""", StringUtils.replace("""", ""any"", null, 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,810,"assertEquals("""", StringUtils.replace("""", ""any"", ""any"", 2));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,812,"String str = new String(new char[] {'o', 'o', 'f', 'o', 'o'});"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,813,"assertSame(str, StringUtils.replace(str, ""x"", """", -1));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,822,"assertEquals(""f"", StringUtils.replace(""oofoo"", ""o"", """", -5));"
True,src/test/org/apache/commons/lang/StringUtilsTest.java,src/test/org/apache/commons/lang/StringUtilsTest.java,823,"assertEquals(""f"", StringUtils.replace(""oofoo"", ""o"", """", 1000));"
