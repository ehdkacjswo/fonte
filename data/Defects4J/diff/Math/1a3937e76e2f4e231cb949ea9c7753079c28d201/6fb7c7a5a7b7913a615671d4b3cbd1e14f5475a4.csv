is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,76, {@link NumberFormat#getNumberInstance(java.util.Locale)} with the only
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,77," customizing is the maximum number of BigFraction digits, which is set to 0."
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,76,* {@link NumberFormat#getNumberInstance(java.util.Locale)}. The only
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,77,"* customization is the maximum number of BigFraction digits, which is set to 0."
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,86, {@link NumberFormat#getNumberInstance(java.util.Locale)} with the only
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,87," customizing is the maximum number of BigFraction digits, which is set to 0."
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,86,* {@link NumberFormat#getNumberInstance(java.util.Locale)}. The only
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,87,"* customization is the maximum number of BigFraction digits, which is set to 0."
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,141," @param pos input/ouput parsing parameter.  On output, <code>pos</code>"
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,141,"* @param pos input/output parsing parameter.  On output, <code>pos</code>"
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,153, @param pos input/ouput parsing parameter.
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,153,* @param pos input/output parsing parameter.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,113," @param den the denominator, must not be {@code null}.."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,113,"* @param den the denominator, must not be {@code null}."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,115,* @throws NullArgumentException if either of the arguments is null
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,155," {@link #BigFraction(double, double, int)}. It converts the"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,156," double value exactly, considering its internal bits representation."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,157, This does work for all values except NaN and infinities and does
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,158, not requires any loop or convergence threshold.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,156,"* {@link #BigFraction(double, double, int)}. It converts the double value"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,157,"* exactly, considering its internal bits representation. This works for all"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,158,* values except NaN and infinities and does not requires any loop or
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,159,* convergence threshold.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,162," approximated, the fraction created may seem strange in some cases. For example"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,163,"* approximated, the fraction created may seem strange in some cases. For example,"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,164, the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,165,"* the fraction 1/3, but the fraction 6004799503160661 / 18014398509481984"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,932, Returns a <tt>integer</tt> whose value is
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,933," <tt>(this<sup>exponent</sup>)</tt>, returning the result in reduced form."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,933,* Returns a {@code BigFraction} whose value is
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,934,"* {@code (this<sup>exponent</sup>)}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,937,            exponent to which this <code>BigInteger</code> is to be
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,938,*            exponent to which this {@code BigFraction} is to be
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1028," Subtracts the value of an {@link BigInteger} from the value of this one,"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1029, returning the result in reduced form.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1029,* Subtracts the value of an {@link BigInteger} from the value of this
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1030,"* {@code BigFraction}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1045," Subtracts the value of an <tt>integer</tt> from the value of this one,"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1046, returning the result in reduced form.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1046,* Subtracts the value of an {@code integer} from the value of this
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1047,"* {@code BigFraction}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1049, @param i
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1050,            the <tt>integer</tt> to subtract.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1051, @return a <code>BigFraction</code> instance with the resulting values.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1050,* @param i the {@code integer} to subtract.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1051,* @return a {@code BigFraction} instance with the resulting values.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1059," Subtracts the value of an <tt>integer</tt> from the value of this one,"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1060, returning the result in reduced form.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1059,* Subtracts the value of a {@code long} from the value of this
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1060,"* {@code BigFraction}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1063, @param l
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1064,            the <tt>long</tt> to subtract.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1065," @return a <code>BigFraction</code> instance with the resulting values, or"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1066,         this object if the <tt>long</tt> is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1063,* @param l the {@code long} to subtract.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1064,* @return a {@ code BigFraction} instance with the resulting values.
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,208, @return euclidian norm for the vector
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,208,* @return euclidean norm for the vector
False,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,215, @return square of the euclidian norm for the vector
True,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java,215,* @return square of the euclidean norm for the vector
