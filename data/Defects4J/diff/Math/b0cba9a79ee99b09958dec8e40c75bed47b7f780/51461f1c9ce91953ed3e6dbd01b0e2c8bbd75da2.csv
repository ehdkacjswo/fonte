is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/distribution/FDistribution.java,src/main/java/org/apache/commons/math3/distribution/FDistribution.java,275,eturn true;
True,src/main/java/org/apache/commons/math3/distribution/FDistribution.java,src/main/java/org/apache/commons/math3/distribution/FDistribution.java,275,return false;
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,140, Use this method to get information about whether the lower bound
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,141, of the support is inclusive or not.
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,143, @return whether the lower bound of the support is inclusive or not
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,140,* Whether or not the lower bound of support is in the domain of the density
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,141,* function.  Returns true iff {@code getSupporLowerBound()} is finite and
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,142,"* {@code density(getSupportLowerBound())} returns a non-NaN, non-infinite"
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,143,* value.
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,145,* @return true if the lower bound of support is finite and the density
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,146,"* function returns a non-NaN, non-infinite value there"
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,147,* @deprecated to be removed in 4.0
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,148, Use this method to get information about whether the upper bound
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,149, of the support is inclusive or not.
False,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,151, @return whether the upper bound of the support is inclusive or not
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,152,* Whether or not the upper bound of support is in the domain of the density
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,153,* function.  Returns true iff {@code getSupportUpperBound()} is finite and
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,154,"* {@code density(getSupportUpperBound())} returns a non-NaN, non-infinite"
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,155,* value.
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,157,* @return true if the upper bound of support is finite and the density
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,158,"* function returns a non-NaN, non-infinite value there"
True,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,src/main/java/org/apache/commons/math3/distribution/RealDistribution.java,159,* @deprecated to be removed in 4.0
False,src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java,src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java,184,eturn false;
True,src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java,src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java,184,return true;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,343,* Verify that isSupportLowerBoundInclusvie returns true iff the lower bound
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,344,"* is finite and density is non-NaN, non-infinite there."
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,346,@Test
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,347,public void testIsSupportLowerBoundInclusive() {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,348,final double lowerBound = distribution.getSupportLowerBound();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,349,double result = Double.NaN;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,350,result = distribution.density(lowerBound);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,351,Assert.assertEquals(
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,352,!Double.isInfinite(lowerBound) && !Double.isNaN(result) &&
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,353,"!Double.isInfinite(result),"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,354,distribution.isSupportLowerBoundInclusive());
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,359,* Verify that isSupportUpperBoundInclusvie returns true iff the upper bound
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,360,"* is finite and density is non-NaN, non-infinite there."
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,362,@Test
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,363,public void testIsSupportUpperBoundInclusive() {
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,364,final double upperBound = distribution.getSupportUpperBound();
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,365,double result = Double.NaN;
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,366,result = distribution.density(upperBound);
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,367,Assert.assertEquals(
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,368,!Double.isInfinite(upperBound) && !Double.isNaN(result) &&
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,369,"!Double.isInfinite(result),"
True,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java,370,distribution.isSupportUpperBoundInclusive());
