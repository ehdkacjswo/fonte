is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,196,"OT_POSITIVE_COLUMNDIMENSION(""invalid column dimension: {0} (must be positive)""),"
False,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,252,"RRAY_ZERO_LENGTH_OR_NULL_NOTALLOWED(""A null or zero length array not allowed""),"
True,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,251,"ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED(""a null or zero length array not allowed""),"
False,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,295,"OSITION_SIZE_MISMATCH_INPUT_ARRAY(""position {0} and size {1} don't fit to the size of the input array {2}""),"
False,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,314,"OO_MUCH_CANCELLATION(""too much cancellation in a denominator""),"
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,776,hrow new MathIllegalArgumentException(LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOTALLOWED);
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,776,throw new MathIllegalArgumentException(LocalizedFormats.ARRAY_ZERO_LENGTH_OR_NULL_NOT_ALLOWED);
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,18,* This file is an adapted version of OrekitMessagesTest test class
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,19,"* for the <a href=""https://www.orekit.org/forge/projects/orekit"">orekit</a> library."
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,20,* The original file is distributed under the terms of the Apache 2 license and is:
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,21,* Copyright 2010 CS Communication & Syst√®mes
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,23,package org.apache.commons.math3.exception.util;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,26,import java.text.MessageFormat;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,27,import java.util.Enumeration;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,28,import java.util.Locale;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,29,import java.util.ResourceBundle;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,31,import junit.framework.Assert;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,33,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,35,public class LocalizedFormatsTest {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,37,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,38,public void testMessageNumber() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,39,"Assert.assertEquals(311, LocalizedFormats.values().length);"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,42,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,43,public void testAllKeysPresentInPropertiesFiles() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,44,"for (final String language : new String[] { ""fr"" } ) {"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,45,ResourceBundle bundle =
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,46,"ResourceBundle.getBundle(""META-INF/localization/LocalizedFormats"", new Locale(language));"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,47,for (LocalizedFormats message : LocalizedFormats.values()) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,48,final String messageKey = message.toString();
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,49,boolean keyPresent = false;
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,50,for (final Enumeration<String> keys = bundle.getKeys(); keys.hasMoreElements();) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,51,keyPresent |= messageKey.equals(keys.nextElement());
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,53,"Assert.assertTrue(""missing key \"""" + message.name() + ""\"" for language "" + language,"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,54,keyPresent);
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,56,"Assert.assertEquals(language, bundle.getLocale().getLanguage());"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,61,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,62,public void testAllPropertiesCorrespondToKeys() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,63,"for (final String language : new String[] { ""fr"" } ) {"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,64,ResourceBundle bundle =
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,65,"ResourceBundle.getBundle(""META-INF/localization/LocalizedFormats"", new Locale(language));"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,66,for (final Enumeration<String> keys = bundle.getKeys(); keys.hasMoreElements();) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,67,final String propertyKey = keys.nextElement();
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,68,try {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,69,Assert.assertNotNull(LocalizedFormats.valueOf(propertyKey));
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,70,} catch (IllegalArgumentException iae) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,71,"Assert.fail(""unknown key \"""" + propertyKey + ""\"" in language "" + language);"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,74,"Assert.assertEquals(language, bundle.getLocale().getLanguage());"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,79,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,80,public void testNoMissingFrenchTranslation() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,81,for (LocalizedFormats message : LocalizedFormats.values()) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,82,String translated = message.getLocalizedString(Locale.FRENCH);
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,83,"Assert.assertFalse(message.name(), translated.toLowerCase().contains(""missing translation""));"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,87,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,88,public void testNoOpEnglishTranslation() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,89,for (LocalizedFormats message : LocalizedFormats.values()) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,90,String translated = message.getLocalizedString(Locale.ENGLISH);
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,91,"Assert.assertEquals(message.getSourceString(), translated);"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,95,@Test
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,96,public void testVariablePartsConsistency() {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,97,"for (final String language : new String[] { ""fr"" } ) {"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,98,Locale locale = new Locale(language);
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,99,for (LocalizedFormats message : LocalizedFormats.values()) {
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,100,MessageFormat source     = new MessageFormat(message.getSourceString());
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,101,MessageFormat translated = new MessageFormat(message.getLocalizedString(locale));
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,102,"Assert.assertEquals(message.name() + "" ("" + language + "")"","
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,103,"source.getFormatsByArgumentIndex().length,"
True,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java,104,translated.getFormatsByArgumentIndex().length);
