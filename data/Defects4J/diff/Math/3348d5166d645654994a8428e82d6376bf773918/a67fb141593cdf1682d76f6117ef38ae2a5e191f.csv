is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,19,mport static org.hamcrest.CoreMatchers.is;
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,20,mport static org.junit.Assert.assertEquals;
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,21,mport static org.junit.Assert.assertThat;
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,22,mport static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,19,import org.hamcrest.CoreMatchers;
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,20,import org.junit.Assert;
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,63,"ssertEquals(3, clusters.size());"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,61,"Assert.assertEquals(3, clusters.size());"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,75,ssertTrue(cluster1Found);
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,76,ssertTrue(cluster2Found);
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,77,ssertTrue(cluster3Found);
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,73,Assert.assertTrue(cluster1Found);
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,74,Assert.assertTrue(cluster2Found);
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,75,Assert.assertTrue(cluster3Found);
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,98,"ssertEquals(3, clusterer.getK());"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,99,"ssertEquals(2.0, clusterer.getFuzziness(), 1e-6);"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,100,"ssertEquals(100, clusterer.getMaxIterations());"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,101,"ssertEquals(1e-6, clusterer.getEpsilon(), 1e-12);"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,102,"ssertThat(clusterer.getDistanceMeasure(), is(measure));"
False,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,103,"ssertThat(clusterer.getRandomGenerator(), is(random));"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,96,"Assert.assertEquals(3, clusterer.getK());"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,97,"Assert.assertEquals(2.0, clusterer.getFuzziness(), 1e-6);"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,98,"Assert.assertEquals(100, clusterer.getMaxIterations());"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,99,"Assert.assertEquals(1e-6, clusterer.getEpsilon(), 1e-12);"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,100,"Assert.assertThat(clusterer.getDistanceMeasure(), CoreMatchers.is(measure));"
True,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,src/test/java/org/apache/commons/math3/ml/clustering/FuzzyKMeansClustererTest.java,101,"Assert.assertThat(clusterer.getRandomGenerator(), CoreMatchers.is(random));"
False,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,19,mport static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,19,import org.junit.Assert;
False,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,41,"ssertEquals(10.0, tEnd, 1e-7);"
True,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,41,"Assert.assertEquals(10.0, tEnd, 1e-7);"
False,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,49,"ssertEquals(10.0, tEnd, 1e-7);"
True,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java,49,"Assert.assertEquals(10.0, tEnd, 1e-7);"
False,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,20,mport static org.junit.Assert.assertArrayEquals;
True,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,20,import org.junit.Assert;
False,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,260,"ssertArrayEquals(expected, actual, 1e-5);"
True,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java,260,"Assert.assertArrayEquals(expected, actual, 1e-5);"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,19,mport static org.junit.Assert.*;
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,19,import org.junit.Assert;
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,66,"ssertArrayEquals(referenceValues[i], result, 1e-3);"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,67,"ssertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,66,"Assert.assertArrayEquals(referenceValues[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,67,"Assert.assertEquals(i + 1, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,76,"ssertArrayEquals(referenceValuesUnscrambled[i], result, 1e-3);"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,77,"ssertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,76,"Assert.assertArrayEquals(referenceValuesUnscrambled[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,77,"Assert.assertEquals(i + 1, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,85,ail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,85,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,92,ail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,92,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,102,ail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,102,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,109,ail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,109,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,116,ail();
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,116,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,125,"ssertArrayEquals(referenceValues[5], result, 1e-3);"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,126,"ssertEquals(6, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,125,"Assert.assertArrayEquals(referenceValues[5], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,126,"Assert.assertEquals(6, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,130,"ssertArrayEquals(referenceValues[i], result, 1e-3);"
False,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,131,"ssertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,130,"Assert.assertArrayEquals(referenceValues[i], result, 1e-3);"
True,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/HaltonSequenceGeneratorTest.java,131,"Assert.assertEquals(i + 1, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,19,mport static org.junit.Assert.*;
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,19,import org.junit.Assert;
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,53,"ssertArrayEquals(referenceValues[i], result, 1e-6);"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,54,"ssertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,53,"Assert.assertArrayEquals(referenceValues[i], result, 1e-6);"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,54,"Assert.assertEquals(i + 1, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,62,ail();
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,62,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,69,ail();
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,69,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,81,ail();
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,81,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,88,ail();
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,88,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,97,"ssertArrayEquals(referenceValues[5], result, 1e-6);"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,98,"ssertEquals(6, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,97,"Assert.assertArrayEquals(referenceValues[5], result, 1e-6);"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,98,"Assert.assertEquals(6, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,102,"ssertArrayEquals(referenceValues[i], result, 1e-6);"
False,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,103,"ssertEquals(i + 1, generator.getNextIndex());"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,102,"Assert.assertArrayEquals(referenceValues[i], result, 1e-6);"
True,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,src/test/java/org/apache/commons/math3/random/SobolSequenceGeneratorTest.java,103,"Assert.assertEquals(i + 1, generator.getNextIndex());"
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,16,mport static org.junit.Assert.fail;
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,864,"ail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,862,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,871,"ail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,869,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,878,"ail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,876,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,885,"ail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,883,"Assert.fail(""an exception should have been thrown"");"
False,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,892,"ail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,src/test/java/org/apache/commons/math3/util/MathArraysTest.java,890,"Assert.fail(""an exception should have been thrown"");"
