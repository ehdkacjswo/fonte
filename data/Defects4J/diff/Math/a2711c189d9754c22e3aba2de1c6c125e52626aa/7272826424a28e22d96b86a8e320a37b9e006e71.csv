is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,171,ut[i][j] = 2 * (1 - tDistribution.cumulativeProbability(t));
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,171,out[i][j] = 2 * tDistribution.cumulativeProbability(-t);
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,165,* Test p-value near 0. JIRA: MATH-371
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,167,public void testPValueNearZero() throws Exception {
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,169,"* Create a dataset that has r -> 1, p -> 0 as dimension increases."
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,170,"* Prior to the fix for MATH-371, p vanished for dimension >= 14."
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,171,"* Post fix, p-values diminish smoothly, vanishing at dimension = 127."
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,172,* Tested value is ~1E-303.
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,174,int dimension = 120;
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,175,double[][] data = new double[dimension][2];
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,176,for (int i = 0; i < dimension; i++) {
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,177,data[i][0] = i;
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,178,data[i][1] = i + 1/((double)i + 1);
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,180,PearsonsCorrelation corrInstance = new PearsonsCorrelation(data);
True,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,src/test/java/org/apache/commons/math/stat/correlation/PearsonsCorrelationTest.java,181,"assertTrue(corrInstance.getCorrelationPValues().getEntry(0, 1) > 0);"
