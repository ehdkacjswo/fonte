is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,21,import org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;
False,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,34,ublic class Sinc implements UnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,35,public class Sinc implements DifferentiableUnivariateRealFunction {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,37,* Value below which the result of the computation will not change
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,38,"* anymore due to the finite precision of the ""double"" representation"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,39,* of real numbers.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,41,private static final double SHORTCUT = 1e-9;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,72,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,73,public UnivariateRealFunction derivative() {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,74,if (normalized) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,75,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,76,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,77,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,78,final double piTimesX = Math.PI * x;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,79,return sincDerivative(piTimesX);
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,82,} else {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,83,return new UnivariateRealFunction() {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,84,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,85,public double value(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,86,return sincDerivative(x);
False,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,74,eturn FastMath.abs(x) < 1e-9 ? 1 : FastMath.sin(x) / x;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,101,return FastMath.abs(x) < SHORTCUT ? 1 :
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,102,FastMath.sin(x) / x;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,106,* @param x Argument.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,107,* @return {@code (cos(x) - sin(x) / x) / x}.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,109,private static double sincDerivative(double x) {
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,110,// The direct assignment to 0 for values below 1e-9 is an efficiency
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,111,// optimization on the ground that the result of the full computation
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,112,// is indistinguishable from 1 due to the limited accuracy of the
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,113,// floating point representation.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,114,return FastMath.abs(x) < SHORTCUT ? 0 :
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,115,(FastMath.cos(x) - FastMath.sin(x) / x) / x;
False,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,37,or (double x = 1e-30; x < 1e10; x *= 5) {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,37,for (double x = 1e-30; x < 1e10; x *= 2) {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,73,@Test
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,74,public void testDerivativeZero() {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,75,final UnivariateRealFunction sPrime = (new Sinc(true)).derivative();
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,77,"Assert.assertEquals(0, sPrime.value(0), 0);"
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,80,@Test
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,81,public void testDerivativeShortcut() {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,82,final UnivariateRealFunction sPrime = (new Sinc()).derivative();
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,83,final UnivariateRealFunction f = new UnivariateRealFunction() {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,84,public double value(double x) {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,85,return (FastMath.cos(x) - FastMath.sin(x) / x) / x;
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,89,for (double x = 1e-30; x < 1e10; x *= 2) {
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,90,final double fX = f.value(x);
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,91,final double sX = sPrime.value(x);
True,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,src/test/java/org/apache/commons/math/analysis/function/SincTest.java,92,"Assert.assertEquals(""x="" + x, fX, sX, 0);"
