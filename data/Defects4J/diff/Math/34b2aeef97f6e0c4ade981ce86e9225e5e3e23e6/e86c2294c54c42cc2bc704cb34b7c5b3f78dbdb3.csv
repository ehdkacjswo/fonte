is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,22,import org.apache.commons.beanutils.DynaBean;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,23,import org.apache.commons.beanutils.BasicDynaClass;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,24,import org.apache.commons.beanutils.DynaProperty;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,30, @version $Revision: 1.1 $ $Date: 2004/04/20 21:02:35 $
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,33,* @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,104, @see org.apache.commons.math.stat.Univariate#addValue(double)
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,107,*  Creates a {@link org.apache.commons.beanutils.DynaBean} with a
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,108,*  {@link org.apache.commons.beanutils.DynaProperty} named
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,109,"*  <code>propertyName,</code> sets the value of the property to <code>v</code>"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,110,*  and adds the DynaBean to the underlying list.
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,106,ublic void addValue(double v) {
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,107,tring msg =
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,108,"The BeanListUnivariateImpl does not accept values """
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,109," ""through the addValue method.  Because elements of this list """
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,110," ""are JavaBeans, one must be sure to set the 'propertyName' """
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,111," ""property and add new Beans to the underlying list via the """
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,112," ""addBean(Object bean) method"";"
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,113,hrow new UnsupportedOperationException(msg);
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,113,public void addValue(double v)  {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,114,DynaProperty[] props = new DynaProperty[] {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,115,"new DynaProperty(propertyName, Double.class)"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,117,"BasicDynaClass dynaClass = new BasicDynaClass(null, null, props);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,118,DynaBean dynaBean = null;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,119,try {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,120,dynaBean = dynaClass.newInstance();
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,121,"} catch (Exception ex) {              // InstantiationException, IllegalAccessException"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,122,throw new RuntimeException(ex);   // should never happen
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,124,"dynaBean.set(propertyName, new Double(v));"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java,125,addObject(dynaBean);
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,25,mport org.apache.commons.math.beans.*;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,26,mport org.apache.commons.math.stat.multivariate.*;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,25,import org.apache.commons.math.stat.StatUtils;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,26,import org.apache.commons.math.beans.VitalStats;
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,27,import org.apache.commons.math.beans.Patient;
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,31, @version $Revision: 1.1 $ $Date: 2004/04/12 02:27:50 $
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,32,* @version $Revision: 1.2 $ $Date: 2004/04/24 21:43:26 $
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,72,ublic void testStats() {
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,74,escriptiveStatistics u = new BeanListUnivariateImpl( patientList );
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,73,public void testStats() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,74,"DescriptiveStatistics u = new BeanListUnivariateImpl( patientList, ""age"" );"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,75,"double[] values = {35d, 23d, 42d};"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,77,"assertEquals(""mean"", StatUtils.mean(values), u.getMean(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,78,"assertEquals(""min"", StatUtils.min(values), u.getMin(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,79,"assertEquals(""max"", StatUtils.max(values), u.getMax(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,80,"assertEquals(""var"", StatUtils.variance(values), u.getVariance(), tolerance);"
False,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,85,"vitalStats.heartRate"" );"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,88,"""vitalStats.heartRate"" );"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,112,public void testAddValue() {
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,113,"DescriptiveStatistics u = new BeanListUnivariateImpl( patientList, ""age"" );"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,114,u.addValue(10);
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,115,"double[] values = {35d, 23d, 42d, 10d};"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,116,"assertEquals(""total count"",4,u.getN(),tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,117,"assertEquals(""mean"", StatUtils.mean(values), u.getMean(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,118,"assertEquals(""min"", StatUtils.min(values), u.getMin(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,119,"assertEquals(""max"", StatUtils.max(values), u.getMax(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,120,"assertEquals(""var"", StatUtils.variance(values), u.getVariance(), tolerance);"
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,121,u.clear();
True,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,src/test/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java,122,"assertEquals(""total count"",0,u.getN(),tolerance);"
