is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,87,"eturn new Line(zero, zero.subtract(direction));"
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,87,final Line reverted = new Line(this);
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,88,reverted.direction = reverted.direction.negate();
True,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java,89,return reverted;
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,132,@Test
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,133,public void testRevert() {
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,135,// setup
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,136,"Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,137,"new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,138,Vector3D expected = line.getDirection().negate();
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,140,// action
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,141,Line reverted = line.revert();
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,143,// verify
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java,144,"Assert.assertArrayEquals(expected.toArray(), reverted.getDirection().toArray(), 0);"
