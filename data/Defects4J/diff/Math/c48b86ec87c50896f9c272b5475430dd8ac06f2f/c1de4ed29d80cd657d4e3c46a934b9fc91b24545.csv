is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,89,* @throws NotStrictlyPositiveException if {@code shape <= 0} or
True,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,90,* {@code scale <= 0}.
False,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,90,"ublic GammaDistribution(double shape, double scale) {"
True,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java,92,"public GammaDistribution(double shape, double scale) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,17,package org.apache.commons.math3.exception;
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,19,import org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,22,* Exception to be thrown when a number is not a n umber.
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,24,* @since 3.0
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,25,* @version $Id$
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,27,public class NotANumberException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,28,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,29,private static final long serialVersionUID = 20120906L;
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,32,* Construct the exception.
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,34,public NotANumberException() {
True,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,src/main/java/org/apache/commons/math3/exception/NotANumberException.java,35,"super(LocalizedFormats.NAN_NOT_ALLOWED, Double.NaN);"
True,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java,129,@Deprecated
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,21,import org.apache.commons.math3.exception.NotANumberException;
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,22,import org.apache.commons.math3.exception.NotFiniteNumberException;
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,23,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,24,import org.apache.commons.math3.exception.NumberIsTooLargeException;
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,37, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,42,* @throws NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,40,tring nextHexString(int len);
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,45,String nextHexString(int len) throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,55, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,56, if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,60,* @throws NumberIsTooLargeException if {@code lower >= upper}
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,58,"nt nextInt(int lower, int upper);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,62,"int nextInt(int lower, int upper) throws NumberIsTooLargeException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,73, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,74, if {@code lower >= upper}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,77,* @throws NumberIsTooLargeException if {@code lower >= upper}
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,76,"ong nextLong(long lower, long upper);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,79,"long nextLong(long lower, long upper) throws NumberIsTooLargeException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,88, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,89, if {@code len <= 0}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,91,* @throws NotStrictlyPositiveException if {@code len <= 0}
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,91,tring nextSecureHexString(int len);
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,93,String nextSecureHexString(int len) throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,109, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,110, if {@code lower >= upper}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,111,* @throws NumberIsTooLargeException if {@code lower >= upper}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,112,"nt nextSecureInt(int lower, int upper);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,113,"int nextSecureInt(int lower, int upper) throws NumberIsTooLargeException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,131, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,132, if {@code lower >= upper}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,132,* @throws NumberIsTooLargeException if {@code lower >= upper}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,134,"ong nextSecureLong(long lower, long upper);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,134,"long nextSecureLong(long lower, long upper) throws NumberIsTooLargeException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,146, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,147, if {@code mean <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,146,* @throws NotStrictlyPositiveException if {@code mean <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,149,ong nextPoisson(double mean);
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,148,long nextPoisson(double mean) throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,162, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,163, if {@code sigma <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,161,* @throws NotStrictlyPositiveException if {@code sigma <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,165,"ouble nextGaussian(double mu, double sigma);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,163,"double nextGaussian(double mu, double sigma) throws NotStrictlyPositiveException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,177, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,178, if {@code mean <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,175,* @throws NotStrictlyPositiveException if {@code mean <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,180,ouble nextExponential(double mean);
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,177,double nextExponential(double mean) throws NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,196, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,197, if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,193,* @throws NumberIsTooLargeException if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,194,* @throws NotFiniteNumberException if one of the bounds is infinite
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,195,* @throws NotANumberException if one of the bounds is infinite
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,199,"ouble nextUniform(double lower, double upper);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,197,"double nextUniform(double lower, double upper)"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,198,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,220, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,221, if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,219,* @throws NumberIsTooLargeException if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,220,* @throws NotFiniteNumberException if one of the bounds is infinite
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,221,* @throws NotANumberException if one of the bounds is infinite
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,223,"ouble nextUniform(double lower, double upper, boolean lowerInclusive);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,223,"double nextUniform(double lower, double upper, boolean lowerInclusive)"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,224,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,237, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,238, if {@code k > n}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,239, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,240, if {@code k <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,238,* @throws NumberIsTooLargeException if {@code k > n}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,239,* @throws NotStrictlyPositiveException if {@code k <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,242,"nt[] nextPermutation(int n, int k);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,241,"int[] nextPermutation(int n, int k)"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,242,"throws NumberIsTooLargeException, NotStrictlyPositiveException;"
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,258, @throws org.apache.commons.math3.exception.NumberIsTooLargeException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,259, if {@code k > c.size()}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,260, @throws org.apache.commons.math3.exception.NotStrictlyPositiveException
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,261, if {@code k <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,258,* @throws NumberIsTooLargeException if {@code k > c.size()}.
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,259,* @throws NotStrictlyPositiveException if {@code k <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,263,"bject[] nextSample(Collection<?> c, int k);"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,261,"Object[] nextSample(Collection<?> c, int k)"
True,src/main/java/org/apache/commons/math3/random/RandomData.java,src/main/java/org/apache/commons/math3/random/RandomData.java,262,"throws NumberIsTooLargeException, NotStrictlyPositiveException;"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,41,import org.apache.commons.math3.exception.NotANumberException;
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,42,import org.apache.commons.math3.exception.NotFiniteNumberException;
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,43,import org.apache.commons.math3.exception.NotPositiveException;
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,42,mport org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,46,import org.apache.commons.math3.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,158,ublic String nextHexString(int len) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,161,public String nextHexString(int len) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,194,"ublic int nextInt(int lower, int upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,197,"public int nextInt(int lower, int upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,196,"hrow new MathIllegalArgumentException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,199,"throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,205,"ublic long nextLong(long lower, long upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,208,"public long nextLong(long lower, long upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,207,"hrow new MathIllegalArgumentException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,210,"throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,233,* @throws NotStrictlyPositiveException if {@code len <= 0}
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,231,ublic String nextSecureHexString(int len) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,235,public String nextSecureHexString(int len) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,281,"ublic int nextSecureInt(int lower, int upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,285,"public int nextSecureInt(int lower, int upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,293,"ublic long nextSecureLong(long lower, long upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,297,"public long nextSecureLong(long lower, long upper) throws NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,320,* @throws NotStrictlyPositiveException if {@code len <= 0}
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,317,ublic long nextPoisson(double mean) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,322,public long nextPoisson(double mean) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,324,"ublic double nextGaussian(double mu, double sigma) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,329,"public double nextGaussian(double mu, double sigma) throws NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,342,ublic double nextExponential(double mean) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,347,public double nextExponential(double mean) throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,371,* @throws NotStrictlyPositiveException if {@code shape <= 0} or
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,372,* {@code scale <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,367,"ublic double nextGamma(double shape, double scale) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,374,"public double nextGamma(double shape, double scale) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,386,"* @throws NumberIsTooLargeException  if {@code numberOfSuccesses > populationSize},"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,387,* or {@code sampleSize > populationSize}.
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,388,* @throws NotStrictlyPositiveException if {@code populationSize <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,389,* @throws NotPositiveException  if {@code numberOfSuccesses < 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,380,"ublic int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,391,"public int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize) throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,402,* @throws NotStrictlyPositiveException if the number of successes is not positive
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,403,* @throws OutOfRangeException if the probability of success is not in the
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,404,"* range {@code [0, 1]}."
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,392,"ublic int nextPascal(int r, double p) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,406,"public int nextPascal(int r, double p) throws NotStrictlyPositiveException, OutOfRangeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,415,* @throws NotStrictlyPositiveException if {@code df <= 0}
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,402,ublic double nextT(double df) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,417,public double nextT(double df) throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,428,* @throws NotStrictlyPositiveException if {@code shape <= 0} or
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,429,* {@code scale <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,414,"ublic double nextWeibull(double shape, double scale) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,431,"public double nextWeibull(double shape, double scale) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,442,* @exception NotStrictlyPositiveException if {@code numberOfElements <= 0}
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,443,* or {@code exponent <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,426,"ublic int nextZipf(int numberOfElements, double exponent) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,445,"public int nextZipf(int numberOfElements, double exponent) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,501,* @throws NotStrictlyPositiveException if
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,502,* {@code numeratorDf <= 0} or {@code denominatorDf <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,483,"ublic double nextF(double numeratorDf, double denominatorDf) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,504,"public double nextF(double numeratorDf, double denominatorDf) throws NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,498, @throws MathIllegalArgumentException if one of the bounds is infinite or
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,499, {@code NaN} or either bound is infinite or NaN
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,518,* @throws NumberIsTooLargeException if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,519,* @throws NotFiniteNumberException if one of the bounds is infinite
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,520,* @throws NotANumberException if one of the bounds is not a number
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,501,"ublic double nextUniform(double lower, double upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,522,"public double nextUniform(double lower, double upper)"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,523,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,516, @throws MathIllegalArgumentException if one of the bounds is infinite or
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,538,* @throws N if one of the bounds is infinite or
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,540,* @throws NumberIsTooLargeException if {@code lower >= upper}
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,541,* @throws NotFiniteNumberException if one of the bounds is infinite
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,542,* @throws NotANumberException if one of the bounds is not a number
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,519,"ublic double nextUniform(double lower, double upper,"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,520,oolean lowerInclusive) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,544,"public double nextUniform(double lower, double upper, boolean lowerInclusive)"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,545,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,523,"hrow new MathIllegalArgumentException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,548,"throw new NumberIsTooLargeException(LocalizedFormats.LOWER_BOUND_NOT_BELOW_UPPER_BOUND,"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,527,f (Double.isInfinite(lower) || Double.isInfinite(upper)) {
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,528,hrow new MathIllegalArgumentException(LocalizedFormats.INFINITE_BOUND);
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,552,if (Double.isInfinite(lower)) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,553,"throw new NotFiniteNumberException(LocalizedFormats.INFINITE_BOUND, lower);"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,555,if (Double.isInfinite(upper)) {
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,556,"throw new NotFiniteNumberException(LocalizedFormats.INFINITE_BOUND, upper);"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,532,hrow new MathIllegalArgumentException(LocalizedFormats.NAN_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,560,throw new NotANumberException();
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,582,* @throws NumberIsTooLargeException if {@code k > n}.
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,583,* @throws NotStrictlyPositiveException if {@code k <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,555,"ublic int[] nextPermutation(int n, int k) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,585,"public int[] nextPermutation(int n, int k)"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,586,"throws NumberIsTooLargeException, NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,557,"hrow new MathIllegalArgumentException(LocalizedFormats.PERMUTATION_EXCEEDS_N,"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,588,"throw new NumberIsTooLargeException(LocalizedFormats.PERMUTATION_EXCEEDS_N,"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,588,"ublic Object[] nextSample(Collection<?> c, int k) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,619,"public Object[] nextSample(Collection<?> c, int k) throws NumberIsTooLargeException, NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,723,"rivate void shuffle(int[] list, int end) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java,754,"private void shuffle(int[] list, int end) throws NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,27,import org.apache.commons.math3.exception.NotANumberException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,28,import org.apache.commons.math3.exception.NotFiniteNumberException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,29,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,30,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,31,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,32,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,33,import org.apache.commons.math3.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,138,ublic String nextHexString(int len) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,145,public String nextHexString(int len) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,143,"ublic int nextInt(int lower, int upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,150,"public int nextInt(int lower, int upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,148,"ublic long nextLong(long lower, long upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,155,"public long nextLong(long lower, long upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,168,ublic String nextSecureHexString(int len) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,175,public String nextSecureHexString(int len) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,173,"ublic int nextSecureInt(int lower, int upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,180,"public int nextSecureInt(int lower, int upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,178,"ublic long nextSecureLong(long lower, long upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,185,"public long nextSecureLong(long lower, long upper) throws NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,195,ublic long nextPoisson(double mean) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,202,public long nextPoisson(double mean) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,200,"ublic double nextGaussian(double mu, double sigma) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,207,"public double nextGaussian(double mu, double sigma) throws NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,215,ublic double nextExponential(double mean) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,222,public double nextExponential(double mean) throws NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,229, @throws MathIllegalArgumentException if one of the bounds is infinite or
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,230, {@code NaN} or either bound is infinite or NaN
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,232,"ublic double nextUniform(double lower, double upper) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,236,"public double nextUniform(double lower, double upper)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,237,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,247, @throws MathIllegalArgumentException if one of the bounds is infinite or
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,248, {@code NaN}
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,251,"ublic double nextUniform(double lower, double upper,"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,252,oolean lowerInclusive) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,253,"public double nextUniform(double lower, double upper, boolean lowerInclusive)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,254,"throws NumberIsTooLargeException, NotFiniteNumberException, NotANumberException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,321,* @throws NotStrictlyPositiveException if
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,322,* {@code numeratorDf <= 0} or {@code denominatorDf <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,321,"ublic double nextF(double numeratorDf, double denominatorDf) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,325,"public double nextF(double numeratorDf, double denominatorDf) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,348,* @throws NotStrictlyPositiveException if {@code shape <= 0} or
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,349,* {@code scale <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,346,"ublic double nextGamma(double shape, double scale) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,352,"public double nextGamma(double shape, double scale) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,365,"* @throws NumberIsTooLargeException  if {@code numberOfSuccesses > populationSize},"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,366,* or {@code sampleSize > populationSize}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,367,* @throws NotStrictlyPositiveException if {@code populationSize <= 0}.
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,368,* @throws NotPositiveException  if {@code numberOfSuccesses < 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,361,"ublic int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,371,"public int nextHypergeometric(int populationSize, int numberOfSuccesses, int sampleSize)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,372,"throws NotPositiveException, NotStrictlyPositiveException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,385,* @throws NotStrictlyPositiveException if the number of successes is not positive
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,386,* @throws OutOfRangeException if the probability of success is not in the
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,387,"* range {@code [0, 1]}."
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,375,"ublic int nextPascal(int r, double p) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,389,"public int nextPascal(int r, double p)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,390,"throws NotStrictlyPositiveException, OutOfRangeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,402,* @throws NotStrictlyPositiveException if {@code df <= 0}
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,388,ublic double nextT(double df) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,404,public double nextT(double df) throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,417,* @throws NotStrictlyPositiveException if {@code shape <= 0} or
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,418,* {@code scale <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,402,"ublic double nextWeibull(double shape, double scale) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,420,"public double nextWeibull(double shape, double scale) throws NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,433,* @exception NotStrictlyPositiveException if {@code numberOfElements <= 0}
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,434,* or {@code exponent <= 0}.
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,416,"ublic int nextZipf(int numberOfElements, double exponent) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,436,"public int nextZipf(int numberOfElements, double exponent) throws NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,500,"ublic int[] nextPermutation(int n, int k) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,520,"public int[] nextPermutation(int n, int k)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,521,"throws NotStrictlyPositiveException, NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,517,"ublic Object[] nextSample(Collection<?> c, int k) {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,538,"public Object[] nextSample(Collection<?> c, int k)"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,539,"throws NotStrictlyPositiveException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,549,* @throws MathIllegalArgumentException if the underlynig distribution throws one
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,530,ublic double nextInversionDeviate(RealDistribution distribution) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,553,public double nextInversionDeviate(RealDistribution distribution)
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,554,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,565,* @throws MathIllegalArgumentException if the underlynig distribution throws one
False,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,544,ublic int nextInversionDeviate(IntegerDistribution distribution) {
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,569,public int nextInversionDeviate(IntegerDistribution distribution)
True,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,src/main/java/org/apache/commons/math3/random/RandomDataImpl.java,570,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,54,* @throws NullArgumentException if generator is null
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,55,* @throws OutOfRangeException if {@code alpha <= 0} or {@code alpha > 2}
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,56,* or {@code beta < -1} or {@code beta > 1}
False,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,55,"ublic StableRandomGenerator(final RandomGenerator generator, double alpha,"
False,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,56,ouble beta) {
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,58,"public StableRandomGenerator(final RandomGenerator generator,"
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,59,"final double alpha, final double beta)"
True,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java,60,"throws NullArgumentException, OutOfRangeException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,25,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,27,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,28,import org.apache.commons.math3.exception.ZeroException;
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,117,* @throws MathIllegalStateException if mode is not recognized
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,118,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,115,ublic double getNext() throws IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,120,"public double getNext() throws IOException, MathIllegalStateException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,142,* @throws MathIllegalStateException if mode is not recognized
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,143,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,138,ublic void fill(double[] values) throws IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,145,public void fill(double[] values)
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,146,"throws IOException, MathIllegalStateException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,159,* @throws MathIllegalStateException if mode is not recognized
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,160,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,152,ublic double[] fill(int length) throws IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,162,public double[] fill(int length)
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,163,"throws IOException, MathIllegalStateException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,182,* @throws NullArgumentException
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,183,* @throws ZeroException if URL contains no data
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,172,ublic void computeDistribution() throws IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,185,"public void computeDistribution() throws IOException, ZeroException, NullArgumentException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,201,* @throws NullArgumentException
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,203,* @throws ZeroException if URL contains no data
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,190,ublic void computeDistribution(int binCount)
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,191,hrows IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,205,"public void computeDistribution(int binCount) throws NullArgumentException, IOException, ZeroException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,365,* @throws MathIllegalStateException if digest has not been initialized
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,352,rivate double getNextDigest() {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,367,private double getNextDigest() throws MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,390,* @throws MathIllegalStateException if URL contains no data
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,378,rivate double getNextReplay() throws IOException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,394,"private double getNextReplay() throws IOException, MathIllegalStateException {"
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,415,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,400,rivate double getNextUniform() {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,417,private double getNextUniform() throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,425,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,409,rivate double getNextExponential() {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,427,private double getNextExponential() throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,436,* @throws MathIllegalArgumentException if the underlying random generator thwrows one
False,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,419,rivate double getNextGaussian() {
True,src/main/java/org/apache/commons/math3/random/ValueServer.java,src/main/java/org/apache/commons/math3/random/ValueServer.java,438,private double getNextGaussian() throws MathIllegalArgumentException {
