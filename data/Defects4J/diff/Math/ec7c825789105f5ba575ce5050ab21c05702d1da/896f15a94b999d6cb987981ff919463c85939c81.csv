is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,321, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,321,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,325, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,325,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,327,ublic static double variance(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,327,public static double variance(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,345, Throws <code>IllegalArgumentException</code> if the array is null or the
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,345,* Throws <code>MathIllegalArgumentException</code> if the array is null or the
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,352, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,352,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,356,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,356,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,379, Throws <code>IllegalArgumentException</code> if the array is null or the
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,379,* Throws <code>MathIllegalArgumentException</code> if the array is null or the
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,387, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,387,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,391,"inal int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,391,"final int begin, final int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,414, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,414,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,419, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,419,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,421,"ublic static double variance(final double[] values, final double mean) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,421,"public static double variance(final double[] values, final double mean)"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,422,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,435, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,436,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,439, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,440,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,441,ublic static double populationVariance(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,442,public static double populationVariance(final double[] values)
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,443,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,456, Throws <code>IllegalArgumentException</code> if the array is null or the
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,458,* Throws <code>MathIllegalArgumentException</code> if the array is null or the
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,463, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,465,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,467,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,469,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,487, Throws <code>IllegalArgumentException</code> if the array is null or the
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,489,* Throws <code>MathIllegalArgumentException</code> if the array is null or the
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,495, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,497,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,499,"inal int begin, final int length) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,501,"final int begin, final int length) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,519, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,521,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,524, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,526,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,526,"ublic static double populationVariance(final double[] values, final double mean) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,528,"public static double populationVariance(final double[] values, final double mean)"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,529,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,534, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,537,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,545, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,548,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,547,ublic static double max(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,550,public static double max(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,556, Throws <code>IllegalArgumentException</code> if the array is null or
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,559,* Throws <code>MathIllegalArgumentException</code> if the array is null or
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,570, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,573,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,574,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,577,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,582, Throws <code>IllegalArgumentException</code> if the array is null.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,585,* Throws <code>MathIllegalArgumentException</code> if the array is null.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,593, @throws IllegalArgumentException if the array is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,596,* @throws MathIllegalArgumentException if the array is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,595,ublic static double min(final double[] values) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,598,public static double min(final double[] values) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,604, Throws <code>IllegalArgumentException</code> if the array is null or
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,607,* Throws <code>MathIllegalArgumentException</code> if the array is null or
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,618, @throws IllegalArgumentException if the array is null or the array index
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,621,* @throws MathIllegalArgumentException if the array is null or the array index
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,622,inal int length) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,625,final int length) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,646, @throws IllegalArgumentException if <code>values</code> is null
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,649,* @throws MathIllegalArgumentException if <code>values</code> is null
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,649,"ublic static double percentile(final double[] values, final double p) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,652,"public static double percentile(final double[] values, final double p)"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,653,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,663, <li>Throws <code>IllegalArgumentException</code> if <code>values</code>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,667,* <li>Throws <code>MathIllegalArgumentException</code> if <code>values</code>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,669, See {@link org.apache.commons.math3.stat.descriptive.rank.Percentile} for
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,670, a description of the percentile estimation algorithm used.</p>
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,673,* See {@link org.apache.commons.math3.stat.descriptive.rank.Percentile} for
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,674,* a description of the percentile estimation algorithm used.</p>
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,677, @throws IllegalArgumentException if the parameters are not valid or the
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,681,* @throws MathIllegalArgumentException if the parameters are not valid or the
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,681,"inal int length, final double p) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,685,"final int length, final double p) throws MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,696,"ublic static double sumDifference(final double[] sample1, final double[] sample2) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,700,"public static double sumDifference(final double[] sample1, final double[] sample2)"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,701,"throws DimensionMismatchException, NoDataException {"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,722,"ublic static double meanDifference(final double[] sample1, final double[] sample2) {"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,727,"public static double meanDifference(final double[] sample1, final double[] sample2)"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,728,"throws DimensionMismatchException, NoDataException{"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,740,"inal double[] sample2,"
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,741,ouble meanDifference) {
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,746,"final double[] sample2, double meanDifference) throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,747,NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,761," Normalize (standardize) the series, so in the end it is having a mean of 0 and a standard deviation of 1."
True,src/main/java/org/apache/commons/math3/stat/StatUtils.java,src/main/java/org/apache/commons/math3/stat/StatUtils.java,767,"* Normalize (standardize) the sample, so it is has a mean of 0 and a standard deviation of 1."
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,98,* @throws ConvergenceException if an empty cluster is encountered and the
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,99,* {@link #emptyStrategy} is set to {@code ERROR}
False,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,101,hrows MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,103,"throws MathIllegalArgumentException, ConvergenceException {"
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,154,* @throws ConvergenceException if an empty cluster is encountered and the
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,155,* {@link #emptyStrategy} is set to {@code ERROR}
False,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,155,hrows MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,159,"throws MathIllegalArgumentException, ConvergenceException {"
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,378,* @throws ConvergenceException if clusters are all empty
False,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,375,rivate T getPointFromLargestVarianceCluster(final Collection<Cluster<T>> clusters) {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,380,private T getPointFromLargestVarianceCluster(final Collection<Cluster<T>> clusters)
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,381,throws ConvergenceException {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,421,* @throws ConvergenceException if clusters are all empty
False,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,416,rivate T getPointFromLargestNumberCluster(final Collection<Cluster<T>> clusters) {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,423,private T getPointFromLargestNumberCluster(final Collection<Cluster<T>> clusters) throws ConvergenceException {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,456,* @throws ConvergenceException if clusters are all empty
False,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,450,rivate T getFarthestPoint(final Collection<Cluster<T>> clusters) {
True,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,src/main/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer.java,458,private T getFarthestPoint(final Collection<Cluster<T>> clusters) throws ConvergenceException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,78, @throws IllegalArgumentException if the input data array is not
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,78,* @throws MathIllegalArgumentException if the input data array is not
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,81,"ublic Covariance(double[][] data, boolean biasCorrected) {"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,81,"public Covariance(double[][] data, boolean biasCorrected)"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,82,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,93, @throws IllegalArgumentException if the input data array is not
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,94,* @throws MathIllegalArgumentException if the input data array is not
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,96,ublic Covariance(double[][] data) {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,97,public Covariance(double[][] data) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,111, @throws IllegalArgumentException if the input matrix does not have
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,112,* @throws MathIllegalArgumentException if the input matrix does not have
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,114,"ublic Covariance(RealMatrix matrix, boolean biasCorrected) {"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,115,"public Covariance(RealMatrix matrix, boolean biasCorrected)"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,116,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,127, @throws IllegalArgumentException if the input matrix does not have
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,129,* @throws MathIllegalArgumentException if the input matrix does not have
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,130,ublic Covariance(RealMatrix matrix) {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,132,public Covariance(RealMatrix matrix) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,160,* @throws MathIllegalArgumentException if the matrix does not contain sufficient data
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,159,"rotected RealMatrix computeCovarianceMatrix(RealMatrix matrix, boolean biasCorrected) {"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,162,"protected RealMatrix computeCovarianceMatrix(RealMatrix matrix, boolean biasCorrected)"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,163,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,183,* @throws MathIllegalArgumentException if matrix does not contain sufficient data
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,181,rotected RealMatrix computeCovarianceMatrix(RealMatrix matrix) {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,186,protected RealMatrix computeCovarianceMatrix(RealMatrix matrix)
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,187,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,197,* @throws MathIllegalArgumentException if the data array does not contain sufficient
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,198,* data
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,192,"rotected RealMatrix computeCovarianceMatrix(double[][] data, boolean biasCorrected) {"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,200,"protected RealMatrix computeCovarianceMatrix(double[][] data, boolean biasCorrected)"
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,201,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,210,* @throws MathIllegalArgumentException if the data array does not contain sufficient data
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,203,rotected RealMatrix computeCovarianceMatrix(double[][] data) {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,213,protected RealMatrix computeCovarianceMatrix(double[][] data) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,216, @throws  IllegalArgumentException if the arrays lengths do not match or
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,226,* @throws  MathIllegalArgumentException if the arrays lengths do not match or
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,220,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,230,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,251, @throws  IllegalArgumentException if the arrays lengths do not match or
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,261,* @throws  MathIllegalArgumentException if the arrays lengths do not match or
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,255,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,265,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,260, Throws IllegalArgumentException of the matrix does not have at least
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,261, two columns and two rows
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,270,* Throws MathIllegalArgumentException if the matrix does not have at least
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,271,* two columns and two rows.
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,273,* @throws MathIllegalArgumentException if the matrix does not contain sufficient data
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,274,* to compute covariance
False,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,264,rivate void checkSufficientData(final RealMatrix matrix) {
True,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,src/main/java/org/apache/commons/math3/stat/correlation/Covariance.java,276,private void checkSufficientData(final RealMatrix matrix) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java,src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java,184,// No try-catch or advertised exception because args are valid
True,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,128,// No try-catch or advertised exception because args are valid
False,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,256,"onvenience class to pass dfbg,dfwg,F values around within AnovaImpl."
True,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,src/main/java/org/apache/commons/math3/stat/inference/OneWayAnova.java,257,"Convenience class to pass dfbg,dfwg,F values around within OneWayAnova."
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,24,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,207,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,278,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,319,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,450,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,632,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,679,// No try-catch or advertised exception because args have just been checked
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1054,* @throws MathIllegalArgumentException if n is not greater than 1
False,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1049,hrows MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1058,"throws MaxCountExceededException, MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1080,* @throws NotStrictlyPositiveException if the estimated degrees of freedom is not
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1081,* strictly positive
False,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1075,hrows MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1086,"throws MaxCountExceededException, NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1109,* @throws NotStrictlyPositiveException if the estimated degrees of freedom is not
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1110,* strictly positive
False,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1102,hrows MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,src/main/java/org/apache/commons/math3/stat/inference/TTest.java,1115,"throws MaxCountExceededException, NotStrictlyPositiveException {"
True,src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java,src/main/java/org/apache/commons/math3/stat/inference/WilcoxonSignedRankTest.java,256,// No try-catch or advertised exception because args are valid
True,src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java,348,// No advertised exception because args are guaranteed valid
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,225,"rotected void validateSampleData(double[][] x, double[] y) {"
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,225,"protected void validateSampleData(double[][] x, double[] y) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,98,* @throws ModelSpecificationException if {@code numberOfVariables is less than 1}
False,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,99,"ublic MillerUpdatingRegression(int numberOfVariables, boolean includeConstant, double errorTolerance) {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,100,"public MillerUpdatingRegression(int numberOfVariables, boolean includeConstant, double errorTolerance)"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,101,throws ModelSpecificationException {
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,137,* @throws ModelSpecificationException if {@code numberOfVariables is less than 1}
False,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,136,"ublic MillerUpdatingRegression(int numberOfVariables, boolean includeConstant) {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,139,"public MillerUpdatingRegression(int numberOfVariables, boolean includeConstant)"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,140,throws ModelSpecificationException {
False,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,163,"ublic void addObservation(final double[] x, final double y) {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,167,"public void addObservation(final double[] x, final double y)"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,168,throws ModelSpecificationException {
False,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,189,"ublic void addObservations(double[][] x, double[] y) {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,194,"public void addObservations(double[][] x, double[] y) throws ModelSpecificationException {"
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,368,* @throws ModelSpecificationException if {@code nreq} is less than 1
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,369,* or greater than the number of independent variables
False,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,364,rivate double[] regcf(int nreq) {
True,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java,371,private double[] regcf(int nreq) throws ModelSpecificationException {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,65, @throws IllegalArgumentException if the x and y array data are not
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,66,* @throws MathIllegalArgumentException if the x and y array data are not
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,68,"ublic void newSampleData(double[] y, double[][] x) {"
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,69,"public void newSampleData(double[] y, double[][] x) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,97,* </p>
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,98,* <p>Data for the model must have been successfully loaded using one of
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,99,* the {@code newSampleData} methods before invoking this method; otherwise
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,100,* a {@code NullPointerException} will be thrown.</p>
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,109,// No try-catch or advertised NotStrictlyPositiveException - NPE above if n < 3
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,123,// No DME advertised - args valid if we get here
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,137,* @throws MathIllegalArgumentException if the sample has not been set or does
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,138,* not contain at least 3 observations
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,133,ublic double calculateTotalSumOfSquares() {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,142,public double calculateTotalSumOfSquares() throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,158,"// No advertised DME, args are valid"
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,170,* @throws MathIllegalArgumentException if the sample has not been set or does
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,171,* not contain at least 3 observations
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,162,ublic double calculateRSquared() {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,174,public double calculateRSquared() throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,191,* @throws MathIllegalArgumentException if the sample has not been set or does
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,192,* not contain at least 3 observations
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,182,ublic double calculateAdjustedRSquared() {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,196,public double calculateAdjustedRSquared() throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,220,* <p>Data for the model must have been successfully loaded using one of
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,221,* the {@code newSampleData} methods before invoking this method; otherwise
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,222,* a {@code NullPointerException} will be thrown.</p>
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,240,* <p>Data for the model must have been successfully loaded using one of
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,241,* the {@code newSampleData} methods before invoking this method; otherwise
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,242,* a {@code NullPointerException} will be thrown.</p>
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,150,ublic double getParameterEstimate(int index) {
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,150,public double getParameterEstimate(int index) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,187,ublic double getStdErrorOfEstimate(int index) {
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,187,public double getStdErrorOfEstimate(int index) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,240,"ublic double getCovarianceOfParameters(int i, int j) {"
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,240,"public double getCovarianceOfParameters(int i, int j) throws OutOfRangeException {"
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,217,ublic void addData(final double[][] data) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,217,public void addData(final double[][] data) throws ModelSpecificationException {
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,235,"ublic void addObservation(final double[] x,final double y) throws ModelSpecificationException{"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,235,"public void addObservation(final double[] x,final double y)"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,236,throws ModelSpecificationException {
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,252,"ublic void addObservations(final double[][] x,final double[] y) {"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,253,"public void addObservations(final double[][] x,final double[] y) throws ModelSpecificationException {"
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,608,ublic double getSlopeConfidenceInterval() {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,609,public double getSlopeConfidenceInterval() throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,643,ublic double getSlopeConfidenceInterval(final double alpha) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,644,public double getSlopeConfidenceInterval(final double alpha)
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,645,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,646,if (n < 3) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,647,return Double.NaN;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,653,// No advertised NotStrictlyPositiveException here - will return NaN above
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,682,if (n < 3) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,683,return Double.NaN;
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,685,// No advertised NotStrictlyPositiveException here - will return NaN above
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,709, Performs a regression on data present in buffers and outputs a RegressionResults object
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,719,* Performs a regression on data present in buffers and outputs a RegressionResults object.
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,721,* <p>If there are fewer than 3 observations in the model and {@code hasIntercept} is true
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,722,"* a {@code NoDataException} is thrown.  If there is no intercept term, the model must"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,723,* contain at least 2 observations.</p>
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,727,* @throws NoDataException if there is not sufficient data in the model to
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,728,* estimate the regression parameters
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,713,ublic RegressionResults regress() throws ModelSpecificationException{
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,714,f( hasIntercept ){
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,730,"public RegressionResults regress() throws ModelSpecificationException, NoDataException {"
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,731,if (hasIntercept) {
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,716,hrow new NoDataException( LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION );
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,733,throw new NoDataException(LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION);
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,741,f( n < 2 ){
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,742,hrow new NoDataException( LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION );
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,758,if (n < 2) {
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,759,throw new NoDataException(LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION);
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,765, @throws ModelSpecificationException if the model is not correctly specified
False,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,769,ublic RegressionResults regress(int[] variablesToInclude) throws ModelSpecificationException{
True,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java,785,public RegressionResults regress(int[] variablesToInclude) throws MathIllegalArgumentException{
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,20,import org.apache.commons.math3.exception.NoDataException;
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,80,* @throws NoDataException if there is not sufficient data in the model to
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,81,* estimate the regression parameters
False,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,78,egressionResults regress() throws ModelSpecificationException;
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,83,"RegressionResults regress() throws ModelSpecificationException, NoDataException;"
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,91,* @throws MathIllegalArgumentException if the variablesToInclude array is null or zero length
False,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,87,egressionResults regress(int[] variablesToInclude) throws ModelSpecificationException;
True,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/UpdatingMultipleLinearRegression.java,93,"RegressionResults regress(int[] variablesToInclude) throws ModelSpecificationException, MathIllegalArgumentException;"
