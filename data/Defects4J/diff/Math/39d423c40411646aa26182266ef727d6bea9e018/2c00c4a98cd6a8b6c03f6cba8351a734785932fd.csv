is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,69, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,70, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,69,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,78, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,79, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,77,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,157, @return a vector containing the result of applying the function to each
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,158, entry.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,155,* @return a vector containing the result of applying the function to each entry.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,175, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,176, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,172,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,185, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,186, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,181,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,190,"* @deprecated as of 3.1, to be removed in 4.0. Please use the {@link #toArray()} method instead."
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,196,[] getData();
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,192,@Deprecated
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,193,T[] getData();
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,202, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,203, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,199,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,207,** Find the orthogonal projection of this vector onto another vector.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,204,* Find the orthogonal projection of this vector onto another vector.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,210, @throws DimensionMismatchException if {@code v} is not the same size as
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,211, {@code this}
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,207,* @throws DimensionMismatchException if {@code v} is not the same size as {@code this}
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,245,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,246,ublic T[] getData() {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,247,[] res = buildArray(virtualSize);
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,248,penIntToFieldHashMap<T>.Iterator iter = entries.iterator();
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,249,hile (iter.hasNext()) {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,250,ter.advance();
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,251,es[iter.key()] = iter.value();
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,253,eturn res;
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,246,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,248,"* @deprecated as of 3.1, to be removed in 4.0. Please use the {@link #toArray()} method instead."
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,250,@Deprecated
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,251,public T[] getData() {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,252,return toArray();
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,256,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,257,ublic int getDimension() {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,255,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,256,public int getDimension() {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,261,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,262,ublic T getEntry(int index) throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,260,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,261,public T getEntry(int index) throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,267,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,268,ublic Field<T> getField() {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,266,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,267,public Field<T> getField() {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,272,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,271,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,293,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,294,ublic FieldVector<T> mapAdd(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,292,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,293,public FieldVector<T> mapAdd(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,298,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,299,ublic FieldVector<T> mapAddToSelf(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,297,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,298,public FieldVector<T> mapAddToSelf(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,306,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,305,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,312,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,311,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,323,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,324,ublic FieldVector<T> mapInv() throws MathArithmeticException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,322,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,323,public FieldVector<T> mapInv() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,328,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,329,ublic FieldVector<T> mapInvToSelf() throws MathArithmeticException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,327,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,328,public FieldVector<T> mapInvToSelf() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,336,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,337,ublic FieldVector<T> mapMultiply(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,335,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,336,public FieldVector<T> mapMultiply(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,341,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,342,ublic FieldVector<T> mapMultiplyToSelf(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,340,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,341,public FieldVector<T> mapMultiplyToSelf(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,351,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,352,ublic FieldVector<T> mapSubtract(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,350,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,351,public FieldVector<T> mapSubtract(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,356,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,357,ublic FieldVector<T> mapSubtractToSelf(T d) throws NullArgumentException {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,355,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,356,public FieldVector<T> mapSubtractToSelf(T d) throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,478,eturn getData();
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,477,T[] res = buildArray(virtualSize);
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,478,OpenIntToFieldHashMap<T>.Iterator iter = entries.iterator();
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,479,while (iter.hasNext()) {
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,480,iter.advance();
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,481,res[iter.key()] = iter.value();
True,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math3/linear/SparseFieldVector.java,483,return res;
