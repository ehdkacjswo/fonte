is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.java,src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.java,23,* @deprecated as of 3.1 replaced by {@link org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction}
True,src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.java,src/main/java/org/apache/commons/math3/analysis/DifferentiableUnivariateFunction.java,25,@Deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,104,* @deprecated as of 3.1 replaced by {@link #compose(UnivariateDifferentiableFunction...)}
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,190,* @deprecated as of 3.1 replaced by {@link #add(UnivariateDifferentiableFunction...)}
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,192,@Deprecated
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,275,* @deprecated as of 3.1 replaced by {@link #multiply(UnivariateDifferentiableFunction...)}
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,20,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,21,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction;
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,70,ifferentiableUnivariateFunction id = new Identity();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,71,"ssert.assertEquals(1, FunctionUtils.compose(id, id, id).derivative().value(3), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,72,UnivariateDifferentiableFunction id = new Identity();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,73,"Assert.assertEquals(1, FunctionUtils.compose(id, id, id).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,73,ifferentiableUnivariateFunction c = new Constant(4);
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,74,"ssert.assertEquals(0, FunctionUtils.compose(id, c).derivative().value(3), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,75,"ssert.assertEquals(0, FunctionUtils.compose(c, id).derivative().value(3), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,75,UnivariateDifferentiableFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,76,"Assert.assertEquals(0, FunctionUtils.compose(id, c).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,77,"Assert.assertEquals(0, FunctionUtils.compose(c, id).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,77,ifferentiableUnivariateFunction m = new Minus();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,78,"ssert.assertEquals(-1, FunctionUtils.compose(m).derivative().value(3), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,79,"ssert.assertEquals(1, FunctionUtils.compose(m, m).derivative().value(3), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,79,UnivariateDifferentiableFunction m = new Minus();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,80,"Assert.assertEquals(-1, FunctionUtils.compose(m).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,81,"Assert.assertEquals(1, FunctionUtils.compose(m, m).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,81,ifferentiableUnivariateFunction inv = new Inverse();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,82,"ssert.assertEquals(0.25, FunctionUtils.compose(inv, m, id).derivative().value(2), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,83,UnivariateDifferentiableFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,84,"Assert.assertEquals(0.25, FunctionUtils.compose(inv, m, id).value(new DerivativeStructure(1, 1, 0, 2)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,84,ifferentiableUnivariateFunction pow = new Power(2);
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,85,"ssert.assertEquals(108, FunctionUtils.compose(pow, pow).derivative().value(3), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,86,UnivariateDifferentiableFunction pow = new Power(2);
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,87,"Assert.assertEquals(108, FunctionUtils.compose(pow, pow).value(new DerivativeStructure(1, 1, 0, 3)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,87,ifferentiableUnivariateFunction log = new Log();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,89,UnivariateDifferentiableFunction log = new Log();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,89,"ssert.assertEquals(pow.derivative().value(a) / pow.value(a),"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,90,"unctionUtils.compose(log, pow).derivative().value(a), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,91,"Assert.assertEquals(pow.value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1) / pow.value(a),"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,92,"FunctionUtils.compose(log, pow).value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,107,ifferentiableUnivariateFunction sin = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,108,ifferentiableUnivariateFunction c = new Constant(4);
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,109,ifferentiableUnivariateFunction m = new Minus();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,110,ifferentiableUnivariateFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,109,UnivariateDifferentiableFunction sin = new Sin();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,110,UnivariateDifferentiableFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,111,UnivariateDifferentiableFunction m = new Minus();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,112,UnivariateDifferentiableFunction inv = new Inverse();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,114,"unctionUtils.add(inv, m, c, sin).derivative().value(a),"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,116,"FunctionUtils.add(inv, m, c, sin).value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1),"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,130,ifferentiableUnivariateFunction c = new Constant(4);
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,131,ifferentiableUnivariateFunction id = new Identity();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,132,UnivariateDifferentiableFunction c = new Constant(4);
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,133,UnivariateDifferentiableFunction id = new Identity();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,133,"ssert.assertEquals(8 * a, FunctionUtils.multiply(c, id, id).derivative().value(a), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,135,"Assert.assertEquals(8 * a, FunctionUtils.multiply(c, id, id).value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,135,ifferentiableUnivariateFunction inv = new Inverse();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,136,ifferentiableUnivariateFunction pow = new Power(2.5);
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,137,ifferentiableUnivariateFunction cos = new Cos();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,137,UnivariateDifferentiableFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,138,UnivariateDifferentiableFunction pow = new Power(2.5);
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,139,UnivariateDifferentiableFunction cos = new Cos();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,139,"unctionUtils.multiply(inv, pow, cos).derivative().value(a), EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,141,"FunctionUtils.multiply(inv, pow, cos).value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1), EPS);"
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,141,ifferentiableUnivariateFunction cosh = new Cosh();
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,143,UnivariateDifferentiableFunction cosh = new Cosh();
False,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,143,"unctionUtils.multiply(inv, pow, cosh).derivative().value(a), 8 * EPS);"
True,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/FunctionUtilsTest.java,145,"FunctionUtils.multiply(inv, pow, cosh).value(new DerivativeStructure(1, 1, 0, a)).getPartialDerivative(1), 8 * EPS);"
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,19,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,20,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction;
False,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,27,rivate static final DifferentiableUnivariateFunction sinc = new Sinc();
False,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,28,rivate static final UnivariateFunction sincDeriv = sinc.derivative();
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,29,private static final UnivariateDifferentiableFunction sinc = new Sinc();
False,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,62,eturn sincDeriv.value(point[k]);
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,63,"return sinc.value(new DerivativeStructure(1, 1, 0, point[k])).getPartialDerivative(1);"
False,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,77,[i] = factor * sincDeriv.value(x);
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,78,"r[i] = factor * sinc.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,19,mport org.apache.commons.math3.analysis.DifferentiableUnivariateFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,23,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,24,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,248,inal DifferentiableUnivariateFunction f = new DifferentiableUnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,249,rivate final DifferentiableUnivariateFunction sqrt = new Sqrt();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,250,rivate final DifferentiableUnivariateFunction inv = new Inverse();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,251,rivate final DifferentiableUnivariateFunction func
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,249,final UnivariateFunction f = new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,250,private final UnivariateDifferentiableFunction sqrt = new Sqrt();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,251,private final UnivariateDifferentiableFunction inv = new Inverse();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,252,private final UnivariateDifferentiableFunction func
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,258,eturn func.value(x);
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,259,"return func.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,261,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,262,eturn func.derivative();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,267,"inal double result = solver.solve(99,"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,268,".derivative(),"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,269,", 1e30, 1 + 1e-10);"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,265,"final double result = solver.solve(99, f, 1, 1e30, 1 + 1e-10);"
