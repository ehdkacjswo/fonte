is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,20,import java.io.BufferedReader;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,21,import java.io.IOException;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,22,import java.io.InputStream;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,23,import java.io.InputStreamReader;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,26,import org.apache.commons.math3.special.Gamma;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,27,import org.apache.commons.math3.stat.descriptive.SummaryStatistics;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,28,import org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,179,"public static double density(final double x, final double shape,"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,180,final double scale) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,182,* This is a copy of
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,183,* double GammaDistribution.density(double)
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,184,* prior to r1338548.
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,186,if (x < 0) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,187,return 0;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,189,"return FastMath.pow(x / scale, shape - 1) / scale *"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,190,FastMath.exp(-x / scale) / FastMath.exp(Gamma.logGamma(shape));
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,194,* MATH-753: large values of x or shape parameter cause density(double) to
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,195,* overflow. Reference data is generated with the Maxima script
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,196,"* gamma-distribution.mac, which can be found in"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,197,* src/test/resources/org/apache/commons/math3/distribution.
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,200,"private void doTestMath753(final double shape,"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,201,"final double meanNoOF, final double sdNoOF,"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,202,"final double meanOF, final double sdOF,"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,203,final String resourceName) throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,204,"final GammaDistribution distribution = new GammaDistribution(shape, 1.0);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,205,final SummaryStatistics statOld = new SummaryStatistics();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,206,final SummaryStatistics statNewNoOF = new SummaryStatistics();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,207,final SummaryStatistics statNewOF = new SummaryStatistics();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,209,final InputStream resourceAsStream;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,210,resourceAsStream = this.getClass().getResourceAsStream(resourceName);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,211,"Assert.assertNotNull(""Could not find resource "" + resourceName,"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,212,resourceAsStream);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,213,final BufferedReader in;
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,214,in = new BufferedReader(new InputStreamReader(resourceAsStream));
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,216,try {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,217,for (String line = in.readLine(); line != null; line = in
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,218,.readLine()) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,219,"final String[] tokens = line.split("", "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,220,"Assert.assertTrue(""expected two floating-point values"","
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,221,tokens.length == 2);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,222,final double x = Double.parseDouble(tokens[0]);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,223,"final String msg = ""x = "" + x + "", shape = "" + shape +"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,224,""", scale = 1.0"";"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,225,final double expected = Double.parseDouble(tokens[1]);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,226,final double ulp = FastMath.ulp(expected);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,227,"final double actualOld = density(x, shape, 1.0);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,228,final double actualNew = distribution.density(x);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,229,"final double errOld, errNew;"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,230,errOld = FastMath.abs((actualOld - expected) / ulp);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,231,errNew = FastMath.abs((actualNew - expected) / ulp);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,233,if (Double.isNaN(actualOld) || Double.isInfinite(actualOld)) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,234,"Assert.assertFalse(msg, Double.isNaN(actualNew));"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,235,"Assert.assertFalse(msg, Double.isInfinite(actualNew));"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,236,statNewOF.addValue(errNew);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,237,} else {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,238,statOld.addValue(errOld);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,239,statNewNoOF.addValue(errNew);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,242,if (statOld.getN() != 0) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,244,"* If no overflow occurs, check that new implementation is"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,245,* better than old one.
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,247,"final StringBuilder sb = new StringBuilder(""shape = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,248,sb.append(shape);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,249,"sb.append("", scale = 1.0\n"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,250,"sb.append(""Old implementation\n"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,251,"sb.append(""------------------\n"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,252,sb.append(statOld.toString());
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,253,"sb.append(""New implementation\n"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,254,"sb.append(""------------------\n"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,255,sb.append(statNewNoOF.toString());
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,256,final String msg = sb.toString();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,258,final double oldMin = statOld.getMin();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,259,final double newMin = statNewNoOF.getMin();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,260,"Assert.assertTrue(msg, newMin <= oldMin);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,262,final double oldMax = statOld.getMax();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,263,final double newMax = statNewNoOF.getMax();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,264,"Assert.assertTrue(msg, newMax <= oldMax);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,266,final double oldMean = statOld.getMean();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,267,final double newMean = statNewNoOF.getMean();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,268,"Assert.assertTrue(msg, newMean <= oldMean);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,270,final double oldSd = statOld.getStandardDeviation();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,271,final double newSd = statNewNoOF.getStandardDeviation();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,272,"Assert.assertTrue(msg, newSd <= oldSd);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,274,"Assert.assertTrue(msg, newMean <= meanNoOF);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,275,"Assert.assertTrue(msg, newSd <= sdNoOF);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,277,if (statNewOF.getN() != 0) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,278,final double newMean = statNewOF.getMean();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,279,final double newSd = statNewOF.getStandardDeviation();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,281,"final StringBuilder sb = new StringBuilder(""shape = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,282,sb.append(shape);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,283,"sb.append("", scale = 1.0"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,284,"sb.append("", max. mean error (ulps) = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,285,sb.append(meanOF);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,286,"sb.append("", actual mean error (ulps) = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,287,sb.append(newMean);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,288,"sb.append("", max. sd of error (ulps) = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,289,sb.append(sdOF);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,290,"sb.append("", actual sd of error (ulps) = "");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,291,sb.append(newSd);
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,292,final String msg = sb.toString();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,294,"Assert.assertTrue(msg, newMean <= meanOF);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,295,"Assert.assertTrue(msg, newSd <= sdOF);"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,297,} catch (IOException e) {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,298,Assert.fail(e.getMessage());
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,299,} finally {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,300,in.close();
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,305,@Test
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,306,public void testMath753Shape1() throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,307,"doTestMath753(1.0, 1.5, 0.5, 0.0, 0.0, ""gamma-distribution-shape-1.csv"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,310,@Test
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,311,public void testMath753Shape10() throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,312,"doTestMath753(10.0, 1.0, 1.0, 0.0, 0.0, ""gamma-distribution-shape-10.csv"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,315,@Test
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,316,public void testMath753Shape100() throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,317,"doTestMath753(100.0, 1.5, 1.0, 0.0, 0.0, ""gamma-distribution-shape-100.csv"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,320,@Test
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,321,public void testMath753Shape142() throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,322,"doTestMath753(142.0, 0.5, 1.5, 40.0, 40.0, ""gamma-distribution-shape-142.csv"");"
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,325,@Test
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,326,public void testMath753Shape1000() throws IOException {
True,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GammaDistributionTest.java,327,"doTestMath753(1000.0, 1.0, 1.0, 160.0, 220.0, ""gamma-distribution-shape-1000.csv"");"
