is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,129,"INVALID_REGRESSION_ARRAY(""input data array length = {0} does not match the number of observations = {1} and the number of regressors = {2}""),"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,43," Loads model x and y sample data from a flat array of data, overriding any previous sample."
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,44, Assumes that rows are concatenated with y values first in each row.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,43,"* <p>Loads model x and y sample data from a flat input array, overriding any previous sample."
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,44,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,45,"* <p>Assumes that rows are concatenated with y values first in each row.  For example, an input"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,46,"* <code>data</code> array containing the sequence of values (1, 2, 3, 4, 5, 6, 7, 8, 9) with"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,47,* <code>nobs = 3</code> and <code>nvars = 2</code> creates a regression dataset with two
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,48,"* independent variables, as below:"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,49,* <pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,50,*   y   x[0]  x[1]
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,52,*   1     2     3
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,53,*   4     5     6
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,54,*   7     8     9
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,55,* </pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,56,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,57,* <p>Note that there is no need to add an initial unitary column (column of 1's) when
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,58,* specifying a model including an intercept term.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,59,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,60,* <p>Throws IllegalArgumentException if any of the following preconditions fail:
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,61,* <ul><li><code>data</code> cannot be null</li>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,62,* <li><code>data.length = nobs * (nvars + 1)</li>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,63,* <li><code>nobs > nvars</code></li></ul>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,64,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,69,* @throws IllegalArgumentException if the preconditions are not met
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,72,if (data == null) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,73,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,74,LocalizedFormats.NULL_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,76,if (data.length != nobs * (nvars + 1)) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,77,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,78,"LocalizedFormats.INVALID_REGRESSION_ARRAY, data.length, nobs, nvars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,80,if (nobs <= nvars) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,81,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,82,LocalizedFormats.NOT_ENOUGH_DATA_FOR_NUMBER_OF_PREDICTORS);
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,66," Loads new y sample data, overriding any previous sample"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,99,"* Loads new y sample data, overriding any previous data."
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,68," @param y the [n,1] array representing the y sample"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,101,* @param y the array representing the y sample
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,102,* @throws IllegalArgumentException if y is null or empty
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,105,if (y == null) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,106,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,107,LocalizedFormats.NULL_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,109,if (y.length == 0) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,110,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,111,LocalizedFormats.NO_DATA);
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,75," Loads new x sample data, overriding any previous sample"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,77," @param x the [n,k] array representing the x sample"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,117,"* <p>Loads new x sample data, overriding any previous data."
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,118,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,119,* The input <code>x</code> array should have one row for each sample
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,120,"* observation, with columns corresponding to independent variables."
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,121,"* For example, if <pre>"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,122,"* <code> x = new double[][] {{1, 2}, {3, 4}, {5, 6}} </code></pre>"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,123,* then <code>setXSampleData(x) </code> results in a model with two independent
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,124,* variables and 3 observations:
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,125,* <pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,126,*   x[0]  x[1]
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,128,*     1    2
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,129,*     3    4
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,130,*     5    6
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,131,* </pre>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,132,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,133,* <p>Note that there is no need to add an initial unitary column (column of 1's) when
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,134,* specifying a model including an intercept term.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,135,* </p>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,136,* @param x the rectangular array representing the x sample
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,137,"* @throws IllegalArgumentException if x is null, empty or not rectangular"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,80,his.X = new Array2DRowRealMatrix(x);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,140,if (x == null) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,141,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,142,LocalizedFormats.NULL_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,144,if (x.length == 0) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,145,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,146,LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,148,final int nVars = x[0].length;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,149,final double[][] xAug = new double[x.length][nVars + 1];
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,150,for (int i = 0; i < x.length; i++) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,151,if (x[i].length != nVars) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,152,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,153,"LocalizedFormats.DIFFERENT_ROWS_LENGTHS,"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,154,"x[i].length, nVars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,156,xAug[i][0] = 1.0d;
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,157,"System.arraycopy(x[i], 0, xAug[i], 1, nVars);"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,159,"this.X = new Array2DRowRealMatrix(xAug, false);"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,84, Validates sample data.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,163,* Validates sample data.  Checks that
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,164,* <ul><li>Neither x nor y is null or empty;</li>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,165,* <li>The length (i.e. number of rows) of x equals the length of y</li>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,166,* <li>x has at least one more row than it has columns (i.e. there is
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,167,* sufficient data to estimate regression coefficients for each of the
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,168,* columns in x plus an intercept.</li>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,169,* </ul>
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,171,"* @param x the [n,k] array representing the x data"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,172,"* @param y the [n,1] array representing the y data"
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,173,* @throws IllegalArgumentException if any of the checks fail
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,86," @param x the [n,k] array representing the x sample"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,87," @param y the [n,1] array representing the y sample"
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,88, @throws IllegalArgumentException if the x and y array data are not
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,89,             compatible for the regression
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,97, else if ((x.length > 0) && (x[0].length > x.length)) {
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,183,if (x.length == 0) {  // Must be no y data either
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,184,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,185,LocalizedFormats.NO_DATA);
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,187,if (x[0].length + 1 > x.length) {
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,105, Validates sample data.
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,195,* Validates that the x data and covariance matrix have the same
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,196,* number of rows and that the covariance matrix is square.
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,109, @throws IllegalArgumentException if the x sample data or covariance
False,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,110,             matrix are not compatible for the regression
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,200,* @throws IllegalArgumentException if the number of rows in x is not equal
True,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java,201,* to the number of rows in covariance or covariance is not square.
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,81, Computes and caches QR decomposition of the X matrix
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,80,* <p>This implementation computes and caches the QR decomposition of the X matrix.</p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,135, Returns the sum of square residuals.
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,134,* Returns the sum of squared residuals.
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,171,/ return 1 - ((1 - calculateRSquare()) * (n - 1) / (n - X.getColumnDimension() - 1));
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,175," Loads new x sample data, overriding any previous sample"
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,177," @param x the [n,k] array representing the x sample"
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,173,* {@inheritDoc}
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,174,* <p>This implementation computes and caches the QR decomposition of the X matrix once it is successfully loaded.</p>
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,181,his.X = new Array2DRowRealMatrix(x);
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,178,super.newXSampleData(x);
False,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,186, Calculates regression coefficients using OLS.
True,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java,183,* Calculates the regression coefficients using OLS.
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,19,import static org.junit.Assert.assertEquals;
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,22,mport org.apache.commons.math.stat.StatUtils;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,23,import org.apache.commons.math.linear.MatrixUtils;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,24,import org.apache.commons.math.linear.RealMatrix;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,25,import org.apache.commons.math.linear.RealVector;
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,35,"[0] = new double[]{1.0, 0, 0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,36,"[1] = new double[]{1.0, 2.0, 0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,37,"[2] = new double[]{1.0, 0, 3.0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,38,"[3] = new double[]{1.0, 0, 0, 4.0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,39,"[4] = new double[]{1.0, 0, 0, 0, 5.0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,40,"[5] = new double[]{1.0, 0, 0, 0, 0, 6.0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,38,"x[0] = new double[]{0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,39,"x[1] = new double[]{2.0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,40,"x[2] = new double[]{0, 3.0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,41,"x[3] = new double[]{0, 0, 4.0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,42,"x[4] = new double[]{0, 0, 0, 5.0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,43,"x[5] = new double[]{0, 0, 0, 0, 6.0};"
False,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,118,eturn x[0].length;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,121,return x[0].length + 1;
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,143,"* Verifies that setting X, Y and covariance separately has the same effect as newSample(X,Y,cov)."
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,145,@Test
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,146,public void testNewSample2() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,147,"double[] y = new double[] {1, 2, 3, 4};"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,148,double[][] x = new double[][] {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,149,"{19, 22, 33},"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,150,"{20, 30, 40},"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,151,"{25, 35, 45},"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,152,"{27, 37, 47}"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,154,double[][] covariance = MatrixUtils.createRealIdentityMatrix(4).scalarMultiply(2).getData();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,155,GLSMultipleLinearRegression regression = new GLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,156,"regression.newSampleData(y, x, covariance);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,157,RealMatrix combinedX = regression.X.copy();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,158,RealVector combinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,159,RealMatrix combinedCovInv = regression.getOmegaInverse();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,160,regression.newXSampleData(x);
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,161,regression.newYSampleData(y);
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,162,"assertEquals(combinedX, regression.X);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,163,"assertEquals(combinedY, regression.Y);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,164,"assertEquals(combinedCovInv, regression.getOmegaInverse());"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,168,* Verifies that GLS with identity covariance matrix gives the same results
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,169,* as OLS.
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,171,@Test
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,172,public void testGLSOLSConsistency() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,173,// Use Longley data to test
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,174,double[] design = new double[] {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,175,"60323,83.0,234289,2356,1590,107608,1947,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,176,"61122,88.5,259426,2325,1456,108632,1948,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,177,"60171,88.2,258054,3682,1616,109773,1949,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,178,"61187,89.5,284599,3351,1650,110929,1950,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,179,"63221,96.2,328975,2099,3099,112075,1951,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,180,"63639,98.1,346999,1932,3594,113270,1952,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,181,"64989,99.0,365385,1870,3547,115094,1953,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,182,"63761,100.0,363112,3578,3350,116219,1954,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,183,"66019,101.2,397469,2904,3048,117388,1955,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,184,"67857,104.6,419180,2822,2857,118734,1956,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,185,"68169,108.4,442769,2936,2798,120445,1957,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,186,"66513,110.8,444546,4681,2637,121950,1958,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,187,"68655,112.6,482704,3813,2552,123366,1959,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,188,"69564,114.2,502601,3931,2514,125368,1960,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,189,"69331,115.7,518173,4806,2572,127852,1961,"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,190,"70551,116.9,554894,4007,2827,130081,1962"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,192,RealMatrix identityCov = MatrixUtils.createRealIdentityMatrix(16);
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,193,GLSMultipleLinearRegression glsModel = new GLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,194,OLSMultipleLinearRegression olsModel = new OLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,195,"glsModel.newSampleData(design, 16, 6);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,196,"olsModel.newSampleData(design, 16, 6);"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,197,glsModel.newCovarianceData(identityCov.getData());
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,198,double[] olsBeta = olsModel.calculateBeta().getData();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,199,double[] glsBeta = glsModel.calculateBeta().getData();
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,200,"// TODO:  Should have assertRelativelyEquals(double[], double[], eps) in TestUtils"
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,201,//        Should also add RealVector and RealMatrix versions
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,202,for (int i = 0; i < olsBeta.length; i++) {
True,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java,203,"TestUtils.assertRelativelyEquals(olsBeta[i], glsBeta[i], 10E-7);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,19,import org.apache.commons.math.linear.RealMatrix;
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,20,import org.apache.commons.math.linear.RealVector;
False,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,28,rotected MultipleLinearRegression regression;
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,30,protected AbstractMultipleLinearRegression regression;
False,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,35,rotected abstract MultipleLinearRegression createRegression();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,37,protected abstract AbstractMultipleLinearRegression createRegression();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,70,* Verifies that newSampleData methods consistently insert unitary columns
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,71,* in design matrix.  Confirms the fix for MATH-411.
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,73,@Test
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,74,public void testNewSample() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,75,double[] design = new double[] {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,76,"1, 19, 22, 33,"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,77,"2, 20, 30, 40,"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,78,"3, 25, 35, 45,"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,79,"4, 27, 37, 47"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,81,"double[] y = new double[] {1, 2, 3, 4};"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,82,double[][] x = new double[][] {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,83,"{19, 22, 33},"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,84,"{20, 30, 40},"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,85,"{25, 35, 45},"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,86,"{27, 37, 47}"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,88,AbstractMultipleLinearRegression regression = (AbstractMultipleLinearRegression) createRegression();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,89,"regression.newSampleData(design, 4, 3);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,90,RealMatrix flatX = regression.X.copy();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,91,RealVector flatY = regression.Y.copy();
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,92,regression.newXSampleData(x);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,93,regression.newYSampleData(y);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,94,"assertEquals(flatX, regression.X);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,95,"assertEquals(flatY, regression.Y);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,98,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,99,public void testNewSampleNullData() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,100,double[] data = null;
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,101,"createRegression().newSampleData(data, 2, 3);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,104,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,105,public void testNewSampleInvalidData() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,106,"double[] data = new double[] {1, 2, 3, 4};"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,107,"createRegression().newSampleData(data, 2, 3);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,110,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,111,public void testNewSampleInsufficientData() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,112,"double[] data = new double[] {1, 2, 3, 4};"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,113,"createRegression().newSampleData(data, 1, 3);"
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,116,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,117,public void testXSampleDataNull() {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,118,createRegression().newXSampleData(null);
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,121,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,122,public void testYSampleDataNull() {
True,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java,123,createRegression().newYSampleData(null);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,27,import org.apache.commons.math.linear.RealVector;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,41,"[0] = new double[]{1.0, 0, 0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,42,"[1] = new double[]{1.0, 2.0, 0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,43,"[2] = new double[]{1.0, 0, 3.0, 0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,44,"[3] = new double[]{1.0, 0, 0, 4.0, 0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,45,"[4] = new double[]{1.0, 0, 0, 0, 5.0, 0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,46,"[5] = new double[]{1.0, 0, 0, 0, 0, 6.0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,42,"x[0] = new double[]{0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,43,"x[1] = new double[]{2.0, 0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,44,"x[2] = new double[]{0, 3.0, 0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,45,"x[3] = new double[]{0, 0, 4.0, 0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,46,"x[4] = new double[]{0, 0, 0, 5.0, 0};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,47,"x[5] = new double[]{0, 0, 0, 0, 6.0};"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,59,eturn x[0].length;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,60,return x[0].length + 1;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,67,Test(expected=IllegalArgumentException.class)
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,68,ublic void cannotAddXSampleData() {
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,69,"reateRegression().newSampleData(new double[]{}, null);"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,72,Test(expected=IllegalArgumentException.class)
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,73,ublic void cannotAddNullYSampleData() {
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,74,"reateRegression().newSampleData(null, new double[][]{});"
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,252,/ Transform to Y and X required by interface
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,253,nt nobs = 47;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,254,nt nvars = 4;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,243,final int nobs = 47;
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,244,final int nvars = 4;
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,261,ouble[] betaHat = model.estimateRegressionParameters();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,251,final double[] betaHat = model.estimateRegressionParameters();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,270,ouble[] residuals = model.estimateResiduals();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,260,final double[] residuals = model.estimateResiduals();
False,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,291,ouble[] errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,281,final double[] errors = model.estimateRegressionParametersStandardErrors();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,399,"* Verifies that setting X and Y separately has the same effect as newSample(X,Y)."
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,401,@Test
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,402,public void testNewSample2() throws Exception {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,403,"double[] y = new double[] {1, 2, 3, 4};"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,404,double[][] x = new double[][] {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,405,"{19, 22, 33},"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,406,"{20, 30, 40},"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,407,"{25, 35, 45},"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,408,"{27, 37, 47}"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,410,OLSMultipleLinearRegression regression = new OLSMultipleLinearRegression();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,411,"regression.newSampleData(y, x);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,412,RealMatrix combinedX = regression.X.copy();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,413,RealVector combinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,414,regression.newXSampleData(x);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,415,regression.newYSampleData(y);
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,416,"assertEquals(combinedX, regression.X);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,417,"assertEquals(combinedY, regression.Y);"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,420,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,421,public void testNewSampleDataYNull() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,422,"createRegression().newSampleData(null, new double[][] {});"
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,425,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,426,public void testNewSampleDataXNull() {
True,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java,427,"createRegression().newSampleData(new double[] {}, null);"
