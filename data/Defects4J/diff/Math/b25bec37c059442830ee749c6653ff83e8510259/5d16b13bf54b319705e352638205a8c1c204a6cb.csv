is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,18,package org.apache.commons.math.ode.jacobians;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,20,import org.apache.commons.math.ode.events.EventException;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,22,/** This interface represents a handler for discrete events triggered
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,23,* during ODE integration.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,25,* <p>Some events can be triggered at discrete times as an ODE problem
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,26,* is solved. This occurs for example when the integration process
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,27,* should be stopped as some state is reached (G-stop facility) when the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,28,"* precise date is unknown a priori, or when the derivatives have"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,29,"* discontinuities, or simply when the user wants to monitor some"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,30,* states boundaries crossings.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,31,* </p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,33,* <p>These events are defined as occurring when a <code>g</code>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,34,* switching function sign changes.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,36,* <p>Since events are only problem-dependent and are triggered by the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,37,"* independent <i>time</i> variable and the state vector, they can"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,38,"* occur at virtually any time, unknown in advance. The integrators will"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,39,"* take care to avoid sign changes inside the steps, they will reduce"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,40,* the step size when such an event is detected in order to put this
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,41,* event exactly at the end of the current step. This guarantees that
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,42,* step interpolation (which always has a one step scope) is relevant
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,43,* even in presence of discontinuities. This is independent from the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,44,* stepsize control provided by integrators that monitor the local
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,45,"* error (this event handling feature is available for all integrators,"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,46,* including fixed step ones).</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,48,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,49,* @since 2.1
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,52,public interface EventHandlerWithJacobians  {
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,54,/** Stop indicator.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,55,* <p>This value should be used as the return value of the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,56,* #eventOccurred eventOccurred} method when the integration should be
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,57,* stopped after the event ending the current step.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,59,int STOP = 0;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,61,/** Reset state indicator.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,62,* <p>This value should be used as the return value of the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,63,* #eventOccurred eventOccurred} method when the integration should
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,64,"* go on after the event ending the current step, with a new state"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,65,* vector (which will be retrieved thanks to the {@link #resetState
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,66,* resetState} method).</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,68,int RESET_STATE = 1;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,70,/** Reset derivatives indicator.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,71,* <p>This value should be used as the return value of the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,72,* #eventOccurred eventOccurred} method when the integration should
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,73,"* go on after the event ending the current step, with a new derivatives"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,74,* vector (which will be retrieved thanks to the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,75,* org.apache.commons.math.ode.FirstOrderDifferentialEquations#computeDerivatives}
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,76,* method).</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,78,int RESET_DERIVATIVES = 2;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,80,/** Continue indicator.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,81,* <p>This value should be used as the return value of the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,82,* #eventOccurred eventOccurred} method when the integration should go
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,83,* on after the event ending the current step.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,85,int CONTINUE = 3;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,87,/** Compute the value of the switching function.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,89,* <p>The discrete events are generated when the sign of this
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,90,* switching function changes. The integrator will take care to change
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,91,* the stepsize in such a way these events occur exactly at step boundaries.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,92,* The switching function must be continuous in its roots neighborhood
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,93,"* (but not necessarily smooth), as the integrator will need to find its"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,94,* roots to locate precisely the events.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,96,* @param t current value of the independent <i>time</i> variable
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,97,* @param y array containing the current value of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,98,* @param dydy0 array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,99,* the state vector with respect to initial state
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,100,* @param dydp array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,101,* the state vector with respect to parameters
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,102,* @return value of the g switching function
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,103,* @exception EventException if the switching function cannot be evaluated
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,105,"double g(double t, double[] y, double[][] dydy0, double[][] dydp)"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,106,throws EventException;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,108,/** Handle an event and choose what to do next.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,110,* <p>This method is called when the integrator has accepted a step
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,111,"* ending exactly on a sign change of the function, just <em>before</em>"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,112,* the step handler itself is called (see below for scheduling). It
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,113,* allows the user to update his internal data to acknowledge the fact
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,114,* the event has been handled (for example setting a flag in the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,115,* org.apache.commons.math.ode.jacobians.ParameterizedODEWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,116,* differential equations} to switch the derivatives computation in
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,117,"* case of discontinuity), or to direct the integrator to either stop"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,118,"* or continue integration, possibly with a reset state or derivatives.</p>"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,120,* <ul>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,121,"*   <li>if {@link #STOP} is returned, the step handler will be called"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,122,*   with the <code>isLast</code> flag of the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,123,*   org.apache.commons.math.ode.jacobians.StepHandlerWithJacobians#handleStep(
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,124,"*   StepInterpolatorWithJacobians, boolean) handleStep} method set to true and"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,125,"*   the integration will be stopped,</li>"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,126,"*   <li>if {@link #RESET_STATE} is returned, the {@link #resetState"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,127,*   resetState} method will be called once the step handler has
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,128,"*   finished its task, and the integrator will also recompute the"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,129,"*   derivatives,</li>"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,130,"*   <li>if {@link #RESET_DERIVATIVES} is returned, the integrator"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,131,"*   will recompute the derivatives,"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,132,"*   <li>if {@link #CONTINUE} is returned, no specific action will"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,133,*   be taken (apart from having called this method) and integration
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,134,*   will continue.</li>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,135,* </ul>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,137,* <p>The scheduling between this method and the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,138,* org.apache.commons.math.ode.jacobians.StepHandlerWithJacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,139,* StepHandlerWithJacobians} method {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,140,* org.apache.commons.math.ode.jacobians.StepHandlerWithJacobians#handleStep(
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,141,"* StepInterpolatorWithJacobians, boolean) handleStep(interpolator, isLast)}"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,142,* is to call this method first and <code>handleStep</code> afterwards. This
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,143,* scheduling allows the integrator to pass <code>true</code> as the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,144,* <code>isLast</code> parameter to the step handler to make it aware the step
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,145,* will be the last one if this method returns {@link #STOP}. As the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,146,* interpolator may be used to navigate back throughout the last step (as {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,147,* org.apache.commons.math.ode.sampling.StepNormalizer StepNormalizer}
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,148,"* does for example), user code called by this method and user"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,149,* code called by step handlers may experience apparently out of order values
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,150,"* of the independent time variable. As an example, if the same user object"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,151,* implements both this {@link EventHandlerWithJacobians EventHandler} interface and the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,152,* {@link org.apache.commons.math.ode.sampling.FixedStepHandler FixedStepHandler}
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,153,"* interface, a <em>forward</em> integration may call its"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,154,* <code>eventOccurred</code> method with t = 10 first and call its
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,155,* <code>handleStep</code> method with t = 9 afterwards. Such out of order
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,156,* calls are limited to the size of the integration step for {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,157,* org.apache.commons.math.ode.sampling.StepHandler variable step handlers} and
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,158,* to the size of the fixed step for {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,159,* org.apache.commons.math.ode.sampling.FixedStepHandler fixed step handlers}.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,161,* @param t current value of the independent <i>time</i> variable
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,162,* @param y array containing the current value of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,163,* @param dydy0 array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,164,* the state vector with respect to initial state
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,165,* @param dydp array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,166,* the state vector with respect to parameters
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,167,"* @param increasing if true, the value of the switching function increases"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,168,* when times increases around event (note that increase is measured with respect
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,169,"* to physical time, not with respect to integration which may go backward in time)"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,170,"* @return indication of what the integrator should do next, this"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,171,"* value must be one of {@link #STOP}, {@link #RESET_STATE},"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,172,* {@link #RESET_DERIVATIVES} or {@link #CONTINUE}
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,173,* @exception EventException if the event occurrence triggers an error
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,175,"int eventOccurred(double t, double[] y, double[][] dydy0, double[][] dydp,"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,176,boolean increasing) throws EventException;
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,178,/** Reset the state prior to continue the integration.
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,180,* <p>This method is called after the step handler has returned and
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,181,"* before the next step is started, but only when {@link"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,182,* #eventOccurred} has itself returned the {@link #RESET_STATE}
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,183,* indicator. It allows the user to reset the state vector for the
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,184,"* next step, without perturbing the step handler of the finishing"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,185,* step. If the {@link #eventOccurred} never returns the {@link
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,186,"* #RESET_STATE} indicator, this function will never be called, and it is"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,187,* safe to leave its body empty.</p>
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,189,* @param t current value of the independent <i>time</i> variable
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,190,* @param y array containing the current value of the state vector
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,191,* the new state should be put in the same array
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,192,* @param dydy0 array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,193,"* the state vector with respect to initial state, the new jacobian"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,194,* should be put in the same array
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,195,* @param dydp array containing the current value of the jacobian of
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,196,"* the state vector with respect to parameters, the new jacobian"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,197,* should be put in the same array
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,198,* @exception EventException if the state cannot be reseted
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,200,"void resetState(double t, double[] y, double[][] dydy0, double[][] dydp)"
True,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java,201,throws EventException;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,33,import org.apache.commons.math.ode.events.EventException;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,34,import org.apache.commons.math.ode.events.EventHandler;
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,133,/ preserve the handlers we did not add ourselves
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,134,inal Collection<StepHandler> otherHandlers = new ArrayList<StepHandler>();
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,135,or (final StepHandler handler : integrator.getStepHandlers()) {
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,136,f (!(handler instanceof StepHandlerWrapper)) {
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,137,therHandlers.add(handler);
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,141,/ clear all handlers
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,137,/** Add an event handler to the integrator.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,138,* @param handler event handler
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,139,* @param maxCheckInterval maximal time interval between switching
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,140,* function checks (this interval prevents missing sign changes in
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,141,* case the integration steps becomes very large)
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,142,* @param convergence convergence threshold in the event time search
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,143,* @param maxIterationCount upper limit of the iteration count in
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,144,* the event time search
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,145,* @see #getEventHandlers()
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,146,* @see #clearEventHandlers()
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,148,"public void addEventHandler(EventHandlerWithJacobians handler,"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,149,"double maxCheckInterval,"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,150,"double convergence,"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,151,int maxIterationCount) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,152,"integrator.addEventHandler(new EventHandlerWrapper(handler),"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,153,"maxCheckInterval, convergence, maxIterationCount);"
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,144,/ put back the preserved handlers
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,145,or (final StepHandler handler : otherHandlers) {
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,146,ntegrator.addStepHandler(handler);
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,156,/** Get all the event handlers that have been added to the integrator.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,157,* @return an unmodifiable collection of the added events handlers
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,158,"* @see #addEventHandler(EventHandlerWithJacobians, double, double, int)"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,159,* @see #clearEventHandlers()
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,161,public Collection<EventHandlerWithJacobians> getEventHandlers() {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,162,final Collection<EventHandlerWithJacobians> handlers =
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,163,new ArrayList<EventHandlerWithJacobians>();
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,164,for (final EventHandler handler : integrator.getEventHandlers()) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,165,if (handler instanceof EventHandlerWrapper) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,166,handlers.add(((EventHandlerWrapper) handler).getHandler());
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,169,return handlers;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,172,/** Remove all the event handlers that have been added to the integrator.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,173,"* @see #addEventHandler(EventHandlerWithJacobians, double, double, int)"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,174,* @see #getEventHandlers()
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,176,public void clearEventHandlers() {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,177,integrator.clearEventHandlers();
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,249,"dispatchCompoundState(z, y, dYdY0, dYdP);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,251,return stopTime;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,255,/** Dispatch a compound state array into state and jacobians arrays.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,256,* @param z compound state
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,257,* @param y raw state array to fill
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,258,* @param dydy0 jacobian array to fill
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,259,* @param dydp jacobian array to fill
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,261,"private static void dispatchCompoundState(final double[] z, final double[] y,"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,262,"final double[][] dydy0, final double[][] dydp) {"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,264,final int n = y.length;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,265,final int k = dydp[0].length;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,267,// state
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,270,// jacobian with respect to initial state
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,222,"ystem.arraycopy(z, n * (i + 1), dYdY0[i], 0, n);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,272,"System.arraycopy(z, n * (i + 1), dydy0[i], 0, n);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,275,// jacobian with respect to parameters
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,225,"ystem.arraycopy(z, n * (n + 1) + i * k, dYdP[i], 0, k);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,277,"System.arraycopy(z, n * (n + 1) + i * k, dydp[i], 0, k);"
False,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,228,eturn stopTime;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,820,/** Wrapper for event handlers. */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,821,private class EventHandlerWrapper implements EventHandler {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,823,/** Underlying event handler with jacobians. */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,824,private final EventHandlerWithJacobians handler;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,826,/** State array. */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,827,private double[] y;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,829,/** Jacobian with respect to initial state dy/dy0. */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,830,private double[][] dydy0;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,832,/** Jacobian with respect to parameters dy/dp. */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,833,private double[][] dydp;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,835,/** Simple constructor.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,836,* @param handler underlying event handler with jacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,838,public EventHandlerWrapper(final EventHandlerWithJacobians handler) {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,839,this.handler = handler;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,840,final int n = ode.getDimension();
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,841,final int k = ode.getParametersDimension();
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,842,y        = new double[n];
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,843,dydy0    = new double[n][n];
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,844,dydp     = new double[n][k];
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,847,/** Get the underlying event handler with jacobians.
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,848,* @return underlying event handler with jacobians
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,850,public EventHandlerWithJacobians getHandler() {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,851,return handler;
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,854,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,855,"public int eventOccurred(double t, double[] z, boolean increasing)"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,856,throws EventException {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,857,"dispatchCompoundState(z, y, dydy0, dydp);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,858,"return handler.eventOccurred(t, y, dydy0, dydp, increasing);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,861,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,862,"public double g(double t, double[] z)"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,863,throws EventException {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,864,"dispatchCompoundState(z, y, dydy0, dydp);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,865,"return handler.g(t, y, dydy0, dydp);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,868,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,869,"public void resetState(double t, double[] z)"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,870,throws EventException {
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,871,"dispatchCompoundState(z, y, dydy0, dydp);"
True,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java,872,"handler.resetState(t, y, dydy0, dydp);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,245,@Test
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,246,"public void testEventHandler() throws IntegratorException, DerivativeException {"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,247,FirstOrderIntegrator integ =
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,248,"new DormandPrince54Integrator(1.0e-8, 100.0, 1.0e-10, 1.0e-10);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,249,"double[] y = new double[] { 0.0, 1.0 };"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,250,"final Circle circle = new Circle(y, 1.0, 1.0, 0.1);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,251,double[][] dydy0 = new double[2][2];
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,252,double[][] dydp  = new double[2][3];
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,253,double t = 18 * Math.PI;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,254,final FirstOrderIntegratorWithJacobians extInt =
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,255,"new FirstOrderIntegratorWithJacobians(integ, circle);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,256,extInt.addEventHandler(new EventHandlerWithJacobians() {
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,258,"public int eventOccurred(double t, double[] y, double[][] dydy0,"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,259,"double[][] dydp, boolean increasing) {"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,260,"Assert.assertEquals(0.1, y[1], 1.0e-11);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,261,Assert.assertTrue(!increasing);
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,262,return STOP;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,265,"public double g(double t, double[] y, double[][] dydy0,"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,266,double[][] dydp) {
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,267,return y[1] - 0.1;
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,270,"public void resetState(double t, double[] y, double[][] dydy0,"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,271,double[][] dydp) {
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,273,"}, 10.0, 1.0e-10, 1000);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,274,"double stopTime = extInt.integrate(0, y, circle.exactDyDp(0), t, y, dydy0, dydp);"
True,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java,275,Assert.assertTrue(stopTime < 5.0 * Math.PI);
