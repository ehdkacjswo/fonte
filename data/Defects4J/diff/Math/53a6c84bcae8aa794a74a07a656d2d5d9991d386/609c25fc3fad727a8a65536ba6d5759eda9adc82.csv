is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,20,import java.io.IOException;
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,470,"public void doTestStRD(final StatisticalReferenceDataset dataset,"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,471,"final double errParams, final double errParamsSd) {"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,472,final AbstractLeastSquaresOptimizer optimizer = createOptimizer();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,473,final double[] w = new double[dataset.getNumObservations()];
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,474,"Arrays.fill(w, 1.0);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,476,final double[][] data = dataset.getData();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,477,final double[] initial = dataset.getStartingPoint(0);
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,478,final DifferentiableMultivariateVectorFunction problem;
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,479,problem = dataset.getLeastSquaresProblem();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,480,final PointVectorValuePair optimum;
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,481,"optimum = optimizer.optimize(100, problem, data[1], w, initial);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,483,final double[] actual = optimum.getPoint();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,484,final double[] actualSig = optimizer.guessParametersErrors();
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,485,for (int i = 0; i < actual.length; i++) {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,486,double expected = dataset.getParameter(i);
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,487,double delta = FastMath.abs(errParams * expected);
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,488,"Assert.assertEquals(dataset.getName() + "", param #"" + i,"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,489,"expected, actual[i], delta);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,490,expected = dataset.getParameterStandardDeviation(i);
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,491,delta = FastMath.abs(errParamsSd * expected);
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,492,"Assert.assertEquals(dataset.getName() + "", sd of param #"" + i,"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,493,"expected, actualSig[i], delta);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,497,@Test
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,498,public void testKirby2() throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,499,"doTestStRD(StatisticalReferenceDatasetFactory.createKirby2(), 1E-7, 1E-7);"
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,502,@Test
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,503,public void testHahn1() throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java,504,"doTestStRD(StatisticalReferenceDatasetFactory.createHahn1(), 1E-7, 1E-4);"
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,20,import java.io.IOException;
False,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,134, This test does not converge with this optimizer
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,136,* This test does not converge with this optimizer.
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,141,@Override
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,142,@Test(expected = ConvergenceException.class)
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,143,public void testHahn1()
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,144,throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,146,* TODO This test leads to a singular problem with the Gauss-Newton
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,147,* optimizer. This should be inquired.
True,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizerTest.java,149,super.testHahn1();
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,155,public static StatisticalReferenceDataset createLanczos1()
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,156,throws IOException {
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,157,final BufferedReader in =
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,158,"createBufferedReaderFromResource(""Lanczos1.dat"");"
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,159,StatisticalReferenceDataset dataset = null;
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,160,try {
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,161,dataset = new StatisticalReferenceDataset(in) {
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,163,@Override
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,164,"public double getModelValue(final double x, final double[] a) {"
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,165,"System.out.println(a[0]+"", ""+a[1]+"", ""+a[2]+"", ""+a[3]+"", ""+a[4]+"", ""+a[5]);"
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,166,return a[0] * FastMath.exp(-a[3] * x) +
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,167,a[1] * FastMath.exp(-a[4] * x) +
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,168,a[2] * FastMath.exp(-a[5] * x);
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,171,@Override
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,172,"public double[] getModelDerivatives(final double x,"
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,173,final double[] a) {
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,174,final double[] dy = new double[6];
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,175,dy[0] = FastMath.exp(-x * a[3]);
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,176,dy[1] = FastMath.exp(-x * a[4]);
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,177,dy[2] = FastMath.exp(-x * a[5]);
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,178,dy[3] = -x * a[0] * dy[0];
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,179,dy[4] = -x * a[1] * dy[1];
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,180,dy[5] = -x * a[2] * dy[2];
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,181,return dy;
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,184,} finally {
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,185,in.close();
True,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java,187,return dataset;
