is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,54," to this distribution, this method returns {@code P(X < x)}.  In other"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,54,"* to this distribution, this method returns {@code P(X <= x)}.  In other"
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,73, {@code P(x0 < X < x1)}.
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,73,* {@code P(x0 <= X <= x1)}.
False,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,102," to this distribution, this method returns {@code P(X < x)}. In other"
True,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java,102,"* to this distribution, this method returns {@code P(X <= x)}. In other"
False,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,103," For this distribution, {@code X}, this method returns {@code P(X < x)}."
True,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java,103,"* For this distribution, {@code X}, this method returns {@code P(X <= x)}."
False,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,90," For this distribution, {@code X}, this method returns {@code P(X < x)}."
True,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java,90,"* For this distribution, {@code X}, this method returns {@code P(X <= x)}."
False,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,40," to this distribution, this method returns {@code P(X < x)}.  In other"
True,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,40,"* to this distribution, this method returns {@code P(X <= x)}.  In other"
False,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,53, {@code P(x0 < X < x1)}.
True,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,53,* {@code P(x0 <= X <= x1)}.
False,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,66, {@code x} such that {@code P(X < x) <= p}.
True,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,66,* {@code x} such that {@code P(X <= x) <= p}.
False,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,76,"   {@code P(X < M) = 1}, then {@code M} is returned by"
True,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java,76,"*   {@code P(X <= M) = 1}, then {@code M} is returned by"
False,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,103," For this distribution, {@code X}, this method returns {@code P(X < x)}."
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,103,"* For this distribution, {@code X}, this method returns {@code P(X <= x)}."
False,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,143," {@code x}, such that {@code P(X < x) p}."
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,143,"* {@code x}, such that {@code P(X <= x) <= p}."
False,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,147, @return the largest {@code x} such that {@code P(X < x) <= p}.
True,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java,147,* @return the largest {@code x} such that {@code P(X <= x) <= p}.
