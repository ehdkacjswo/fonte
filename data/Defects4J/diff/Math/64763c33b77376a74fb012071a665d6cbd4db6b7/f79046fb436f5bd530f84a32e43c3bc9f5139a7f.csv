is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,28,import org.apache.commons.math3.util.FastMath;
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,61,"   <li>step size = 1.0e-6, second order derivative error about 56.25</li>"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,62,"   <li>step size = 1.0e-6, fourth order derivative error about 2.47e+14</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,62,"*   <li>step size = 1.0e-6, second order derivative error about 148</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,63,"*   <li>step size = 1.0e-6, fourth order derivative error about 6.35e+14</li>"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,81,rivate double stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,82,private final double stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,84,/** Half sample span. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,85,private final double halfSampleSpan;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,87,/** Lower bound for independent variable. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,88,private final double tMin;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,90,/** Upper bound for independent variable. */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,91,private final double tMax;
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,84, Build a differentiator with number of points and step size.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,94,* Build a differentiator with number of points and step size when independent variable is unbounded.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,109,"this(nbPoints, stepSize, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,113,* Build a differentiator with number of points and step size when independent variable is bounded.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,114,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,115,"* When the independent variable is bounded (tLower &lt; t &lt; tUpper), the sampling"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,116,* points used for differentiation will be adapted to ensure the constraint holds
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,117,* even near the boundaries. This means the sample will not be centered anymore in
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,118,"* these cases. At an extreme case, computing derivatives exactly at the lower bound"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,119,* will lead the sample to be entirely on the right side of the derivation point.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,120,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,121,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,122,* Note that the boundaries are considered to be excluded for function evaluation.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,123,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,124,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,125,* Beware that wrong settings for the finite differences differentiator
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,126,"* can lead to highly unstable and inaccurate results, especially for"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,127,* high derivation orders. Using very small step sizes is often a
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,128,* <em>bad</em> idea.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,129,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,130,* @param nbPoints number of points to use
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,131,* @param stepSize step size (gap between each point)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,132,* @param tLower lower bound for independent variable (may be {@code Double.NEGATIVE_INFINITY}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,133,* if there are no lower bounds)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,134,* @param tUpper upper bound for independent variable (may be {@code Double.POSITIVE_INFINITY}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,135,* if there are no upper bounds)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,136,* @exception NotPositiveException if {@code stepsize <= 0} (note that
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,137,* {@link NotPositiveException} extends {@link NumberIsTooSmallException})
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,138,* @exception NumberIsTooSmallException {@code nbPoint <= 1}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,139,* @exception NumberIsTooLargeException {@code stepSize * (nbPoints - 1) >= tUpper - tLower}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,141,"public FiniteDifferencesDifferentiator(final int nbPoints, final double stepSize,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,142,"final double tLower, final double tUpper)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,143,"throws NotPositiveException, NumberIsTooSmallException, NumberIsTooLargeException {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,155,halfSampleSpan = 0.5 * stepSize * (nbPoints - 1);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,156,if (2 * halfSampleSpan >= tUpper - tLower) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,157,"throw new NumberIsTooLargeException(2 * halfSampleSpan, tUpper - tLower, false);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,159,final double safety = FastMath.ulp(halfSampleSpan);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,160,this.tMin = tLower + halfSampleSpan + safety;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,161,this.tMax = tUpper - halfSampleSpan - safety;
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,129, Evaluate derivatives from a centered sample.
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,130, @param t central value and derivatives
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,131, @param y function values at {@code t + stepSize * (i - 0.5 * (nbPoints - 1))}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,182,* Evaluate derivatives from a sample.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,183,* <p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,184,* Evaluation is done using divided differences.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,185,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,186,* @param te evaluation abscissa value and derivatives
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,187,* @param t0 first sample point abscissa
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,188,* @param y function values sample {@code y[i] = f(t[i]) = f(t0 + i * stepSize)}
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,136,"rivate DerivativeStructure evaluate(final DerivativeStructure t, final double[] y)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,193,"private DerivativeStructure evaluate(final DerivativeStructure t, final double t0,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,194,final double[] y)
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,157,inal int order      = t.getOrder();
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,158,inal int parameters = t.getFreeParameters();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,215,final int order            = t.getOrder();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,216,final int parameters       = t.getFreeParameters();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,218,final double dt0           = t.getValue() - t0;
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,161,"erivativeStructure monomial      = new DerivativeStructure(parameters, order, 1.0);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,220,DerivativeStructure monomial = null;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,222,if (i == 0) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,223,// start with monomial(t) = 1
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,224,"monomial = new DerivativeStructure(parameters, order, 1.0);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,225,} else {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,226,// monomial(t) = (t - t0) * (t - t1) * ... * (t - t(i-1))
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,227,derivatives[0] = dt0 - (i - 1) * stepSize;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,228,"final DerivativeStructure deltaX = new DerivativeStructure(parameters, order, derivatives);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,229,monomial = monomial.multiply(deltaX);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,164,erivatives[0] = stepSize * (0.5 * (nbPoints - 1) - i);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,165,"inal DerivativeStructure deltaX = new DerivativeStructure(parameters, order, derivatives);"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,166,onomial = monomial.multiply(deltaX);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,196,/ get sample points centered around t value
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,197,inal double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,261,"// compute sample position, trying to be centered if possible"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,262,"final double t0 = FastMath.max(FastMath.min(t.getValue(), tMax), tMin) - halfSampleSpan;"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,264,// compute sample points
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,200,inal double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,201,[i] = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,267,y[i] = function.value(t0 + i * stepSize);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,205,"eturn evaluate(t, y);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,271,"return evaluate(t, t0, y);"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,235,/ get sample points centered around t value
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,236,inal double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,301,"// compute sample position, trying to be centered if possible"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,302,"final double t0 = FastMath.max(FastMath.min(t.getValue(), tMax), tMin) - halfSampleSpan;"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,304,// compute sample points
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,239,inal double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,240,inal double[] v = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,307,final double[] v = function.value(t0 + i * stepSize);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,252,"alue[j] = evaluate(t, y[j]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,319,"value[j] = evaluate(t, t0, y[j]);"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,285,/ get sample points centered around t value
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,286,inal double t0 = t.getValue();
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,352,"// compute sample position, trying to be centered if possible"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,353,"final double t0 = FastMath.max(FastMath.min(t.getValue(), tMax), tMin) - halfSampleSpan;"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,355,// compute sample points
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,289,inal double xi = t0 + stepSize * (i - 0.5 * (nbPoints - 1));
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,290,inal double[][] v = function.value(xi);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,358,final double[][] v = function.value(t0 + i * stepSize);
False,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,305,"alue[j][k] = evaluate(t, y[j][k]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,src/main/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator.java,373,"value[j][k] = evaluate(t, t0, y[j][k]);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,90,"ssert.assertEquals(2 - 3 * x, y.getValue(), 1.0e-20);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,90,"Assert.assertEquals("""" + (2 - 3 * x - y.getValue()), 2 - 3 * x, y.getValue(), 2.0e-15);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,92,"ssert.assertEquals( 0.0, y.getPartialDerivative(2), 5.0e-11);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,92,"Assert.assertEquals( 0.0, y.getPartialDerivative(2), 9.0e-11);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,104,".776e-17, 1.742e-15, 2.385e-13, 1.329e-11, 2.668e-9, 8.873e-8"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,104,"6.939e-18, 1.284e-15, 2.477e-13, 1.168e-11, 2.840e-9, 7.971e-8"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,155,".792e-22, 6.926e-5, 56.25, 1.783e8, 2.468e14, 3.056e20, 5.857e26"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,155,"2.910e-11, 2.087e-5, 147.7, 3.820e7, 6.354e14, 6.548e19, 1.543e27"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,204,@Test(expected=NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,205,public void testTooLargeStep() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,206,"new FiniteDifferencesDifferentiator(3, 2.5, 0.0, 1.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,209,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,210,public void testBounds() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,212,final double slope = 2.5;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,213,UnivariateFunction f = new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,214,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,215,if (x < 0) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,216,"throw new NumberIsTooSmallException(x, 0, true);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,217,} else if (x > 1) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,218,"throw new NumberIsTooLargeException(x, 1, true);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,219,} else {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,220,return slope * x;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,225,UnivariateDifferentiableFunction missingBounds =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,226,"new FiniteDifferencesDifferentiator(3, 0.1).differentiate(f);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,227,UnivariateDifferentiableFunction properlyBounded =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,228,"new FiniteDifferencesDifferentiator(3, 0.1, 0.0, 1.0).differentiate(f);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,229,"DerivativeStructure tLow  = new DerivativeStructure(1, 1, 0, 0.05);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,230,"DerivativeStructure tHigh = new DerivativeStructure(1, 1, 0, 0.95);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,232,try {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,233,"// here, we did not set the bounds, so the differences are evaluated out of domain"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,234,"// using f(-0.05), f(0.05), f(0.15)"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,235,missingBounds.value(tLow);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,236,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,237,} catch (NumberIsTooSmallException nse) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,238,"Assert.assertEquals(-0.05, nse.getArgument().doubleValue(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,239,} catch (Exception e) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,240,"Assert.fail(""wrong exception caught: "" + e.getClass().getName());"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,243,try {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,244,"// here, we did not set the bounds, so the differences are evaluated out of domain"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,245,"// using f(0.85), f(0.95), f(1.05)"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,246,missingBounds.value(tHigh);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,247,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,248,} catch (NumberIsTooLargeException nle) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,249,"Assert.assertEquals(1.05, nle.getArgument().doubleValue(), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,250,} catch (Exception e) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,251,"Assert.fail(""wrong exception caught: "" + e.getClass().getName());"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,254,"// here, we did set the bounds, so evaluations are done within domain"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,255,"// using f(0.0), f(0.1), f(0.2)"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,256,"Assert.assertEquals(slope, properlyBounded.value(tLow).getPartialDerivative(1), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,258,"// here, we did set the bounds, so evaluations are done within domain"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,259,"// using f(0.8), f(0.9), f(1.0)"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,260,"Assert.assertEquals(slope, properlyBounded.value(tHigh).getPartialDerivative(1), 1.0e-10);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,264,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,265,public void testBoundedSqrt() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,267,UnivariateFunctionDifferentiator differentiator =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,268,"new FiniteDifferencesDifferentiator(9, 1.0 / 32, 0.0, Double.POSITIVE_INFINITY);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,269,UnivariateDifferentiableFunction sqrt = differentiator.differentiate(new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,270,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,271,return FastMath.sqrt(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,275,"// we are able to compute derivative near 0, but the accuracy is much poorer there"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,276,"DerivativeStructure t001 = new DerivativeStructure(1, 1, 0, 0.01);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,277,"Assert.assertEquals(0.5 / FastMath.sqrt(t001.getValue()), sqrt.value(t001).getPartialDerivative(1), 1.6);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,278,"DerivativeStructure t01 = new DerivativeStructure(1, 1, 0, 0.1);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,279,"Assert.assertEquals(0.5 / FastMath.sqrt(t01.getValue()), sqrt.value(t01).getPartialDerivative(1), 7.0e-3);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,280,"DerivativeStructure t03 = new DerivativeStructure(1, 1, 0, 0.3);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,281,"Assert.assertEquals(0.5 / FastMath.sqrt(t03.getValue()), sqrt.value(t03).getPartialDerivative(1), 2.1e-7);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,222,"ssert.assertEquals(cos, y[0].getValue(), 2.0e-16);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,223,"ssert.assertEquals(sin, y[1].getValue(), 2.0e-16);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,224,"ssert.assertEquals(-sin, y[0].getPartialDerivative(1), 5.0e-14);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,225,"ssert.assertEquals( cos, y[1].getPartialDerivative(1), 5.0e-14);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,226,"ssert.assertEquals(-cos, y[0].getPartialDerivative(2), 6.0e-12);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,227,"ssert.assertEquals(-sin, y[1].getPartialDerivative(2), 6.0e-12);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,303,"Assert.assertEquals( cos, y[0].getValue(), 7.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,304,"Assert.assertEquals( sin, y[1].getValue(), 7.0e-16);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,305,"Assert.assertEquals(-sin, y[0].getPartialDerivative(1), 6.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,306,"Assert.assertEquals( cos, y[1].getPartialDerivative(1), 6.0e-14);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,307,"Assert.assertEquals(-cos, y[0].getPartialDerivative(2), 2.0e-11);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,308,"Assert.assertEquals(-sin, y[1].getPartialDerivative(2), 2.0e-11);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,256,"ssert.assertEquals(sin,   y[0][1].getValue(), 7.0e-18);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,337,"Assert.assertEquals(sin,   y[0][1].getValue(), 6.0e-17);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,279,".110e-16, 2.66e-12, 4.803e-9, 5.486e-5"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,360,"6.696e-16, 1.371e-12, 2.007e-8, 1.754e-5"
