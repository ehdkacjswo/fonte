is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,25,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,26,import org.apache.commons.math3.exception.NotPositiveException;
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,529,ublic FieldVector<T> mapDivide(T d) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,531,public FieldVector<T> mapDivide(T d)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,532,"throws NullArgumentException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,533,if (d == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,534,throw new NullArgumentException();
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,538,ublic FieldVector<T> mapDivideToSelf(T d) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,544,public FieldVector<T> mapDivideToSelf(T d)
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,545,"throws NullArgumentException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,546,if (d == null) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,547,throw new NullArgumentException();
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,546,ublic FieldVector<T> mapInv() {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,556,public FieldVector<T> mapInv() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,550,ut[i] = one.divide(data[i]);
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,560,try {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,561,out[i] = one.divide(data[i]);
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,562,} catch (final MathArithmeticException e) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,563,"throw new MathArithmeticException(LocalizedFormats.ENTRY, i);"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,556,ublic FieldVector<T> mapInvToSelf() {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,570,public FieldVector<T> mapInvToSelf() throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,559,ata[i] = one.divide(data[i]);
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,573,try {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,574,data[i] = one.divide(data[i]);
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,575,} catch (final MathArithmeticException e) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,576,"throw new MathArithmeticException(LocalizedFormats.ENTRY, i);"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,598,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,616,"throws DimensionMismatchException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,605,ut[i] = data[i].divide(v.getEntry(i));
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,623,try {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,624,out[i] = data[i].divide(v.getEntry(i));
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,625,} catch (final MathArithmeticException e) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,626,"throw new MathArithmeticException(LocalizedFormats.ENTRY, i);"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,639,* @throws MathArithmeticException if one entry of {@code v} is zero.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,619,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,642,"throws DimensionMismatchException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,646,try {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,648,} catch (final MathArithmeticException e) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,649,"throw new MathArithmeticException(LocalizedFormats.ENTRY, i);"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,676,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,703,"throws DimensionMismatchException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,712,* @throws MathArithmeticException if {@code v} is the null vector.
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,687,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,715,"throws DimensionMismatchException, MathArithmeticException {"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,762,"ublic FieldVector<T> getSubVector(int index, int n) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,790,"public FieldVector<T> getSubVector(int index, int n)"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,791,"throws OutOfRangeException, NotPositiveException {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,792,if (n < 0) {
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,793,"throw new NotPositiveException(LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE, n);"
False,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,783,"ublic void setSubVector(int index, FieldVector<T> v) {"
True,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java,815,"public void setSubVector(int index, FieldVector<T> v) throws OutOfRangeException {"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,22,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,24,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,132,* @throws NullArgumentException if {@code d} is {@code null}.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,133,* @throws MathArithmeticException if {@code d} is zero.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,131,ieldVector<T> mapDivide(T d);
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,135,FieldVector<T> mapDivide(T d)
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,136,"throws NullArgumentException, MathArithmeticException;"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,143,* @throws NullArgumentException if {@code d} is {@code null}.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,144,* @throws MathArithmeticException if {@code d} is zero.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,139,ieldVector<T> mapDivideToSelf(T d);
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,146,FieldVector<T> mapDivideToSelf(T d)
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,147,"throws NullArgumentException, MathArithmeticException;"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,143, @return a vector containing the result of applying the function to each entry
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,151,* @return a vector containing the result of applying the function to each
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,152,* entry.
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,153,* @throws MathArithmeticException if one of the entries is zero.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,145,ieldVector<T> mapInv();
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,155,FieldVector<T> mapInv() throws MathArithmeticException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,161,* @throws MathArithmeticException if one of the entries is zero.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,152,ieldVector<T> mapInvToSelf();
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,163,FieldVector<T> mapInvToSelf() throws MathArithmeticException;
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,162,hrows DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,173,throws DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,181,* @throws MathArithmeticException if one entry of {@code v} is zero.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,172,hrows DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,184,"throws DimensionMismatchException, MathArithmeticException;"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,206,* @throws MathArithmeticException if {@code v} is the null vector.
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,195,ieldVector<T> projection(FieldVector<T> v) throws DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,208,FieldVector<T> projection(FieldVector<T> v)
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,209,"throws DimensionMismatchException, MathArithmeticException;"
False,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,252,"hrows OutOfRangeException, NotPositiveException;"
True,src/main/java/org/apache/commons/math3/linear/FieldVector.java,src/main/java/org/apache/commons/math3/linear/FieldVector.java,266,"throws OutOfRangeException, NotPositiveException;"
