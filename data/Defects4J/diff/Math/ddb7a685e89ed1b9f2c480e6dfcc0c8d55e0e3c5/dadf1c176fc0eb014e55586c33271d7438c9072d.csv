is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,29, @version $Revision: 1.5 $
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,29,* @version $Revision: 1.6 $
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,34,/ all values are known precisely accept 15 digit precision error
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,35,inal double error = 1.0e-15;
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,34,/** Error tolerance for tests */
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,35,protected double tolerance = 1.0e-12;
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,47,"ssertEquals( f.value( 0.0), c[0], error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,48,"ssertEquals( f.value( -1.0), c[0], error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,49,"ssertEquals( f.value( -123.5), c[0], error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,50,"ssertEquals( f.value( 3.0), c[0], error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,51,"ssertEquals( f.value( 456.89), c[0], error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,47,"assertEquals( f.value( 0.0), c[0], tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,48,"assertEquals( f.value( -1.0), c[0], tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,49,"assertEquals( f.value( -123.5), c[0], tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,50,"assertEquals( f.value( 3.0), c[0], tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,51,"assertEquals( f.value( 456.89), c[0], tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,54,"ssertEquals(f.firstDerivative(0), 0, error);"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,54,"assertEquals(f.derivative().value(0), 0, tolerance);"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,56,"ssertEquals(f.secondDerivative(0), 0, error);"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,56,"assertEquals(f.polynomialDerivative().derivative().value(0), 0, tolerance);"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,73,"ssertEquals( f.value( 0.0), c[0], error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,73,"assertEquals( f.value( 0.0), c[0], tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,76,"ssertEquals( -4.5, f.value( -1.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,77,"ssertEquals( -9.0, f.value( -2.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,78,"ssertEquals( 0.0, f.value( 0.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,79,"ssertEquals( 3.0, f.value( 1.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,80,"ssertEquals( 7.5, f.value( 3.0), error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,76,"assertEquals( -4.5, f.value( -1.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,77,"assertEquals( -9.0, f.value( -2.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,78,"assertEquals( 0.0, f.value( 0.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,79,"assertEquals( 3.0, f.value( 1.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,80,"assertEquals( 7.5, f.value( 3.0), tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,84,"ssertEquals(f.secondDerivative(0), 0, error);"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,84,"assertEquals(f.polynomialDerivative().derivative().value(0), 0, tolerance);"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,99,"ssertEquals( f.value( 0.0), c[0], error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,99,"assertEquals( f.value( 0.0), c[0], tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,102,"ssertEquals( 0.0, f.value( -0.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,103,"ssertEquals( 0.0, f.value( 2.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,104,"ssertEquals( -2.0, f.value( 1.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,105,"ssertEquals( 7.0, f.value( -1.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,106,"ssertEquals( 265.5312, f.value( 12.34), error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,102,"assertEquals( 0.0, f.value( -0.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,103,"assertEquals( 0.0, f.value( 2.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,104,"assertEquals( -2.0, f.value( 1.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,105,"assertEquals( 7.0, f.value( -1.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,106,"assertEquals( 265.5312, f.value( 12.34), tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,121,"ssertEquals( f.value( 0.0), c[0], error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,121,"assertEquals( f.value( 0.0), c[0], tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,124,"ssertEquals( 0.0, f.value( 5.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,125,"ssertEquals( 0.0, f.value( 1.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,126,"ssertEquals( 0.0, f.value( -3.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,127,"ssertEquals( 54.84375, f.value( -1.5), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,128,"ssertEquals( -8.06637, f.value( 1.3), error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,124,"assertEquals( 0.0, f.value( 5.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,125,"assertEquals( 0.0, f.value( 1.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,126,"assertEquals( 0.0, f.value( -3.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,127,"assertEquals( 54.84375, f.value( -1.5), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,128,"assertEquals( -8.06637, f.value( 1.3), tolerance );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,152,"ssertEquals( f.firstDerivative(0.0), g.value(0.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,153,"ssertEquals( f.firstDerivative(1.0), g.value(1.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,154,"ssertEquals( f.firstDerivative(100.0), g.value(100.0), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,155,"ssertEquals( f.firstDerivative(4.1), g.value(4.1), error );"
False,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,156,"ssertEquals( f.firstDerivative(-3.25), g.value(-3.25), error );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,152,"assertEquals( f.derivative().value(0.0), g.value(0.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,153,"assertEquals( f.derivative().value(1.0), g.value(1.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,154,"assertEquals( f.derivative().value(100.0), g.value(100.0), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,155,"assertEquals( f.derivative().value(4.1), g.value(4.1), tolerance );"
True,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,src/test/org/apache/commons/math/analysis/PolynomialFunctionTest.java,156,"assertEquals( f.derivative().value(-3.25), g.value(-3.25), tolerance );"
