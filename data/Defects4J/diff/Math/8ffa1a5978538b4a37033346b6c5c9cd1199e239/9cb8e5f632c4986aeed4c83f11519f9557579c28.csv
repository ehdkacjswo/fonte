is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,40,* Default inverse cumulative probability accurac
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,41,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,43,public static final double DEFAULT_INVERSE_ABSOLUTE_ACCURACY = 1e-9;
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,59,/** Inverse cumulative probability accuracy */
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,60,private final double solverAbsoluteAccuracy;
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,66,* @param inverseCumAccuracy the maximum absolute error in inverse cumulative probability estimates
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,67,* (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY})
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,68,* @since 2.1
False,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,58,"ublic BetaDistributionImpl(double alpha, double beta) {"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,70,"public BetaDistributionImpl(double alpha, double beta, double inverseCumAccuracy) {"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,74,solverAbsoluteAccuracy = inverseCumAccuracy;
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,78,* Build a new instance.
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,79,* @param alpha first shape parameter (must be positive)
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,80,* @param beta second shape parameter (must be positive)
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,82,"public BetaDistributionImpl(double alpha, double beta) {"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,83,"this(alpha, beta, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);"
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,212,* Return the absolute accuracy setting of the solver used to estimate
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,213,* inverse cumulative probabilities.
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,215,* @return the solver absolute accuracy
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,216,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,218,@Override
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,219,protected double getSolverAbsoluteAccuracy() {
True,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java,220,return solverAbsoluteAccuracy;
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,35,* Default inverse cumulative probability accuracy
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,36,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,38,public static final double DEFAULT_INVERSE_ABSOLUTE_ACCURACY = 1e-9;
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,49,/** Inverse cumulative probability accuracy */
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,50,private final double solverAbsoluteAccuracy;
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,66,"this(median, s, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);"
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,70,* Create a cauchy distribution using the given median and scale.
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,71,* @param median median for this distribution
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,72,* @param s scale parameter for this distribution
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,73,* @param inverseCumAccuracy the maximum absolute error in inverse cumulative probability estimates
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,74,* (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY})
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,75,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,77,"public CauchyDistributionImpl(double median, double s, double inverseCumAccuracy) {"
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,81,solverAbsoluteAccuracy = inverseCumAccuracy;
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,258,* Return the absolute accuracy setting of the solver used to estimate
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,259,* inverse cumulative probabilities.
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,261,* @return the solver absolute accuracy
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,262,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,264,@Override
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,265,protected double getSolverAbsoluteAccuracy() {
True,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java,266,return solverAbsoluteAccuracy;
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,33,* Default inverse cumulative probability accuracy
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,34,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,36,public static final double DEFAULT_INVERSE_ABSOLUTE_ACCURACY = 1e-9;
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,44,/** Inverse cumulative probability accuracy */
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,45,private final double solverAbsoluteAccuracy;
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,52,"this(mean, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);"
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,56,* Create a exponential distribution with the given mean.
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,57,* @param mean mean of this distribution.
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,58,* @param inverseCumAccuracy the maximum absolute error in inverse cumulative probability estimates
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,59,* (defaults to {@link #DEFAULT_INVERSE_ABSOLUTE_ACCURACY})
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,60,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,62,"public ExponentialDistributionImpl(double mean, double inverseCumAccuracy) {"
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,65,solverAbsoluteAccuracy = inverseCumAccuracy;
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,236,* Return the absolute accuracy setting of the solver used to estimate
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,237,* inverse cumulative probabilities.
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,239,* @return the solver absolute accuracy
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,240,* @since 2.1
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,242,@Override
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,243,protected double getSolverAbsoluteAccuracy() {
True,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java,244,return solverAbsoluteAccuracy;
