is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,175,** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,176,ublic DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,175,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,176,* @throws DimensionMismatchException if functions are not consistent with each other
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,178,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,179,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,421,"ublic static double[] sample(UnivariateFunction f,"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,422,"ouble min, double max, int n) {"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,424,"public static double[] sample(UnivariateFunction f, double min, double max, int n)"
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,425,"throws NumberIsTooLargeException, NotStrictlyPositiveException {"
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,612, @exception DimensionMismatchException if number of parameters or derivation
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,613, order are higher than 1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,615,* @exception NumberIsTooLargeException if derivation order is higher than 1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,616,* @exception DimensionMismatchException if numbers of free parameters are inconsistent
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,735, @exception DimensionMismatchException if number of parameters or derivation
False,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,736, order are higher than 1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,738,* @exception NumberIsTooLargeException if derivation order is higher than 1
True,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java,739,* @exception DimensionMismatchException if numbers of free parameters are inconsistent
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,25,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,26,import org.apache.commons.math3.exception.MathInternalError;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,27,import org.apache.commons.math3.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,160,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,159,"inal DSCompiler valueCompiler, final DSCompiler derivativeCompiler) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,163,"final DSCompiler valueCompiler, final DSCompiler derivativeCompiler)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,164,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,189,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,185,"ublic static DSCompiler getCompiler(int parameters, int order) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,191,"public static DSCompiler getCompiler(int parameters, int order)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,192,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,410,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,405,"inal DSCompiler valueCompiler,"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,406,"inal DSCompiler derivativeCompiler,"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,407,"inal int[][] sizes,"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,408,inal int[][] derivativesIndirection) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,413,"final DSCompiler valueCompiler,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,414,"final DSCompiler derivativeCompiler,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,415,"final int[][] sizes,"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,416,final int[][] derivativesIndirection)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,417,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,608,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,602,"inal int destP, final int destO, final int[][] destSizes) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,612,"final int destP, final int destO, final int[][] destSizes)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,613,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1744,* @throws MathArithmeticException if factorials becomes too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1734,"ublic double taylor(final double[] ds, final int dsOffset, final double ... delta) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1746,"public double taylor(final double[] ds, final int dsOffset, final double ... delta)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1747,throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1741,"erm *= FastMath.pow(delta[k], orders[k]) / ArithmeticUtils.factorial(orders[k]);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1754,try {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1755,"term *= FastMath.pow(delta[k], orders[k]) /"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1756,ArithmeticUtils.factorial(orders[k]);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1757,} catch (NotPositiveException e) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1758,// this cannot happen
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,1759,throw new MathInternalError(e);
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,25,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,84,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,84,"ublic DerivativeStructure(final int parameters, final int order) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,86,"public DerivativeStructure(final int parameters, final int order)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,87,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,95,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,94,"ublic DerivativeStructure(final int parameters, final int order, final double value) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,98,"public DerivativeStructure(final int parameters, final int order, final double value)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,99,throws NumberIsTooLargeException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,201,* @throws NumberIsTooLargeException if order is too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,199,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,205,"throws DimensionMismatchException, NumberIsTooLargeException {"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,272,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,278,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,279,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,280,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,286,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,295,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,296,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,297,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,309,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,321,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,322,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,323,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,327,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,342,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,343,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,344,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,343,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,361,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,362,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,363,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,415,ublic DerivativeStructure copySign(final double sign){
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,436,public DerivativeStructure copySign(final double sign) {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,445,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,466,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,467,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,468,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,503, @exception DimensionMismatchException if number of free parameters or orders are inconsistent
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,527,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,528,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,518,ublic DerivativeStructure compose(final double ... f) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,543,public DerivativeStructure compose(final double ... f)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,544,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,587,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,613,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,614,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,615,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,688, @exception DimensionMismatchException if number of free parameters or orders are inconsistent
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,717,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,718,* or orders do not match
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,792,* @throws MathArithmeticException if factorials becomes too large
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,763,ublic double taylor(final double ... delta) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,794,public double taylor(final double ... delta) throws MathArithmeticException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,767,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,798,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,799,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,800,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,795,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,829,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,830,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,831,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,819,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,856,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,857,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,858,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,821,"inal DerivativeStructure a2, final DerivativeStructure b2) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,861,"final DerivativeStructure a2, final DerivativeStructure b2)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,862,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,837,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,878,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,879,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,880,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,839,"inal double a2, final DerivativeStructure b2) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,883,"final double a2, final DerivativeStructure b2)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,884,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,855,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,900,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,901,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,902,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,858,"inal DerivativeStructure a3, final DerivativeStructure b3) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,906,"final DerivativeStructure a3, final DerivativeStructure b3)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,907,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,875,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,924,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,925,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,926,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,878,"inal double a3, final DerivativeStructure b3) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,930,"final double a3, final DerivativeStructure b3)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,931,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,895,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,948,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,949,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,950,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,899,"inal DerivativeStructure a4, final DerivativeStructure b4) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,955,"final DerivativeStructure a4, final DerivativeStructure b4)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,956,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,917,** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,974,/** {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,975,* @exception DimensionMismatchException if number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,976,* or orders do not match
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,921,"inal double a4, final DerivativeStructure b4) {"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,981,"final double a4, final DerivativeStructure b4)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,982,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,42,ublic double[] value(double[] point)
False,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,43,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/GradientFunction.java,42,public double[] value(double[] point) {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,44,ublic double[][] value(double[] point)
False,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,45,hrows IllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/JacobianFunction.java,44,public double[][] value(double[] point) {
False,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,20,mport org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,38, @exception MathIllegalArgumentException if {@code t} does not
False,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,39," fulfill functions constraints (argument out of bound, or unsupported"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,40, derivative order for example)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,38,* @exception DimensionMismatchException if t is inconsistent with
True,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,39,* function free parameters or order
False,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,42,erivativeStructure value(DerivativeStructure t) throws MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,41,DerivativeStructure value(DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java,42,throws DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,212,ublic DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,212,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,src/main/java/org/apache/commons/math3/analysis/function/Gaussian.java,213,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,165,ublic DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,165,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,src/main/java/org/apache/commons/math3/analysis/function/HarmonicOscillator.java,166,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,167,ublic DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,167,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java,168,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,25,import org.apache.commons.math3.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,108,ublic DerivativeStructure value(final DerivativeStructure t) {
True,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,109,public DerivativeStructure value(final DerivativeStructure t)
True,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,src/main/java/org/apache/commons/math3/analysis/function/Sinc.java,110,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,23,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,53, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
True,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,54,* @throws NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,62,"hrows NullArgumentException,"
False,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,63,"oDataException,"
False,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,64,imensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,63,"throws NullArgumentException, NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,src/main/java/org/apache/commons/math3/analysis/function/StepFunction.java,64,"DimensionMismatchException, NonMonotonicSequenceException {"
False,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,110,"inal double absoluteAccuracy,"
False,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,111,"inal int minimalIterationCount,"
False,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,112,inal int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,110,"final double absoluteAccuracy,"
True,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,111,"final int minimalIterationCount,"
True,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator.java,112,final int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,22,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,27,import org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,55, is not strictly positive.
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,57,* or number of points are not strictly positive.
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,66,umberOfPoints = n;
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,68,if (n <= 0) {
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,69,"throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_POINTS, n);"
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,71,numberOfPoints = n;
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,80,* @throws NotStrictlyPositiveException if {@code n < 1}.
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,78,inal double absoluteAccuracy) {
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,84,final double absoluteAccuracy)
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,85,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,100,* @throws NotStrictlyPositiveException if {@code n < 1}.
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,96,inal int maximalIterationCount) {
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,104,final int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,105,"throws NotStrictlyPositiveException, NumberIsTooSmallException {"
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,104,"hrows TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,113,"throws MathIllegalArgumentException, TooManyEvaluationsException, MaxCountExceededException {"
False,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,145,ublic double value(double x) {
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,154,public double value(double x)
True,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator.java,155,"throws MathIllegalArgumentException, TooManyEvaluationsException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,131,* @exception MathIllegalArgumentException if number of points is out of [2; 5]
False,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,141,"hrows NotStrictlyPositiveException, NumberIsTooSmallException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,142,"throws MathIllegalArgumentException, NotStrictlyPositiveException, NumberIsTooSmallException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,174,* @exception MathIllegalArgumentException if number of points is out of [2; 5]
False,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,176,inal double absoluteAccuracy) {
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,178,final double absoluteAccuracy)
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,179,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,189,* @exception MathIllegalArgumentException if number of points is out of [2; 5]
False,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,193,inal int maximalIterationCount) {
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,197,final int maximalIterationCount)
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,198,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,201,"hrows TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegrator.java,206,"throws MathIllegalArgumentException, TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,19,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,147,"hrows TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegrator.java,148,"throws MathIllegalArgumentException, TooManyEvaluationsException, MaxCountExceededException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,24,import org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,52,* @throws DimensionMismatchException if the elements of the rule pair do not
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,53,* have the same length.
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,53,hrows NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,56,"throws NotStrictlyPositiveException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,58,if (numberOfPoints <= 0) {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,59,"throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_POINTS,"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,60,numberOfPoints);
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,81, @throws NotStrictlyPositiveException if {@code numberOfPoints < 1}.
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,90,* @throws DimensionMismatchException if the elements of the rule pair do not
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,91,* have the same length.
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,84,hrows NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,94,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,101,"rotected void addRule(Pair<T[], T[]> rule) {"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,111,"protected void addRule(Pair<T[], T[]> rule) throws DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,125,* @throws DimensionMismatchException if the elements of the pair do not
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,126,* have the same length.
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,116,"rotected abstract Pair<T[], T[]> computeRule(int numberOfPoints);"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,128,"protected abstract Pair<T[], T[]> computeRule(int numberOfPoints)"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory.java,129,throws DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,48,* @throws DimensionMismatchException if points and weights don't have the same length
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,51,hrows NonMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegrator.java,52,"throws NonMonotonicSequenceException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,21,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,22,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,60,* @throws NotStrictlyPositiveException if number of points is not positive
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,61,ouble upperBound) {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,64,double upperBound)
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,65,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,78,* @throws NotStrictlyPositiveException if number of points is not positive
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,75,ublic GaussIntegrator legendreHighPrecision(int numberOfPoints) {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,80,public GaussIntegrator legendreHighPrecision(int numberOfPoints)
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,81,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,94,* @throws NotStrictlyPositiveException if number of points is not positive
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,91,ouble upperBound) {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,98,double upperBound)
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,99,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,108,* @throws NotStrictlyPositiveException if number of points is not positive
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,109,* @throws DimensionMismatchException if the elements of the rule pair do not
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,110,* have the same length.
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,102,nt numberOfPoints) {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,113,int numberOfPoints)
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/GaussIntegratorFactory.java,114,"throws NotStrictlyPositiveException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,19,mport java.math.MathContext;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,20,import java.math.MathContext;
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,22,import org.apache.commons.math3.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,22,mport org.apache.commons.math3.exception.NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,23,mport org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,64, {@inheritDoc}
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,66, @throws NotStrictlyPositiveException if {@code numberOfPoints < 1}.
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,63,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,69,"rotected Pair<BigDecimal[], BigDecimal[]> computeRule(int numberOfPoints) {"
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,70,f (numberOfPoints <= 0) {
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,71,"hrow new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,72,umberOfPoints);
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,65,"protected Pair<BigDecimal[], BigDecimal[]> computeRule(int numberOfPoints)"
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java,66,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,19,import org.apache.commons.math3.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,20,mport org.apache.commons.math3.exception.NotStrictlyPositiveException;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,21,mport org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,36, {@inheritDoc}
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,34,/** {@inheritDoc} */
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,40,hrows NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,41,f (numberOfPoints <= 0) {
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,42,"hrow new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_POINTS,"
False,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,43,umberOfPoints);
True,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,src/main/java/org/apache/commons/math3/analysis/integration/gauss/LegendreRuleFactory.java,37,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,24,import org.apache.commons.math3.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,40,"hrows NoDataException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,41,"imensionMismatchException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,42,onMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,41,"throws NoDataException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,42,"NonMonotonicSequenceException, NumberIsTooSmallException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,22,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,44,* @throws NonMonotonicSequenceException if the array is not sorted.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,45,* @throws NumberIsTooSmallException if the number of points is too small for
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,46,* the order of the interpolation
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,45,"hrows NoDataException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,46,imensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,50,"throws NoDataException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,51,"NonMonotonicSequenceException, NumberIsTooSmallException;"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,23,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,26,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,30,import org.apache.commons.math3.util.MathUtils;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,88,* @throws DimensionMismatchException if derivative structures are inconsistent
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,89,* @throws NullArgumentException if x is null
False,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,87,"hrows ZeroException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,92,"throws ZeroException, MathArithmeticException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,93,"DimensionMismatchException, NullArgumentException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,95,MathUtils.checkNotNull(x);
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,138,* @throws NullArgumentException if x is null
False,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,132,ublic T[] value(T x) throws NoDataException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,140,"public T[] value(T x) throws NoDataException, NullArgumentException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,143,MathUtils.checkNotNull(x);
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,169,* @throws NullArgumentException if x is null
False,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,161,"ublic T[][] derivatives(T x, int order) throws NoDataException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,171,"public T[][] derivatives(T x, int order) throws NoDataException, NullArgumentException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/FieldHermiteInterpolator.java,174,MathUtils.checkNotNull(x);
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,196,* @throws DimensionMismatchException if point dimension does not math sample
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,197,ublic double value(double[] point) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,198,public double value(double[] point) throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,22,import org.apache.commons.math3.exception.NoDataException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,23,import org.apache.commons.math3.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,39, @throws org.apache.commons.math3.exception.MathIllegalArgumentException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,40, if the arguments violate assumptions made by the interpolation
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,41, algorithm.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,42, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,43, when the array dimensions are not consistent.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,44, @throws org.apache.commons.math3.exception.NoDataException if an
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,45, array has zero-length.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,46, @throws org.apache.commons.math3.exception.NullArgumentException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,47, the arguments are {@code null}.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,43,* @throws MathIllegalArgumentException if the arguments violate assumptions
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,44,* made by the interpolation algorithm.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,45,* @throws DimensionMismatchException when the array dimensions are not consistent.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,46,* @throws NoDataException if an array has zero-length.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,47,* @throws NullArgumentException if the arguments are {@code null}.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,49,"ultivariateFunction interpolate(double[][] xval, double[] yval);"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,49,"MultivariateFunction interpolate(double[][] xval, double[] yval)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,50,"throws MathIllegalArgumentException, DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MultivariateInterpolator.java,51,"NoDataException, NullArgumentException;"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,21,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,23,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,59,* @exception NotPositiveException if degree is not positive
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,58,ublic SmoothingPolynomialBicubicSplineInterpolator(int degree) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,61,public SmoothingPolynomialBicubicSplineInterpolator(int degree)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,62,throws NotPositiveException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,71,* @exception NotPositiveException if degrees are not positive
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,68,"ublic SmoothingPolynomialBicubicSplineInterpolator(int xDegree,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,69,nt yDegree) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,73,"public SmoothingPolynomialBicubicSplineInterpolator(int xDegree, int yDegree)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,74,throws NotPositiveException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,94,"hrows NoDataException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,95,imensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,99,"throws NoDataException, NullArgumentException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,100,"DimensionMismatchException, NonMonotonicSequenceException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,22,import org.apache.commons.math3.exception.NumberIsTooSmallException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,39,"hrows NoDataException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,40,"imensionMismatchException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,41,onMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,40,"throws NoDataException, NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,41,"DimensionMismatchException, NonMonotonicSequenceException {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,22,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,47,* @throws NonMonotonicSequenceException if arrays are not sorted
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,48,* @throws NumberIsTooSmallException if the number of points is too small for
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,49,* the order of the interpolation
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,48,"hrows NoDataException,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,49,imensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,53,"throws NoDataException, NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,54,"DimensionMismatchException, NonMonotonicSequenceException;"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,21,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,33, @throws org.apache.commons.math3.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,35,* @throws MathIllegalArgumentException
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,38,* @throws DimensionMismatchException if arrays lengthes do not match
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,37,"nivariateFunction interpolate(double xval[], double yval[]);"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,40,"UnivariateFunction interpolate(double xval[], double yval[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariateInterpolator.java,41,"throws MathIllegalArgumentException, DimensionMismatchException;"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,22,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,23,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,85,hrows NumberIsTooSmallException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,87,"throws NumberIsTooSmallException, NonMonotonicSequenceException {"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,117,ublic double value(final double x) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,119,public double value(final double x) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,408,"ublic double value(final double x, final double ... parameters) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,408,"public double value(final double x, final double ... parameters)"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunction.java,409,throws NoDataException {
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,23,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,68, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,69,* @throws NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,71,"ublic PolynomialFunctionLagrangeForm(double x[], double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,72,"public PolynomialFunctionLagrangeForm(double x[], double y[])"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,73,"throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {"
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,166, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,168,* @throws NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,171,"ublic static double evaluate(double x[], double y[], double z) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,173,"public static double evaluate(double x[], double y[], double z)"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,174,"throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {"
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,313,"ublic static boolean verifyInterpolationArray(double x[], double y[], boolean abort) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,316,"public static boolean verifyInterpolationArray(double x[], double y[], boolean abort)"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm.java,317,"throws DimensionMismatchException, NumberIsTooSmallException, NonMonotonicSequenceException {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,23,import org.apache.commons.math3.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,25,import org.apache.commons.math3.util.MathUtils;
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,72, @throws org.apache.commons.math3.exception.NullArgumentException if
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,73, any argument is {@code null}.
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,74,* @throws NullArgumentException if any argument is {@code null}.
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,78,"ublic PolynomialFunctionNewtonForm(double a[], double c[]) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,79,"public PolynomialFunctionNewtonForm(double a[], double c[])"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,80,"throws NullArgumentException, NoDataException, DimensionMismatchException {"
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,175, @throws org.apache.commons.math3.exception.NullArgumentException if
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,176, any argument is {@code null}.
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,177,* @throws NullArgumentException if any argument is {@code null}.
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,181,"ublic static double evaluate(double a[], double c[], double z) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,182,"public static double evaluate(double a[], double c[], double z)"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,183,"throws NullArgumentException, DimensionMismatchException, NoDataException {"
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,224, @throws org.apache.commons.math3.exception.NullArgumentException if
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,225, any argument is {@code null}.
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,226,* @throws NullArgumentException if any argument is {@code null}.
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,232,"rotected static void verifyInputArray(double a[], double c[]) {"
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,233,f (a.length == 0 ||
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,234,.length == 0) {
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,233,"protected static void verifyInputArray(double a[], double c[])"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,234,"throws NullArgumentException, NoDataException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,235,MathUtils.checkNotNull(a);
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,236,MathUtils.checkNotNull(c);
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java,237,if (a.length == 0 || c.length == 0) {
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,26,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,98, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException if
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,99, the {@code knots} array is not strictly increasing.
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,99,* @throws NonMonotonicSequenceException if the {@code knots} array is not strictly increasing.
False,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,102,"ublic PolynomialSplineFunction(double knots[], PolynomialFunction polynomials[]) {"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,102,"public PolynomialSplineFunction(double knots[], PolynomialFunction polynomials[])"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,103,"throws NullArgumentException, NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction.java,104,"DimensionMismatchException, NonMonotonicSequenceException{"
False,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,66, @throws org.apache.commons.math3.exception.TooManyEvaluationsException
False,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,67, if the maximal number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractDifferentiableUnivariateSolver.java,66,* @throws TooManyEvaluationsException if the maximal number of evaluations is exceeded.
True,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,22,import org.apache.commons.math3.exception.TooManyEvaluationsException;
False,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,64, @throws org.apache.commons.math3.exception.TooManyEvaluationsException
True,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,65,* @throws TooManyEvaluationsException
False,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,67,rotected DerivativeStructure computeObjectiveValueAndDerivative(double point) {
True,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,68,protected DerivativeStructure computeObjectiveValueAndDerivative(double point)
True,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/AbstractUnivariateDifferentiableSolver.java,69,throws TooManyEvaluationsException {
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,169,* @exception NullArgumentException if f is null
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,173,ouble startValue) {
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,174,double startValue)
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseAbstractUnivariateSolver.java,175,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,136,"hrows ConvergenceException,"
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,137,athInternalError {
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolver.java,136,throws ConvergenceException {
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,20,import org.apache.commons.math3.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,21,import org.apache.commons.math3.exception.TooManyEvaluationsException;
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,100, @throws org.apache.commons.math3.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,102,* @throws MathIllegalArgumentException
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,102, @throws org.apache.commons.math3.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,104,* @throws TooManyEvaluationsException if
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,105,"ouble solve(int maxEval, FUNC f, double min, double max);"
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,107,"double solve(int maxEval, FUNC f, double min, double max)"
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,108,"throws MathIllegalArgumentException, TooManyEvaluationsException;"
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,119, @throws org.apache.commons.math3.exception.MathIllegalArgumentException
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,122,* @throws MathIllegalArgumentException
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,121, @throws org.apache.commons.math3.exception.TooManyEvaluationsException if
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,124,* @throws TooManyEvaluationsException if
False,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,124,"ouble solve(int maxEval, FUNC f, double min, double max, double startValue);"
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,127,"double solve(int maxEval, FUNC f, double min, double max, double startValue)"
True,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,src/main/java/org/apache/commons/math3/analysis/solvers/BaseUnivariateSolver.java,128,"throws MathIllegalArgumentException, TooManyEvaluationsException;"
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,65,ublic void trigger(int max) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,65,public void trigger(int max) throws MaxCountExceededException {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,79,"ublic Incrementor(int max,"
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,axCountExceededCallback cb) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,79,"public Incrementor(int max, MaxCountExceededCallback cb)"
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,80,throws NullArgumentException {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,135,ublic void incrementCount(int value) {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,135,public void incrementCount(int value) throws MaxCountExceededException {
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,154,ublic void incrementCount() {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,154,public void incrementCount() throws MaxCountExceededException {
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,176,* @throws MaxCountExceededException at counter exhaustion
False,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,177,oid trigger(int maximalCount);
True,src/main/java/org/apache/commons/math3/util/Incrementor.java,src/main/java/org/apache/commons/math3/util/Incrementor.java,178,void trigger(int maximalCount) throws MaxCountExceededException;
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,86,"ublic static double[] ebeAdd(double[] a,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,87,ouble[] b) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,86,"public static double[] ebeAdd(double[] a, double[] b)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,87,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,108,"ublic static double[] ebeSubtract(double[] a,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,109,ouble[] b) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,108,"public static double[] ebeSubtract(double[] a, double[] b)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,109,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,130,"ublic static double[] ebeMultiply(double[] a,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,131,ouble[] b) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,130,"public static double[] ebeMultiply(double[] a, double[] b)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,131,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,152,"ublic static double[] ebeDivide(double[] a,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,153,ouble[] b) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,152,"public static double[] ebeDivide(double[] a, double[] b)"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,153,throws DimensionMismatchException {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,326,"ublic static boolean isMonotonic(double[] val,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,327,"rderDirection dir,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,328,oolean strict) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,326,"public static boolean isMonotonic(double[] val, OrderDirection dir, boolean strict) {"
