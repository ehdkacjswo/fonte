is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,25,import org.apache.commons.math.exception.NumberIsTooLargeException;
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,266, @throws MathArithmeticException
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,267,* @throws NumberIsTooLargeException if fractional part is greater than 1
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,268,* @throws FractionConversionException
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,281,"hrow new ArithmeticException(""Could not "");"
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,283,"throw new NumberIsTooLargeException(hDouble, 1.0, false);"
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,292,ry {
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,293," = new BigFraction(hDouble, 1.0e-5, 10000);"
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,294, catch (FractionConversionException e3) {
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,295,"/throw new MathArithmeticException(hDouble, 10000);"
False,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,296,"hrow new MathArithmeticException(LocalizedFormats.CANNOT_CONVERT_OBJECT_TO_FRACTION, hDouble);"
True,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java,294,"h = new BigFraction(hDouble, 1.0e-5, 10000);"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,59,"ANNOT_CONVERT_OBJECT_TO_FRACTION(""cannot convert given object to a fraction number: {0}""),"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,320,"ANNOT_PARSE_AS_TYPE(""string {0} unparseable (from position {1}) as an object of type {2}""), /* keep */"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,321,"ANNOT_PARSE(""string {0} unparseable (from position {1})""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,319,"CANNOT_PARSE_AS_TYPE(""string \""{0}\"" unparseable (from position {1}) as an object of type {2}""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,320,"CANNOT_PARSE(""string \""{0}\"" unparseable (from position {1})""), /* keep */"
False,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java,324,"NPARSEABLE_FRACTION_NUMBER(""unparseable fraction number: \""{0}\""""),"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,24,mport org.apache.commons.math.MathRuntimeException;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,25,mport org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,24,import org.apache.commons.math.exception.MathIllegalArgumentException;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,27,mport org.apache.commons.math.util.MathUtils;
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,26,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,27,import org.apache.commons.math.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,29,import org.apache.commons.math.util.MathUtils;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,114, @throws ArithmeticException if the denominator is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,115,* @throws ZeroException if the denominator is zero.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,118,f (num == null) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,119,hrow new NullArgumentException(LocalizedFormats.NUMERATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,121,f (den == null) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,122,hrow new NullArgumentException(LocalizedFormats.DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,119,"MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR);"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,120,"MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR);"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,125,hrow MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,122,throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,171, @exception IllegalArgumentException if value is NaN or infinite
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,168,* @exception MathIllegalArgumentException if value is NaN or infinite
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,175,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,172,throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,178,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,175,throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,612, @throws ArithmeticException
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,609,* @throws ZeroException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,617,hrow MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,614,throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,663, @throws ArithmeticException if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,660,* @throws ZeroException if the fraction to divide by is zero.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,670,hrow MathRuntimeException.createArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,667,throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,24,mport java.text.ParseException;
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,28,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,27,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,28,import org.apache.commons.math.exception.MathParseException;
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,162, @throws IllegalArgumentException is <code>obj</code> is not a valid type.
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,162,* @throws MathIllegalArgumentException is <code>obj</code> is not a valid type.
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,177,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,178,ocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,177,throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,188, @exception ParseException if the beginning of the specified string
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,187,* @exception MathParseException if the beginning of the specified string
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,192,ublic BigFraction parse(final String source) throws ParseException {
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,191,public BigFraction parse(final String source) throws MathParseException {
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,196,hrow MathRuntimeException.createParseException(
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,197,"arsePosition.getErrorIndex(),"
False,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,198,"ocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);"
True,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java,195,"throw new MathParseException(source, parsePosition.getErrorIndex(), BigFraction.class);"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,22,mport java.text.ParseException;
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,26,mport org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,27,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,25,import org.apache.commons.math.exception.MathIllegalArgumentException;
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,26,import org.apache.commons.math.exception.MathParseException;
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,169, @throws IllegalArgumentException is <code>obj</code> is not a valid type.
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,168,* @throws FractionConversionException if the numbrer cannot be converted to a fraction
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,169,* @throws MathIllegalArgumentException is <code>obj</code> is not a valid type.
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,173,"inal StringBuffer toAppendTo, final FieldPosition pos) {"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,173,"final StringBuffer toAppendTo, final FieldPosition pos)"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,174,"throws FractionConversionException, MathIllegalArgumentException {"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,179,ry {
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,180,"et = format(new Fraction(((Number) obj).doubleValue()),"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,181,"oAppendTo, pos);"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,182, catch (ConvergenceException ex) {
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,183,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,184,"ocalizedFormats.CANNOT_CONVERT_OBJECT_TO_FRACTION,"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,185,x.getLocalizedMessage());
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,180,"ret = format(new Fraction(((Number) obj).doubleValue()), toAppendTo, pos);"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,188,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,189,ocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,182,throw new MathIllegalArgumentException(LocalizedFormats.CANNOT_FORMAT_OBJECT_TO_FRACTION);
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,199, @exception ParseException if the beginning of the specified string
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,192,* @exception MathParseException if the beginning of the specified string
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,203,ublic Fraction parse(final String source) throws ParseException {
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,196,public Fraction parse(final String source) throws MathParseException {
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,207,hrow MathRuntimeException.createParseException(
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,208,"arsePosition.getErrorIndex(),"
False,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,209,"ocalizedFormats.UNPARSEABLE_FRACTION_NUMBER, source);"
True,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,src/main/java/org/apache/commons/math/fraction/FractionFormat.java,200,"throw new MathParseException(source, parsePosition.getErrorIndex(), Fraction.class);"
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,26,import org.apache.commons.math.exception.MathParseException;
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,119, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,120,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,132, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,133,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,140, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,141,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,152, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,153,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,158, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,159,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,170, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,171,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,176, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,177,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,206, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,207,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,220, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,221,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,227, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,228,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,240, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,241,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,247, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,248,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,258, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,259,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,265, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java,266,} catch (MathParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,25,import org.apache.commons.math.exception.ZeroException;
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,80,"ssert.fail(""Expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,81, catch (ArithmeticException npe) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,81,"Assert.fail(""Expecting ZeroException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,82,} catch (ZeroException npe) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,289,"ssert.fail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,290, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,290,"Assert.fail(""expecting ZeroException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,291,} catch (ZeroException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,408, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,409,} catch (ZeroException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,557,"ssert.fail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,558, catch (ArithmeticException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,558,"Assert.fail(""expecting ZeroException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,559,} catch (ZeroException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,21,mport java.text.ParseException;
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,23,import org.apache.commons.math.exception.MathParseException;
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,117, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,117,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,130, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,130,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,138, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,138,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,150, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,150,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,156, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,156,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,168, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,168,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,174, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,174,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,204, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,204,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,218, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,218,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,225, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,225,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,238, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,238,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,245, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,245,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,256, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,256,} catch (MathParseException ex) {
False,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,263, catch (ParseException ex) {
True,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java,263,} catch (MathParseException ex) {
