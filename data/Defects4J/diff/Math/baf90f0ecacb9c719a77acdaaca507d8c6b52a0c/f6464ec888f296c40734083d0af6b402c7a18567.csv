is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,23,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,70,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java,71,throw new NullArgumentException(LocalizedFormats.FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,25,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,77,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java,78,throw new NullArgumentException(LocalizedFormats.FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,24,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,173,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,174,throw new NullArgumentException(LocalizedFormats.FUNCTION);
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,228,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FUNCTION);
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,229,throw new NullArgumentException(LocalizedFormats.FUNCTION);
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,29,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,361, @throws IllegalArgumentException if <code>imaginaryFormat</code> is
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,362,         <code>null</code>.
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,362,* @throws NullArgumentException if {@code imaginaryFormat} is {@code null}.
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,366,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,367,ocalizedFormats.NULL_IMAGINARY_FORMAT);
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,366,throw new NullArgumentException(LocalizedFormats.IMAGINARY_FORMAT);
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,375, @throws IllegalArgumentException if <code>realFormat</code> is
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,376,         <code>null</code>.
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,374,* @throws NullArgumentException if {@code realFormat} is {@code null}.
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,380,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,381,ocalizedFormats.NULL_REAL_FORMAT);
True,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,src/main/java/org/apache/commons/math/complex/ComplexFormat.java,378,throw new NullArgumentException(LocalizedFormats.REAL_FORMAT);
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,148,"EGATIVE_LENGTH(""length cannot be negative ({0})""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,152,"EGATIVE_START_POSITION(""start position cannot be negative ({0})""),"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,151,"START_POSITION(""start position ({0})""), /* keep */"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,214,"ULL_COVARIANCE_MATRIX(""covariance matrix is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,215,"ULL_DENOMINATOR(""denominator is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,216,"ULL_DENOMINATOR_FORMAT(""denominator format can not be null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,217,"ULL_FRACTION(""null fraction""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,218,"ULL_FUNCTION(""function is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,219,"ULL_IMAGINARY_FORMAT(""null imaginary format""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,220,"ULL_INPUT_ARRAY(""input array is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,221,"ULL_NUMERATOR(""numerator is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,222,"ULL_NUMERATOR_FORMAT(""numerator format can not be null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,223,"ULL_OBJECT_TRANSFORMATION(""Conversion Exception in Transformation, Object is null""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,224,"ULL_REAL_FORMAT(""null real format""),"
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,225,"ULL_WHOLE_FORMAT(""whole format can not be null""),"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,213,"NULL_NOT_ALLOWED(""null is not allowed""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,214,"COVARIANCE_MATRIX(""covariance matrix""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,215,"DENOMINATOR(""denominator""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,216,"DENOMINATOR_FORMAT(""denominator format""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,217,"FRACTION(""fraction""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,218,"FUNCTION(""function""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,219,"IMAGINARY_FORMAT(""imaginary format""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,220,"INPUT_ARRAY(""input array""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,221,"NUMERATOR(""numerator""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,222,"NUMERATOR_FORMAT(""numerator format""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,223,"OBJECT_TRANSFORMATION(""conversion exception in transformation""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,224,"REAL_FORMAT(""real format""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,225,"WHOLE_FORMAT(""whole format""), /* keep */"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,20,* All conditions checks that fail due to a {@code null} argument must throw
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,21,* this exception.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,22,"* This class is meant to signal a precondition violation (""null is an illegal"
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,23,"* argument"") and so does not extend the standard {@code NullPointerException}."
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,24,* Proagation of {@code NullPointerException} from within Commons-Math is
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,25,* construed to be a bug.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,27,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,28,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,30,public class NullArgumentException extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,31,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,32,private static final long serialVersionUID = -6024911025449780478L;
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,35,* Default constructor.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,37,public NullArgumentException() {
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,38,super(LocalizedFormats.NULL_NOT_ALLOWED);
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,41,* @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,42,* the error.
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,44,public NullArgumentException(Localizable specific) {
True,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,src/main/java/org/apache/commons/math/exception/NullArgumentException.java,45,"super(specific, LocalizedFormats.NULL_NOT_ALLOWED);"
False,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,26,ublic class ZeroNotAllowedException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,26,public class ZeroException extends MathIllegalNumberException {
False,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,34,ublic ZeroNotAllowedException() {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,34,public ZeroException() {
False,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,43,ublic ZeroNotAllowedException(Localizable specific) {
True,src/main/java/org/apache/commons/math/exception/ZeroNotAllowedException.java,src/main/java/org/apache/commons/math/exception/ZeroException.java,43,public ZeroException(Localizable specific) {
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,26,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,117, @throws IllegalArgumentException if <code>format</code> is
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,118,         <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,117,* @throws NullArgumentException if {@code format} is {@code null}.
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,122,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,123,ocalizedFormats.NULL_DENOMINATOR_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,121,throw new NullArgumentException(LocalizedFormats.DENOMINATOR_FORMAT);
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,131, @throws IllegalArgumentException if <code>format</code> is
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,132,         <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,129,* @throws NullArgumentException if {@code format} is {@code null}.
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,136,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,137,ocalizedFormats.NULL_NUMERATOR_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,src/main/java/org/apache/commons/math/fraction/AbstractFormat.java,133,throw new NullArgumentException(LocalizedFormats.NUMERATOR_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,107, <p>
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,109, <code>BigInteger</code>. The {@link BigFraction} is reduced to lowest terms.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,110, </p>
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,109,* {@code BigInteger}. The {@link BigFraction} is reduced to lowest terms.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,112, @param num
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,113,"            the numerator, must not be <code>null</code>."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,114, @param den
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,115,"            the denominator, must not be <code>null</code>."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,116, @throws ArithmeticException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,117,             if the denominator is <code>zero</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,111,"* @param num the numerator, must not be {@code null}."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,112,"* @param den the denominator, must not be {@code null}.."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,113,* @throws ArithmeticException if the denominator is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,116,if (num == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,117,throw new NullArgumentException(LocalizedFormats.NUMERATOR);
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,119,if (den == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,120,throw new NullArgumentException(LocalizedFormats.DENOMINATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,501, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,502,             if the {@link BigFraction} is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,503,* @throws NullArgumentException if the {@link BigFraction} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,506,if (fraction == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,507,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,604, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,605,             if the <code>BigInteger</code> is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,608,* @throws NullArgumentException if the {@code BigInteger} is {@code null}.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,654, @param fraction
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,655,"            the fraction to divide by, must not be <code>null</code>."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,657,"* @param fraction Fraction to divide by, must not be {@code null}."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,657, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,658,             if the fraction is <code>null</code>.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,659, @throws ArithmeticException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,660,             if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,659,* @throws NullArgumentException if the {@code fraction} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,660,* @throws ArithmeticException if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,663,if (fraction == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,664,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,841, @param bg
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,842,            the <code>BigInteger</code> to multiply by.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,843, @return a <code>BigFraction</code> instance with the resulting values.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,844, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,845,             if the bg is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,844,* @param bg the {@code BigInteger} to multiply by.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,845,* @return a {@code BigFraction} instance with the resulting values.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,846,* @throws NullArgumentException if {@code bg} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,849,if (bg == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,850,throw new NullArgumentException();
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,885, @param fraction
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,886,"            the fraction to multiply by, must not be <code>null</code>."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,889,"* @param fraction Fraction to multiply by, must not be {@code null}."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,888, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,889,             if the fraction is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,891,* @throws NullArgumentException if {@code fraction} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,894,if (fraction == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,895,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1026, @param bg
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1027,"            the {@link BigInteger} to subtract, must'nt be"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1028,            <code>null</code>.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1029, @return a <code>BigFraction</code> instance with the resulting values.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1030, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1031,             if the {@link BigInteger} is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1031,"* @param bg the {@link BigInteger} to subtract, cannot be {@code null}."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1032,* @return a {@code BigFraction} instance with the resulting values.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1033,* @throws NullArgumentException if the {@link BigInteger} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1036,if (bg == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1037,throw new NullArgumentException();
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1072, @param fraction
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1073,"            the {@link BigFraction} to subtract, must not be"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1074,            <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1077,"* @param fraction {@link BigFraction} to subtract, must not be {@code null}."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1076, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1077,             if the fraction is <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1079,* @throws NullArgumentException if the {@code fraction} is {@code null}.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1082,if (fraction == null) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,1083,throw new NullArgumentException(LocalizedFormats.FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,25,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,476,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,477,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,533,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,534,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,568,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_FRACTION);
True,src/main/java/org/apache/commons/math/fraction/Fraction.java,src/main/java/org/apache/commons/math/fraction/Fraction.java,569,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,24,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,25,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,231, @throws IllegalArgumentException if <code>format</code> is
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,232,         <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,231,* @throws NullArgumentException if {@code format} is {@code null}.
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,236,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,237,ocalizedFormats.NULL_WHOLE_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java,235,throw new NullArgumentException(LocalizedFormats.WHOLE_FORMAT);
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,23,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,24,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,224, @throws IllegalArgumentException if <code>format</code> is
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,225,         <code>null</code>.
True,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,224,* @throws NullArgumentException if {@code format} is {@code null}.
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,229,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,230,ocalizedFormats.NULL_WHOLE_FORMAT);
True,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java,228,throw new NullArgumentException(LocalizedFormats.WHOLE_FORMAT);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,27,mport org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,27,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,28,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,68,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,69,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,86,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,87,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,92,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java,93,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,21,mport org.apache.commons.math.optimization.
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,22,ifferentiableMultivariateVectorialOptimizer;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,21,import org.apache.commons.math.optimization.DifferentiableMultivariateVectorialOptimizer;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,28,mport org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,28,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,29,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,80,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,81,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,100,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,101,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,106,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java,107,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,23,mport org.apache.commons.math.MathRuntimeException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,27,mport org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,26,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,27,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,30," Guesses the parameters (<tt>a</tt>, <tt>b</tt>, <tt>c</tt>, and <tt>d</tt>)"
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,30,"* Guesses the parameters ({@code a}, {@code b}, {@code c}, and {@code d})"
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,52,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,52,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,157,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,157,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,193,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java,193,throw new ZeroException();
False,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,23,mport org.apache.commons.math.MathRuntimeException;
False,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,26,mport org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,25,import org.apache.commons.math.exception.ZeroException;
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,156,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,156,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,162,hrow new ZeroNotAllowedException();
True,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java,162,throw new ZeroException();
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,24,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,95,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_COVARIANCE_MATRIX);
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,97,throw new NullArgumentException(LocalizedFormats.COVARIANCE_MATRIX);
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,228,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,229,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, xArray.length, yArray.length);"
True,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java,230,"throw new DimensionMismatchException(xArray.length, yArray.length);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,19,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,20,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,59,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,59,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,127,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java,127,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,21,import org.apache.commons.math.exception.NullArgumentException;
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,22,import org.apache.commons.math.exception.NotPositiveException;
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,23,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,81,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,84,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,85,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,86,"ocalizedFormats.NEGATIVE_START_POSITION, begin);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,88,"throw new NotPositiveException(LocalizedFormats.START_POSITION, begin);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,90,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,91,"ocalizedFormats.NEGATIVE_LENGTH, length);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,92,"throw new NotPositiveException(LocalizedFormats.LENGTH, length);"
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,143,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,144,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,146,f (weights.length !=  values.length) {
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,147,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,148,"ocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, weights.length, values.length);"
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,147,if (weights.length != values.length) {
True,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java,148,"throw new DimensionMismatchException(weights.length, values.length);"
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,21,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,21,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,179,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java,179,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,21,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,21,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,217,hrow MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NULL_INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,217,throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,601,if (source == null ||
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,602,dest == null) {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java,603,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,24,import org.apache.commons.math.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,41, @throws org.apache.commons.math.MathException If it cannot successfully
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,42, be transformed or is null.
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,42,* @throws MathException if it cannot successfully be transformed.
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,43,* @throws NullArgumentException if is {@code null}.
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,45,ublic double transform(Object o) throws MathException{
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,46,public double transform(Object o) throws MathException {
False,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,48,hrow new MathException(LocalizedFormats.NULL_OBJECT_TRANSFORMATION);
True,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,src/main/java/org/apache/commons/math/util/DefaultTransformer.java,48,throw new NullArgumentException(LocalizedFormats.OBJECT_TRANSFORMATION);
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,24,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,67, catch (NullPointerException npe) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,68,} catch (NullArgumentException npe) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,72, catch (NullPointerException npe) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,73,} catch (NullArgumentException npe) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,329,"ail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,330, catch (NullPointerException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,330,"fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,331,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,417,"ail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,418, catch (NullPointerException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,418,"fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,419,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,463,"ail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,464, catch (NullPointerException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,464,"fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,465,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,481,"ail(""expecting NullPointerException"");"
False,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,482, catch (NullPointerException ex) {
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,482,"fail(""expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math/fraction/BigFractionTest.java,483,} catch (NullArgumentException ex) {
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,21,mport org.apache.commons.math.exception.ZeroNotAllowedException;
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,21,import org.apache.commons.math.exception.ZeroException;
False,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,136,Test(expected=ZeroNotAllowedException.class)
True,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java,136,@Test(expected=ZeroException.class)
True,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,26,import org.apache.commons.math.exception.NullArgumentException;
False,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,44,ublic void testTransformNull(){
True,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,45,public void testTransformNull() throws Exception {
False,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,48,"ail(""Expection MathException"");"
False,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,49, catch (MathException e) {
True,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,49,"fail(""Expecting NullArgumentException"");"
True,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java,50,} catch (NullArgumentException e) {
