is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,inal double midPoint = 0.5 * diff;
True,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,src/main/java/org/apache/commons/math3/analysis/integration/MidPointIntegrator.java,123,final double midPoint = min + 0.5 * diff;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,39,* Test of integrator for the sine function.
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,41,@Test
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,42,public void testLowAccuracy() {
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,43,UnivariateFunction f = new QuinticFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,44,"UnivariateIntegrator integrator = new MidPointIntegrator(0.01, 1.0e-10, 2, 4);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,46,double min = -10;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,47,double max =  -9;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,48,double expected = -3697001.0 / 48.0;
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,49,double tolerance = FastMath.abs(expected * integrator.getRelativeAccuracy());
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,50,"double result = integrator.integrate(Integer.MAX_VALUE, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,51,Assert.assertTrue(integrator.getEvaluations() < Integer.MAX_VALUE / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,52,Assert.assertTrue(integrator.getIterations() < MidPointIntegrator.MIDPOINT_MAX_ITERATIONS_COUNT / 2);
True,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java,53,"Assert.assertEquals(expected, result, tolerance);"
