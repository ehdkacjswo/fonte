is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,35,rivate double one = 1;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,36,rivate float two = 2;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,37,rivate int three = 3;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,38,rivate double mean = 2;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,39,rivate double sumSq = 18;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,40,rivate double sum = 8;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,41,rivate double var = 0.666666666666666666667;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,42,rivate double min = 1;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,43,rivate double max = 3;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,44,rivate double tolerance = 10E-15;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,45,rivate double nan = Double.NaN;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,35,private static final double ONE = 1;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,36,private static final float  TWO = 2;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,37,private static final int    THREE = 3;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,38,private static final double MEAN = 2;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,39,private static final double SUMSQ = 18;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,40,private static final double SUM = 8;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,41,private static final double VAR = 0.666666666666666666667;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,42,private static final double MIN = 1;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,43,private static final double MAX = 3;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,44,private static final double TOLERANCE = 10E-15;
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,45,private static final double NAN = Double.NaN;
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,50,"ouble[] values = new double[] { one, two, two, three };"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,51,"ssert.assertEquals(""sum"", sum, StatUtils.sum(values), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,52,"ssert.assertEquals(""sumsq"", sumSq, StatUtils.sumSq(values), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,53,"ssert.assertEquals(""var"", var, StatUtils.variance(values), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,54,"ssert.assertEquals(""var with mean"", var, StatUtils.variance(values, mean), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,55,"ssert.assertEquals(""mean"", mean, StatUtils.mean(values), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,56,"ssert.assertEquals(""min"", min, StatUtils.min(values), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,57,"ssert.assertEquals(""max"", max, StatUtils.max(values), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,50,"double[] values = new double[] { ONE, TWO, TWO, THREE };"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,51,"Assert.assertEquals(""sum"", SUM, StatUtils.sum(values), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,52,"Assert.assertEquals(""sumsq"", SUMSQ, StatUtils.sumSq(values), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,53,"Assert.assertEquals(""var"", VAR, StatUtils.variance(values), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,54,"Assert.assertEquals(""var with mean"", VAR, StatUtils.variance(values, MEAN), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,55,"Assert.assertEquals(""mean"", MEAN, StatUtils.mean(values), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,56,"Assert.assertEquals(""min"", MIN, StatUtils.min(values), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,57,"Assert.assertEquals(""max"", MAX, StatUtils.max(values), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,71,alues = new double[] { one };
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,71,values = new double[] { ONE };
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,75,tatUtils.mean(values) == one);
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,75,StatUtils.mean(values) == ONE);
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,138,"estUtils.assertEquals(0, StatUtils.sumSq(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,139,"estUtils.assertEquals(0, StatUtils.sumSq(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,138,"TestUtils.assertEquals(0, StatUtils.sumSq(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,139,"TestUtils.assertEquals(0, StatUtils.sumSq(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,142, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,143,"estUtils.assertEquals(4, StatUtils.sumSq(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,144,"estUtils.assertEquals(4, StatUtils.sumSq(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,142,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,143,"TestUtils.assertEquals(4, StatUtils.sumSq(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,144,"TestUtils.assertEquals(4, StatUtils.sumSq(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,147," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,148,"estUtils.assertEquals(18, StatUtils.sumSq(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,149,"estUtils.assertEquals(8, StatUtils.sumSq(x, 1, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,147,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,148,"TestUtils.assertEquals(18, StatUtils.sumSq(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,149,"TestUtils.assertEquals(8, StatUtils.sumSq(x, 1, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,173,"estUtils.assertEquals(1, StatUtils.product(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,174,"estUtils.assertEquals(1, StatUtils.product(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,173,"TestUtils.assertEquals(1, StatUtils.product(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,174,"TestUtils.assertEquals(1, StatUtils.product(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,177, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,178,"estUtils.assertEquals(two, StatUtils.product(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,179,"estUtils.assertEquals(two, StatUtils.product(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,177,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,178,"TestUtils.assertEquals(TWO, StatUtils.product(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,179,"TestUtils.assertEquals(TWO, StatUtils.product(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,182," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,183,"estUtils.assertEquals(12, StatUtils.product(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,184,"estUtils.assertEquals(4, StatUtils.product(x, 1, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,182,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,183,"TestUtils.assertEquals(12, StatUtils.product(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,184,"TestUtils.assertEquals(4, StatUtils.product(x, 1, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,208,"estUtils.assertEquals(0, StatUtils.sumLog(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,209,"estUtils.assertEquals(0, StatUtils.sumLog(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,208,"TestUtils.assertEquals(0, StatUtils.sumLog(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,209,"TestUtils.assertEquals(0, StatUtils.sumLog(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,212, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,213,"estUtils.assertEquals(FastMath.log(two), StatUtils.sumLog(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,214,"estUtils.assertEquals(FastMath.log(two), StatUtils.sumLog(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,212,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,213,"TestUtils.assertEquals(FastMath.log(TWO), StatUtils.sumLog(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,214,"TestUtils.assertEquals(FastMath.log(TWO), StatUtils.sumLog(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,217," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,218,"estUtils.assertEquals(FastMath.log(one) + 2.0 * FastMath.log(two) + FastMath.log(three), StatUtils.sumLog(x), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,219,"estUtils.assertEquals(2.0 * FastMath.log(two), StatUtils.sumLog(x, 1, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,217,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,218,"TestUtils.assertEquals(FastMath.log(ONE) + 2.0 * FastMath.log(TWO) + FastMath.log(THREE), StatUtils.sumLog(x), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,219,"TestUtils.assertEquals(2.0 * FastMath.log(TWO), StatUtils.sumLog(x, 1, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,235,"estUtils.assertEquals(Double.NaN, StatUtils.mean(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,235,"TestUtils.assertEquals(Double.NaN, StatUtils.mean(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,238, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,239,"estUtils.assertEquals(two, StatUtils.mean(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,238,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,239,"TestUtils.assertEquals(TWO, StatUtils.mean(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,242," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,243,"estUtils.assertEquals(2.5, StatUtils.mean(x, 2, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,242,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,243,"TestUtils.assertEquals(2.5, StatUtils.mean(x, 2, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,259,"estUtils.assertEquals(Double.NaN, StatUtils.variance(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,259,"TestUtils.assertEquals(Double.NaN, StatUtils.variance(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,262, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,263,"estUtils.assertEquals(0.0, StatUtils.variance(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,262,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,263,"TestUtils.assertEquals(0.0, StatUtils.variance(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,266," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,267,"estUtils.assertEquals(0.5, StatUtils.variance(x, 2, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,266,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,267,"TestUtils.assertEquals(0.5, StatUtils.variance(x, 2, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,270," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,271,"estUtils.assertEquals(0.5, StatUtils.variance(x,2.5, 2, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,270,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,271,"TestUtils.assertEquals(0.5, StatUtils.variance(x,2.5, 2, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,287,"estUtils.assertEquals(Double.NaN, StatUtils.populationVariance(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,287,"TestUtils.assertEquals(Double.NaN, StatUtils.populationVariance(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,290, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,291,"estUtils.assertEquals(0.0, StatUtils.populationVariance(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,290,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,291,"TestUtils.assertEquals(0.0, StatUtils.populationVariance(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,294," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,295,"estUtils.assertEquals(0.25, StatUtils.populationVariance(x, 0, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,294,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,295,"TestUtils.assertEquals(0.25, StatUtils.populationVariance(x, 0, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,298," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,299,"estUtils.assertEquals(0.25, StatUtils.populationVariance(x, 2.5, 2, 2), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,298,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,299,"TestUtils.assertEquals(0.25, StatUtils.populationVariance(x, 2.5, 2, 2), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,316,"estUtils.assertEquals(Double.NaN, StatUtils.max(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,316,"TestUtils.assertEquals(Double.NaN, StatUtils.max(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,319, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,320,"estUtils.assertEquals(two, StatUtils.max(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,319,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,320,"TestUtils.assertEquals(TWO, StatUtils.max(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,323," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,324,"estUtils.assertEquals(three, StatUtils.max(x, 1, 3), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,323,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,324,"TestUtils.assertEquals(THREE, StatUtils.max(x, 1, 3), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,327," = new double[] {nan, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,328,"estUtils.assertEquals(three, StatUtils.max(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,327,"x = new double[] {NAN, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,328,"TestUtils.assertEquals(THREE, StatUtils.max(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,331," = new double[] {one, nan, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,332,"estUtils.assertEquals(three, StatUtils.max(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,331,"x = new double[] {ONE, NAN, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,332,"TestUtils.assertEquals(THREE, StatUtils.max(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,335," = new double[] {one, two, nan};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,336,"estUtils.assertEquals(two, StatUtils.max(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,335,"x = new double[] {ONE, TWO, NAN};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,336,"TestUtils.assertEquals(TWO, StatUtils.max(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,339," = new double[] {nan, nan, nan};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,340,"estUtils.assertEquals(nan, StatUtils.max(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,339,"x = new double[] {NAN, NAN, NAN};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,340,"TestUtils.assertEquals(NAN, StatUtils.max(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,356,"estUtils.assertEquals(Double.NaN, StatUtils.min(x, 0, 0), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,356,"TestUtils.assertEquals(Double.NaN, StatUtils.min(x, 0, 0), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,359, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,360,"estUtils.assertEquals(two, StatUtils.min(x, 0, 1), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,359,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,360,"TestUtils.assertEquals(TWO, StatUtils.min(x, 0, 1), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,363," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,364,"estUtils.assertEquals(two, StatUtils.min(x, 1, 3), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,363,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,364,"TestUtils.assertEquals(TWO, StatUtils.min(x, 1, 3), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,367," = new double[] {nan, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,368,"estUtils.assertEquals(two, StatUtils.min(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,367,"x = new double[] {NAN, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,368,"TestUtils.assertEquals(TWO, StatUtils.min(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,371," = new double[] {one, nan, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,372,"estUtils.assertEquals(one, StatUtils.min(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,371,"x = new double[] {ONE, NAN, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,372,"TestUtils.assertEquals(ONE, StatUtils.min(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,375," = new double[] {one, two, nan};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,376,"estUtils.assertEquals(one, StatUtils.min(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,375,"x = new double[] {ONE, TWO, NAN};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,376,"TestUtils.assertEquals(ONE, StatUtils.min(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,379," = new double[] {nan, nan, nan};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,380,"estUtils.assertEquals(nan, StatUtils.min(x), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,379,"x = new double[] {NAN, NAN, NAN};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,380,"TestUtils.assertEquals(NAN, StatUtils.min(x), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,404,"estUtils.assertEquals(Double.NaN, StatUtils.percentile(x, 25), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,405,"estUtils.assertEquals(Double.NaN, StatUtils.percentile(x, 0, 0, 25), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,404,"TestUtils.assertEquals(Double.NaN, StatUtils.percentile(x, 25), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,405,"TestUtils.assertEquals(Double.NaN, StatUtils.percentile(x, 0, 0, 25), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,408, = new double[] {two};
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,409,"estUtils.assertEquals(two, StatUtils.percentile(x, 25), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,410,"estUtils.assertEquals(two, StatUtils.percentile(x, 0, 1, 25), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,408,x = new double[] {TWO};
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,409,"TestUtils.assertEquals(TWO, StatUtils.percentile(x, 25), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,410,"TestUtils.assertEquals(TWO, StatUtils.percentile(x, 0, 1, 25), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,413," = new double[] {one, two, two, three};"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,414,"estUtils.assertEquals(2.5, StatUtils.percentile(x, 70), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,415,"estUtils.assertEquals(2.5, StatUtils.percentile(x, 1, 3, 62.5), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,413,"x = new double[] {ONE, TWO, TWO, THREE};"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,414,"TestUtils.assertEquals(2.5, StatUtils.percentile(x, 70), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,415,"TestUtils.assertEquals(2.5, StatUtils.percentile(x, 1, 3, 62.5), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,425,"ssert.assertEquals(StatUtils.sumDifference(sample1, sample2), StatUtils.sum(diff), tolerance);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,426,"ssert.assertEquals(meanDifference, StatUtils.mean(diff), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,425,"Assert.assertEquals(StatUtils.sumDifference(sample1, sample2), StatUtils.sum(diff), TOLERANCE);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,426,"Assert.assertEquals(meanDifference, StatUtils.mean(diff), TOLERANCE);"
False,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,428,"tatUtils.variance(diff), tolerance);"
True,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,src/test/java/org/apache/commons/math3/stat/StatUtilsTest.java,428,"StatUtils.variance(diff), TOLERANCE);"
