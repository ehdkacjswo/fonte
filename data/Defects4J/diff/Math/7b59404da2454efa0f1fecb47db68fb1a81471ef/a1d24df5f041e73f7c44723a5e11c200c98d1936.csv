is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,17,package org.apache.commons.math3.distribution;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,19,import org.apache.commons.math3.exception.OutOfRangeException;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,20,import org.apache.commons.math3.exception.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,21,import org.apache.commons.math3.util.FastMath;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,22,import org.apache.commons.math3.random.RandomGenerator;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,23,import org.apache.commons.math3.random.Well19937c;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,26,* Implementation of the geometric distribution.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,28,"* @see <a href=""http://en.wikipedia.org/wiki/Geometric_distribution"">Geometric distribution (Wikipedia)</a>"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,29,"* @see <a href=""http://mathworld.wolfram.com/GeometricDistribution.html"">Geometric Distribution (MathWorld)</a>"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,30,* @version $Id$
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,31,* @since 4.0
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,33,public class GeometricDistribution extends AbstractIntegerDistribution {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,35,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,36,private static final long serialVersionUID = 20130507L;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,37,/** The probability of success. */
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,38,private final double probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,41,* Create a geometric distribution with the given probability of success.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,43,* @param p probability of success.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,44,* @throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,46,public GeometricDistribution(double p) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,47,"this(new Well19937c(), p);"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,51,* Creates a geometric distribution.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,53,* @param rng Random number generator.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,54,* @param p Probability of success.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,55,* @throws OutOfRangeException if {@code p <= 0} or {@code p > 1}.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,57,"public GeometricDistribution(RandomGenerator rng, double p) {"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,58,super(rng);
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,60,if (p <= 0 || p > 1) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,61,"throw new OutOfRangeException(LocalizedFormats.OUT_OF_RANGE_LEFT, p, 0, 1);"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,64,probabilityOfSuccess = p;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,68,* Access the probability of success for this distribution.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,70,* @return the probability of success.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,72,public double getProbabilityOfSuccess() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,73,return probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,76,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,77,public double probability(int x) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,78,double ret;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,79,if (x < 0) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,80,ret = 0.0;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,81,} else {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,82,final double p = probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,83,"ret = FastMath.pow(1 - p, x) * p;"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,85,return ret;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,88,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,89,public double cumulativeProbability(int x) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,90,double ret;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,91,if (x < 0) {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,92,ret = 0.0;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,93,} else {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,94,final double p = probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,95,"ret = 1.0 - FastMath.pow(1 - p, x + 1);"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,97,return ret;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,101,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,103,"* For probability parameter {@code p}, the mean is {@code (1 - p) / p}."
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,105,public double getNumericalMean() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,106,final double p = probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,107,return (1 - p) / p;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,111,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,113,"* For probability parameter {@code p}, the variance is"
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,114,* {@code (1 - p) / (p * p)}.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,116,public double getNumericalVariance() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,117,final double p = probabilityOfSuccess;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,118,return (1 - p) / (p * p);
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,122,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,124,* The lower bound of the support is always 0.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,126,* @return lower bound of the support (always 0)
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,128,public int getSupportLowerBound() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,129,return 0;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,133,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,135,* The upper bound of the support is infinite (which we approximate as
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,136,* {@code Integer.MAX_VALUE}).
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,138,* @return upper bound of the support (always Integer.MAX_VALUE)
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,140,public int getSupportUpperBound() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,141,return Integer.MAX_VALUE;
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,145,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,147,* The support of this distribution is connected.
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,149,* @return {@code true}
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,151,public boolean isSupportConnected() {
True,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,src/main/java/org/apache/commons/math3/distribution/GeometricDistribution.java,152,return true;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,7,* You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,12,* governing permissions and limitations under the License.
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,14,package org.apache.commons.math3.distribution;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,16,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,17,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,20,* Test cases for GeometricDistribution.
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,21,* <p>
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,22,* See class javadoc for IntegerDistributionAbstractTest for details.
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,24,* @version $Id$
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,26,public class GeometricDistributionTest extends IntegerDistributionAbstractTest {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,28,// -------------- Implementations for abstract methods --------------------
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,30,/** Creates the default discrete distribution instance to use in tests. */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,31,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,32,public IntegerDistribution makeDistribution() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,33,return new GeometricDistribution(0.40);
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,36,/** Creates the default probability density test input values */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,37,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,38,public int[] makeDensityTestPoints() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,39,"return new int[] { -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,40,"9, 10, 11, 12, 13, 14, 15, 16, 17, 18,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,41,"29, 20, 21, 22, 23, 24, 25, 26, 27, 28 };"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,44,/** Creates the default probability density test expected values */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,45,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,46,public double[] makeDensityTestValues() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,47,return new double[] {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,48,"0.000000e+00, 4.000000e-01, 2.400000e-01, 1.440000e-01,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,49,"8.640000e-02, 5.184000e-02, 3.110400e-02, 1.866240e-02,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,50,"1.119744e-02, 6.718464e-03, 4.031078e-03, 2.418647e-03,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,51,"1.451188e-03, 8.707129e-04, 5.224278e-04, 3.134567e-04,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,52,"1.880740e-04, 1.128444e-04, 6.770664e-05, 4.062398e-05,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,53,"2.437439e-05, 1.462463e-05, 8.774780e-06, 5.264868e-06,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,54,"3.158921e-06, 1.895353e-06, 1.137212e-06, 6.823269e-07,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,55,"4.093961e-07, 2.456377e-07"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,59,/** Creates the default cumulative probability density test input values */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,60,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,61,public int[] makeCumulativeTestPoints() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,62,return makeDensityTestPoints();
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,65,/** Creates the default cumulative probability density test expected values */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,66,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,67,public double[] makeCumulativeTestValues() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,68,return new double[] {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,69,"0.0000000, 0.4000000, 0.6400000, 0.7840000, 0.8704000,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,70,"0.9222400, 0.9533440, 0.9720064, 0.9832038, 0.9899223,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,71,"0.9939534, 0.9963720, 0.9978232, 0.9986939, 0.9992164,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,72,"0.9995298, 0.9997179, 0.9998307, 0.9998984, 0.9999391,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,73,"0.9999634, 0.9999781, 0.9999868, 0.9999921, 0.9999953,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,74,"0.9999972, 0.9999983, 0.9999990, 0.9999994, 0.9999996"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,78,/** Creates the default inverse cumulative probability test input values */
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,79,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,80,public double[] makeInverseCumulativeTestPoints() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,81,return new double[] {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,82,"0.000, 0.005, 0.010, 0.015, 0.020, 0.025, 0.030, 0.035, 0.040,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,83,"0.045, 0.050, 0.055, 0.060, 0.065, 0.070, 0.075, 0.080, 0.085,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,84,"0.090, 0.095, 0.100, 0.105, 0.110, 0.115, 0.120, 0.125, 0.130,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,85,"0.135, 0.140, 0.145, 0.150, 0.155, 0.160, 0.165, 0.170, 0.175,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,86,"0.180, 0.185, 0.190, 0.195, 0.200, 0.205, 0.210, 0.215, 0.220,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,87,"0.225, 0.230, 0.235, 0.240, 0.245, 0.250, 0.255, 0.260, 0.265,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,88,"0.270, 0.275, 0.280, 0.285, 0.290, 0.295, 0.300, 0.305, 0.310,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,89,"0.315, 0.320, 0.325, 0.330, 0.335, 0.340, 0.345, 0.350, 0.355,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,90,"0.360, 0.365, 0.370, 0.375, 0.380, 0.385, 0.390, 0.395, 0.400,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,91,"0.405, 0.410, 0.415, 0.420, 0.425, 0.430, 0.435, 0.440, 0.445,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,92,"0.450, 0.455, 0.460, 0.465, 0.470, 0.475, 0.480, 0.485, 0.490,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,93,"0.495, 0.500, 0.505, 0.510, 0.515, 0.520, 0.525, 0.530, 0.535,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,94,"0.540, 0.545, 0.550, 0.555, 0.560, 0.565, 0.570, 0.575, 0.580,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,95,"0.585, 0.590, 0.595, 0.600, 0.605, 0.610, 0.615, 0.620, 0.625,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,96,"0.630, 0.635, 0.640, 0.645, 0.650, 0.655, 0.660, 0.665, 0.670,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,97,"0.675, 0.680, 0.685, 0.690, 0.695, 0.700, 0.705, 0.710, 0.715,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,98,"0.720, 0.725, 0.730, 0.735, 0.740, 0.745, 0.750, 0.755, 0.760,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,99,"0.765, 0.770, 0.775, 0.780, 0.785, 0.790, 0.795, 0.800, 0.805,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,100,"0.810, 0.815, 0.820, 0.825, 0.830, 0.835, 0.840, 0.845, 0.850,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,101,"0.855, 0.860, 0.865, 0.870, 0.875, 0.880, 0.885, 0.890, 0.895,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,102,"0.900, 0.905, 0.910, 0.915, 0.920, 0.925, 0.930, 0.935, 0.940,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,103,"0.945, 0.950, 0.955, 0.960, 0.965, 0.970, 0.975, 0.980, 0.985,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,104,"0.990, 0.995"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,109,* Creates the default inverse cumulative probability density test expected
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,110,* values
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,112,@Override
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,113,public int[] makeInverseCumulativeTestValues() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,114,return new int[] {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,115,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,116,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,117,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,118,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,119,"1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,120,"1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,121,"1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,122,"2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,123,"3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5,"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,124,"5, 5, 6, 6, 6, 6, 7, 7, 8, 9, 10"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,128,// ----------------- Additional test cases ---------------------------------
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,130,@Test
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,131,public void testMoments() {
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,132,final double tol = 1e-9;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,133,GeometricDistribution dist;
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,135,dist = new GeometricDistribution(0.5);
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,136,"Assert.assertEquals(dist.getNumericalMean(), (1.0d - 0.5d) / 0.5d, tol);"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,137,"Assert.assertEquals(dist.getNumericalVariance(), (1.0d - 0.5d) / (0.5d * 0.5d), tol);"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,139,dist = new GeometricDistribution(0.3);
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,140,"Assert.assertEquals(dist.getNumericalMean(), (1.0d - 0.3d) / 0.3d, tol);"
True,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,src/test/java/org/apache/commons/math3/distribution/GeometricDistributionTest.java,141,"Assert.assertEquals(dist.getNumericalVariance(), (1.0d - 0.3d) / (0.3d * 0.3d), tol);"
