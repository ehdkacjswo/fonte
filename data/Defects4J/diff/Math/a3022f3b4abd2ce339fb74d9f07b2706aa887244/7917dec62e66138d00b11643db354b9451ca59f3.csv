is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,24, Class transforming a symmetrical matrix to tri-diagonal shape.
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,24,* Class transforming a symmetrical matrix to tridiagonal shape.
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,27, tri-diagonal matrix. Both Q and T are m &times; m matrices.</p>
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,28," <p>Transformation to tri-diagonal shape is often not a goal by itself, but it is"
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,27,* tridiagonal matrix. Both Q and T are m &times; m matrices.</p>
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,28,"* <p>This implementation only uses the upper part of the matrix, the part below the"
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,29,* diagonal is not accessed at all.</p>
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,30,"* <p>Transformation to tridiagonal shape is often not a goal by itself, but it is"
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,30, EigenValuesDecomposition Eigen Values Decomposition}. This class is therefore
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,31, intended for internal use by the library and is not public. As a consequence of
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,32," this explicitly limited scope, many methods directly returns references to"
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,33," internal arrays, not copies.</p>"
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,32,* EigenDecomposition eigen decomposition}. This class is therefore intended for internal
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,33,"* use by the library and is not public. As a consequence of this explicitly limited scope,"
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,34,"* many methods directly returns references to internal arrays, not copies.</p>"
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,61, Build the transformation to tri-diagonal shape of a symmetrical matrix.
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,62,* Build the transformation to tridiagonal shape of a symmetrical matrix.
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,70,"hrow new InvalidMatrixException(""transformation to tri-diagonal requires that the matrix be square"");"
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,71,"throw new InvalidMatrixException(""transformation to tridiagonal requires that the matrix be square"");"
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,143, Returns the tri-diagonal matrix T of the transform.
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,144,* Returns the tridiagonal matrix T of the transform.
False,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,204, Transform original matrix to tri-diagonal form.
True,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java,205,* Transform original matrix to tridiagonal form.
