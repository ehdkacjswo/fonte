is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,55,/** Set the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,56,* @param maxEvaluations maximal number of function evaluations
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,58,void setMaxEvaluations(int maxEvaluations);
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,60,/** Get the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,61,* @return maximal number of functions evaluations
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java,63,int getMaxEvaluations();
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,51,/** Set the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,52,* @param maxEvaluations maximal number of function evaluations
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,54,void setMaxEvaluations(int maxEvaluations);
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,56,/** Get the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,57,* @return maximal number of functions evaluations
True,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java,59,int getMaxEvaluations();
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,56,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,57,private int maxEvaluations;
False,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,83,his.maxIterations            = Integer.MAX_VALUE;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,92,setMaxIterations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,93,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,145,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,146,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,147,this.maxEvaluations = maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,150,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,151,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,152,return maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java,191,optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,55,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,56,private int maxEvaluations;
False,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,83,his.maxIterations            = Integer.MAX_VALUE;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,92,setMaxIterations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,93,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,145,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,146,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,147,this.maxEvaluations = maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,150,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,151,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,152,return maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java,191,optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);
False,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,84,his.maxIterations    = Integer.MAX_VALUE;
True,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,89,setMaxIterations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java,90,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,50,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,51,private int maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,56,/** Number of evaluations already performed for all starts. */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,57,private int totalEvaluations;
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,74,his.maxIterations    = Integer.MAX_VALUE;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,84,setMaximalIterationCount(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,85,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,113,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,114,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,115,return maxEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,118,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,119,public int getEvaluations() {
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,120,return totalEvaluations;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,153,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,154,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,155,this.maxEvaluations = maxEvaluations;
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,187,ptima          = new double[starts];
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,188,otalIterations = 0;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,209,optima           = new double[starts];
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,210,totalIterations  = 0;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,211,totalEvaluations = 0;
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,218,optimizer.setMaxEvaluations(maxEvaluations - totalEvaluations);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,228,totalEvaluations += optimizer.getEvaluations();
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,33,/** Set the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,34,* @param maxEvaluations maximal number of function evaluations
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,36,void setMaxEvaluations(int maxEvaluations);
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,38,/** Get the maximal number of functions evaluations.
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,39,* @return maximal number of functions evaluations
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,41,int getMaxEvaluations();
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,43,/** Get the number of evaluations of the objective function.
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,44,* <p>
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,45,* The number of evaluations corresponds to the last call to the
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,46,"* {@link #optimize(UnivariateRealFunction, GoalType, double, double) optimize}"
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,47,* method. It is 0 if the method has not been called yet.
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,48,* </p>
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,49,* @return number of evaluations of the objective function
True,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java,51,int getEvaluations();
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,102,** Maximal number of evaluations allowed. */
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,103,rivate int maxEvaluations;
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,105,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,106,private int maxEvaluations;
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,339, @exception FunctionEvaluationException if no value can be computed for the parameters
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,339,* @exception FunctionEvaluationException if no value can be computed for the
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,340,* parameters or if the maximal number of evaluations is exceeded
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,341, @exception OptimizationException if the maximal number of evaluations is exceeded
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,344,"hrows FunctionEvaluationException, OptimizationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,344,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,346,hrow new OptimizationException(new MaxEvaluationsExceededException(maxEvaluations));
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,346,"throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),"
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,347,x);
False,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,363,", simplex.length);"
True,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java,364,"n, startConfiguration.length);"
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,21,import org.apache.commons.math.MaxEvaluationsExceededException;
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,54,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,55,private int maxEvaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,112,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,130,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,131,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,132,this.maxEvaluations = maxEvaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,135,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,136,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,137,return maxEvaluations;
False,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,152,f (++iterations > maxIterations) {
False,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,153,hrow new OptimizationException(new MaxIterationsExceededException(maxIterations));
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,167,throw new OptimizationException(new MaxIterationsExceededException(maxIterations));
False,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,182, or its dimension doesn't match problem dimension
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,195,* or its dimension doesn't match problem dimension or maximal number of
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,196,* of evaluations is exceeded
False,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,187,+objectiveEvaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,201,if (++objectiveEvaluations > maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,202,"throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),"
True,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,203,point);
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,21,import org.apache.commons.math.MaxEvaluationsExceededException;
False,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,39,mplements DifferentiableMultivariateRealOptimizer{
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,40,implements DifferentiableMultivariateRealOptimizer {
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,51,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,52,private int maxEvaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,82,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,100,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,101,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,102,this.maxEvaluations = maxEvaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,105,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,106,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,107,return maxEvaluations;
False,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,122,f (++iterations > maxIterations) {
False,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,123,hrow new OptimizationException(new MaxIterationsExceededException(maxIterations));
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,137,throw new OptimizationException(new MaxIterationsExceededException(maxIterations));
False,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,145, or its dimension doesn't match problem dimension
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,158,* or its dimension doesn't match problem dimension or the maximal number
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,159,* of iterations is exceeded
False,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,149,+evaluations;
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,163,if (++evaluations > maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,164,"throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),"
True,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,165,point);
False,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,87,f (++iterations > maxIterations) {
False,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,88,hrow new OptimizationException(new MaxIterationsExceededException(maxIterations));
True,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,87,throw new OptimizationException(new MaxIterationsExceededException(maxIterations));
False,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,105,terations = 0;
True,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,103,iterations  = 0;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,21,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,23,import org.apache.commons.math.MaxEvaluationsExceededException;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,24,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,49,/** Maximal number of evaluations allowed. */
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,50,private int maxEvaluations;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,52,/** Number of evaluations already performed. */
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,53,private int evaluations;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,57,* FunctionEvaluationExceptionFunctionEvaluationException
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,67,setMaxEvaluations(Integer.MAX_VALUE);
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,125,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,126,public void setMaxEvaluations(int maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,127,this.maxEvaluations = maxEvaluations;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,130,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,131,public int getMaxEvaluations() {
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,132,return maxEvaluations;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,135,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,136,public int getEvaluations() {
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,137,return evaluations;
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,141,* Compute the objective function value.
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,142,* @param point point at which the objective function must be evaluated
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,143,* @return objective function value at specified point
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,144,* @exception FunctionEvaluationException if the function cannot be evaluated
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,145,* or the maximal number of iterations is exceeded
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,147,"protected double computeObjectiveValue(final UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,148,final double point)
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,149,throws FunctionEvaluationException {
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,150,if (++evaluations > maxEvaluations) {
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,151,"throw new FunctionEvaluationException(new MaxEvaluationsExceededException(maxEvaluations),"
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,152,point);
True,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java,154,return f.value(point);
False,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,95,ouble fx = f.value(x);
True,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,95,"double fx = computeObjectiveValue(f, x);"
False,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,148,ouble fu = f.value(u);
True,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,148,"double fu = computeObjectiveValue(f, u);"
False,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,199, catch (OptimizationException oe) {
False,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,200,f (oe.getCause() instanceof ConvergenceException) {
False,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,201,hrow (ConvergenceException) oe.getCause();
True,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,199,} catch (FunctionEvaluationException fee) {
True,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,200,if (fee.getCause() instanceof ConvergenceException) {
True,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,201,throw (ConvergenceException) fee.getCause();
False,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,203,hrow oe;
True,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java,203,throw fee;
