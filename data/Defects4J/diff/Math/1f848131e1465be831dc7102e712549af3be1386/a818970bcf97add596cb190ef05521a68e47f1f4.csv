is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,678,"hrows NullArgumentException, DimensionMismatchException {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,678,"throws NullArgumentException,"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,679,DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,680,final int yListLen = yList.length;
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,681,final int len = x.length;
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,683,// Consistency checks.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,687,for (int j = 0; j < yListLen; j++) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,688,final double[] y = yList[j];
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,689,if (y == null) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,690,throw new NullArgumentException();
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,692,if (y.length != len) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,693,"throw new DimensionMismatchException(y.length, len);"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,683,inal int len = x.length;
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,684,"inal List<Pair<Double, double[]>> list"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,685," new ArrayList<Pair<Double, double[]>>(len);"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,687,inal int yListLen = yList.length;
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,697,"// Associate each abscissa ""x[i]"" with its index ""i""."
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,698,"final List<Pair<Double, Integer>> list"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,699,"= new ArrayList<Pair<Double, Integer>>(len);"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,689,inal double[] yValues = new double[yListLen];
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,690,or (int j = 0; j < yListLen; j++) {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,691,ouble[] y = yList[j];
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,692,f (y == null) {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,693,hrow new NullArgumentException();
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,695,f (y.length != len) {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,696,"hrow new DimensionMismatchException(y.length, len);"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,698,Values[j] = y[i];
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,700,"ist.add(new Pair<Double, double[]>(x[i], yValues));"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,701,"list.add(new Pair<Double, Integer>(x[i], i));"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,703,"inal Comparator<Pair<Double, double[]>> comp"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,704," new Comparator<Pair<Double, double[]>>() {"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,705,"ublic int compare(Pair<Double, double[]> o1,"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,706,"air<Double, double[]> o2) {"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,707,nt val;
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,708,witch (dir) {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,709,ase INCREASING:
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,710,al = o1.getKey().compareTo(o2.getKey());
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,711,reak;
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,712,ase DECREASING:
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,713,al = o2.getKey().compareTo(o1.getKey());
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,714,reak;
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,715,efault:
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,716,/ Should never happen.
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,717,hrow new MathInternalError();
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,719,eturn val;
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,704,// Create comparators for increasing and decreasing orders.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,705,"final Comparator<Pair<Double, Integer>> comp"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,706,= dir == MathArrays.OrderDirection.INCREASING ?
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,707,"new Comparator<Pair<Double, Integer>>() {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,708,"public int compare(Pair<Double, Integer> o1,"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,709,"Pair<Double, Integer> o2) {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,710,return o1.getKey().compareTo(o2.getKey());
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,712,"} : new Comparator<Pair<Double,Integer>>() {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,713,"public int compare(Pair<Double, Integer> o1,"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,714,"Pair<Double, Integer> o2) {"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,715,return o2.getKey().compareTo(o1.getKey());
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,719,// Sort.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,722,// Modify the original array so that its elements are in
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,723,// the prescribed order.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,724,// Retrieve indices of original locations.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,725,final int[] indices = new int[len];
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,726,"inal Pair<Double, double[]> e = list.get(i);"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,727,"final Pair<Double, Integer> e = list.get(i);"
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,728,inal double[] yValues = e.getValue();
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,729,or (int j = 0; j < yListLen; j++) {
False,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,730,List[j][i] = yValues[j];
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,729,indices[i] = e.getValue();
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,732,"// In each of the associated arrays, move the"
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,733,// elements to their new location.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,734,for (int j = 0; j < yListLen; j++) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,735,// Input array will be modified in place.
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,736,final double[] yInPlace = yList[j];
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,737,final double[] yOrig = yInPlace.clone();
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,739,for (int i = 0; i < len; i++) {
True,src/main/java/org/apache/commons/math3/util/MathArrays.java,src/main/java/org/apache/commons/math3/util/MathArrays.java,740,yInPlace[i] = yOrig[indices[i]];
