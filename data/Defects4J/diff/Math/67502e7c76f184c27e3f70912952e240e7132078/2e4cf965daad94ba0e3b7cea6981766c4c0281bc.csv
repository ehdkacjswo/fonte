is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,23,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,87, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,88, if {@code x} or {@code y} are not strictly increasing.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,88,* @throws NonMonotonicSequenceException if {@code x} or {@code y} are
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,89,* not strictly increasing.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,97,hrows DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,98,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,99,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,100,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,158,"ublic double value(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,161,"public double value(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,162,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,183,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,184,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,185,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,180,"ublic double partialDerivativeX(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,187,"public double partialDerivativeX(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,188,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,196,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,197,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,198,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,189,"ublic double partialDerivativeY(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,200,"public double partialDerivativeY(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,201,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,209,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,210,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,211,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,198,"ublic double partialDerivativeXX(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,213,"public double partialDerivativeXX(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,214,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,222,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,223,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,224,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,207,"ublic double partialDerivativeYY(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,226,"public double partialDerivativeYY(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,227,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,234,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,235,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,236,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,215,"ublic double partialDerivativeXY(double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,238,"public double partialDerivativeXY(double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,239,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,248,* @throws OutOfRangeException if {@code x} (resp. {@code y}) is outside
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,249,* the range defined by the boundary values of {@code xval} (resp.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,250,* {@code yval}).
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,225,"rivate double partialDerivative(int which, double x, double y) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,252,"private double partialDerivative(int which, double x, double y)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,253,throws OutOfRangeException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,270, range defined by the end values of {@code val}.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java,298,* range defined by the boundary values of {@code val}.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,24,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,38,inal double[][] fval) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,40,final double[][] fval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,41,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,42,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,43,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,121," Compute the next index of an array, clipping if necessary."
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,122, It is assumed (but not checked) that {@code i} is larger than or equal to 0}.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,126,"* Computes the next index of an array, clipping if necessary."
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,127,* It is assumed (but not checked) that {@code i >= 0}.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,124, @param i Index
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,125, @param max Upper limit of the array
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,126, @return the next index
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,129,* @param i Index.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,130,* @param max Upper limit of the array.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,131,* @return the next index.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,133," Compute the previous index of an array, clipping if necessary."
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,134, It is assumed (but not checked) that {@code i} is smaller than the size of the array.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,138,"* Computes the previous index of an array, clipping if necessary."
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,139,* It is assumed (but not checked) that {@code i} is smaller than the size
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,140,* of the array.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,136, @param i Index
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,137, @return the previous index
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,142,* @param i Index.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java,143,* @return the previous index.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,21,import org.apache.commons.math3.exception.NoDataException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,38, @throws org.apache.commons.math3.exception.NoDataException if any of
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,39, the arrays has zero length.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,40, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,41, if the array lengths are inconsistent.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,40,* @throws NoDataException if any of the arrays has zero length.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,41,* @throws DimensionMismatchException if the array lengths are inconsistent.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,44,ouble[][] fval);
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,44,double[][] fval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,45,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java,46,DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,22,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,23,import org.apache.commons.math3.exception.NoDataException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,24,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,25,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,47, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,48, if the array lengths are different.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,49, @throws org.apache.commons.math3.exception.NumberIsTooSmallException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,50, if the number of points is less than 2.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,51, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,52, if {@code x} is not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,51,* @throws DimensionMismatchException if the array lengths are different.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,52,* @throws NumberIsTooSmallException if the number of points is less than 2.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,53,* @throws NonMonotonicSequenceException if {@code x} is not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,54,* strictly increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,54,"ublic PolynomialFunctionNewtonForm interpolate(double x[], double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,56,"public PolynomialFunctionNewtonForm interpolate(double x[], double y[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,57,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,58,"NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,59,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,90, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,91, if the array lengths are different.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,92, @throws org.apache.commons.math3.exception.NumberIsTooSmallException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,93, if the number of points is less than 2.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,94, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,95,* @throws DimensionMismatchException if the array lengths are different.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,96,* @throws NumberIsTooSmallException if the number of points is less than 2.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,97,* @throws NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,97,"rotected static double[] computeDividedDifference(final double x[], final double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,100,"protected static double[] computeDividedDifference(final double x[], final double y[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,101,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,102,"NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java,103,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,19,mport org.apache.commons.math3.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,20,mport org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,21,mport org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,22,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,24,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,25,import org.apache.commons.math3.exception.util.LocalizedFormats;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,39, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,40, if {@code x} is not sorted in strict increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,41,* @throws NonMonotonicSequenceException if {@code x} is not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,42,* strict increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,44,"ublic PolynomialSplineFunction interpolate(double x[], double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,46,"public PolynomialSplineFunction interpolate(double x[], double y[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,47,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,48,"NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,49,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,65,olynomialFunction polynomials[] = new PolynomialFunction[n];
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java,70,final PolynomialFunction polynomials[] = new PolynomialFunction[n];
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,28,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,29,import org.apache.commons.math3.exception.NotFiniteNumberException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,50,"mplements UnivariateInterpolator, Serializable {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,52,"implements UnivariateInterpolator, Serializable {"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,146,"ublic LoessInterpolator(double bandwidth, int robustnessIters, double accuracy) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,148,"public LoessInterpolator(double bandwidth, int robustnessIters, double accuracy)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,149,"throws OutOfRangeException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,150,NotPositiveException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,169, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,170, if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,173,* @throws NonMonotonicSequenceException if {@code xval} not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,174,* strictly increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,174, @throws org.apache.commons.math3.exception.NotFiniteNumberException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,175, any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,178,* @throws NotFiniteNumberException if any of the arguments and values are
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,179,* not finite real numbers.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,180,"ublic final PolynomialSplineFunction interpolate(final double[] xval, final double[] yval) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,184,"public final PolynomialSplineFunction interpolate(final double[] xval,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,185,final double[] yval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,186,"throws NonMonotonicSequenceException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,187,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,188,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,189,"NotFiniteNumberException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,190,NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,192, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,193, if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,202,* @throws NonMonotonicSequenceException if {@code xval} not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,203,* strictly increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,197, @throws org.apache.commons.math3.exception.NotFiniteNumberException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,198, any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,207,* @throws NotFiniteNumberException if any of the arguments and values are
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,208,not finite real numbers.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,205,inal double[] weights)  {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,215,final double[] weights)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,216,"throws NonMonotonicSequenceException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,217,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,218,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,219,"NotFiniteNumberException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,220,NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,356, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,357, if {@code xval} not sorted in strictly increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,371,* @throws NonMonotonicSequenceException if {@code xval} not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,372,* strictly increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,361, @throws org.apache.commons.math3.exception.NotFiniteNumberException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,362, any of the arguments and values are not finite real numbers.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,376,* @throws NotFiniteNumberException if any of the arguments and values are
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,377,* not finite real numbers.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,367,"ublic final double[] smooth(final double[] xval, final double[] yval) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,382,"public final double[] smooth(final double[] xval, final double[] yval)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,383,"throws NonMonotonicSequenceException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,384,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,385,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,386,"NotFiniteNumberException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java,387,NumberIsTooSmallException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,128, @param xval the arguments for the interpolation points.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,128,* @param xval Arguments for the interpolation points.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,134, @param yval the values for the interpolation points
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,134,* @param yval Values for the interpolation points.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,150,nitSphereRandomVectorGenerator rand) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,150,UnitSphereRandomVectorGenerator rand)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,151,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,152,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java,153,NullArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,22,import org.apache.commons.math3.exception.NoDataException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,23,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,24,import org.apache.commons.math3.exception.NullArgumentException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,71,inal int exponent) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,74,final int exponent)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,75,"throws NotPositiveException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,76,NotStrictlyPositiveException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,87,inal double[] yval) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,92,final double[] yval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,93,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,94,"NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java,95,NullArgumentException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,22,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,23,import org.apache.commons.math3.exception.NumberIsTooSmallException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,24,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,44, @param x the interpolating points array
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,45, @param y the interpolating values array
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,47,* @param x Interpolating points.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,48,* @param y Interpolating values.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,47, @throws org.apache.commons.math3.exception.DimensionMismatchException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,48, the array lengths are different.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,49, @throws org.apache.commons.math3.exception.NumberIsTooSmallException if
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,50, the number of points is less than 2.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,51, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,52, if two abscissae have the same value.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,50,* @throws DimensionMismatchException if the array lengths are different.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,51,* @throws NumberIsTooSmallException if the number of points is less than 2.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,52,* @throws NonMonotonicSequenceException if two abscissae have the same
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,53,* value.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,54,"ublic PolynomialFunctionLagrangeForm interpolate(double x[], double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,55,"public PolynomialFunctionLagrangeForm interpolate(double x[], double y[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,56,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,57,"NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java,58,NonMonotonicSequenceException {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,73,inal double[][] fval) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,73,final double[][] fval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,74,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java,75,DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,22,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,61, @throws org.apache.commons.math3.exception.NonMonotonicSequenceException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,62, if {@code x} is not sorted in strict increasing order.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,62,* @throws NonMonotonicSequenceException if {@code x} is not sorted in
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,63,* strict increasing order.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,66,"ublic PolynomialSplineFunction interpolate(double x[], double y[]) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,67,"public PolynomialSplineFunction interpolate(double x[], double y[])"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,68,"throws DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,69,"NumberIsTooSmallException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java,70,NonMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,23,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,142," @throws IllegalArgumentException if {@code x}, {@code y} or {@code z}"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,143,"* @throws Exception if {@code x}, {@code y} or {@code z}"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,155,ouble[][][] d3FdXdYdZ) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,156,double[][][] d3FdXdYdZ)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,157,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,158,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,159,NonMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,313,* @throws OutOfRangeException if any of the variables is outside its
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,314,* interpolation range.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,309,"ublic double value(double x, double y, double z) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,316,"public double value(double x, double y, double z)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,317,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,456,"* @throws OutOfRangeException if {@code x}, {@code y} or"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,457,"* {@code z} are not in the interval {@code [0, 1]}."
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,449,"ublic double value(double x, double y, double z) {"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,459,"public double value(double x, double y, double z)"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java,460,throws OutOfRangeException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,21,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,37,inal double[][][] fval) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,38,final double[][][] fval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,39,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,40,"DimensionMismatchException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java,41,NonMonotonicSequenceException {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,20,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,21,import org.apache.commons.math3.exception.NoDataException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,41, @throws org.apache.commons.math3.exception.NoDataException if any of
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,42, the arrays has zero length.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,43, @throws org.apache.commons.math3.exception.DimensionMismatchException
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,44, if the array lengths are inconsistent.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,43,* @throws NoDataException if any of the arrays has zero length.
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,44,* @throws DimensionMismatchException if the array lengths are inconsistent.
False,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,47,ouble[][][] fval);
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,47,double[][][] fval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,48,"throws NoDataException,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java,49,DimensionMismatchException;
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,57,"ouble period,"
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,58,nt extend) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,57,"double period,"
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,58,int extend) {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,73,ouble period) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,73,double period) {
False,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,84,ouble[] yval) {
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,84,double[] yval)
True,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java,85,throws NumberIsTooSmallException {
