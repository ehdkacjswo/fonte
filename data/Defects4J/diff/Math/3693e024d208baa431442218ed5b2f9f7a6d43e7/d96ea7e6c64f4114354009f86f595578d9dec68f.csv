is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,27,ublic class DimensionMismatchException extends MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,28,** First dimension. */
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,29,rivate final int dimension1;
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,31,** Second dimension. */
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,32,rivate final int dimension2;
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,27,public class DimensionMismatchException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,28,/** Correct dimension. */
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,29,private final int dimension;
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,37, @param dimension1 First dimension.
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,38, @param dimension2 Second dimension.
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,34,* @param wrong Wrong dimension.
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,35,* @param expected Expected dimension.
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,40,"ublic DimensionMismatchException(int dimension1,"
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,41,nt dimension2) {
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,42,"uper(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, dimension1, dimension2);"
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,44,his.dimension1 = dimension1;
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,45,his.dimension2 = dimension2;
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,37,"public DimensionMismatchException(int wrong,"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,38,int expected) {
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,39,"super(LocalizedFormats.DIMENSIONS_MISMATCH_SIMPLE, wrong, expected);"
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,40,dimension = expected;
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,49, @return the first dimension.
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,51,ublic int getDimension1() {
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,52,eturn dimension1;
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,55, @return the second dimension.
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,44,* @return the expected dimension.
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,57,ublic int getDimension2() {
False,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,58,eturn dimension2;
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,46,public int getDimension() {
True,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java,47,return dimension;
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,20,import java.util.List;
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,21,import java.util.ArrayList;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,24, This class is not intended to be instantiated directly in most case: it
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,25, should serve as a base class to create all the exceptions that share the
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,26," semantics of the standard {@link IllegalArgumentException}, but must also"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,27, provide a localized message.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,26,* This class is not intended to be instantiated directly: it should serve
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,27,* as a base class to create all the exceptions that share the semantics of
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,28,"* the standard {@link IllegalArgumentException}, but must also provide a"
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,29,* localized message.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,44, @param arguments Arguments.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,46,* @param args Arguments.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,47,bject ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,49,Object ... args) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,49,his.arguments = arguments.clone();
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,51,arguments = flatten(args).toArray();
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,67,* Transform a multidimensional array into a one-dimensional list.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,69,* @param array Array (possibly multidimensional).
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,70,* @return a list of all the {@code Object} instances contained in
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,71,* {@code array}.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,73,private List<Object> flatten(Object[] array) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,74,final List<Object> list = new ArrayList<Object>();
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,75,for (Object o : array) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,76,if (o instanceof Object[]) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,77,list.addAll(flatten((Object[]) o));
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,78,} else {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,79,list.add(o);
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,82,return list;
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,19,import org.apache.commons.math.util.Localizable;
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,22,* Base class for exceptions raised by a wrong number.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,23,* This class is not intended to be instantiated directly: it should serve
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,24,* as a base class to create all the exceptions that are raised because some
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,25,* precondition is violated by a number argument.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,27,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,28,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,30,public class MathIllegalNumberException extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,31,/** Requested. */
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,32,private final Number argument;
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,35,* Construct an exception.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,37,* @param Localizable pattern.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,38,* @param arguments Arguments. The first element must be the requested
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,39,* value that raised the exception.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,41,"protected MathIllegalNumberException(Localizable pattern,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,42,"Number wrong,"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,43,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,44,"super(pattern, wrong, arguments);"
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,45,argument = wrong;
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,49,* @return the requested value.
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,51,public Number getArgument() {
True,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java,52,return argument;
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/MessageFactory.java,47,"eturn new MessageFormat(pattern.getLocalizedString(locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/MessageFactory.java,47,final String locPattern = pattern.getLocalizedString(locale);
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/MessageFactory.java,48,"return (new MessageFormat(locPattern, locale)).format(arguments);"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,19,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,22,* Exception to be thrown when the argument is negative.
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,24,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,27,public class NotPositiveException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,29,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,31,* @param value Argument.
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,33,public NotPositiveException(Number value) {
True,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,src/main/java/org/apache/commons/math/exception/NotPositiveException.java,34,"super(LocalizedFormats.NOT_POSITIVE, value);"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,19,import org.apache.commons.math.util.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,22,* Exception to be thrown when the argument is negative.
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,24,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,25,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,27,public class NotStrictlyPositiveException extends MathIllegalNumberException {
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,29,* Construct the exception.
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,31,* @param value Argument.
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,33,public NotStrictlyPositiveException(Number value) {
True,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java,34,"super(LocalizedFormats.NOT_STRICTLY_POSITIVE, value);"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,27,ublic class OutOfRangeException extends MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,27,public class OutOfRangeException extends MathIllegalNumberException {
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,32,** Requested. */
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,33,rivate final Number requested;
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,38, @param requested Requested value.
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,36,* @param wrong Requested value.
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,42,"ublic OutOfRangeException(Number requested,"
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,40,"public OutOfRangeException(Number wrong,"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,45,"uper(LocalizedFormats.OUT_OF_RANGE_SIMPLE, requested, lo, hi);"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,47,his.requested = requested;
True,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,43,"super(LocalizedFormats.OUT_OF_RANGE_SIMPLE, wrong, lo, hi);"
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,53, @return the requested value.
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,55,ublic Number getRequested() {
False,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,src/main/java/org/apache/commons/math/exception/OutOfRangeException.java,56,eturn requested;
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,83,"IMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,83,"DIMENSIONS_MISMATCH_SIMPLE(""dimensions mismatch {0} != {1}""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,167,"NOT_STRICTLY_POSITIVE(""{0} is not strictly positive""), /* keep */"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,168,"NOT_POSITIVE(""{0} is not positive""), /* keep */"
False,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,225,"UT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""),"
True,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,src/main/java/org/apache/commons/math/util/LocalizedFormats.java,227,"OUT_OF_RANGE_SIMPLE(""{0} out of [{1}, {2}] range""), /* keep */"
