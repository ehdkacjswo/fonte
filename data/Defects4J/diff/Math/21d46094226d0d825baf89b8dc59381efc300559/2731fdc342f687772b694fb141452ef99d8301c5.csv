is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,4,* this work for additional information regarding copyright ownership.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,7,* the License.  You may obtain a copy of the License at
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,14,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,15,* limitations under the License.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,17,package org.apache.commons.math.stat.descriptive;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,20,* Implementation of
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,21,* {@link org.apache.commons.math.stat.descriptive.DescriptiveStatistics} that
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,22,* is safe to use in a mulithreaded environment.  Multiple threads can safely
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,23,* operate on a single instance without causing runtime exceptions due to race
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,24,"* conditions.  In effect, this implementation makes modification and access"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,25,"* methods atomic operations for a signle instance.  That is to say, as one"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,26,"* thread is computing a statistic from the instance, no other thread can modify"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,27,* the instance nor compute another statistic.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,29,"* @version $Revision: 480440 $ $Date: 2006-11-29 01:14:12 -0600 (Wed, 29 Nov 2006) $"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,31,public class SynchronizedDescriptiveStatistics extends DescriptiveStatisticsImpl {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,33,/** Serialization UID */
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,34,private static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,37,* Construct an instance with infinite window
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,39,public SynchronizedDescriptiveStatistics() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,40,this(INFINITE_WINDOW);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,44,* Construct an instance with finite window
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,45,* @param window the finite window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,47,public SynchronizedDescriptiveStatistics(int window) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,48,super(window);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,52,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#addValue(double)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,54,public synchronized void addValue(double v) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,55,super.addValue(v);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,59,* Apply the given statistic to this univariate collection.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,60,* @param stat the statistic to apply
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,61,* @return the computed value of the statistic.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,63,public synchronized double apply(UnivariateStatistic stat) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,64,return super.apply(stat);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,68,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#clear()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,70,public synchronized void clear() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,71,super.clear();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,75,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getElement(int)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,77,public synchronized double getElement(int index) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,78,return super.getElement(index);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,82,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getN()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,84,public synchronized long getN() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,85,return super.getN();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,89,* Returns the standard deviation of the available values.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,90,"* @return The standard deviation, Double.NaN if no values have been added"
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,91,* or 0.0 for a single value set.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,93,public synchronized double getStandardDeviation() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,94,return super.getStandardDeviation();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,98,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#getValues()
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,100,public synchronized double[] getValues() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,101,return super.getValues();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,105,* Access the window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,106,* @return the current window size.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,108,public synchronized int getWindowSize() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,109,return super.getWindowSize();
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,113,* @see org.apache.commons.math.stat.descriptive.DescriptiveStatistics#setWindowSize(int)
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,115,public synchronized void setWindowSize(int windowSize) {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,116,super.setWindowSize(windowSize);
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,120,* Generates a text report displaying univariate statistics from values
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,121,* that have been added.  Each statistic is displayed on a separate
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,122,* line.
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,124,* @return String with line feeds displaying statistics
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,126,public synchronized String toString() {
True,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatistics.java,127,return super.toString();
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,3,* contributor license agreements. See the NOTICE file distributed with this
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,4,* work for additional information regarding copyright ownership. The ASF
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,5,"* licenses this file to You under the Apache License, Version 2.0 (the"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,6,"* ""License""); you may not use this file except in compliance with the License."
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,7,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,9,"* or agreed to in writing, software distributed under the License is"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,10,"* distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,11,"* KIND, either express or implied. See the License for the specific language"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,12,* governing permissions and limitations under the License.
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,14,package org.apache.commons.math.stat.descriptive;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,16,import junit.framework.Test;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,17,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,20,* Test cases for the {@link SynchronizedDescriptiveStatisticsTest} class.
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,21,"* @version $Revision: 566833 $ $Date: 2007-08-16 15:36:33 -0500 (Thu, 16 Aug"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,22,*          2007) $
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,24,public final class SynchronizedDescriptiveStatisticsTest extends DescriptiveStatisticsTest {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,26,public SynchronizedDescriptiveStatisticsTest(String name) {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,27,super(name);
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,30,public static Test suite() {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,31,TestSuite suite = new TestSuite(SynchronizedDescriptiveStatisticsTest.class);
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,32,"suite.setName(""SynchronizedDescriptiveStatistics Tests"");"
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,33,return suite;
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,36,protected DescriptiveStatistics createDescriptiveStatistics() {
True,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SynchronizedDescriptiveStatisticsTest.java,37,return new SynchronizedDescriptiveStatistics();
