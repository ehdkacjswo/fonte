is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,33,private static final double F1 = 1d / RUNS;
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,37,"rivate static final String FMT_DTL = ""%-5s %6d %6.2f %6d %6.2f %6d %6.2f"";"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,38,"private static final String FMT_DTL = ""%-5s %6d %6.1f %6d %6.4f %6d %6.4f"";"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,84,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,85,public void testLog10() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,86,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,87,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,88,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,89,x += StrictMath.log10(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,90,long strictMath = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,92,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,93,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,94,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,95,x += FastMath.log10(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,96,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,98,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,99,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,100,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,101,x += Math.log10(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,102,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,104,"report(""log10"",strictMath,fastTime,mathTime);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,107,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,108,public void testLog1p() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,109,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,110,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,111,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,112,x += StrictMath.log1p(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,113,long strictMath = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,115,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,116,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,117,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,118,x += FastMath.log1p(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,119,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,121,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,122,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,123,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,124,x += Math.log1p(Math.PI + i/* 1.0 + i/1e9 */);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,125,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,127,"report(""log1p"",strictMath,fastTime,mathTime);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,87," += StrictMath.pow(Math.PI + i / 1e6, i / 1e6);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,135,"x += StrictMath.pow(Math.PI + i * F1, i * F1);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,93," += FastMath.pow(Math.PI + i / 1e6, i / 1e6);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,141,"x += FastMath.pow(Math.PI + i * F1, i * F1);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,99," += Math.pow(Math.PI + i / 1e6, i / 1e6);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,147,"x += Math.pow(Math.PI + i * F1, i * F1);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,109, += StrictMath.exp(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,157,x += StrictMath.exp(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,115, += FastMath.exp(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,163,x += FastMath.exp(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,121, += Math.exp(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,169,x += Math.exp(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,132, += StrictMath.sin(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,180,x += StrictMath.sin(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,138, += FastMath.sin(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,186,x += FastMath.sin(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,144, += Math.sin(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,192,x += Math.sin(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,178, += StrictMath.cos(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,226,x += StrictMath.cos(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,184, += FastMath.cos(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,232,x += FastMath.cos(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,190, += Math.cos(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,238,x += Math.cos(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,223, += StrictMath.tan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,271,x += StrictMath.tan(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,229, += FastMath.tan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,277,x += FastMath.tan(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,235, += Math.tan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,283,x += Math.tan(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,246, += StrictMath.atan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,294,x += StrictMath.atan(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,252, += FastMath.atan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,300,x += FastMath.atan(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,258, += Math.atan(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,306,x += Math.atan(i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,312,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,313,public void testAtan2() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,314,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,315,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,316,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,317,"x += StrictMath.atan2(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,318,long strictTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,320,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,321,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,322,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,323,"x += FastMath.atan2(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,324,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,326,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,327,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,328,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,329,"x += Math.atan2(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,330,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,332,"report(""atan2"",strictTime,fastTime,mathTime);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,335,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,336,public void testHypot() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,337,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,338,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,339,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,340,"x += StrictMath.hypot(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,341,long strictTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,343,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,344,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,345,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,346,"x += FastMath.hypot(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,347,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,349,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,350,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,351,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,352,"x += Math.hypot(i * F1, i * F1);"
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,353,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,355,"report(""hypot"",strictTime,fastTime,mathTime);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,269, += StrictMath.cbrt(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,363,x += StrictMath.cbrt(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,275, += FastMath.cbrt(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,369,x += FastMath.cbrt(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,281, += Math.cbrt(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,375,x += Math.cbrt(i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,381,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,382,public void testSqrt() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,383,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,384,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,385,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,386,x += StrictMath.sqrt(i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,387,long strictTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,389,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,390,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,391,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,392,x += FastMath.sqrt(i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,393,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,395,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,396,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,397,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,398,x += Math.sqrt(i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,399,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,401,"report(""sqrt"",strictTime,fastTime,mathTime);"
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,292, += StrictMath.cosh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,409,x += StrictMath.cosh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,298, += FastMath.cosh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,415,x += FastMath.cosh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,304, += Math.cosh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,421,x += Math.cosh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,315, += StrictMath.sinh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,432,x += StrictMath.sinh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,321, += FastMath.sinh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,438,x += FastMath.sinh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,327, += Math.sinh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,444,x += Math.sinh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,338, += StrictMath.tanh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,455,x += StrictMath.tanh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,344, += FastMath.tanh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,461,x += FastMath.tanh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,350, += Math.tanh(i / 1000000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,467,x += Math.tanh(i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,361, += StrictMath.expm1(-i / 100000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,478,x += StrictMath.expm1(-i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,367, += FastMath.expm1(-i / 100000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,484,x += FastMath.expm1(-i * F1);
False,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,373, += Math.expm1(-i / 100000.0);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,490,x += Math.expm1(-i * F1);
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,495,@Test
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,496,public void testAbs() {
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,497,double x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,498,long time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,499,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,500,x += StrictMath.abs(i * (1 - 0.5 * RUNS));
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,501,long strictTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,503,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,504,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,505,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,506,x += FastMath.abs(i * (1 - 0.5 * RUNS));
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,507,long fastTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,509,x = 0;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,510,time = System.nanoTime();
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,511,for (int i = 0; i < RUNS; i++)
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,512,x += Math.abs(i * (1 - 0.5 * RUNS));
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,513,long mathTime = System.nanoTime() - time;
True,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java,515,"report(""abs"",strictTime,fastTime,mathTime);"
