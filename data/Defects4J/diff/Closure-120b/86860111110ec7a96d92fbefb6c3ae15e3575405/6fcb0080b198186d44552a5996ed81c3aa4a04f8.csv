is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,42,import com.google.javascript.rhino.jstype.ObjectType;
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,44,import java.util.List;
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,45,import java.util.Set;
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,91,@Override
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,92,Iterable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,93,return getOwnerFunction().getImplementedInterfaces();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,47,import com.google.common.collect.Iterables;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,387,eturn implementedInterfaces;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,388,FunctionType superCtor = isConstructor() ?
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,389,getSuperClassConstructor() : null;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,390,if (superCtor == null) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,391,return implementedInterfaces;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,392,} else {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,393,return Iterables.concat(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,394,"implementedInterfaces, superCtor.getImplementedInterfaces());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,46,import java.util.Set;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,149,Override
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,150,ublic boolean isSubtype(JSType that) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,151,f (super.isSubtype(that)) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,152,eturn true;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,154,terable<ObjectType> thisInterfaces =
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,155,etConstructor().getImplementedInterfaces();
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,156,f (thisInterfaces != null) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,157,ist<ObjectType> thatInterfaces = that.keepAssignableInterfaces();
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,158,or (ObjectType thatInterface : thatInterfaces) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,159,or (ObjectType thisInterface : thisInterfaces) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,160,f (thisInterface.isSubtype(thatInterface)) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,161,eturn true;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,166,eturn false;
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,175,@Override
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,176,Iterable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,177,return getConstructor().getImplementedInterfaces();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,828, Computes the list of interfaces that can be assigned to this type.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,829, @return A list of interface types (may contain duplicates).
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,831,ist<ObjectType> keepAssignableInterfaces() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,832,eturn visit(keepAssignableInterfacesVisitor);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,836, @see #keepAssignableInterfaces()
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,838,rivate static final Visitor<List<ObjectType>>
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,839,eepAssignableInterfacesVisitor =
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,840,ew Visitor<List<ObjectType>>() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,841,ublic List<ObjectType> caseEnumElementType(EnumElementType type) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,842,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,845,ublic List<ObjectType> caseAllType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,846,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,849,ublic List<ObjectType> caseNoObjectType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,850,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,853,ublic List<ObjectType> caseNoType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,854,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,857,ublic List<ObjectType> caseBooleanType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,858,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,861,ublic List<ObjectType> caseFunctionType(FunctionType type) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,862,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,865,ublic List<ObjectType> caseNullType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,866,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,869,ublic List<ObjectType> caseNumberType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,870,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,873,ublic List<ObjectType> caseObjectType(ObjectType type) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,874,f (type.getConstructor() != null &&
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,875,ype.getConstructor().isInterface()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,876,eturn ImmutableList.of(type);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,877, else {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,878,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,882,ublic List<ObjectType> caseStringType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,883,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,886,ublic List<ObjectType> caseUnionType(UnionType type) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,887,ist<ObjectType> lst = Lists.newArrayList();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,888,or (JSType alternate : type.getAlternates()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,889,st.addAll(alternate.keepAssignableInterfaces());
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,891,eturn lst;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,894,ublic List<ObjectType> caseUnknownType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,895,eturn ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,898,ublic List<ObjectType> caseVoidType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,899,eturn ImmutableList.of();
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,45,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,46,import com.google.common.collect.ImmutableSet;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,51,import java.util.List;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,444,* Gets the interfaces implemented by the ctor associated with this type.
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,445,* Intended to be overridden by subclasses.
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,447,Iterable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,448,return ImmutableSet.of();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,48,import java.util.List;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,365,// Union types
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,366,if (that instanceof UnionType) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,367,// The static {@code JSType.isSubtype} check already decomposed
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,368,"// union types, so we don't need to check those again."
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,369,return false;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,368,/ prototype based objects
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,369,bjectType thatObj = ObjectType.cast(that);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,377,// Interfaces
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,378,// Find all the interfaces implemented by this class and compare each one
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,379,// to the interface instance.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,380,ObjectType thatObj = that.toObjectType();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,381,ObjectType thatCtor = thatObj == null ? null : thatObj.getConstructor();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,382,if (thatCtor != null && thatCtor.isInterface()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,383,Iterable<ObjectType> thisInterfaces = getCtorImplementedInterfaces();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,384,for (ObjectType thisInterface : thisInterfaces) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,385,if (thisInterface.isSubtype(that)) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,386,return true;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,391,// other prototype based objects
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,44,import java.util.List;
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,153,@Override
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,154,Iterable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,155,return referencedType.getCtorImplementedInterfaces();
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4099,public void testBug2341812() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4100,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4101,"""/** @interface */"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4102,"""function EventTarget() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4103,"""/** @constructor \n * @implements {EventTarget} */"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4104,"""function Node() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4105,"""/** @type {number} */ Node.prototype.index;"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4106,"""/** @param {EventTarget} x \n * @return {string} */"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4107,"""function foo(x) { return x.index; }"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,74,private ObjectType interfaceInstType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,126,interfaceInstType = interfaceType.getInstanceType();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,129,ists.<ObjectType>newArrayList(interfaceType.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,131,Lists.<ObjectType>newArrayList(interfaceInstType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4716,public void testInterfaceInstanceSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4717,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4718,"ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4719,"OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4720,"interfaceInstType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4721,"googBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4722,"googBarInst,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4723,"googSubBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4724,"googSubBarInst,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4725,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4726,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4727,verifySubtypeChain(typeChain);
