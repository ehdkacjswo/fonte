is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,644,/** Whitelist used in the renaming of CSS class names. */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,645,Set<String> cssRenamingWhitelist;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,941,cssRenamingWhitelist = null;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1893,public void setCssRenamingWhitelist(Set<String> whitelist) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,1894,this.cssRenamingWhitelist = whitelist;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1033,"new ReplaceCssNames(compiler, newCssNames)).process("
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1034,"xterns, jsRoot);"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1033,ReplaceCssNames pass = new ReplaceCssNames(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1034,"compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1035,"newCssNames,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1036,options.cssRenamingWhitelist);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1037,"pass.process(externs, jsRoot);"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,30,import java.util.Set;
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,114,private final Set<String> whitelist;
False,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,116,"Nullable Map<String, Integer> cssNames) {"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,119,"@Nullable Map<String, Integer> cssNames,"
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,120,@Nullable Set<String> whitelist) {
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,123,this.whitelist = whitelist;
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,211,if (whitelist != null && whitelist.contains(name)) {
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,212,"// We apply the whitelist before splitting on dashes, and not after."
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,213,// External substitution maps should do the same.
True,src/com/google/javascript/jscomp/ReplaceCssNames.java,src/com/google/javascript/jscomp/ReplaceCssNames.java,214,return;
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,23,import com.google.common.collect.ImmutableSet;
False,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,24,mport com.google.javascript.jscomp.CheckLevel;
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,28,import java.util.Set;
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,62,Set<String> whitelist;
False,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,68,"eturn new ReplaceCssNames(compiler, cssNames) {"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,70,"return new ReplaceCssNames(compiler, cssNames, whitelist) {"
False,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,193,"setClass('inactive-buttonbar')"", null, UNKNOWN_SYMBOL_WARNING);"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,195,"""setClass('inactive-buttonbar')"", null, UNKNOWN_SYMBOL_WARNING);"
False,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,204,"ull, UNEXPECTED_STRING_LITERAL_ERROR);"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,206,"null, UNEXPECTED_STRING_LITERAL_ERROR);"
False,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,277,"eplaceCssNames replacer = new ReplaceCssNames(compiler, null);"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,279,"ReplaceCssNames replacer = new ReplaceCssNames(compiler, null, null);"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,286,public void testWhitelistByPart() {
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,287,"whitelist = ImmutableSet.<String>of(""goog"", ""elephant"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,288,"test(""var x = goog.getCssName('goog')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,289,"""var x = 'goog'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,290,"test(""var x = goog.getCssName('elephant')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,291,"""var x = 'elephant'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,292,"// Whitelisting happens before splitting, not after."
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,293,"test(""var x = goog.getCssName('goog-elephant')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,294,"""var x = 'g-e'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,297,public void testWhitelistByWhole() {
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,298,"whitelist = ImmutableSet.<String>of(""long-prefix"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,299,renamingMap = getFullMap();
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,300,"test(""var x = goog.getCssName('long-prefix')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,301,"""var x = 'long-prefix'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,304,public void testWhitelistWithDashes() {
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,305,"whitelist = ImmutableSet.<String>of(""goog-elephant"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,306,"test(""var x = goog.getCssName('goog')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,307,"""var x = 'g'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,308,"test(""var x = goog.getCssName('elephant')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,309,"""var x = 'e'"");"
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,310,"test(""var x = goog.getCssName('goog-elephant')"","
True,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,test/com/google/javascript/jscomp/ReplaceCssNamesTest.java,311,"""var x = 'goog-elephant'"");"
