is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,328,/ Single operators are valid if the child is valid.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,328,// Binary operators are only valid if both children are valid.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,329,case Token.ADD:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,334,case Token.DIV:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,335,case Token.EQ:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,336,case Token.GE:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,337,case Token.GT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,338,case Token.LE:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,339,case Token.LSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,340,case Token.LT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,341,case Token.MOD:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,342,case Token.MUL:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,343,case Token.NE:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,344,case Token.RSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,345,case Token.SHEQ:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,346,case Token.SHNE:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,347,case Token.SUB:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,348,case Token.URSH:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,349,"return isValidDefineValue(val.getFirstChild(), defines)"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,350,"&& isValidDefineValue(val.getLastChild(), defines);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,352,// Uniary operators are valid if the child is valid.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,355,case Token.POS:
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,21,import com.google.common.collect.ImmutableSet;
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1071,public void testValidDefine() {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1072,"assertTrue(testValidDefineValue(""1""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1073,"assertTrue(testValidDefineValue(""-3""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1074,"assertTrue(testValidDefineValue(""true""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1075,"assertTrue(testValidDefineValue(""false""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1076,"assertTrue(testValidDefineValue(""'foo'""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1078,"assertFalse(testValidDefineValue(""x""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1079,"assertFalse(testValidDefineValue(""null""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1080,"assertFalse(testValidDefineValue(""undefined""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1081,"assertFalse(testValidDefineValue(""NaN""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1083,"assertTrue(testValidDefineValue(""!true""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1084,"assertTrue(testValidDefineValue(""-true""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1085,"assertTrue(testValidDefineValue(""1 & 8""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1086,"assertTrue(testValidDefineValue(""1 + 8""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1087,"assertTrue(testValidDefineValue(""'a' + 'b'""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1089,"assertFalse(testValidDefineValue(""1 & foo""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1092,private boolean testValidDefineValue(String js) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1093,"Node script = parse(""var test = "" + js +"";"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1094,Node var = script.getFirstChild();
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1095,Node name = var.getFirstChild();
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1096,Node value = name.getFirstChild();
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1098,ImmutableSet<String> defines = ImmutableSet.of();
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1099,"return NodeUtil.isValidDefineValue(value, defines);"
False,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,87,ublic void testDefineWithBadValue() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,87,public void testDefineWithBadValue1() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,92,public void testDefineWithBadValue2() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,93,"test(""/** @define {string} */ var DEF = 'x' + y;"", null,"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,94,ProcessDefines.INVALID_DEFINE_INIT_ERROR);
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,140,public void testOverridingString0() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,141,test(
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,142,"""/** @define {string} */ var DEF_OVERRIDE_STRING = 'x';"","
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,143,"""var DEF_OVERRIDE_STRING=\""x\"""");"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,146,public void testOverridingString1() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,147,test(
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,148,"""/** @define {string} */ var DEF_OVERRIDE_STRING = 'x' + 'y';"","
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,149,"""var DEF_OVERRIDE_STRING=\""x\"" + \""y\"""");"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,152,public void testOverridingString2() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,153,"overrides.put(""DEF_OVERRIDE_STRING"", Node.newString(""foo""));"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,154,test(
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,155,"""/** @define {string} */ var DEF_OVERRIDE_STRING = 'x';"","
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,156,"""var DEF_OVERRIDE_STRING=\""foo\"""");"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,159,public void testOverridingString3() {
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,160,"overrides.put(""DEF_OVERRIDE_STRING"", Node.newString(""foo""));"
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,161,test(
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,162,"""/** @define {string} */ var DEF_OVERRIDE_STRING = 'x' + 'y';"","
True,test/com/google/javascript/jscomp/ProcessDefinesTest.java,test/com/google/javascript/jscomp/ProcessDefinesTest.java,163,"""var DEF_OVERRIDE_STRING=\""foo\"""");"
