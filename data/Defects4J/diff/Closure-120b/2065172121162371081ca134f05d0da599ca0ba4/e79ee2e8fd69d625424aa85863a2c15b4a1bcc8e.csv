is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1030,f (fnType.getTemplateKeys().isEmpty()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1030,if (fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()) {
False,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1178,f (fnType.getTemplateKeys().isEmpty()) {
True,src/com/google/javascript/jscomp/TypeInference.java,src/com/google/javascript/jscomp/TypeInference.java,1178,if (fnType.getTemplateTypeMap().getTemplateKeys().isEmpty()) {
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,189,f (!funType.getTemplateKeys().isEmpty()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,189,if (!funType.getTemplateTypeMap().getTemplateKeys().isEmpty()) {
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,191,"b.append(Joiner.on("","").join(funType.getTemplateKeys()));"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,191,"sb.append(Joiner.on("","").join("
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,192,funType.getTemplateTypeMap().getTemplateKeys()));
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,rivate ImmutableList<String> templateKeys = ImmutableList.of();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,60,private TemplateTypeMap templateTypeMap = null;
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,ublic FunctionBuilder withTemplateKeys(
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,mmutableList<String> templateKeys) {
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,124,his.templateKeys = templateKeys;
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,122,public FunctionBuilder withTemplateKeys(ImmutableList<String> templateKeys) {
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,123,"this.templateTypeMap = registry.createTemplateTypeMap(templateKeys, null);"
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,153,his.templateKeys = otherType.getTemplateKeys();
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,152,this.templateTypeMap = otherType.getTemplateTypeMap();
False,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,163,"ypeOfThis, templateKeys, isConstructor, isNativeType);"
True,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,src/com/google/javascript/rhino/jstype/FunctionBuilder.java,162,"typeOfThis, templateTypeMap, isConstructor, isNativeType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,"mmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,136,"TemplateTypeMap templateTypeMap,"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,140,"ativeType, templateKeys, null);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,140,"nativeType, templateTypeMap);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,151,"ypeOfThis : new InstanceObjectType(registry, this, nativeType, null);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,151,"typeOfThis : new InstanceObjectType(registry, this, nativeType);"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,380,"sNativeObjectType(), null, null),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,380,"isNativeObjectType(), null),"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,609,withTemplateKeys(getTemplateKeys())
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,609,.withTemplateKeys(getTemplateTypeMap().getTemplateKeys())
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,628,withTemplateKeys(getTemplateKeys());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,628,.withTemplateKeys(getTemplateTypeMap().getTemplateKeys());
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,654,withTemplateKeys(getTemplateKeys());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,654,.withTemplateKeys(getTemplateTypeMap().getTemplateKeys());
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1262,eturn !getTemplateKeys().isEmpty()
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1262,return getTemplateTypeMap().numUnfilledTemplateKeys() > 0
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,43,mport com.google.common.base.Joiner;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,45,mport com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,57,"his(registry, constructor, false, null);"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,55,"this(registry, constructor, false);"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,61,"oolean isNativeType,"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,62,mmutableList<JSType> templatizedTypes) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,63,"uper(registry, null, null, isNativeType, constructor.getTemplateKeys(),"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,64,emplatizedTypes);
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,59,boolean isNativeType) {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,60,"super(registry, null, null, isNativeType, constructor.getTemplateTypeMap());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,102,tring typeString = constructor.getReferenceName();
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,104,mmutableList<JSType> templatizedTypes = getTemplatizedTypes();
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,105,f (!templatizedTypes.isEmpty()) {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,106,"ypeString += "".<"" + Joiner.on("","").join(templatizedTypes) + "">"";"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,109,eturn typeString;
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,98,return constructor.getReferenceName();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,45,mport com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,73,rivate final ImmutableList<String> templateKeys;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,74,rivate final ImmutableList<JSType> templatizedTypes;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,72,protected final TemplateTypeMap templateTypeMap;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,111,"his(registry, null, null);"
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,109,"this(registry, null);"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,114,"SType(JSTypeRegistry registry, ImmutableList<String> templateKeys,"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,115,mmutableList<JSType> templatizedTypes) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,112,"JSType(JSTypeRegistry registry, TemplateTypeMap templateTypeMap) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,118,/ Do sanity checking on the specified keys and templatized types.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,119,nt keysLength = templateKeys == null ? 0 : templateKeys.size();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,120,nt typesLength = templatizedTypes == null ? 0 : templatizedTypes.size();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,121,f (typesLength > keysLength) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,122,hrow new IllegalArgumentException(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,123,"Cannot have more templatized types than template keys"");"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,124, else if (typesLength < keysLength) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,125,"/ If there are fewer templatized types than keys, extend the templatized"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,126,"/ types list to match the number of keys, using UNKNOWN_TYPE for the"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,127,/ unspecified types.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,128,mmutableList.Builder<JSType> builder = ImmutableList.builder();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,129,f (typesLength > 0) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,130,uilder.addAll(templatizedTypes);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,132,or (int i = 0; i < keysLength - typesLength; i++) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,133,uilder.add(registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,135,emplatizedTypes = builder.build();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,136, else if (keysLength == 0 && typesLength == 0) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,137,/ Ensure that both lists are non-null.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,138,emplateKeys = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,139,emplatizedTypes = ImmutableList.of();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,142,his.templateKeys = templateKeys;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,143,his.templatizedTypes = templatizedTypes;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,115,this.templateTypeMap = templateTypeMap == null ?
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,116,"registry.createTemplateTypeMap(null, null) : templateTypeMap;"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,477,f (isTemplatized()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,478,or (JSType templatizedType : templatizedTypes) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,479,f (templatizedType.hasAnyTemplateTypes()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,480,eturn true;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,484,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,488, Returns true if this type is templatized; false otherwise.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,490,ublic boolean isTemplatized() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,491,eturn !templateKeys.isEmpty();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,495, Returns the template keys associated with this type.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,497,ublic ImmutableList<String> getTemplateKeys() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,498,eturn templateKeys;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,501,ublic ImmutableList<JSType> getTemplatizedTypes() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,502,eturn templatizedTypes;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,506, Returns true if this type is templatized for the specified key; false
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,507, otherwise.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,509,ublic boolean hasTemplatizedType(String key) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,510,eturn templateKeys.contains(key);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,514, Returns the type associated with a given template key. Will return
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,515, the UNKNOWN_TYPE if there is no template type associated with that
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,516, template key.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,518,ublic JSType getTemplatizedType(String key) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,519,nt index = templateKeys.indexOf(key);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,520,f (index < 0) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,521,eturn registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,523,eturn templatizedTypes.get(index);
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,450,return templateTypeMap.hasAnyTemplateTypesInternal();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,527," Determines if the two specified JSTypes have equivalent, invariant"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,528, templatized types.
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,454,* Returns the template type map associated with this type.
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,530,tatic boolean hasEquivalentTemplateTypes(
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,531,"SType type1, JSType type2, EquivalenceMethod eqMethod) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,532,mmutableList<JSType> templatizedTypes1 = type1.getTemplatizedTypes();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,533,mmutableList<JSType> templatizedTypes2 = type2.getTemplatizedTypes();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,534,nt nTemplatizedTypes1 = templatizedTypes1.size();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,535,nt nTemplatizedTypes2 = templatizedTypes2.size();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,537,f (nTemplatizedTypes1 != nTemplatizedTypes2) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,538,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,541,or (int i = 0; i < nTemplatizedTypes1; i++) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,542,SType templatizedType1 = templatizedTypes1.get(i);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,543,SType templatizedType2 = templatizedTypes2.get(i);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,544,"f (templatizedType1.checkEquivalenceHelper(templatizedType2, eqMethod)) {"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,545,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,549,eturn true;
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,456,public TemplateTypeMap getTemplateTypeMap() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,457,return templateTypeMap;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,161,"// A single empty TemplateTypeMap, which can be safely reused in cases where"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,162,// there are no template types.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,163,private final TemplateTypeMap emptyTemplateTypeMap;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,210,this.emptyTemplateTypeMap = new TemplateTypeMap(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,211,"this, ImmutableList.<String>of(), ImmutableList.<JSType>of());"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,275,"ew PrototypeObjectType(this, null, null, true, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,281,"new PrototypeObjectType(this, null, null, true, null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1405,"ew PrototypeObjectType(this, null, null, true, null, null);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1411,"new PrototypeObjectType(this, null, null, true, null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1426,"emplateKeys, true, false);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1432,"createTemplateTypeMap(templateKeys, null), true, false);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1446,* Creates a template type map from the specified list of template keys and
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1447,* template value types.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1449,public TemplateTypeMap createTemplateTypeMap(
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1450,"ImmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1451,ImmutableList<JSType> templateValues) {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1452,templateKeys = templateKeys == null ?
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1453,ImmutableList.<String>of() : templateKeys;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1454,templateValues = templateValues == null ?
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1455,ImmutableList.<JSType>of() : templateValues;
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1457,return (templateKeys.isEmpty() && templateValues.isEmpty()) ?
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1458,emptyTemplateTypeMap :
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1459,"new TemplateTypeMap(this, templateKeys, templateValues);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1448, Creates a templatized instance of the specified type.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1449, @param baseType the type to be templatized.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1450, @param templatizedTypes a list of the template JSTypes. Will be matched by
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1451,     list order to the template keys specified in the constructor function.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1453,ublic JSType createTemplatizedType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1454,"SType baseType, ImmutableList<JSType> templatizedTypes) {"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1455,/ Only instance object types can currently be templatized; extend this
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1456,/ logic when more types can be templatized.
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1457,f (baseType instanceof InstanceObjectType) {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1458,bjectType baseObjType = baseType.toObjectType();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1459,eturn new InstanceObjectType(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1460,"his, baseObjType.getConstructor(), baseObjType.isNativeObjectType(),"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1461,emplatizedTypes);
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1462, else {
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1463,hrow new IllegalArgumentException(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1464,"Only instance object types can be templatized"");"
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,43,mport com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,147,f (objType.isTemplatized()) {
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,148,mmutableList.Builder<JSType> builder = ImmutableList.builder();
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,149,or (JSType templatizedType : objType.getTemplatizedTypes()) {
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,150,uilder.add(templatizedType.visit(this));
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,152,"eturn registry.createTemplatizedType(objType, builder.build());"
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,153, else {
False,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,154,eturn objType;
True,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,src/com/google/javascript/rhino/jstype/ModificationVisitor.java,146,return objType;
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,45,mport com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,91,"bjectType(JSTypeRegistry registry, ImmutableList<String> templateKeys,"
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,92,mmutableList<JSType> templatizedTypes) {
False,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,93,"uper(registry, templateKeys, templatizedTypes);"
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,90,"ObjectType(JSTypeRegistry registry, TemplateTypeMap templateTypeMap) {"
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,91,"super(registry, templateTypeMap);"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,105,"his(registry, className, implicitPrototype, false, null, null);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,105,"this(registry, className, implicitPrototype, false, null);"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,114,"mmutableList<String> templateKeys,"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,115,mmutableList<JSType> templatizedTypes) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,116,"uper(registry, templateKeys, templatizedTypes);"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,114,TemplateTypeMap templateTypeMap) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,115,"super(registry, templateTypeMap);"
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,62,uper(registry);
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,62,"this(registry, referencedType, null);"
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,65,"ProxyObjectType(JSTypeRegistry registry, JSType referencedType,"
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,66,TemplateTypeMap templateTypeMap) {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,67,"super(registry, templateTypeMap);"
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,377,@Override
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,378,public TemplateTypeMap getTemplateTypeMap() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,379,return referencedType.getTemplateTypeMap();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,3,* ***** BEGIN LICENSE BLOCK *****
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,4,* Version: MPL 1.1/GPL 2.0
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,8,* the License. You may obtain a copy of the License at
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,9,* http://www.mozilla.org/MPL/
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,13,* for the specific language governing rights and limitations under the
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,14,* License.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,16,"* The Original Code is Rhino code, released"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,17,"* May 6, 1999."
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,19,* The Initial Developer of the Original Code is
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,20,* Netscape Communications Corporation.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,22,* the Initial Developer. All Rights Reserved.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,24,* Contributor(s):
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,25,*   Bob Jervis
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,26,*   Google Inc.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,28,"* Alternatively, the contents of this file may be used under the terms of"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,29,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,30,* case the provisions of the GPL are applicable instead of those above. If
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,31,* you wish to allow use of your version of this file only under the terms of
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,32,* the GPL and not to allow others to use your version of this file under the
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,33,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,34,* them with the notice and other provisions required by the GPL. If you do
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,35,"* not delete the provisions above, a recipient may use your version of this"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,36,* file under either the MPL or the GPL.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,38,* ***** END LICENSE BLOCK ***** */
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,40,package com.google.javascript.rhino.jstype;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,42,import com.google.common.base.Preconditions;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,43,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,45,import java.io.Serializable;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,48,* Manages a mapping from TemplateType to its resolved JSType. Provides utility
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,49,* methods for cloning/extending the map.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,51,* @author izaakr@google.com (Izaak Rubin)
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,53,public class TemplateTypeMap implements Serializable {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,54,private final ImmutableList<String> templateKeys;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,55,private final ImmutableList<JSType> templateValues;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,56,final JSTypeRegistry registry;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,58,"TemplateTypeMap(JSTypeRegistry registry,"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,59,"ImmutableList<String> templateKeys,"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,60,ImmutableList<JSType> templateValues) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,61,Preconditions.checkNotNull(templateKeys);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,62,Preconditions.checkNotNull(templateValues);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,64,this.registry = registry;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,65,this.templateKeys = templateKeys;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,67,int nKeys = templateKeys.size();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,68,this.templateValues = templateValues.size() > nKeys ?
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,69,"templateValues.subList(0, nKeys) : templateValues;"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,73,* Returns a list of all template keys.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,75,public ImmutableList<String> getTemplateKeys() {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,76,return templateKeys;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,80,"* Returns true if this map contains the specified template key, false"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,81,* otherwise.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,83,public boolean hasTemplateKey(String templateKey) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,84,return templateKeys.contains(templateKey);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,88,* Returns the number of template keys in this map that do not have a
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,89,* corresponding JSType value.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,91,int numUnfilledTemplateKeys() {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,92,return templateKeys.size() - templateValues.size();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,96,* Returns a list of template keys in this map that do not have corresponding
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,97,* JSType values.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,99,ImmutableList<String> getUnfilledTemplateKeys() {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,100,"return templateKeys.subList(templateValues.size(), templateKeys.size());"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,104,* Returns true if there is a JSType value associated with the specified
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,105,* template key; false otherwise.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,107,public boolean hasTemplateType(String key) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,108,return getTemplateTypeInternal(key) != null;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,112,* Returns the JSType value associated with the specified template key. If no
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,113,"* JSType value is associated, returns UNKNOWN_TYPE."
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,115,public JSType getTemplateType(String key) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,116,JSType templateType = getTemplateTypeInternal(key);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,117,return (templateType == null) ?
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,118,registry.getNativeType(JSTypeNative.UNKNOWN_TYPE) : templateType;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,122,* Returns the JSType value associated with the specified template key. If no
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,123,"* JSType value is associated, returns null."
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,125,private JSType getTemplateTypeInternal(String key) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,126,int index = templateKeys.indexOf(key);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,127,if (index < 0 || index >= templateValues.size()) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,128,return null;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,130,return templateValues.get(index);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,134,* Determines if this map and the specified map have equivalent template
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,135,* types.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,137,public boolean checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,138,"TemplateTypeMap that, EquivalenceMethod eqMethod) {"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,139,int thisNumKeys = templateKeys.size();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,140,int thatNumKeys = that.getTemplateKeys().size();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,142,"for (int i = 0; i < Math.min(thisNumKeys, thatNumKeys); i++) {"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,143,JSType thisTemplateType = getTemplateType(templateKeys.get(i));
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,144,JSType thatTemplateType = that.getTemplateType(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,145,that.getTemplateKeys().get(i));
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,146,if (!thisTemplateType.checkEquivalenceHelper(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,147,"thatTemplateType, eqMethod)) {"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,148,return false;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,152,return thisNumKeys == thatNumKeys ||
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,153,eqMethod == EquivalenceMethod.INVARIANT;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,157,* Returns a new TemplateTypeMap whose keys have been extended with the
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,158,* specified list.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,160,TemplateTypeMap extendKeys(ImmutableList<String> newKeys) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,161,return registry.createTemplateTypeMap(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,162,"concatImmutableLists(templateKeys, newKeys), templateValues);"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,166,* Returns a new TemplateTypeMap whose values have been extended with the
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,167,* specified list.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,169,TemplateTypeMap extendValues(ImmutableList<JSType> newValues) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,170,// Ignore any new template values that will not align with an existing
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,171,// template key.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,172,int numUnfilledKeys = numUnfilledTemplateKeys();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,173,if (numUnfilledKeys < newValues.size()) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,174,"newValues = newValues.subList(0, numUnfilledKeys);"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,177,return registry.createTemplateTypeMap(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,178,"templateKeys, concatImmutableLists(templateValues, newValues));"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,182,"* Concatenates two ImmutableList instances. If either input is empty, the"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,183,"* other is returned; otherwise, a new ImmutableList instance is created that"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,184,* contains the contents of both arguments.
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,186,private <T> ImmutableList<T> concatImmutableLists(
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,187,"ImmutableList<T> first, ImmutableList<T> second) {"
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,188,if (first.isEmpty()) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,189,return second;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,191,if (second.isEmpty()) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,192,return first;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,194,ImmutableList.Builder<T> builder = ImmutableList.builder();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,195,builder.addAll(first);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,196,builder.addAll(second);
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,197,return builder.build();
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,200,boolean hasAnyTemplateTypesInternal() {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,201,for (JSType templateValue : templateValues) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,202,if (templateValue.hasAnyTemplateTypes()) {
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,203,return true;
True,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,src/com/google/javascript/rhino/jstype/TemplateTypeMap.java,206,return false;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,42,mport com.google.common.collect.ImmutableList;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,412,rotected JSType createTemplatizedType(
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,413,"SType baseType, ImmutableList<JSType> templatizedTypes) {"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,414,"eturn registry.createTemplatizedType(baseType, templatizedTypes);"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,333,"ssertEquals(""[T]"","
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,334,"n.getPropertyType(""call"").getTemplateKeys().toString());"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,335,"ssertEquals(""[T]"","
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,336,"n.getPropertyType(""apply"").getTemplateKeys().toString());"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,337,"ssertEquals(""[T]"","
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,338,"n.getPropertyType(""bind"").getTemplateKeys().toString());"
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,339,"ssertEquals(""[T]"","
False,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,340,n.getBindReturnType(0).getTemplateKeys().toString());
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,333,"assertEquals(""[T]"", fn.getPropertyType(""call"").getTemplateTypeMap()"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,334,.getTemplateKeys().toString());
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,335,"assertEquals(""[T]"", fn.getPropertyType(""apply"").getTemplateTypeMap()"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,336,.getTemplateKeys().toString());
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,337,"assertEquals(""[T]"", fn.getPropertyType(""bind"").getTemplateTypeMap()"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,338,.getTemplateKeys().toString());
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,339,"assertEquals(""[T]"", fn.getBindReturnType(0).getTemplateTypeMap()"
True,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,test/com/google/javascript/rhino/jstype/FunctionTypeTest.java,340,.getTemplateKeys().toString());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6107,ublic void testTemplatizedType() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6108,unctionType templatizedCtor = registry.createConstructorType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6109,"TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6110,SType templatizedInstance = registry.createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6111,"emplatizedCtor.getInstanceType(),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6112,"mmutableList.of(NUMBER_TYPE, STRING_TYPE));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6114,ssertTrue(templatizedInstance.isTemplatized());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6115,"ssertTrue(templatizedInstance.hasTemplatizedType(""A""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6116,"ssertTrue(templatizedInstance.hasTemplatizedType(""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6117,"ssertFalse(templatizedInstance.hasTemplatizedType(""C""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6119,"ssertEquals(NUMBER_TYPE, templatizedInstance.getTemplatizedType(""A""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6120,"ssertEquals(STRING_TYPE, templatizedInstance.getTemplatizedType(""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6121,"ssertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""C""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6123,"ssertEquals(""TestingType.<number,string>"", templatizedInstance.toString());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6126,ublic void testPartiallyTemplatizedType() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6127,unctionType templatizedCtor = registry.createConstructorType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6128,"TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6129,SType templatizedInstance = registry.createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6130,"emplatizedCtor.getInstanceType(),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6131,mmutableList.of(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6133,ssertTrue(templatizedInstance.isTemplatized());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6134,"ssertTrue(templatizedInstance.hasTemplatizedType(""A""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6135,"ssertTrue(templatizedInstance.hasTemplatizedType(""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6136,"ssertFalse(templatizedInstance.hasTemplatizedType(""C""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6138,"ssertEquals(NUMBER_TYPE, templatizedInstance.getTemplatizedType(""A""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6139,"ssertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6140,"ssertEquals(UNKNOWN_TYPE, templatizedInstance.getTemplatizedType(""C""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6142,"ssertEquals(""TestingType.<number,?>"", templatizedInstance.toString());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6145,ublic void testInvalidTemplatizedType() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6146,unctionType templatizedCtor = registry.createConstructorType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6147,"TestingType"", null, null, UNKNOWN_TYPE, ImmutableList.of(""A"", ""B""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6149,oolean exceptionThrown = false;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6150,ry {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6151,egistry.createTemplatizedType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6152,"emplatizedCtor.getInstanceType(),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6153,"mmutableList.of(NUMBER_TYPE, STRING_TYPE, BOOLEAN_TYPE));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6154, catch (IllegalArgumentException e) {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6155,xceptionThrown = true;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6157,ssertTrue(exceptionThrown);
