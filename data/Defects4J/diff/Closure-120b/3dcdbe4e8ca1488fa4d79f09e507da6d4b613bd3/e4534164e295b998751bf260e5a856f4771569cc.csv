is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/InlineProperties.java,src/com/google/javascript/jscomp/InlineProperties.java,259,& NodeUtil.isExpressionUnconditionallyExecuted(value)) {
True,src/com/google/javascript/jscomp/InlineProperties.java,src/com/google/javascript/jscomp/InlineProperties.java,259,&& NodeUtil.isExecutedExactlyOnce(value)) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3117, @return Whether the expression is unconditionally executed in the
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3117,* @return Whether the expression is unconditionally executed only once in the
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3120,tatic boolean isExpressionUnconditionallyExecuted(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3120,static boolean isExecutedExactlyOnce(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3134,f (parent.getFirstChild() != n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3135,eturn false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3134,if (NodeUtil.isForIn(parent)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3135,if (parent.getChildAtIndex(1) != n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3136,return false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3138,} else {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3139,if (parent.getFirstChild() != n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3140,return false;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3144,eturn false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3150,if (!hasFinally(parent) || parent.getLastChild() != n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3151,return false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,3153,continue inspect;
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1594,public void testIsExecutedExactlyOnce() {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1595,"assertEquals(true, executedOnceTestCase(""x;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1597,"assertEquals(true, executedOnceTestCase(""x && 1;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1598,"assertEquals(false, executedOnceTestCase(""1 && x;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1600,"assertEquals(false, executedOnceTestCase(""1 && (x && 1);""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1602,"assertEquals(true, executedOnceTestCase(""x || 1;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1603,"assertEquals(false, executedOnceTestCase(""1 || x;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1605,"assertEquals(false, executedOnceTestCase(""1 && (x || 1);""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1607,"assertEquals(true, executedOnceTestCase(""x ? 1 : 2;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1608,"assertEquals(false, executedOnceTestCase(""1 ? 1 : x;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1609,"assertEquals(false, executedOnceTestCase(""1 ? x : 2;""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1611,"assertEquals(false, executedOnceTestCase(""1 && (x ? 1 : 2);""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1613,"assertEquals(true, executedOnceTestCase(""if (x) {}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1614,"assertEquals(false, executedOnceTestCase(""if (true) {x;}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1615,"assertEquals(false, executedOnceTestCase(""if (true) {} else {x;}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1617,"assertEquals(false, executedOnceTestCase(""if (1) { if (x) {} }""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1619,"assertEquals(true, executedOnceTestCase(""for(x;;){}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1620,"assertEquals(false, executedOnceTestCase(""for(;x;){}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1621,"assertEquals(false, executedOnceTestCase(""for(;;x){}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1622,"assertEquals(false, executedOnceTestCase(""for(;;){x;}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1624,"assertEquals(false, executedOnceTestCase(""if (1) { for(x;;){} }""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1626,"assertEquals(false, executedOnceTestCase(""for(x in {}){}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1627,"assertEquals(true, executedOnceTestCase(""for({}.a in x){}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1628,"assertEquals(false, executedOnceTestCase(""for({}.a in {}){x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1630,"assertEquals(false, executedOnceTestCase(""if (1) { for(x in {}){} }""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1632,"assertEquals(true, executedOnceTestCase(""switch (x) {}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1633,"assertEquals(false, executedOnceTestCase(""switch (1) {case x:}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1634,"assertEquals(false, executedOnceTestCase(""switch (1) {case 1: x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1635,"assertEquals(false, executedOnceTestCase(""switch (1) {default: x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1637,"assertEquals(false, executedOnceTestCase(""if (1) { switch (x) {} }""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1639,"assertEquals(false, executedOnceTestCase(""while (x) {}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1640,"assertEquals(false, executedOnceTestCase(""while (1) {x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1642,"assertEquals(false, executedOnceTestCase(""do {} while (x)""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1643,"assertEquals(false, executedOnceTestCase(""do {x} while (1)""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1645,"assertEquals(false, executedOnceTestCase(""try {x} catch (e) {}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1646,"assertEquals(false, executedOnceTestCase(""try {} catch (e) {x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1647,"assertEquals(true, executedOnceTestCase(""try {} finally {x}""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1649,"assertEquals(false, executedOnceTestCase(""if (1) { try {} finally {x} }""));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1652,private boolean executedOnceTestCase(String code) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1653,Node ast = parse(code);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1654,"Node nameNode = getNameNode(ast, ""x"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1655,return NodeUtil.isExecutedExactlyOnce(nameNode);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1687,"static Node getNameNode(Node n, String name) {"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1688,if (n.isName() && n.getString().equals(name)) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1689,return n;
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1691,for (Node c : n.children()) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1692,"Node result = getNameNode(c, name);"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1693,if (result != null) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1694,return result;
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,1697,return null;
