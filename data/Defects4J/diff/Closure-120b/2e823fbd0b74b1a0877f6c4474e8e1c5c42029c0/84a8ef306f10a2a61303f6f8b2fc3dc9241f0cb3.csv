is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,600,eftType = getJSType(n.getFirstChild());
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,601,ightType = getJSType(n.getLastChild());
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,600,left = n.getFirstChild();
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,601,right = n.getLastChild();
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,603,if (left.isTypeOf()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,604,if (right.isString()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,605,"checkTypeofString(t, right, right.getString());"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,607,} else if (right.isTypeOf() && left.isString()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,608,"checkTypeofString(t, left, left.getString());"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,611,leftType = getJSType(left);
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,612,rightType = getJSType(right);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,617,esult = leftTypeRestricted.testForEquality(
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,618,ightTypeRestricted);
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,628,result = leftTypeRestricted.testForEquality(rightTypeRestricted);
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,822,"private void checkTypeofString(NodeTraversal t, Node n, String s) {"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,823,"if (!(s.equals(""number"") || s.equals(""string"") || s.equals(""boolean"") ||"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,824,"s.equals(""undefined"") || s.equals(""function"") || s.equals(""object""))){"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,825,"validator.expectValidTypeofName(t, n, s);"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,117,static final DiagnosticType UNKNOWN_TYPEOF_VALUE =
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,118,"DiagnosticType.warning(""JSC_UNKNOWN_TYPEOF_VALUE"", ""unknown type: {0}"");"
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,124,IDDEN_INTERFACE_PROPERTY_MISMATCH);
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,127,"HIDDEN_INTERFACE_PROPERTY_MISMATCH,"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,128,UNKNOWN_TYPEOF_VALUE);
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,158,"void expectValidTypeofName(NodeTraversal t, Node n, String found) {"
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,159,"report(JSError.make(t.getSourceName(), n, UNKNOWN_TYPEOF_VALUE, found));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7080,public void testTypeof2() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7081,"testTypes(""function f(){ if (typeof 123 == 'numbr') return 321; }"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7082,"""unknown type: numbr"");"
