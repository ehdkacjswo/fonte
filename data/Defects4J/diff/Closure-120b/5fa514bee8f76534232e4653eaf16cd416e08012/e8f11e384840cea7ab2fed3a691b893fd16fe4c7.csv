is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,36,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,306,f (type instanceof FunctionPrototypeType) {
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,307,ddRelatedInstance(
False,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,308,"(FunctionPrototypeType) type).getOwnerFunction(), related);"
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,305,if (type.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/AmbiguateProperties.java,src/com/google/javascript/jscomp/AmbiguateProperties.java,306,"addRelatedInstance(((ObjectType) type).getOwnerFunction(), related);"
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,28,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
False,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,210,unctionType owner = ((FunctionPrototypeType) type).getOwnerFunction();
True,src/com/google/javascript/jscomp/CheckAccessControls.java,src/com/google/javascript/jscomp/CheckAccessControls.java,209,FunctionType owner = ((ObjectType) type).getOwnerFunction();
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,24,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,529,unctionPrototypeType protoType = (FunctionPrototypeType) instanceType;
False,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,530,eturn factory.getConcreteFunction(protoType.getOwnerFunction());
True,src/com/google/javascript/jscomp/ConcreteType.java,src/com/google/javascript/jscomp/ConcreteType.java,528,return factory.getConcreteFunction(instanceType.getOwnerFunction());
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,37,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,885,unctionPrototypeType prototype = (FunctionPrototypeType) type;
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,884,ObjectType prototype = (ObjectType) type;
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,888,eturn ((FunctionPrototypeType) type).getOwnerFunction()
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,889,getInstanceType();
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,887,return prototype.getOwnerFunction().getInstanceType();
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,903, else if (objType instanceof FunctionPrototypeType) {
False,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,904,onstructor = ((FunctionPrototypeType) objType).getOwnerFunction();
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,901,} else if (objType.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/DisambiguateProperties.java,src/com/google/javascript/jscomp/DisambiguateProperties.java,902,constructor = objType.getOwnerFunction();
False,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,30,mport com.google.javascript.rhino.jstype.FunctionPrototypeType;
False,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,969,f (jsType instanceof FunctionPrototypeType) {
False,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,970,hisType = ((FunctionPrototypeType) jsType)
False,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,971,getOwnerFunction().getInstanceType();
True,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,968,if (jsType.isFunctionPrototypeType()) {
True,src/com/google/javascript/jscomp/TightenTypes.java,src/com/google/javascript/jscomp/TightenTypes.java,969,thisType = thisType.getOwnerFunction().getInstanceType();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1470,unctionType baseConstructor = functionType.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1471,etPrototype().getImplicitPrototype().getConstructor();
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1470,FunctionType baseConstructor = functionType.getSuperClassConstructor();
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,3, ***** BEGIN LICENSE BLOCK *****
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,4, Version: MPL 1.1/GPL 2.0
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,6, The contents of this file are subject to the Mozilla Public License Version
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,8, the License. You may obtain a copy of the License at
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,9, http://www.mozilla.org/MPL/
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,13, for the specific language governing rights and limitations under the
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,14, License.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,16," The Original Code is Rhino code, released"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,17," May 6, 1999."
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,19, The Initial Developer of the Original Code is
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,20, Netscape Communications Corporation.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,21, Portions created by the Initial Developer are Copyright (C) 1997-1999
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,22, the Initial Developer. All Rights Reserved.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,24, Contributor(s):
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,25,   Bob Jervis
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,26,   Google Inc.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,28," Alternatively, the contents of this file may be used under the terms of"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,29," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,30, case the provisions of the GPL are applicable instead of those above. If
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,31, you wish to allow use of your version of this file only under the terms of
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,32, the GPL and not to allow others to use your version of this file under the
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,33," MPL, indicate your decision by deleting the provisions above and replacing"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,34, them with the notice and other provisions required by the GPL. If you do
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,35," not delete the provisions above, a recipient may use your version of this"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,36, file under either the MPL or the GPL.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,38, ***** END LICENSE BLOCK ***** */
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,40,ackage com.google.javascript.rhino.jstype;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,42,mport com.google.common.collect.ImmutableSet;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,43,mport com.google.javascript.rhino.jstype.ObjectType;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,46, Represents the prototype of a {@link FunctionType}.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,47, @author nicksantos@google.com (Nick Santos)
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,49,ublic class FunctionPrototypeType extends PrototypeObjectType {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,50,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,52,rivate final FunctionType ownerFunction;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,54,"unctionPrototypeType(JSTypeRegistry registry, FunctionType ownerFunction,"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,55,"bjectType implicitPrototype, boolean isNative) {"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,56,"uper(registry, null /* has no class name */, implicitPrototype,"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,57,sNative);
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,58,his.ownerFunction = ownerFunction;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,61,"unctionPrototypeType(JSTypeRegistry registry, FunctionType ownerFunction,"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,62,bjectType implicitPrototype) {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,63,"his(registry, ownerFunction, implicitPrototype, false);"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,66,Override
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,67,ublic String getReferenceName() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,68,f (ownerFunction == null) {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,69,"eturn ""{...}.prototype"";"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,70, else {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,71,"eturn ownerFunction.getReferenceName() + "".prototype"";"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,75,Override
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,76,ublic boolean hasReferenceName() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,77,eturn ownerFunction != null && ownerFunction.hasReferenceName();
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,80,Override
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,81,ublic boolean isFunctionPrototypeType() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,82,eturn true;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,85,ublic FunctionType getOwnerFunction() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,86,eturn ownerFunction;
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,89,Override
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,90,ublic Iterable<ObjectType> getCtorImplementedInterfaces() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,91,eturn getOwnerFunction().getImplementedInterfaces();
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,94,Override
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,95,ublic Iterable<ObjectType> getCtorExtendedInterfaces() {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,96,f (getOwnerFunction() != null) {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,97,eturn getOwnerFunction().getExtendedInterfaces();
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,98, else {
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,99,eturn ImmutableSet.of();
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,103,"/ The owner will always be a resolved type, so there's no need to set"
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,104,/ the ownerFunction in resolveInternal.
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,105,/ (it would lead to infinite loops if we did).
False,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,src/com/google/javascript/rhino/jstype/FunctionPrototypeType.java,106,"/ JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,42,import static com.google.javascript.rhino.jstype.JSTypeNative.OBJECT_TYPE;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,86,rivate FunctionPrototypeType prototype;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,87,private PrototypeObjectType prototype;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,303,ublic FunctionPrototypeType getPrototype() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,304,public ObjectType getPrototype() {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,306,"etPrototype(new FunctionPrototypeType(registry, this, null));"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,307,setPrototype(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,308,new PrototypeObjectType(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,309,"registry,"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,310,"this.getReferenceName() + "".prototype"","
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,311,"registry.getNativeObjectType(OBJECT_TYPE),"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,312,isNativeObjectType()));
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,317,f (prototype == null) {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,318,etPrototype(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,319,ew FunctionPrototypeType(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,320,"egistry, this, baseType, isNativeObjectType()));"
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,321, else {
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,322,rototype.setImplicitPrototype(baseType);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,323,// This is a bit weird. We need to successfully handle these
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,324,// two cases:
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,325,// Foo.prototype = new Bar();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,326,// and
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,327,// Foo.prototype = {baz: 3};
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,328,"// In the first case, we do not want new properties to get"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,329,"// added to Bar. In the second case, we do want new properties"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,330,// to get added to the type of the anonymous object.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,332,// We handle this by breaking it into two cases:
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,334,"// In the first case, we create a new PrototypeObjectType and set"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,335,// its implicit prototype to the type being assigned. This ensures
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,336,"// that Bar will not get any properties of Foo.prototype, but properties"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,337,// later assigned to Bar will get inherited properly.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,339,"// In the second case, we just use the anonymous object as the prototype."
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,340,if (baseType.hasReferenceName() ||
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,341,baseType.isUnknownType() ||
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,342,isNativeObjectType() ||
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,343,baseType.isFunctionPrototypeType() ||
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,344,!(baseType instanceof PrototypeObjectType)) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,346,baseType = new PrototypeObjectType(
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,347,"registry, this.getReferenceName() + "".prototype"", baseType);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,349,setPrototype((PrototypeObjectType) baseType);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,331,ublic boolean setPrototype(FunctionPrototypeType prototype) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,357,public boolean setPrototype(PrototypeObjectType prototype) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,369,this.prototype.setOwnerFunction(this);
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,527,eturn setPrototype(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,528,ew FunctionPrototypeType(
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,529,"egistry, this, objType, isNativeObjectType()));"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,554,this.setPrototypeBasedOn(objType);
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,555,return true;
False,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,987,"rototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,1013,"prototype = (PrototypeObjectType) safeResolve(prototype, t, scope);"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,106,"eturn getConstructor().isNative() && ""Object"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,106,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,107,"&& ""Object"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,116,"eturn getConstructor().isNative() && ""Array"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,117,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,118,"&& ""Array"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,121,"eturn getConstructor().isNative() && ""String"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,123,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,124,"&& ""String"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,126,"eturn getConstructor().isNative() && ""Boolean"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,129,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,130,"&& ""Boolean"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,131,"eturn getConstructor().isNative() && ""Number"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,135,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,136,"&& ""Number"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,136,"eturn getConstructor().isNative() && ""Date"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,141,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,142,"&& ""Date"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,141,"eturn getConstructor().isNative() && ""RegExp"".equals(getReferenceName());"
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,147,return getConstructor().isNativeObjectType()
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,148,"&& ""RegExp"".equals(getReferenceName());"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,274,bjectType TOP_LEVEL_PROTOTYPE =
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,275,"ew FunctionPrototypeType(this, null, null, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,274,PrototypeObjectType TOP_LEVEL_PROTOTYPE =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,275,"new PrototypeObjectType(this, null, null, true);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,283,BJECT_FUNCTION_TYPE.defineDeclaredProperty(
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,284,"prototype"", TOP_LEVEL_PROTOTYPE, null);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,285,"egisterNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE, OBJECT_FUNCTION_TYPE);"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,287,bjectType OBJECT_PROTOTYPE = OBJECT_FUNCTION_TYPE.getPrototype();
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,288,"egisterNativeType(JSTypeNative.OBJECT_PROTOTYPE, OBJECT_PROTOTYPE);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,284,OBJECT_FUNCTION_TYPE.setPrototype(TOP_LEVEL_PROTOTYPE);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,285,"registerNativeType(JSTypeNative.OBJECT_FUNCTION_TYPE, OBJECT_FUNCTION_TYPE);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,290,ObjectType OBJECT_PROTOTYPE = OBJECT_FUNCTION_TYPE.getPrototype();
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,291,"registerNativeType(JSTypeNative.OBJECT_PROTOTYPE, OBJECT_PROTOTYPE);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1303,* Create an anonymous object type for a native type.
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1305,ObjectType createNativeAnonymousObjectType() {
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1306,PrototypeObjectType type =
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1307,"new PrototypeObjectType(this, null, null, true);"
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1308,type.setPrettyPrint(true);
True,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,1309,return type;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,542,@Override
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,543,public final boolean isFunctionPrototypeType() {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,544,return getOwnerFunction() != null;
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,547,/** Gets the owner of this if it's a function prototype. */
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,548,public FunctionType getOwnerFunction() {
True,src/com/google/javascript/rhino/jstype/ObjectType.java,src/com/google/javascript/rhino/jstype/ObjectType.java,549,return null;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,44,import com.google.common.base.Preconditions;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,45,import com.google.common.collect.ImmutableList;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,84,"// If this is a function prototype, then this is the owner."
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,85,// A PrototypeObjectType can only be the prototype of one function. If we try
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,86,"// to do this for multiple functions, then we'll have to create a new one."
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,87,private FunctionType ownerFunction = null;
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,311,f (isNative()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,318,if (isNativeObjectType()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,348," Whether this represents a native type (such as Object, Date,"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,349," RegExp, etc.)."
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,351,oolean isNative() {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,352,eturn nativeType;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,429,} else if (ownerFunction != null) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,430,"return ownerFunction.getReferenceName() + "".prototype"";"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,437,eturn className != null;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,438,return className != null || ownerFunction != null;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,589,void setOwnerFunction(FunctionType type) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,590,Preconditions.checkState(ownerFunction == null);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,591,ownerFunction = type;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,594,@Override
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,595,public FunctionType getOwnerFunction() {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,596,return ownerFunction;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,599,@Override
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,600,public Iterable<ObjectType> getCtorImplementedInterfaces() {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,601,return isFunctionPrototypeType()
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,602,? getOwnerFunction().getImplementedInterfaces()
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,603,: ImmutableList.<ObjectType>of();
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,606,@Override
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,607,public Iterable<ObjectType> getCtorExtendedInterfaces() {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,608,return isFunctionPrototypeType()
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,609,? getOwnerFunction().getExtendedInterfaces()
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,610,: ImmutableList.<ObjectType>of();
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,155,Override
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,156,ublic boolean isFunctionPrototypeType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,157,eturn referencedType.isFunctionPrototypeType();
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,185,@Override
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,186,public boolean isNativeObjectType() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,187,return referencedObjType == null
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,188,? false : referencedObjType.isNativeObjectType();
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,216,@Override
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,217,public FunctionType getOwnerFunction() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,218,return referencedObjType == null
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,219,? null : referencedObjType.getOwnerFunction();
False,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,164,/ Object.prototype -> {...}.prototype -> null.
False,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,165,or (int i = 0; i < 4; ++i) {
True,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,164,// Object.prototype -> null.
True,test/com/google/javascript/jscomp/ConcreteTypeTest.java,test/com/google/javascript/jscomp/ConcreteTypeTest.java,165,for (int i = 0; i < 3; ++i) {
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,96,"/ TODO(johnlenz): fix this. Doing nothing is safe, but"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,97,/ handling this would be better.
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,98,"tring desired = ""{a=[[Foo.prototype]]}"";"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,99,"tring expected = ""{}"";"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,96,"String expected = ""{a=[[Foo.prototype]]}"";"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,102,/ Tighten types fails here.
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,103,"/ testSets(true, js, js, expected);"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,98,"testSets(true, js, js, expected);"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,114,"/ TODO(johnlenz): fix this. Doing nothing is safe, but"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,115,/ handling this would be better.
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,116,"tring desired = ""{a=[[Foo.prototype]]}"";"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,117,"tring expected = ""{}"";"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,109,"String expected = ""{a=[[Foo.prototype]]}"";"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,120,/ Tighten types fails here.
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,121,"/ testSets(true, js, js, expected);"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,111,"testSets(true, js, js, expected);"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,183,/ Would like it to be (but doing nothing is safe):
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,184,"/ testSets(false, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,185,"estSets(false, js, js, ""{}"");"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,186,"/ TODO(johnlenz): If tighten types is completed, this needs to be fixed."
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,187,"/ testSets(true, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,173,"testSets(false, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,174,"testSets(true, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,217,/ Would like it to be (but doing nothing is safe):
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,218,"/ testSets(false, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,219,"estSets(false, js, js, ""{}"");"
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,220,"/ TODO(johnlenz): If tighten types is completed, this needs to be fixed."
False,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,221,"/ testSets(true, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,204,"testSets(false, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
True,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,test/com/google/javascript/jscomp/DisambiguatePropertiesTest.java,205,"testSets(true, js, output, ""{a=[[Bar.prototype], [Foo.prototype]]}"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6302,public void testAnonymousPrototype1() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6303,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6304,"""var ns = {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6305,"""/** @constructor */ ns.Foo = function() {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6306,"""  this.bar(3, 5);"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6308,"""ns.Foo.prototype = {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6309,"""  bar: function(x) {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6311,"""Function ns.Foo.prototype.bar: called with 2 argument(s). "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6312,"""Function requires at least 1 argument(s) and no more "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6313,"""than 1 argument(s)."");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6316,public void testAnonymousPrototype2() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6317,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6318,"""/** @interface */ var Foo = function() {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6319,"""Foo.prototype = {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6320,"""  foo: function(x) {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6322,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6323,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6324,""" * @implements {Foo}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6325,""" */ var Bar = function() {};"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6326,"""property foo on interface Foo is not implemented by type Bar"");"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,375,/ Should be true
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,376,"ssertFalse(x.getImplicitPrototype().hasOwnProperty(""bar""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,375,"assertTrue(x.getImplicitPrototype().hasOwnProperty(""bar""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,409,/ This should be TRUE
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,410,"ssertFalse(x.getImplicitPrototype().hasOwnProperty(""alert""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,412,"ssertEquals(""function (this:Window, ?): undefined"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,408,"assertTrue(x.getImplicitPrototype().hasOwnProperty(""alert""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,409,"assertEquals(""function (?): undefined"","
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,414,"ssertTrue(x.isPropertyTypeDeclared(""alert""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,411,"assertFalse(x.isPropertyTypeDeclared(""alert""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,417,"ssertEquals(""function (this:Window, ?): undefined"","
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,414,"assertEquals(""?"","
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,441,/ The prototype property of a Function has to be a FunctionPrototypeType.
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,442,"/ In order to make the type safety work out correctly, we create"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,443,/ a FunctionPrototypeType with the anonymous object as its implicit
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,444,/ prototype. Verify this behavior.
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,437,// This is a special case where we want the anonymous object to
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,438,// become a prototype.
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,450,"ssertFalse(proto1.hasOwnProperty(""m1""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,451,"ssertFalse(proto1.hasOwnProperty(""m2""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,444,"assertTrue(proto1.hasOwnProperty(""m1""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,445,"assertTrue(proto1.hasOwnProperty(""m2""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,455,"ssertTrue(proto2.hasOwnProperty(""m1""));"
False,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,456,"ssertTrue(proto2.hasOwnProperty(""m2""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,449,"assertFalse(proto2.hasProperty(""m1""));"
True,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,test/com/google/javascript/jscomp/TypedScopeCreatorTest.java,450,"assertFalse(proto2.hasProperty(""m2""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,387,ssertTrue(U2U_CONSTRUCTOR_TYPE.isNative());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3085, Tests that the native constructor U2U_CONSTRUCTOR_TYPE is properly
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3086, implemented.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3088,ublic void testFunctionCyclycity() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3089,unctionPrototypeType instanceType =
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3090,ew FunctionPrototypeType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3091,"egistry, U2U_CONSTRUCTOR_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3092,2U_CONSTRUCTOR_TYPE.getInstanceType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3093,2U_CONSTRUCTOR_TYPE.setPrototype(instanceType);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3094,2U_CONSTRUCTOR_TYPE.detectImplicitPrototypeCycle();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3095,nstanceType.detectImplicitPrototypeCycle();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5226,ublic void testInvalidSetPrototypeBasedOn() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5211,public void testLateSetPrototypeBasedOn() {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5230,/ You cannot change the prototype chain after checking if it is unknown.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5231,ry {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5232,un.setPrototypeBasedOn(unresolvedNamedType);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5233,ail();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5234, catch (IllegalStateException e) {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5235,.printStackTrace();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5215,fun.setPrototypeBasedOn(unresolvedNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5216,assertTrue(fun.getInstanceType().isUnknownType());
