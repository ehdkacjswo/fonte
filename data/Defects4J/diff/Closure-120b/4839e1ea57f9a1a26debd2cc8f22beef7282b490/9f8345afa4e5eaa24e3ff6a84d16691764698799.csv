is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,340,eturn processInfixExpression(assignmentNode);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,340,Node assign = processInfixExpression(assignmentNode);
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,341,Node target = assign.getFirstChild();
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,342,if (!validAssignmentTarget(target)) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,343,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,344,"""invalid assignment target"","
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,345,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,346,"target.getLineno(), """", 0);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,348,return assign;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,804,if (type == Token.INC || type == Token.DEC) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,805,if (!validAssignmentTarget(operand)) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,806,String msg = (type == Token.INC)
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,807,"? ""invalid increment target"""
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,808,": ""invalid decrement target"";"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,809,errorReporter.error(
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,810,"msg,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,811,"sourceName,"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,812,"operand.getLineno(), """", 0);"
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,824,private boolean validAssignmentTarget(Node target) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,825,switch (target.getType()) {
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,826,case Token.NAME:
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,827,case Token.GETPROP:
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,828,case Token.GETELEM:
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,829,return true;
True,src/com/google/javascript/jscomp/parsing/IRFactory.java,src/com/google/javascript/jscomp/parsing/IRFactory.java,831,return false;
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,88,"estSame(""function a() { return function() { this = 8; } }"");"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,88,"testSame(""function a() { return function() { this.x = 8; } }"");"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,92,"estSame(""var a = function() { return function() { this = 8; } }"");"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,92,"testSame(""var a = function() { return function() { this.x = 8; } }"");"
False,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,94,"nFunction(""var x; x=2; if(0&&x=1){}; x"");"
True,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,test/com/google/javascript/jscomp/DeadAssignmentsEliminationTest.java,94,"inFunction(""var x; x=2; if(0&&(x=1)){}; x"");"
False,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,106,"oInline(""var x; x = 1 || x = 2; print(x)"");"
False,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,107,"oInline(""var x; x = 1 && x = 2; print(x)"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,106,"noInline(""var x; (x = 1) || (x = 2); print(x)"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,107,"noInline(""var x; x = (1 || (x = 2)); print(x)"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,108,"noInline(""var x;(x = 1) && (x = 2); print(x)"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,109,"noInline(""var x;x = (1 && (x = 2)); print(x)"");"
False,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,366,"oInline(""var x = 1; x = (f(x) = (x = 10) + x);"");"
True,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,test/com/google/javascript/jscomp/FlowSensitiveInlineVariablesTest.java,368,"noInline(""var x = 1; x = (f(x) + (x = 10) + x);"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1252,"est(""function f(){a()}c=f()=z"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1252,"test(""function f(){a()}c=z=f()"","
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1254,"c=JSCompiler_inline_result$$0=z"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1254,"""c=z=JSCompiler_inline_result$$0"");"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,85,"estTypes(""/**@return {void}*/function foo(){ foo()--; }"","
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,85,"testTypes(""/**@return {void}*/function foo(){ var x=foo(); x--; }"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,81,"estTypes(""/**@return {void}*/function foo(){ foo()--; }"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,81,"testTypes(""/**@return {void}*/function foo(){ var x=foo(); x--; }"","
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1018,"final String INVALID_ASSIGNMENT_TARGET = ""invalid assignment target"";"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1019,"final String INVALID_INCREMENT_TARGET = ""invalid increment target"";"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1020,"final String INVALID_DECREMENT_TARGET = ""invalid decrement target"";"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1022,"final String INVALID_INC_OPERAND = ""Invalid increment operand"";"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1023,"final String INVALID_DEC_OPERAND = ""Invalid decrement operand"";"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1025,public void testAssignmentValidation() {
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1026,"testNoParseError(""x=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1027,"testNoParseError(""x.y=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1028,"testNoParseError(""f().y=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1029,"testParseError(""(x||y)=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1030,"testParseError(""(x?y:z)=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1031,"testParseError(""f()=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1033,"testNoParseError(""x+=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1034,"testNoParseError(""x.y+=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1035,"testNoParseError(""f().y+=1"");"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1036,"testParseError(""(x||y)+=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1037,"testParseError(""(x?y:z)+=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1038,"testParseError(""f()+=1"", INVALID_ASSIGNMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1040,"testParseError(""f()++"", INVALID_INCREMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1041,"testParseError(""f()--"", INVALID_DECREMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1042,"testParseError(""++f()"", INVALID_INCREMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1043,"testParseError(""--f()"", INVALID_DECREMENT_TARGET);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1046,private void testNoParseError(String string) {
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1047,"testParseError(string, (String)null);"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1050,"private void testParseError(String string, String error) {"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1051,"testParseError(string, error == null ? null : new String[] { error });"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1054,"private void testParseError(String string, String[] errors) {"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1055,"Node root = newParse(string, new TestErrorReporter(errors, null));"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1056,"assertTrue(""unexpected warnings reported"","
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1057,errorReporter.hasEncounteredAllWarnings());
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1058,"assertTrue(""expected error were not reported"","
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1059,errorReporter.hasEncounteredAllErrors());
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1088,"return newParse(string, new TestErrorReporter(null, null));"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1091,"private Node newParse(String string, TestErrorReporter errorReporter) {"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1053,"ode root = IRFactory.transformTree(script, string, config,"
False,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1054,"ew TestErrorReporter(null, null));"
True,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,test/com/google/javascript/jscomp/parsing/IRFactoryTest.java,1101,"Node root = IRFactory.transformTree(script, string, config, errorReporter);"
False,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,625,"arseError(""[x, y] = foo();"", ""destructuring assignment forbidden"");"
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,625,"parseError(""[x, y] = foo();"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,626,"""destructuring assignment forbidden"","
True,test/com/google/javascript/jscomp/parsing/ParserTest.java,test/com/google/javascript/jscomp/parsing/ParserTest.java,627,"""invalid assignment target"");"
