is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,92,inal int m = matrix.getColumnDimension();
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,93,final int m = lu.length;
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,108,final double[] luColumnCol = new double[m];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,109,for (int i = 0; i < m; i++) {
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,110,luColumnCol[i] = lu[i][col];
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,114,um -= luRow[i] * lu[i][col];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,118,sum -= luRow[i] * luColumnCol[i];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,121,luColumnCol[row] = sum;
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,126,um -= luRow[i] * lu[i][col];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,131,sum -= luRow[i] * luColumnCol[i];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,134,luColumnCol[row] = sum;
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,138,f (FastMath.abs(lu[max][col]) < singularityThreshold) {
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,144,if (FastMath.abs(luColumnCol[max]) < singularityThreshold) {
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,145,ouble tmp = 0;
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,149,mp = luMax[i];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,154,final double tmp = luMax[i];
False,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,153,nt temp = pivot[max];
True,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,src/main/java/org/apache/commons/math3/linear/LUDecomposition.java,158,final int temp = pivot[max];
False,src/main/java/org/apache/commons/math3/util/CompositeFormat.java,src/main/java/org/apache/commons/math3/util/CompositeFormat.java,55,f.setMaximumFractionDigits(2);
True,src/main/java/org/apache/commons/math3/util/CompositeFormat.java,src/main/java/org/apache/commons/math3/util/CompositeFormat.java,55,nf.setMaximumFractionDigits(10);
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,87,"omplex c = new Complex(1.2323, 1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,88,"tring expected = ""1"" + getDecimalCharacter() + ""23 + 1"" + getDecimalCharacter() + ""43i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,87,"Complex c = new Complex(1.232323232323, 1.434343434343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,88,"String expected = ""1"" + getDecimalCharacter() + ""2323232323 + 1"" + getDecimalCharacter() + ""4343434343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,95,"omplex c = new Complex(-1.2323, 1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,96,"tring expected = ""-1"" + getDecimalCharacter() + ""23 + 1"" + getDecimalCharacter() + ""43i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,95,"Complex c = new Complex(-1.232323232323, 1.43);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,96,"String expected = ""-1"" + getDecimalCharacter() + ""2323232323 + 1"" + getDecimalCharacter() + ""43i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,103,"omplex c = new Complex(1.2323, -1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,104,"tring expected = ""1"" + getDecimalCharacter() + ""23 - 1"" + getDecimalCharacter() + ""43i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,103,"Complex c = new Complex(1.23, -1.434343434343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,104,"String expected = ""1"" + getDecimalCharacter() + ""23 - 1"" + getDecimalCharacter() + ""4343434343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,111,"omplex c = new Complex(-1.2323, -1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,112,"tring expected = ""-1"" + getDecimalCharacter() + ""23 - 1"" + getDecimalCharacter() + ""43i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,111,"Complex c = new Complex(-1.232323232323, -1.434343434343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,112,"String expected = ""-1"" + getDecimalCharacter() + ""2323232323 - 1"" + getDecimalCharacter() + ""4343434343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,119,"omplex c = new Complex(0.0, -1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,120,"tring expected = ""0 - 1"" + getDecimalCharacter() + ""43i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,119,"Complex c = new Complex(0.0, -1.434343434343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,120,"String expected = ""0 - 1"" + getDecimalCharacter() + ""4343434343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,127,"omplex c = new Complex(30.233, 0);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,128,"tring expected = ""30"" + getDecimalCharacter() + ""23"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,127,"Complex c = new Complex(30.23333333333, 0);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,128,"String expected = ""30"" + getDecimalCharacter() + ""2333333333"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,146,"omplex c = new Complex(232.222, -342.33);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,147,"tring expected = ""232"" + getDecimalCharacter() + ""22 - 342"" + getDecimalCharacter() + ""33i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,146,"Complex c = new Complex(232.22222222222, -342.3333333333);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,147,"String expected = ""232"" + getDecimalCharacter() + ""2222222222 - 342"" + getDecimalCharacter() + ""3333333333i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,196,"tring source = ""1"" + getDecimalCharacter() + ""2323 + 1"" + getDecimalCharacter() + ""4343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,197,"omplex expected = new Complex(1.2323, 1.4343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,196,"String source = ""1"" + getDecimalCharacter() + ""232323232323 + 1"" + getDecimalCharacter() + ""434343434343i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,197,"Complex expected = new Complex(1.232323232323, 1.434343434343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,204,"tring source = ""-1"" + getDecimalCharacter() + ""2323 + 1"" + getDecimalCharacter() + ""4343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,205,"omplex expected = new Complex(-1.2323, 1.4343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,204,"String source = ""-1"" + getDecimalCharacter() + ""232323232323 + 1"" + getDecimalCharacter() + ""4343i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,205,"Complex expected = new Complex(-1.232323232323, 1.4343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,212,"tring source = ""1"" + getDecimalCharacter() + ""2323 - 1"" + getDecimalCharacter() + ""4343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,213,"omplex expected = new Complex(1.2323, -1.4343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,212,"String source = ""1"" + getDecimalCharacter() + ""2323 - 1"" + getDecimalCharacter() + ""434343434343i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,213,"Complex expected = new Complex(1.2323, -1.434343434343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,220,"tring source = ""-1"" + getDecimalCharacter() + ""2323 - 1"" + getDecimalCharacter() + ""4343i"";"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,221,"omplex expected = new Complex(-1.2323, -1.4343);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,220,"String source = ""-1"" + getDecimalCharacter() + ""232323232323 - 1"" + getDecimalCharacter() + ""434343434343i"";"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,221,"Complex expected = new Complex(-1.232323232323, -1.434343434343);"
False,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,301,"ssert.assertEquals(""3"" + getDecimalCharacter() + ""14"", text);"
True,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,src/test/java/org/apache/commons/math3/complex/ComplexFormatAbstractTest.java,301,"Assert.assertEquals(""3"" + getDecimalCharacter() + ""1415926536"", text);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,67,"ector3D c = new Vector3D(1.2323, 1.4343, 1.6333);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,67,"Vector3D c = new Vector3D(1.232323232323, 1.434343434343, 1.633333333333);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,70,"23; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,71,"43; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,72,"63}"";"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,70,"""2323232323; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,71,"""4343434343; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,72,"""6333333333}"";"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,79,"ector3D c = new Vector3D(-1.2323, 1.4343, 1.6333);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,79,"Vector3D c = new Vector3D(-1.232323232323, 1.43, 1.63);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,82,"23; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,82,"""2323232323; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,91,"ector3D c = new Vector3D(1.2323, -1.4343, 1.6333);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,91,"Vector3D c = new Vector3D(1.23, -1.434343434343, 1.63);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,95,"43; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,95,"""4343434343; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,103,"ector3D c = new Vector3D(1.2323, 1.4343, -1.6333);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,103,"Vector3D c = new Vector3D(1.23, 1.43, -1.633333333333);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,108,"63}"";"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,108,"""6333333333}"";"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,126,"ector3D c = new Vector3D(232.222, -342.33, 432.444);"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,126,"Vector3D c = new Vector3D(232.22222222222, -342.3333333333, 432.44444444444);"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,129,"22; -342"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,130,"33; 432"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,131,"44}"";"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,129,"""2222222222; -342"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,130,"""3333333333; 432"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java,131,"""4444444444}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,71,"ealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.2323, 1.4343, 1.6333},"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,72,"2.4666, 2.4666, 2.6666}});"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,71,"RealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.232323232323, 1.43, 1.63},"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,72,"{2.46, 2.46, 2.666666666666}});"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,75,"23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,75,"""2323232323,1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,78,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,79,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,80,"67}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,78,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,79,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,80,"""6666666667}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,87,"ealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{-1.2323, 1.4343, 1.6333},"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,88,"2.4666, 2.4666, 2.6666}});"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,87,"RealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{-1.232323232323, 1.43, 1.63},"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,88,"{2.46, 2.46, 2.66}});"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,91,"23,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,91,"""2323232323,1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,94,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,95,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,96,"67}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,94,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,95,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,96,"""66}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,103,"ealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.2323, -1.4343, 1.6333},"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,104,"2.4666, 2.4666, 2.6666}});"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,103,"RealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.23, -1.434343434343, 1.63},"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,104,"{2.46, 2.46, 2.66}});"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,108,"43,1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,108,"""4343434343,1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,110,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,111,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,112,"67}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,110,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,111,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,112,"""66}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,119,"ealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.2323, 1.4343, 1.6333},"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,120,"-2.4666, 2.4666, 2.6666}});"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,119,"RealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{1.23, 1.43, 1.63},"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,120,"{-2.66666666666, 2.46, 2.66}});"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,126,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,127,"47,2"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,128,"67}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,126,"""6666666667,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,127,"""46,2"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,128,"""66}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,146,"ealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{232.222, -342.33, 432.444}});"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,146,"RealMatrix m = MatrixUtils.createRealMatrix(new double[][] {{232.2222222222, -342.33333333333, 432.44444444444}});"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,149,"22,-342"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,150,"33,432"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,151,"44}}"";"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,149,"""2222222222,-342"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,150,"""3333333333,432"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealMatrixFormatAbstractTest.java,151,"""4444444444}}"";"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,67,"rrayRealVector c = new ArrayRealVector(new double[] {1.2323, 1.4343, 1.6333});"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,67,"ArrayRealVector c = new ArrayRealVector(new double[] {1.232323232323, 1.43434343434343, 1.633333333333});"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,70,"23; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,71,"43; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,72,"63}"";"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,70,"""2323232323; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,71,"""4343434343; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,72,"""6333333333}"";"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,79,"rrayRealVector c = new ArrayRealVector(new double[] {-1.2323, 1.4343, 1.6333});"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,79,"ArrayRealVector c = new ArrayRealVector(new double[] {-1.232323232323, 1.43, 1.63});"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,82,"23; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,82,"""2323232323; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,91,"rrayRealVector c = new ArrayRealVector(new double[] {1.2323, -1.4343, 1.6333});"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,91,"ArrayRealVector c = new ArrayRealVector(new double[] {1.23, -1.434343434343, 1.63});"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,95,"43; 1"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,95,"""4343434343; 1"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,103,"rrayRealVector c = new ArrayRealVector(new double[] {1.2323, 1.4343, -1.6333});"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,103,"ArrayRealVector c = new ArrayRealVector(new double[] {1.23, 1.43, -1.633333333333});"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,108,"63}"";"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,108,"""6333333333}"";"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,126,"rrayRealVector c = new ArrayRealVector(new double[] {232.222, -342.33, 432.444});"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,126,"ArrayRealVector c = new ArrayRealVector(new double[] {232.22222222222, -342.3333333333, 432.44444444444});"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,129,"22; -342"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,130,"33; 432"" + getDecimalCharacter() +"
False,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,131,"44}"";"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,129,"""2222222222; -342"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,130,"""3333333333; 432"" + getDecimalCharacter() +"
True,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,src/test/java/org/apache/commons/math3/linear/RealVectorFormatAbstractTest.java,131,"""4444444444}"";"
