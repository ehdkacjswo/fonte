is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,21,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,33,* <br/>
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,34,"* The {@link #converged(int,UnivariatePointValuePair,UnivariatePointValuePair)"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,35,* converged} method will also return {@code true} if the number of iterations
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,36,"* has been set (see {@link #SimpleUnivariateValueChecker(double,double,int)"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,37,* this constructor}).
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,45,"* If {@link #maxIterationCount} is set to this value, the number of"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,46,* iterations will never cause
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,47,"* {@link #converged(int,UnivariatePointValuePair,UnivariatePointValuePair)}"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,48,* to return {@code true}.
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,50,private static final int ITERATION_CHECK_DISABLED = -1;
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,52,* Number of iterations after which the
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,53,"* {@link #converged(int,UnivariatePointValuePair,UnivariatePointValuePair)}"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,54,* method will return true (unless the check is disabled).
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,56,private final int maxIterationCount;
False,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,43,ublic SimpleUnivariateValueChecker() {}
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,63,public SimpleUnivariateValueChecker() {
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,64,maxIterationCount = ITERATION_CHECK_DISABLED;
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,79,maxIterationCount = ITERATION_CHECK_DISABLED;
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,83,* Builds an instance with specified thresholds.
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,85,"* In order to perform only relative checks, the absolute tolerance"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,86,* must be set to a negative value. In order to perform only absolute
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,87,"* checks, the relative tolerance must be set to a negative value."
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,89,* @param relativeThreshold relative tolerance threshold
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,90,* @param absoluteThreshold absolute tolerance threshold
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,91,* @param maxIter Maximum iteration count.
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,92,* @throws NotStrictlyPositiveException if {@code maxIter <= 0}.
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,94,* @since 3.1
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,96,"public SimpleUnivariateValueChecker(final double relativeThreshold,"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,97,"final double absoluteThreshold,"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,98,final int maxIter) {
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,99,"super(relativeThreshold, absoluteThreshold);"
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,101,if (maxIter <= 0) {
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,102,throw new NotStrictlyPositiveException(maxIter);
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,104,maxIterationCount = maxIter;
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,127,if (maxIterationCount != ITERATION_CHECK_DISABLED) {
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,128,if (iteration >= maxIterationCount) {
True,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java,129,return true;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,17,package org.apache.commons.math3.optimization.univariate;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,19,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,20,import org.junit.Test;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,21,import org.junit.Assert;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,23,public class SimpleUnivariateValueCheckerTest {
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,24,@Test(expected=NotStrictlyPositiveException.class)
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,25,public void testIterationCheckPrecondition() {
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,26,"new SimpleUnivariateValueChecker(1e-1, 1e-2, 0);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,29,@Test
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,30,public void testIterationCheck() {
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,31,final int max = 10;
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,32,"final SimpleUnivariateValueChecker checker = new SimpleUnivariateValueChecker(1e-1, 1e-2, max);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,33,"Assert.assertTrue(checker.converged(max, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,34,"Assert.assertTrue(checker.converged(max + 1, null, null));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,37,@Test
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,38,public void testIterationCheckDisabled() {
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,39,"final SimpleUnivariateValueChecker checker = new SimpleUnivariateValueChecker(1e-8, 1e-8);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,41,"final UnivariatePointValuePair a = new UnivariatePointValuePair(1d, 1d);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,42,"final UnivariatePointValuePair b = new UnivariatePointValuePair(10d, 10d);"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,44,"Assert.assertFalse(checker.converged(-1, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,45,"Assert.assertFalse(checker.converged(0, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,46,"Assert.assertFalse(checker.converged(1000000, a, b));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,48,"Assert.assertTrue(checker.converged(-1, a, a));"
True,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueCheckerTest.java,49,"Assert.assertTrue(checker.converged(-1, b, b));"
