is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,336,"ode = Math.min(2 * node + 1, pivotsHeap.length); // the min is here to avoid integer overflow"
True,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,336,"node = FastMath.min(2 * node + 1, pivotsHeap.length); // the min is here to avoid integer overflow"
False,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,340,"ode  = Math.min(2 * node + 2, pivotsHeap.length); // the min is here to avoid integer overflow"
True,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,340,"node  = FastMath.min(2 * node + 2, pivotsHeap.length); // the min is here to avoid integer overflow"
False,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,404,hile ((i < j) && (work[j] >= value)) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,404,while ((i < j) && (work[j] > value)) {
False,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,407,hile ((i < j) && (work[i] <= value)) {
True,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,src/main/java/org/apache/commons/math3/stat/descriptive/rank/Percentile.java,407,while ((i < j) && (work[i] < value)) {
