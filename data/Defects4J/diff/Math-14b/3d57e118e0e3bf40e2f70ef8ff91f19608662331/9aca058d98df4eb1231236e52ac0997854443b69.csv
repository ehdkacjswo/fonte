is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,24,import org.apache.commons.math3.exception.DimensionMismatchException;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,132,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,133,public void testIncompatbileParams() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,134,"DSCompiler.getCompiler(3, 2).checkCompatibility(DSCompiler.getCompiler(4, 2));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,137,@Test(expected=DimensionMismatchException.class)
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,138,public void testIncompatbileOrder() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DSCompilerTest.java,139,"DSCompiler.getCompiler(3, 3).checkCompatibility(DSCompiler.getCompiler(3, 2));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,228,DerivativeStructure dsOther =
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,229,"new DerivativeStructure(1, dsX,"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,230,"5, dsX.multiply(dsY),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,231,"-2, dsZ).add(new DerivativeStructure(8, dsZ.multiply(dsX),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,232,"-1, dsY).pow(3));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,236,"Assert.assertEquals(f, dsOther.getValue(),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,237,FastMath.abs(epsilon * f));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,243,"Assert.assertEquals(dfdx, dsOther.getPartialDerivative(1, 0, 0),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,244,FastMath.abs(epsilon * dfdx));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,250,"Assert.assertEquals(dfdxdy, dsOther.getPartialDerivative(1, 1, 0),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,251,FastMath.abs(epsilon * dfdxdy));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,257,"Assert.assertEquals(dfdxdydz, dsOther.getPartialDerivative(1, 1, 1),"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,258,FastMath.abs(epsilon * dfdxdydz));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,522,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,523,public void testPrimitiveRemainder() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,524,double epsilon = 1.0e-15;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,525,for (int maxOrder = 0; maxOrder < 5; ++maxOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,526,for (double x = -1.7; x < 2; x += 0.2) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,527,"DerivativeStructure dsX = new DerivativeStructure(2, maxOrder, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,528,for (double y = -1.7; y < 2; y += 0.2) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,529,DerivativeStructure remainder = dsX.remainder(y);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,530,DerivativeStructure ref = dsX.subtract(x - (x % y));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,531,DerivativeStructure zero = remainder.subtract(ref);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,532,for (int n = 0; n <= maxOrder; ++n) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,533,for (int m = 0; m <= maxOrder; ++m) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,534,if (n + m <= maxOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,535,"Assert.assertEquals(0, zero.getPartialDerivative(n, m), epsilon);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,544,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,545,public void testRemainder() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,546,double epsilon = 1.0e-15;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,547,for (int maxOrder = 0; maxOrder < 5; ++maxOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,548,for (double x = -1.7; x < 2; x += 0.2) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,549,"DerivativeStructure dsX = new DerivativeStructure(2, maxOrder, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,550,for (double y = -1.7; y < 2; y += 0.2) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,551,"DerivativeStructure dsY = new DerivativeStructure(2, maxOrder, 1, y);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,552,DerivativeStructure remainder = dsX.remainder(dsY);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,553,DerivativeStructure ref = dsX.subtract(dsY.multiply((x - (x % y)) / y));
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,554,DerivativeStructure zero = remainder.subtract(ref);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,555,for (int n = 0; n <= maxOrder; ++n) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,556,for (int m = 0; m <= maxOrder; ++m) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,557,if (n + m <= maxOrder) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,558,"Assert.assertEquals(0, zero.getPartialDerivative(n, m), epsilon);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,111,"Assert.assertEquals(f.value(dsX.getValue()), f.value(dsX).getValue(), 1.0e-15);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,300,"erivativeStructure[] y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,301,"DerivativeStructure dsX = new DerivativeStructure(1, 2, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,302,DerivativeStructure[] y = f.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,305,double[] f1 = f.value(dsX.getValue());
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,306,DerivativeStructure[] f2 = f.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,307,"Assert.assertEquals(f1.length, f2.length);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,308,for (int i = 0; i < f1.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,309,"Assert.assertEquals(f1[i], f2[i].getValue(), 1.0e-15);"
False,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,331,"erivativeStructure[][] y = f.value(new DerivativeStructure(1, 2, 0, x));"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,339,"DerivativeStructure dsX = new DerivativeStructure(1, 2, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,340,DerivativeStructure[][] y = f.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,345,double[][] f1 = f.value(dsX.getValue());
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,346,DerivativeStructure[][] f2 = f.value(dsX);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,347,"Assert.assertEquals(f1.length, f2.length);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,348,for (int i = 0; i < f1.length; ++i) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,349,"Assert.assertEquals(f1[i].length, f2[i].length);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,350,for (int j = 0; j < f1[i].length; ++j) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiatorTest.java,351,"Assert.assertEquals(f1[i][j], f2[i][j].getValue(), 1.0e-15);"
