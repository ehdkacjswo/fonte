is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,79,** additive expansion mode */
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,78,/** Additive expansion mode. */
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,82,** multiplicative expansion mode */
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,80,/** Multiplicative expansion mode. */
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,85,** Serializable version identifier */
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,82,/** Serializable version identifier. */
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,298, @param value to be added to end of array
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,295,* @param value Value to be added to end of array.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,310, @param values to be added to end of array
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,307,* @param values Values to be added to end of array.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,334, @param value the value to be added to the array
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,331,* @param value Value to be added to the array.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,336,         by this rolling insert
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,333,* by this rolling insert.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,362, @param value new value to substitute for the most recently added value
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,363, @return value that has been replaced in the array
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,359,* @param value New value to substitute for the most recently added value
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,360,* @return the value that has been replaced in the array.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,367,ublic synchronized double substituteMostRecentElement(double value) throws MathIllegalStateException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,364,public synchronized double substituteMostRecentElement(double value)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,365,throws MathIllegalStateException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,389,         the expansionCriteria.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,387,* the expansionCriteria.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,391,"rotected void checkContractExpand(float contraction, float expansion) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,389,"protected void checkContractExpand(float contraction, float expansion)"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,390,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,428,ouble[] tempArray = new double[numElements + 1];
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,427,final double[] tempArray = new double[numElements + 1];
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,449,ublic synchronized void discardFrontElements(int i) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,448,public synchronized void discardFrontElements(int i)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,449,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,466,ublic synchronized void discardMostRecentElements(int i) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,464,public synchronized void discardMostRecentElements(int i)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,465,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,491,"rivate synchronized void discardExtremeElements(int i,boolean front) throws MathIllegalArgumentException {"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,488,"private synchronized void discardExtremeElements(int i,"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,489,boolean front)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,490,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,534,ouble[] tempArray = new double[newSize];
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,532,final double[] tempArray = new double[newSize];
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,544, @param size Size of the new internal storage array
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,542,* @param size Size of the new internal storage array.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,547,ouble[] tempArray = new double[size];
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,545,final double[] tempArray = new double[size];
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,575,         zero or is greater than <code>getNumElements() - 1</code>.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,573,* zero or is greater than <code>getNumElements() - 1</code>.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,595,ouble[] elementArray = new double[numElements];
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,596,"ystem.arraycopy( internalArray, startIndex, elementArray, 0,"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,597,umElements);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,593,final double[] elementArray = new double[numElements];
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,594,"System.arraycopy(internalArray, startIndex, elementArray, 0, numElements);"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,658, @return number of elements
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,655,* @return the number of elements.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,687,ublic void setContractionCriteria(float contractionCriteria) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,684,public void setContractionCriteria(float contractionCriteria)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,685,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,704, @throws ArrayIndexOutOfBoundsException if <code>index</code> is less than
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,705,         zero.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,702,* @throws ArrayIndexOutOfBoundsException if {@code index < 0}.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,744, @throws MathIllegalArgumentException if the specified mode value is not valid
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,741,* @throws MathIllegalArgumentException if the specified mode value is not valid.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,746,ublic void setExpansionMode(int expansionMode) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,743,public void setExpansionMode(int expansionMode)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,744,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,748,xpansionMode != ADDITIVE_MODE) {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,749,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,750,"ocalizedFormats.UNSUPPORTED_EXPANSION_MODE,"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,751,"xpansionMode, MULTIPLICATIVE_MODE, ""MULTIPLICATIVE_MODE"","
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,752,"DDITIVE_MODE, ""ADDITIVE_MODE"");"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,746,expansionMode != ADDITIVE_MODE) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,747,"throw new MathIllegalArgumentException(LocalizedFormats.UNSUPPORTED_EXPANSION_MODE, expansionMode,"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,748,"MULTIPLICATIVE_MODE, ""MULTIPLICATIVE_MODE"","
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,749,"ADDITIVE_MODE, ""ADDITIVE_MODE"");"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,764,         positive.
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,761,* positive.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,766,rotected void setInitialCapacity(int initialCapacity) throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,763,protected void setInitialCapacity(int initialCapacity)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,764,throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,772,hrow new MathIllegalArgumentException(
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,773,"ocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE,"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,774,nitialCapacity);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,770,"throw new MathIllegalArgumentException(LocalizedFormats.INITIAL_CAPACITY_NOT_POSITIVE,"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,771,initialCapacity);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,786,ublic synchronized void setNumElements(int i) throws MathIllegalArgumentException {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,788,/ If index is negative thrown an error
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,783,public synchronized void setNumElements(int i)
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,784,throws MathIllegalArgumentException {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,785,// If index is negative thrown an error.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,796,/ expanded to accommodate this new number of elements
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,793,// expanded to accommodate this new number of elements.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,801,/ Set the new number of elements to new value
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,798,// Set the new number of elements to new value.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,826, @return starting index
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,823,* @return the starting index.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,849,"ublic static void copy(ResizableDoubleArray source, ResizableDoubleArray dest)"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,846,"public static void copy(ResizableDoubleArray source,"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,847,ResizableDoubleArray dest)
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,877,esizableDoubleArray result = new ResizableDoubleArray();
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,875,final ResizableDoubleArray result = new ResizableDoubleArray();
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,896,f (object instanceof ResizableDoubleArray == false) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,894,if (object instanceof ResizableDoubleArray == false) {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,899,ynchronized(this) {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,900,ynchronized(object) {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,901,oolean result = true;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,902,esizableDoubleArray other = (ResizableDoubleArray) object;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,903,esult = result && (other.initialCapacity == initialCapacity);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,904,esult = result && (other.contractionCriteria == contractionCriteria);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,905,esult = result && (other.expansionFactor == expansionFactor);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,906,esult = result && (other.expansionMode == expansionMode);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,907,esult = result && (other.numElements == numElements);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,908,esult = result && (other.startIndex == startIndex);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,909,f (!result) {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,910,eturn false;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,911, else {
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,912,"eturn Arrays.equals(internalArray, other.internalArray);"
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,897,synchronized(this) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,898,synchronized(object) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,899,boolean result = true;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,900,final ResizableDoubleArray other = (ResizableDoubleArray) object;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,901,result = result && (other.initialCapacity == initialCapacity);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,902,result = result && (other.contractionCriteria == contractionCriteria);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,903,result = result && (other.expansionFactor == expansionFactor);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,904,result = result && (other.expansionMode == expansionMode);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,905,result = result && (other.numElements == numElements);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,906,result = result && (other.startIndex == startIndex);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,907,if (!result) {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,908,return false;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,909,} else {
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,910,"return Arrays.equals(internalArray, other.internalArray);"
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,921, @return hash code representing this ResizableDoubleArray
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,919,* @return the hash code representing this {@code ResizableDoubleArray}.
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,926,nt[] hashData = new int[7];
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,924,final int[] hashData = new int[7];
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,930,ashData[3] = Arrays.hashCode(internalArray);
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,931,ashData[4] = initialCapacity;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,932,ashData[5] = numElements;
False,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,933,ashData[6] = startIndex;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,928,hashData[3] = Arrays.hashCode(internalArray);
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,929,hashData[4] = initialCapacity;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,930,hashData[5] = numElements;
True,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java,931,hashData[6] = startIndex;
