is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,23,import org.apache.commons.math3.exception.OutOfRangeException;
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,59,** error message */
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,60,"rivate final String indexOutOfBound = ""Index is outside of the 0 to number of variables - 1 range"";"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,146," @param index an integer index which must be in the range [0, numberOfParameters-1]"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,147, @return parameters estimated for regressor at index
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,148, @throws IndexOutOfBoundsException thrown if the index >= numberOfParameters
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,145,* @param index Index.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,146,* @return the parameters estimated for regressor at index.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,147,* @throws OutOfRangeException if {@code index} is not in the interval
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,148,"* {@code [0, number of parameters)}."
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,150,ublic double getParameterEstimate(int index) throws IndexOutOfBoundsException {
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,150,public double getParameterEstimate(int index) {
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,155,hrow new IndexOutOfBoundsException(indexOutOfBound);
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,155,"throw new OutOfRangeException(index, 0, this.parameters.length - 1);"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,182," @param index an integer index which must be in the range [0, numberOfParameters-1]"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,183, @return standard errors associated with parameters estimated at index
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,184, @throws IndexOutOfBoundsException thrown if the index >= numberOfParameters
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,182,* @param index Index.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,183,* @return the standard errors associated with parameters estimated at index.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,184,* @throws OutOfRangeException if {@code index} is not in the interval
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,185,"* {@code [0, number of parameters)}."
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,186,ublic double getStdErrorOfEstimate(int index) throws IndexOutOfBoundsException {
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,187,public double getStdErrorOfEstimate(int index) {
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,191,hrow new IndexOutOfBoundsException(indexOutOfBound);
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,192,"throw new OutOfRangeException(index, 0, this.parameters.length - 1);"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,233, @param i - the ith regression parameter
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,234, @param j - the jth regression parameter
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,235, @return the covariance of the parameter estimates
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,236," @throws IndexOutOfBoundsException thrown when i,j >= number of parameters"
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,234,* @param i {@code i}th regression parameter.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,235,* @param j {@code j}th regression parameter.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,236,* @return the covariance of the parameter estimates.
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,237,* @throws OutOfRangeException if {@code i} or {@code j} is not in the
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,238,"* interval {@code [0, number of parameters)}."
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,238,"ublic double getCovarianceOfParameters(int i, int j) throws IndexOutOfBoundsException {"
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,240,"public double getCovarianceOfParameters(int i, int j) {"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,243,"hrow new IndexOutOfBoundsException("" Row index is outside of the 0 "" +"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,244,"to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,245,"throw new OutOfRangeException(i, 0, this.parameters.length - 1);"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,247,"hrow new IndexOutOfBoundsException("" Column index is outside of the 0"" +"
False,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,248," to number of variables - 1 range"");"
True,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,src/main/java/org/apache/commons/math3/stat/regression/RegressionResults.java,248,"throw new OutOfRangeException(j, 0, this.parameters.length - 1);"
