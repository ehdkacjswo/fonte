is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,211, so this method returns {@code Integer.MAX_VALUE} and
False,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,212, {@link #isSupportUpperBoundInclusive()} returns {@code true}.
True,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java,211,* so this method returns {@code Integer.MAX_VALUE}.
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,435, {@link #transform(Complex[])} and {@link #inverseTransform(Complex[])} in
False,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,436, a row-column implementation in any number of dimensions with
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,435,"* {@link #transform(Complex[], TransformType)} in a row-column"
True,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math3/transform/FastFourierTransformer.java,436,* implementation in any number of dimensions with
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,70," {@link #transform(UnivariateFunction, double, double, int)} and"
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,71," {@link #inverseTransform(UnivariateFunction, double, double, int)}, after"
False,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,72, sampling.
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,70,"* {@link #transform(UnivariateFunction, double, double, int, TransformType)},"
True,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java,71,* after sampling.
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,34," {@link #transform(double[], boolean)} (to be implemented by the user: a naive"
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,35, method may be used). Methods are also provided to test that invalid parameters
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,36, throw the expected exceptions.
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,34,"* {@link #transform(double[], TransformType)} (to be implemented by the user:"
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,35,* a naive method may be used). Methods are also provided to test that invalid
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,36,* parameters throw the expected exceptions.
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,150," {@link RealTransformer#transform(double[], TransformType))} should throw a"
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,150,"* {@link RealTransformer#transform(double[], TransformType)} should throw a"
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,250, Accuracy check of {@link RealTransformer#transform(double[])}. For each
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,251, valid data size returned by
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,250,"* Accuracy check of {@link RealTransformer#transform(double[], TransformType)}."
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,251,* For each valid data size returned by
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,256," {@link #transform(double[], boolean)}. Actual and expected values should"
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,257, be equal to within the relative error returned by
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,256,"* {@link #transform(double[], TransformType)}. Actual and expected values"
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,257,* should be equal to within the relative error returned by
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,274," {@link RealTransformer#transform(UnivariateFunction, double, double, int)}."
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,274,"* {@link RealTransformer#transform(UnivariateFunction, double, double, int, TransformType)}."
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,279," transform, return by {@link #transform(double[], boolean)}. Actual and"
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,280, expected values should be equal to within the relative error returned by
False,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,281, {@link #getRelativeTolerance(int) getRelativeTolerance(i)}.
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,279,"* transform, return by {@link #transform(double[], TransformType)}. Actual"
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,280,* and expected values should be equal to within the relative error returned
True,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java,281,* by {@link #getRelativeTolerance(int) getRelativeTolerance(i)}.
