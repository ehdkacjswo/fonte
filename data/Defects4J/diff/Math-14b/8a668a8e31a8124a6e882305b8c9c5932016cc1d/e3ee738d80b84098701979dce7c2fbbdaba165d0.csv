is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,20,import java.util.concurrent.atomic.AtomicReference;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,46,/** Stirling numbers of the second kind. */
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,47,static final AtomicReference<long[][]> STIRLING_S2 = new AtomicReference<long[][]> (null);
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,891,* Returns the <a
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,892,"* href=""http://mathworld.wolfram.com/StirlingNumberoftheSecondKind.html"">"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,893,"* Stirling number of the second kind</a>, ""{@code S(n,k)}"", the number of"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,894,* ways of partitioning an {@code n}-element set into {@code k} non-empty
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,895,* subsets.
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,896,* <p>
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,897,* The preconditions are {@code 0 <= k <= n } (otherwise
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,898,* {@code NotPositiveException} is thrown)
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,899,* </p>
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,900,* @param n the size of the set
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,901,* @param k the number of non-empty subsets
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,902,"* @return {@code S(n,k)}"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,903,* @throws NotPositiveException if {@code k < 0}.
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,904,* @throws NumberIsTooLargeException if {@code k > n}.
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,905,"* @throws MathArithmeticException if some overflow happens, typically for n exceeding 25 and"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,906,"* k between 20 and n-2 (S(n,n-1) is handled specifically and does not overflow)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,908,"public static long stirlingS2(final int n, final int k)"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,909,"throws NotPositiveException, NumberIsTooLargeException, MathArithmeticException {"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,910,if (k < 0) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,911,throw new NotPositiveException(k);
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,913,if (k > n) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,914,"throw new NumberIsTooLargeException(k, n, true);"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,917,long[][] stirlingS2 = STIRLING_S2.get();
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,919,if (stirlingS2 == null) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,920,"// the cache has never been initialized, compute the first numbers"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,921,// by direct recurrence relation
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,923,"// as S(26,9) = 11201516780955125625 is larger than Long.MAX_VALUE"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,924,// we must stop computation at row 26
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,925,final int maxIndex = 26;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,926,stirlingS2 = new long[maxIndex][];
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,927,stirlingS2[0] = new long[] { 1l };
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,928,for (int i = 1; i < stirlingS2.length; ++i) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,929,stirlingS2[i] = new long[i + 1];
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,930,stirlingS2[i][0] = 0;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,931,stirlingS2[i][1] = 1;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,932,stirlingS2[i][i] = 1;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,933,for (int j = 2; j < i; ++j) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,934,stirlingS2[i][j] = j * stirlingS2[i - 1][j] + stirlingS2[i - 1][j - 1];
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,938,// atomically save the cache
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,939,"STIRLING_S2.compareAndSet(null, stirlingS2);"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,943,if (n < stirlingS2.length) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,944,// the number is in the small cache
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,945,return stirlingS2[n][k];
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,946,} else {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,947,// use explicit formula to compute the number without caching it
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,948,if (k == 0) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,949,return 0;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,950,} else if (k == 1 || k == n) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,951,return 1;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,952,} else if (k == 2) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,953,return (1l << (n - 1)) - 1l;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,954,} else if (k == n - 1) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,955,"return binomialCoefficient(n, 2);"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,956,} else {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,957,// definition formula: note that this may trigger some overflow
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,958,long sum = 0;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,959,long sign = ((k & 0x1) == 0) ? 1 : -1;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,960,for (int j = 1; j <= k; ++j) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,961,sign = -sign;
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,962,"sum += sign * binomialCoefficient(k, j) * pow(j, n);"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,963,if (sum < 0) {
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,964,// there was an overflow somewhere
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,965,"throw new MathArithmeticException(LocalizedFormats.ARGUMENT_OUTSIDE_DOMAIN,"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,966,"n, 0, stirlingS2.length - 1);"
True,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java,969,return sum / factorial(k);
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,28,import org.apache.commons.math3.exception.NotPositiveException;
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,29,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,698,@Test
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,699,public void testStirlingS2() {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,701,"Assert.assertEquals(1, ArithmeticUtils.stirlingS2(0, 0));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,703,for (int n = 1; n < 30; ++n) {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,704,"Assert.assertEquals(0, ArithmeticUtils.stirlingS2(n, 0));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,705,"Assert.assertEquals(1, ArithmeticUtils.stirlingS2(n, 1));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,706,if (n > 2) {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,707,"Assert.assertEquals((1l << (n - 1)) - 1l, ArithmeticUtils.stirlingS2(n, 2));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,708,"Assert.assertEquals(ArithmeticUtils.binomialCoefficient(n, 2),"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,709,"ArithmeticUtils.stirlingS2(n, n - 1));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,711,"Assert.assertEquals(1, ArithmeticUtils.stirlingS2(n, n));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,713,"Assert.assertEquals(536870911l, ArithmeticUtils.stirlingS2(30, 2));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,714,"Assert.assertEquals(576460752303423487l, ArithmeticUtils.stirlingS2(60, 2));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,716,"Assert.assertEquals(   25, ArithmeticUtils.stirlingS2( 5, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,717,"Assert.assertEquals(   90, ArithmeticUtils.stirlingS2( 6, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,718,"Assert.assertEquals(   65, ArithmeticUtils.stirlingS2( 6, 4));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,719,"Assert.assertEquals(  301, ArithmeticUtils.stirlingS2( 7, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,720,"Assert.assertEquals(  350, ArithmeticUtils.stirlingS2( 7, 4));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,721,"Assert.assertEquals(  140, ArithmeticUtils.stirlingS2( 7, 5));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,722,"Assert.assertEquals(  966, ArithmeticUtils.stirlingS2( 8, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,723,"Assert.assertEquals( 1701, ArithmeticUtils.stirlingS2( 8, 4));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,724,"Assert.assertEquals( 1050, ArithmeticUtils.stirlingS2( 8, 5));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,725,"Assert.assertEquals(  266, ArithmeticUtils.stirlingS2( 8, 6));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,726,"Assert.assertEquals( 3025, ArithmeticUtils.stirlingS2( 9, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,727,"Assert.assertEquals( 7770, ArithmeticUtils.stirlingS2( 9, 4));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,728,"Assert.assertEquals( 6951, ArithmeticUtils.stirlingS2( 9, 5));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,729,"Assert.assertEquals( 2646, ArithmeticUtils.stirlingS2( 9, 6));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,730,"Assert.assertEquals(  462, ArithmeticUtils.stirlingS2( 9, 7));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,731,"Assert.assertEquals( 9330, ArithmeticUtils.stirlingS2(10, 3));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,732,"Assert.assertEquals(34105, ArithmeticUtils.stirlingS2(10, 4));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,733,"Assert.assertEquals(42525, ArithmeticUtils.stirlingS2(10, 5));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,734,"Assert.assertEquals(22827, ArithmeticUtils.stirlingS2(10, 6));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,735,"Assert.assertEquals( 5880, ArithmeticUtils.stirlingS2(10, 7));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,736,"Assert.assertEquals(  750, ArithmeticUtils.stirlingS2(10, 8));"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,740,@Test(expected=NotPositiveException.class)
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,741,public void testStirlingS2NegativeN() {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,742,"ArithmeticUtils.stirlingS2(3, -1);"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,745,@Test(expected=NumberIsTooLargeException.class)
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,746,public void testStirlingS2LargeK() {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,747,"ArithmeticUtils.stirlingS2(3, 4);"
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,750,@Test(expected=MathArithmeticException.class)
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,751,public void testStirlingS2Overflow() {
True,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,src/test/java/org/apache/commons/math3/util/ArithmeticUtilsTest.java,752,"ArithmeticUtils.stirlingS2(26, 9);"
