is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,378,"* Checks whether a matrix is symmetric, within a given relative tolerance."
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,380,* @param matrix Matrix to check.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,381,* @param relativeTolerance Tolerance of the symmetry check.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,382,"* @param raiseException If {@code true}, an exception will be raised if"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,383,* the matrix is not symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,384,* @return {@code true} if {@code matrix} is symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,385,* @throws NonSquareMatrixException if the matrix is not square.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,386,* @throws NonSymmetricMatrixException if the matrix is not symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,388,"private static boolean isSymmetricInternal(RealMatrix matrix,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,389,"double relativeTolerance,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,390,boolean raiseException) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,391,final int rows = matrix.getRowDimension();
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,392,if (rows != matrix.getColumnDimension()) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,393,if (raiseException) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,394,"throw new NonSquareMatrixException(rows, matrix.getColumnDimension());"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,395,} else {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,396,return false;
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,399,for (int i = 0; i < rows; i++) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,400,for (int j = i + 1; j < rows; j++) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,401,"final double mij = matrix.getEntry(i, j);"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,402,"final double mji = matrix.getEntry(j, i);"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,403,if (FastMath.abs(mij - mji) >
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,404,"FastMath.max(FastMath.abs(mij), FastMath.abs(mji)) * relativeTolerance) {"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,405,if (raiseException) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,406,"throw new NonSymmetricMatrixException(i, j, relativeTolerance);"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,407,} else {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,408,return false;
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,413,return true;
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,417,* Checks whether a matrix is symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,419,* @param matrix Matrix to check.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,420,* @param eps Relative tolerance.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,421,* @throws NonSquareMatrixException if the matrix is not square.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,422,* @throws NonSymmetricMatrixException if the matrix is not symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,424,"public static void checkSymmetric(RealMatrix matrix,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,425,double eps) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,426,"isSymmetricInternal(matrix, eps, true);"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,430,* Checks whether a matrix is symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,432,* @param matrix Matrix to check.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,433,* @param eps Relative tolerance.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,434,* @return {@code true} if {@code matrix} is symmetric.
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,436,"public static boolean isSymmetric(RealMatrix matrix,"
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,437,double eps) {
True,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,src/main/java/org/apache/commons/math3/linear/MatrixUtils.java,438,"return isSymmetricInternal(matrix, eps, false);"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,367,@Test
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,368,public void testIsSymmetric() {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,369,final double eps = Math.ulp(1d);
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,371,final double[][] dataSym = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,372,"{ 1, 2, 3 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,373,"{ 2, 2, 5 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,374,"{ 3, 5, 6 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,376,"Assert.assertTrue(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataSym), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,378,final double[][] dataNonSym = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,379,"{ 1, 2, -3 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,380,"{ 2, 2, 5 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,381,"{ 3, 5, 6 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,383,"Assert.assertFalse(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataNonSym), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,386,@Test
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,387,public void testIsSymmetricTolerance() {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,388,final double eps = 1e-4;
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,390,final double[][] dataSym1 = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,391,"{ 1,   1, 1.00009 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,392,"{ 1,   1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,393,"{ 1.0, 1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,395,"Assert.assertTrue(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataSym1), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,396,final double[][] dataSym2 = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,397,"{ 1,   1, 0.99990 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,398,"{ 1,   1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,399,"{ 1.0, 1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,401,"Assert.assertTrue(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataSym2), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,403,final double[][] dataNonSym1 = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,404,"{ 1,   1, 1.00011 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,405,"{ 1,   1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,406,"{ 1.0, 1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,408,"Assert.assertFalse(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataNonSym1), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,409,final double[][] dataNonSym2 = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,410,"{ 1,   1, 0.99989 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,411,"{ 1,   1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,412,"{ 1.0, 1, 1       },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,414,"Assert.assertFalse(MatrixUtils.isSymmetric(MatrixUtils.createRealMatrix(dataNonSym2), eps));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,417,@Test
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,418,public void testCheckSymmetric1() {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,419,final double[][] dataSym = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,420,"{ 1, 2, 3 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,421,"{ 2, 2, 5 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,422,"{ 3, 5, 6 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,424,"MatrixUtils.checkSymmetric(MatrixUtils.createRealMatrix(dataSym), Math.ulp(1d));"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,427,@Test(expected=NonSymmetricMatrixException.class)
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,428,public void testCheckSymmetric2() {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,429,final double[][] dataNonSym = {
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,430,"{ 1, 2, -3 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,431,"{ 2, 2, 5 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,432,"{ 3, 5, 6 },"
True,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java,434,"MatrixUtils.checkSymmetric(MatrixUtils.createRealMatrix(dataNonSym), Math.ulp(1d));"
