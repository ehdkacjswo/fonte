is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,5,* reserved.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,9,* are met:
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,17,*    distribution.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,54,package org.apache.commons.math.analysis;
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,56,import org.apache.commons.math.MathException;
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,59,* Auxillary class for testing solvers.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,61,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,64,public class QuinticFunction implements UnivariateRealFunction {
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,66,/* Evaluate quintic.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,67,* @see org.apache.commons.math.UnivariateRealFunction#value(double)
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,69,public double value(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,70,return (x-1)*(x-0.5)*x*(x+0.5)*(x+1);
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,73,/* First derivative of quintic.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,74,* @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,76,public double firstDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,77,return (5*x*x-3.75)*x*x+0.25;
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,80,/* Second order derivative of quintic.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,81,* Unsupported.
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,82,* @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,84,public double secondDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/QuinticFunction.java,src/test/org/apache/commons/math/analysis/QuinticFunction.java,85,throw new UnsupportedOperationException();
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,5,* reserved.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,9,* are met:
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,17,*    distribution.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,54,package org.apache.commons.math.analysis;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,56,import org.apache.commons.math.MathException;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,58,import junit.framework.Assert;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,59,import junit.framework.Test;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,60,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,61,import junit.framework.TestSuite;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,64,* Testcase for UnivariateRealSolver.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,65,* Because Brent-Dekker is guaranteed to converge in less than the default
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,66,"* maximum iteration count due to bisection fallback, it is quite hard to"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,67,* debug. I include measured iteration counts plus one in order to detect
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,68,* regressions. On average Brent-Dekker should use 4..5 iterations for the
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,69,* default absolute accuracy of 10E-8 for sinus and the quintic function around
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,70,"* zero, and 5..10 iterations for the other zeros."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,72,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,75,public final class RealSolverTest extends TestCase {
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,77,public RealSolverTest(String name) {
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,78,super(name);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,81,public static Test suite() {
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,82,TestSuite suite = new TestSuite(RealSolverTest.class);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,83,"suite.setName(""UnivariateRealSolver Tests"");"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,84,return suite;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,87,public void testSinZero() throws MathException {
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,88,// The sinus function is behaved well around the root at #pi. The second
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,89,"// order derivative is zero, which means linar approximating methods will"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,90,// still converge quadratically.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,91,UnivariateRealFunction f = new SinFunction();
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,92,double result;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,93,UnivariateRealSolver solver = new BrentSolver(f);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,94,// Somewhat benign interval. The function is monotonous.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,95,"result = solver.solve(3, 4);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,96,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,97,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,98,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,99,// 4 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,100,assertTrue(solver.getIterationCount() <= 5);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,101,// Larger and somewhat less benign interval. The function is grows first.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,102,"result = solver.solve(1, 4);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,103,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,104,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,105,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,106,// 5 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,107,assertTrue(solver.getIterationCount() <= 6);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,108,solver = new SecantSolver(f);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,109,"result = solver.solve(3, 4);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,110,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,111,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,112,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,113,// 4 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,114,assertTrue(solver.getIterationCount() <= 5);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,115,"result = solver.solve(1, 4);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,116,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,117,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,118,"assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,119,// 5 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,120,assertTrue(solver.getIterationCount() <= 6);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,123,public void testQuinticZero() throws MathException {
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,124,"// The quintic function has zeroes at 0, +-0.5 and +-1."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,125,"// Around the root of 0 the function is well behaved, with a second derivative"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,126,// of zero a 0.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,127,"// The other roots are less well to find, in particular the root at 1, because"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,128,// the function grows fast for x>1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,129,"// The function has extrema (first derivative is zero) at 0.27195613 and 0.82221643,"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,130,// intervals containing these values are harder for the solvers.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,131,UnivariateRealFunction f = new QuinticFunction();
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,132,double result;
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,133,// Brent-Dekker solver.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,134,UnivariateRealSolver solver = new BrentSolver(f);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,135,// Symmetric bracket around 0. Test whether solvers can handle hitting
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,136,// the root in the first iteration.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,137,"result = solver.solve(-0.2, 0.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,138,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,139,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,140,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,141,assertTrue(solver.getIterationCount() <= 2);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,142,// 1 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,143,"// Asymmetric bracket around 0, just for fun. Contains extremum."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,144,"result = solver.solve(-0.1, 0.3);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,145,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,146,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,147,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,148,// 5 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,149,assertTrue(solver.getIterationCount() <= 6);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,150,// Large bracket around 0. Contains two extrema.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,151,"result = solver.solve(-0.3, 0.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,152,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,153,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,154,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,155,// 6 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,156,assertTrue(solver.getIterationCount() <= 7);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,157,"// Benign bracket around 0.5, function is monotonous."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,158,"result = solver.solve(0.3, 0.7);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,159,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,160,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,161,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,162,// 6 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,163,assertTrue(solver.getIterationCount() <= 7);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,164,"// Less benign bracket around 0.5, contains one extremum."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,165,"result = solver.solve(0.2, 0.6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,166,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,167,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,168,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,169,// 6 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,170,assertTrue(solver.getIterationCount() <= 7);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,171,"// Large, less benign bracket around 0.5, contains both extrema."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,172,"result = solver.solve(0.05, 0.95);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,173,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,174,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,175,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,176,// 8 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,177,assertTrue(solver.getIterationCount() <= 9);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,178,"// Relatively benign bracket around 1, function is monotonous. Fast growth for x>1"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,179,// is still a problem.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,180,"result = solver.solve(0.85, 1.25);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,181,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,182,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,183,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,184,// 8 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,185,assertTrue(solver.getIterationCount() <= 9);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,186,// Less benign bracket around 1 with extremum.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,187,"result = solver.solve(0.8, 1.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,188,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,189,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,190,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,191,// 8 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,192,assertTrue(solver.getIterationCount() <= 9);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,193,// Large bracket around 1. Monotonous.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,194,"result = solver.solve(0.85, 1.75);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,195,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,196,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,197,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,198,// 10 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,199,assertTrue(solver.getIterationCount() <= 11);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,200,// Large bracket around 1. Interval contains extremum.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,201,"result = solver.solve(0.55, 1.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,202,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,203,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,204,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,205,// 7 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,206,assertTrue(solver.getIterationCount() <= 8);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,207,// Very large bracket around 1 for testing fast growth behaviour.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,208,"result = solver.solve(0.85, 5);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,209,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,210,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,211,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,212,// 12 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,213,assertTrue(solver.getIterationCount() <= 13);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,214,// Secant solver.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,215,solver = new SecantSolver(f);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,216,"result = solver.solve(-0.2, 0.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,217,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,218,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,219,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,220,// 1 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,221,assertTrue(solver.getIterationCount() <= 2);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,222,"result = solver.solve(-0.1, 0.3);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,223,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,224,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,225,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,226,// 5 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,227,assertTrue(solver.getIterationCount() <= 6);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,228,"result = solver.solve(-0.3, 0.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,229,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,230,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,231,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,232,// 6 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,233,assertTrue(solver.getIterationCount() <= 7);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,234,"result = solver.solve(0.3, 0.7);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,235,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,236,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,237,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,238,// 7 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,239,assertTrue(solver.getIterationCount() <= 8);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,240,"result = solver.solve(0.2, 0.6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,241,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,242,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,243,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,244,// 6 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,245,assertTrue(solver.getIterationCount() <= 7);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,246,"result = solver.solve(0.05, 0.95);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,247,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,248,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,249,"assertEquals(result, 0.5, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,250,// 8 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,251,assertTrue(solver.getIterationCount() <= 9);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,252,"result = solver.solve(0.85, 1.25);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,253,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,254,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,255,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,256,// 10 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,257,assertTrue(solver.getIterationCount() <= 11);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,258,"result = solver.solve(0.8, 1.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,259,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,260,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,261,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,262,// 8 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,263,assertTrue(solver.getIterationCount() <= 9);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,264,"result = solver.solve(0.85, 1.75);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,265,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,266,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,267,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,268,// 14 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,269,assertTrue(solver.getIterationCount() <= 15);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,270,// The followig is especially slow because the solver first has to reduce
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,271,"// the bracket to exclude the extremum. After that, convergence is rapide."
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,272,"result = solver.solve(0.55, 1.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,273,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,274,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,275,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,276,// 7 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,277,assertTrue(solver.getIterationCount() <= 8);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,278,"result = solver.solve(0.85, 5);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,279,System.out.println(
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,280,"""Root: "" + result + "" Iterations: "" + solver.getIterationCount());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,281,"assertEquals(result, 1.0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,282,// 14 iterations on i586 JDK 1.4.1.
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,283,assertTrue(solver.getIterationCount() <= 15);
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,284,// Static solve method
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,285,"result = UnivariateRealSolverFactory.solve(f, -0.2, 0.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,286,"assertEquals(result, 0, solver.getAbsoluteAccuracy());"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,287,"result = UnivariateRealSolverFactory.solve(f, -0.1, 0.3);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,288,"Assert.assertEquals(result, 0, 1E-8);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,289,"result = UnivariateRealSolverFactory.solve(f, -0.3, 0.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,290,"Assert.assertEquals(result, 0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,291,"result = UnivariateRealSolverFactory.solve(f, 0.3, 0.7);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,292,"Assert.assertEquals(result, 0.5, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,293,"result = UnivariateRealSolverFactory.solve(f, 0.2, 0.6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,294,"Assert.assertEquals(result, 0.5, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,295,"result = UnivariateRealSolverFactory.solve(f, 0.05, 0.95);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,296,"Assert.assertEquals(result, 0.5, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,297,"result = UnivariateRealSolverFactory.solve(f, 0.85, 1.25);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,298,"Assert.assertEquals(result, 1.0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,299,"result = UnivariateRealSolverFactory.solve(f, 0.8, 1.2);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,300,"Assert.assertEquals(result, 1.0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,301,"result = UnivariateRealSolverFactory.solve(f, 0.85, 1.75);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,302,"Assert.assertEquals(result, 1.0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,303,"result = UnivariateRealSolverFactory.solve(f, 0.55, 1.45);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,304,"Assert.assertEquals(result, 1.0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,305,"result = UnivariateRealSolverFactory.solve(f, 0.85, 5);"
True,src/test/org/apache/commons/math/analysis/RealSolverTest.java,src/test/org/apache/commons/math/analysis/RealSolverTest.java,306,"Assert.assertEquals(result, 1.0, 1E-6);"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,5,* reserved.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,9,* are met:
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,17,*    distribution.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,54,package org.apache.commons.math.analysis;
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,56,import org.apache.commons.math.MathException;
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,59,* Auxillary class for testing solvers.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,61,* The function is extraordinarily well behaved around zero roots: it
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,62,"* has an inflection point there (second order derivative is zero),"
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,63,* which means linear approximation (Regula Falsi) will converge
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,64,* quadratically.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,66,* @author pietsch at apache.org
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,69,public class SinFunction implements UnivariateRealFunction {
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,71,/* Evaluate sinus fuction.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,72,* @see org.apache.commons.math.UnivariateRealFunction#value(double)
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,74,public double value(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,75,return Math.sin(x);
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,78,/* First derivative of sinus function
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,79,* @see org.apache.commons.math.UnivariateRealFunction#firstDerivative(double)
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,81,public double firstDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,82,return Math.cos(x);
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,85,/* Second derivative of sinus function.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,86,* Unsupported.
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,87,* @see org.apache.commons.math.UnivariateRealFunction#secondDerivative(double)
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,89,public double secondDerivative(double x) throws MathException {
True,src/test/org/apache/commons/math/analysis/SinFunction.java,src/test/org/apache/commons/math/analysis/SinFunction.java,90,throw new UnsupportedOperationException();
