is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,21,import java.util.Arrays;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,73,inal double[] otherPoint = ((EuclideanDoublePoint) other).getPoint();
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,74,f (point.length != otherPoint.length) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,75,eturn false;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,77,or (int i = 0; i < point.length; i++) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,78,f (point[i] != otherPoint[i]) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,79,eturn false;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,82,eturn true;
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,74,"return Arrays.equals(point, ((EuclideanDoublePoint) other).point);"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,97,nt hashCode = 0;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,98,or (final Double i : point) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,99,ashCode += i.hashCode() * 13 + 7;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,101,eturn hashCode;
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,89,return Arrays.hashCode(point);
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,107,"inal StringBuilder buff = new StringBuilder(""("");"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,108,inal double[] coordinates = getPoint();
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,109,or (int i = 0; i < coordinates.length; i++) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,110,uff.append(coordinates[i]);
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,111,f (i < coordinates.length - 1) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,112,"uff.append(',');"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,115,uff.append(')');
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,116,eturn buff.toString();
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanDoublePoint.java,95,return Arrays.toString(point);
