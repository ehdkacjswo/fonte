is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,17,package org.apache.commons.math3.random;
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,20,* Any {@link RandomGenerator} implementation can be thread-safe if it
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,21,* is used through an instance of this class.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,22,* This is achieved by enclosing calls to the methods of the actual
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,23,* generator inside the overridden {@code synchronized} methods of this
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,24,* class.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,26,* @since 3.1
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,27,* @version $Id$
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,29,public class SynchronizedRandomGenerator implements RandomGenerator {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,30,/** Object to which all calls will be delegated. */
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,31,private final RandomGenerator wrapped;
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,34,* Creates a synchronized wrapper for the given {@code RandomGenerator}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,35,* instance.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,37,* @param rng Generator whose methods will be called through
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,38,* their corresponding overridden synchronized version.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,39,"* To ensure thread-safety, the wrapped generator <em>must</em>"
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,40,* not be used directly.
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,42,public SynchronizedRandomGenerator(RandomGenerator rng) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,43,wrapped = rng;
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,47,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,49,public synchronized void setSeed(int seed) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,50,wrapped.setSeed(seed);
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,54,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,56,public synchronized void setSeed(int[] seed) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,57,wrapped.setSeed(seed);
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,61,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,63,public synchronized void setSeed(long seed) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,64,wrapped.setSeed(seed);
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,68,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,70,public synchronized void nextBytes(byte[] bytes) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,71,wrapped.nextBytes(bytes);
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,75,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,77,public synchronized int nextInt() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,78,return wrapped.nextInt();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,82,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,84,public synchronized int nextInt(int n) {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,85,return wrapped.nextInt();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,89,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,91,public synchronized long nextLong() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,92,return wrapped.nextLong();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,96,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,98,public synchronized boolean nextBoolean() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,99,return wrapped.nextBoolean();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,103,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,105,public synchronized float nextFloat() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,106,return wrapped.nextFloat();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,110,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,112,public synchronized double nextDouble() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,113,return wrapped.nextDouble();
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,117,* {@inheritDoc}
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,119,public synchronized double nextGaussian() {
True,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,src/main/java/org/apache/commons/math3/random/SynchronizedRandomGenerator.java,120,return wrapped.nextGaussian();
