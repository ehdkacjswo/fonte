is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,27,import org.apache.commons.math3.exception.NotStrictlyPositiveException;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,230,* @deprecated As of version 3.1: Parameter {@code lambda} must be
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,231,"* passed with the call to {@link #optimize(int,MultivariateFunction,GoalType,OptimizationData[])"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,232,* optimize} (whereas in the current code it is set to an undocumented value).
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,240,* @deprecated As of version 3.1: Parameter {@code lambda} must be
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,241,"* passed with the call to {@link #optimize(int,MultivariateFunction,GoalType,OptimizationData[])"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,242,* optimize} (whereas in the current code it is set to an undocumented value)..
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,237,"his(lambda, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,245,"this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,"
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,247, @deprecated As of version 3.1: Parameter {@code inputSigma} must be
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,255,* @deprecated As of version 3.1: Parameters {@code lambda} and {@code inputSigma} must be
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,299, @deprecated As of version 3.1: Parameter {@code inputSigma} must be
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,307,* @deprecated As of version 3.1: Parameters {@code lambda} and {@code inputSigma} must be
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,322, @param lambda Population size.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,342,* @since 3.1
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,335,"ublic CMAESOptimizer(int lambda,"
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,336,"nt maxIterations,"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,344,"public CMAESOptimizer(int maxIterations,"
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,345,his.lambda = lambda;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,407,* @throws NotPositiveException if any of the array entries is smaller
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,408,* than zero.
False,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,401,ublic Sigma(double[] s) {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,410,public Sigma(double[] s)
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,411,throws NotPositiveException {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,412,for (int i = 0; i < s.length; i++) {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,413,if (s[i] < 0) {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,414,throw new NotPositiveException(s[i]);
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,430,* Population size.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,431,* The number of offspring is the primary strategy parameter.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,432,"* In the absence of better clues, a good default could be an"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,433,"* integer close to {@code 4 + 3 ln(n)}, where {@code n} is the"
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,434,* number of optimized parameters.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,435,* Increasing the population size improves global search properties
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,436,* at the expense of speed (which in general decreases at most
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,437,* linearly with increasing population size).
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,439,public static class PopulationSize implements OptimizationData {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,440,/** Population size. */
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,441,private final int lambda;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,444,* @param size Population size.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,445,* @throws NotStrictlyPositiveException if {@code size <= 0}.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,447,public PopulationSize(int size)
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,448,throws NotStrictlyPositiveException {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,449,if (size <= 0) {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,450,throw new NotStrictlyPositiveException(size);
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,452,lambda = size;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,456,* @return the population size.
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,458,public int getPopulationSize() {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,459,return lambda;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,473,*  <li>{@link PopulationSize}</li>
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,647,*  <li>{@link PopulationSize}</li>
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,658,if (data instanceof PopulationSize) {
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,659,lambda = ((PopulationSize) data).getPopulationSize();
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,660,continue;
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,679,"// XXX Remove this block in 4.0 (check performed in ""Sigma"" class)."
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,696,// XXX Line below to replace the current one in 4.0 (MATH-879).
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,697,// throw new NotStrictlyPositiveException(lambda);
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,703,// XXX Line below to replace the current one in 4.0 (MATH-868).
True,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java,704,// sigmaArray[i][0] = inputSigma[i];
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,55,ouble[] insigma = null;
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,55,"double[] insigma = point(DIM, 0.3);"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,66,ouble[] insigma = null;
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,66,"double[] insigma = point(DIM, 0.3);"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,78,ouble[] insigma = null;
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,78,"double[] insigma = point(DIM, 0.3);"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,114,"ouble[] insigma = point(DIM+1,-0.5);"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,114,"double[] insigma = point(DIM + 1, 0.5);"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,462,"MAESOptimizer optim = new CMAESOptimizer(lambda, inSigma, 30000,"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,463,"topValue, isActive, diagonalOnly,"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,464,", new MersenneTwister(), false);"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,462,"CMAESOptimizer optim = new CMAESOptimizer(30000, stopValue, isActive, diagonalOnly,"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,463,"0, new MersenneTwister(), false, null);"
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,469,ew InitialGuess(startPoint)) :
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,468,"new InitialGuess(startPoint),"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,469,"new CMAESOptimizer.Sigma(inSigma),"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,470,new CMAESOptimizer.PopulationSize(lambda)) :
False,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,472,"ew SimpleBounds(lB, uB));"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,473,"new SimpleBounds(lB, uB),"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,474,"new CMAESOptimizer.Sigma(inSigma),"
True,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java,475,new CMAESOptimizer.PopulationSize(lambda));
