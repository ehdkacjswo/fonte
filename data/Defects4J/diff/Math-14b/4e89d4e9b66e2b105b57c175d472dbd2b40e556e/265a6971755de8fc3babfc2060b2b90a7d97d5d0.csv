is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,39, @throws InvalidRepresentationException iff the <code>representation</code> can not represent
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,40,         a valid chromosome
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,39,* @throws InvalidRepresentationException iff the <code>representation</code> can not represent a valid chromosome
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,59, @throws InvalidRepresentationException iff the <code>representation</code> can not represent
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,60,         a valid chromosome
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,58,* @throws InvalidRepresentationException iff the <code>representation</code> can not represent a valid chromosome
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,81," Creates a new instance of the same class as <code>this</code> is, with a"
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,82, given <code>arrayRepresentation</code>. This is needed in crossover and
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,83," mutation operators, where we need a new instance of the same class, but"
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,84, with different array representation.
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,79,"* Creates a new instance of the same class as <code>this</code> is, with a given <code>arrayRepresentation</code>."
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,80,"* This is needed in crossover and mutation operators, where we need a new instance of the same class, but with"
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,81,* different array representation.
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,82,* <p>
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,88, @param chromosomeRepresentation
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,89,            the inner array representation of the new chromosome.
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,90, @return new instance extended from FixedLengthChromosome with the given
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,91,         arrayRepresentation
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,85,* @param chromosomeRepresentation the inner array representation of the new chromosome.
True,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,86,* @return new instance extended from FixedLengthChromosome with the given arrayRepresentation
False,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java,96, {@inheritDoc}
False,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,35, @throws InvalidRepresentationException iff the <code>representation</code> can not represent
False,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,36,         a valid chromosome
True,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,35,* @throws InvalidRepresentationException iff the <code>representation</code> can not represent a valid chromosome
False,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,45, @throws InvalidRepresentationException iff the <code>representation</code> can not represent
False,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,46,         a valid chromosome
True,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java,44,* @throws InvalidRepresentationException iff the <code>representation</code> can not represent a valid chromosome
False,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,37, @throws MathIllegalArgumentException if <code>original</code> is not an instance
False,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,38,         of {@link BinaryChromosome}.
True,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java,38,* @throws MathIllegalArgumentException if <code>original</code> is not an instance of {@link BinaryChromosome}.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,21,* <p>
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,36," Access the fitness of this chromosome. The bigger the fitness, the better"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,37, the chromosome.
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,39," Computation of fitness is usually very time-consuming task, therefore the"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,40, fitness is cached.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,36,"* Access the fitness of this chromosome. The bigger the fitness, the better the chromosome."
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,37,* <p>
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,38,"* Computation of fitness is usually very time-consuming task, therefore the fitness is cached."
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,42, @return the fitness.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,40,* @return the fitness
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,53," Compares two chromosomes based on their fitness. The bigger the fitness,"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,54, the better the chromosome.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,51,"* Compares two chromosomes based on their fitness. The bigger the fitness, the better the chromosome."
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,59,     <li>-1 if <code>another</code> is better than <code>this</code></li>
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,60,     <li>1 if <code>another</code> is worse than <code>this</code></li>
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,61,     <li>0 if the two chromosomes have the same fitness</li>
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,56,*   <li>-1 if <code>another</code> is better than <code>this</code></li>
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,57,*   <li>1 if <code>another</code> is worse than <code>this</code></li>
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,58,*   <li>0 if the two chromosomes have the same fitness</li>
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,69, Returns <code>true</code> iff <code>another</code> has the same
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,70," representation and therefore the same fitness. By default, it returns"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,71, false -- override it in your implementation if you need it.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,66,* Returns <code>true</code> iff <code>another</code> has the same representation and therefore the same fitness. By
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,67,"* default, it returns false -- override it in your implementation if you need it."
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,80, Searches the <code>population</code> for another chromosome with the same
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,81," representation. If such chromosome is found, it is returned, if no such"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,82," chromosome exists, returns <code>null</code>."
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,77,* Searches the <code>population</code> for another chromosome with the same representation. If such chromosome is
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,78,"* found, it is returned, if no such chromosome exists, returns <code>null</code>."
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,85," @return Chromosome with the same representation, or <code>null</code> if"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,86,         no such chromosome exists.
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,81,"* @return Chromosome with the same representation, or <code>null</code> if no such chromosome exists."
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,98," Searches the population for a chromosome representing the same solution,"
False,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,99," and if it finds one, updates the fitness to its value."
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,93,"* Searches the population for a chromosome representing the same solution, and if it finds one,"
True,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,src/main/java/org/apache/commons/math3/genetics/Chromosome.java,94,* updates the fitness to its value.
False,src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java,src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java,63, {@inheritDoc}
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,43, @param elitismRate how many best chromosomes will be directly transferred to the
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,44,                    next generation [in %]
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,43,* @param elitismRate how many best chromosomes will be directly transferred to the next generation [in %]
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,55, Creates a new {@link ElitisticListPopulation} instance and initializes its inner
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,56, chromosome list.
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,54,* Creates a new {@link ElitisticListPopulation} instance and initializes its inner chromosome list.
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,59, @param elitismRate how many best chromosomes will be directly transferred to the
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,60,                    next generation [in %]
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,57,* @param elitismRate how many best chromosomes will be directly transferred to the next generation [in %]
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,91," Sets the elitism rate, i.e. how many best chromosomes will be directly"
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,92, transferred to the next generation [in %].
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,88,"* Sets the elitism rate, i.e. how many best chromosomes will be directly transferred to the next generation [in %]."
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,94, @param elitismRate how many best chromosomes will be directly transferred to the
False,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,95,                    next generation [in %]
True,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java,90,* @param elitismRate how many best chromosomes will be directly transferred to the next generation [in %]
False,src/main/java/org/apache/commons/math3/genetics/Fitness.java,src/main/java/org/apache/commons/math3/genetics/Fitness.java,28," Compute the fitness. This is usually very time-consuming, so the value"
False,src/main/java/org/apache/commons/math3/genetics/Fitness.java,src/main/java/org/apache/commons/math3/genetics/Fitness.java,29, should be cached.
True,src/main/java/org/apache/commons/math3/genetics/Fitness.java,src/main/java/org/apache/commons/math3/genetics/Fitness.java,28,"* Compute the fitness. This is usually very time-consuming, so the value should be cached."
False,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,27," The first time {@link #isSatisfied(Population)} is invoked, the end time of"
False,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,28, the evolution is determined based on the provided <code>maxTime</code> value.
False,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,29," Once the elapsed time reaches the configured <code>maxTime</code> value,"
True,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,26,"* The first time {@link #isSatisfied(Population)} is invoked, the end time of the evolution is determined based on the"
True,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,27,"* provided <code>maxTime</code> value. Once the elapsed time reaches the configured <code>maxTime</code> value,"
False,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java,31, </p>
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,22, Stops after a fixed number of generations.  Each time
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,23," {@link #isSatisfied(Population)} is invoked, a generation counter is"
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,24, incremented.  Once the counter reaches the configured
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,25," <code>maxGenerations</code> value, {@link #isSatisfied(Population)} returns"
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,26, true.
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,22,"* Stops after a fixed number of generations. Each time {@link #isSatisfied(Population)} is invoked, a generation"
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,23,"* counter is incremented. Once the counter reaches the configured <code>maxGenerations</code> value,"
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,24,* {@link #isSatisfied(Population)} returns true.
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,52, Determine whether or not the given number of generations have passed.
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,53, Increments the number of generations counter if the maximum has not
False,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,54, been reached.
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,50,* Determine whether or not the given number of generations have passed. Increments the number of generations
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,51,* counter if the maximum has not been reached.
True,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java,65,* Returns the number of generations that have already passed.
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,34, Static random number generator shared by GA implementation classes.
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,35, Set the randomGenerator seed to get reproducible results.
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,36, Use {@link #setRandomGenerator(RandomGenerator)} to supply an alternative
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,37, to the default JDK-provided PRNG.
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,34,* Static random number generator shared by GA implementation classes. Set the randomGenerator seed to get
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,35,* reproducible results. Use {@link #setRandomGenerator(RandomGenerator)} to supply an alternative to the default
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,36,* JDK-provided PRNG.
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,60,* Create a new genetic algorithm.
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,128, <p>Evolve the given population into the next generation.</p>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,129, <p><ol>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,130,    <li>Get nextGeneration population to fill from <code>current</code>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,131,"        generation, using its nextGeneration method</li>"
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,132,    <li>Loop until new generation is filled:</li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,133,    <ul><li>Apply configured SelectionPolicy to select a pair of parents
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,134,            from <code>current</code></li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,135,"        <li>With probability = {@link #getCrossoverRate()}, apply"
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,136,            configured {@link CrossoverPolicy} to parents</li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,137,"        <li>With probability = {@link #getMutationRate()}, apply"
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,138,            configured {@link MutationPolicy} to each of the offspring</li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,139,"        <li>Add offspring individually to nextGeneration,"
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,140,            space permitting</li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,141,    </ul>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,142,    <li>Return nextGeneration</li>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,143,    </ol>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,144, </p>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,128,* Evolve the given population into the next generation.
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,129,* <p>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,130,* <ol>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,131,*  <li>Get nextGeneration population to fill from <code>current</code>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,132,"*      generation, using its nextGeneration method</li>"
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,133,*  <li>Loop until new generation is filled:</li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,134,*  <ul><li>Apply configured SelectionPolicy to select a pair of parents
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,135,*          from <code>current</code></li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,136,"*      <li>With probability = {@link #getCrossoverRate()}, apply"
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,137,*          configured {@link CrossoverPolicy} to parents</li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,138,"*      <li>With probability = {@link #getMutationRate()}, apply"
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,139,*          configured {@link MutationPolicy} to each of the offspring</li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,140,"*      <li>Add offspring individually to nextGeneration,"
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,141,*          space permitting</li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,142,*  </ul>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,143,*  <li>Return nextGeneration</li>
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,144,* </ol>
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,225, Returns the number of generations evolved to
False,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,226, reach {@link StoppingCondition} in the last run.
True,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java,225,* Returns the number of generations evolved to reach {@link StoppingCondition} in the last run.
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,57, <p>Note: the chromosomes of the specified list are added to the population.</p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,57,* <p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,58,* Note: the chromosomes of the specified list are added to the population.
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,82, <p>Note: this method removed all existing chromosomes in the population and adds all chromosomes
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,83, of the specified list to the population.</p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,84,* <p>
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,85,* Note: this method removed all existing chromosomes in the population and adds all chromosomes
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,86,* of the specified list to the population.
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,136, adding this chromosome
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,141,*   adding this chromosome
False,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,175, of chromosomes in the population
True,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,src/main/java/org/apache/commons/math3/genetics/ListPopulation.java,180,*   of chromosomes in the population
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,61, <p><b>Note</b>: the number of crossover points must be &lt; <code>chromosome length - 1</code>.
True,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,60,* <p>
True,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,61,* <b>Note</b>: the number of crossover points must be &lt; <code>chromosome length - 1</code>.
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,63, </p>
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,66, @throws NotStrictlyPositiveException if the number of {@code crossoverPoints} is not
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,67, strictly positive
True,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,65,* @throws NotStrictlyPositiveException if the number of {@code crossoverPoints} is not strictly positive
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,106,         not an instance of {@link AbstractListChromosome}
True,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,104,*   not an instance of {@link AbstractListChromosome}
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,124, @throws NumberIsTooLargeException if the number of crossoverPoints is too large for the
False,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,125, actual chromosomes
True,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java,122,* @throws NumberIsTooLargeException if the number of crossoverPoints is too large for the actual chromosomes
False,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,75,         not an instance of {@link AbstractListChromosome}
True,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java,75,*   not an instance of {@link AbstractListChromosome}
False,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,43, </p>
True,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,43,* <p>
True,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java,50,* <p>
False,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,24, @param <T>
False,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,25,            type of the permuted objects
True,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java,24,* @param <T> type of the permuted objects
False,src/main/java/org/apache/commons/math3/genetics/Population.java,src/main/java/org/apache/commons/math3/genetics/Population.java,49, the population limit when adding this chromosome
True,src/main/java/org/apache/commons/math3/genetics/Population.java,src/main/java/org/apache/commons/math3/genetics/Population.java,49,*   the population limit when adding this chromosome
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,30, <p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,34, </p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,40, </p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,45, </p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,50, </p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,55," <li>Bean, J.C.: Genetic algorithms and random keys for sequencing and"
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,56, optimization. ORSA Journal on Computing 6 (1994) 154-160</li>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,57," <li>Rothlauf, F.: Representations for Genetic and Evolutionary Algorithms."
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,58," Volume 104 of Studies in Fuzziness and Soft Computing. Physica-Verlag,"
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,59, Heidelberg (2002)</li>
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,46,"*   <li>Bean, J.C.: Genetic algorithms and random keys for sequencing and"
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,47,*       optimization. ORSA Journal on Computing 6 (1994) 154-160</li>
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,48,"*   <li>Rothlauf, F.: Representations for Genetic and Evolutionary Algorithms."
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,49,"*       Volume 104 of Studies in Fuzziness and Soft Computing. Physica-Verlag,"
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,50,*       Heidelberg (2002)</li>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,61, </p>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,63, @param <T>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,64,            type of the permuted objects
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,53,* @param <T> type of the permuted objects
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,83,         a valid chromosome
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,72,*   a valid chromosome
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,123, <code>representation</code> or <code>sortedRepr</code> lists are not equal
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,112,*   <code>representation</code> or <code>sortedRepr</code> lists are not equal
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,261, <code>originalData -> permutedData</code>
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,250,*   <code>originalData -> permutedData</code>
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,263, and <code>permutedData</code> lists are not equal
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,252,*   and <code>permutedData</code> lists are not equal
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,265, <code>originalData</code> lists contain different data
True,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,254,*   <code>originalData</code> lists contain different data
False,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,src/main/java/org/apache/commons/math3/genetics/RandomKey.java,290, {@inheritDoc}
False,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,37, @throws MathIllegalArgumentException if <code>original</code> is not a
False,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,38, {@link RandomKey} instance
True,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java,37,* @throws MathIllegalArgumentException if <code>original</code> is not a {@link RandomKey} instance
False,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,27, Determine whether or not the given population satisfies the stopping
False,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,28, condition.
True,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,27,* Determine whether or not the given population satisfies the stopping condition.
False,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,31, @return <code>true</code> if this stopping condition is met by the
False,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,32,         given population. <code>false</code> otherwise.
True,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,30,"* @return <code>true</code> if this stopping condition is met by the given population,"
True,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java,31,*   <code>false</code> otherwise.
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,63, Helper for {@link #select(Population)}. Draw {@link #arity} random
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,64," chromosomes without replacement from the population, and then select the"
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,65, fittest chromosome among them.
True,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,63,* Helper for {@link #select(Population)}. Draw {@link #arity} random chromosomes without replacement from the
True,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,64,"* population, and then select the fittest chromosome among them."
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,69, @throws MathIllegalArgumentException if the tournament arity is bigger than the
False,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,70, population size
True,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java,68,* @throws MathIllegalArgumentException if the tournament arity is bigger than the population size
False,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,36, <p>This crossover policy evaluates each gene of the parent chromosomes by chosing a
True,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,35,* <p>
True,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,36,* This crossover policy evaluates each gene of the parent chromosomes by chosing a
False,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,40, vice versa for the second offspring).</p>
False,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,42," <p>This policy works only on {@link AbstractListChromosome}, and therefore it"
True,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,40,* vice versa for the second offspring).
True,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,41,* <p>
True,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,42,"* This policy works only on {@link AbstractListChromosome}, and therefore it"
False,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java,44, </p>
False,src/main/java/org/apache/commons/math3/genetics/package-info.java,src/main/java/org/apache/commons/math3/genetics/package-info.java,19, <p>
False,src/main/java/org/apache/commons/math3/genetics/package-info.java,src/main/java/org/apache/commons/math3/genetics/package-info.java,21, </p>
