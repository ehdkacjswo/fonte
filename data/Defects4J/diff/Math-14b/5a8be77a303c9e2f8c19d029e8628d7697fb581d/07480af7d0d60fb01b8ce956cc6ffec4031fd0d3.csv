is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,56,rivate RealPointValuePair[] optima;
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,56,private PointValuePair[] optima;
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,112,ublic RealPointValuePair[] getOptima() {
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,112,public PointValuePair[] getOptima() {
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,130,ublic ConvergenceChecker<RealPointValuePair> getConvergenceChecker() {
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,130,public ConvergenceChecker<PointValuePair> getConvergenceChecker() {
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,137,"ublic RealPointValuePair optimize(int maxEval, final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,137,"public PointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,142,ptima = new RealPointValuePair[starts];
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,142,optima = new PointValuePair[starts];
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,176,"rrays.sort(optima, new Comparator<RealPointValuePair>() {"
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,177,"ublic int compare(final RealPointValuePair o1,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,178,inal RealPointValuePair o2) {
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,176,"Arrays.sort(optima, new Comparator<PointValuePair>() {"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,177,"public int compare(final PointValuePair o1,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java,178,final PointValuePair o2) {
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,37,xtends BaseOptimizer<RealPointValuePair> {
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,37,extends BaseOptimizer<PointValuePair> {
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,55,"ealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java,55,"PointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java,61,"ealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java,61,"PointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,18,package org.apache.commons.math.optimization;
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,20,import org.apache.commons.math.util.Pair;
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,23,* This class holds a point and the value of an objective function at
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,24,* that point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,26,* @see org.apache.commons.math.analysis.MultivariateFunction
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,27,* @version $Id$
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,28,* @since 3.0
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,30,"public class PointValuePair extends Pair<double[], Double> {"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,32,* Builds a point/objective function value pair.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,34,* @param point Point coordinates (this instance will store
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,35,"* a copy of the array, not the array passed as argument)."
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,36,* @param value Value of the objective function at the point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,38,"public PointValuePair(final double[] point,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,39,final double value) {
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,40,"this(point, value, true);"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,44,* Builds a point/objective function value pair.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,46,* @param point Point coordinates.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,47,* @param value Value of the objective function at the point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,48,"* @param copyArray if {@code true}, the input array will be copied,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,49,* otherwise it will be referenced.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,51,"public PointValuePair(final double[] point,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,52,"final double value,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,53,final boolean copyArray) {
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,54,super(copyArray ? ((point == null) ? null :
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,55,point.clone()) :
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,56,"point,"
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,57,value);
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,61,* Gets the point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,63,* @return a copy of the stored point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,65,public double[] getPoint() {
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,66,return getKey().clone();
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,70,* Gets a reference to the point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,72,* @return a reference to the internal array storing the point.
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,74,public double[] getPointRef() {
True,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,src/main/java/org/apache/commons/math/optimization/PointValuePair.java,75,return getKey();
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,18,ackage org.apache.commons.math.optimization;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,20,mport java.io.Serializable;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,24, This class holds a point and the value of an objective function at this point.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,25, <p>This is a simple immutable container.</p>
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,26, @see VectorialPointValuePair
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,27, @see org.apache.commons.math.analysis.MultivariateFunction
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,28, @version $Id$
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,29, @since 2.0
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,31,ublic class RealPointValuePair implements Serializable {
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,32,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,33,rivate static final long serialVersionUID = 1003888396256744753L;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,34,** Point coordinates. */
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,35,rivate final double[] point;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,36,** Value of the objective function at the point. */
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,37,rivate final double value;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,39,** Build a point/objective function value pair.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,40, @param point point coordinates (the built instance will store
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,41," a copy of the array, not the array passed as argument)"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,42, @param value value of an objective function at the point
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,44,"ublic RealPointValuePair(final double[] point, final double value) {"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,45,his.point = (point == null) ? null : point.clone();
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,46,his.value = value;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,49,** Build a point/objective function value pair.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,50, @param point point coordinates (the built instance will store
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,51," a copy of the array, not the array passed as argument)"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,52, @param value value of an objective function at the point
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,53," @param copyArray if true, the input array will be copied, otherwise"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,54, it will be referenced
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,56,"ublic RealPointValuePair(final double[] point, final double value,"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,57,inal boolean copyArray) {
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,58,his.point = copyArray ?
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,59,(point == null) ? null : point.clone()) :
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,60,oint;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,61,his.value = value;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,64,** Get the point.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,65, @return a copy of the stored point
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,67,ublic double[] getPoint() {
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,68,eturn (point == null) ? null : point.clone();
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,71,** Get a reference to the point.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,72, <p>This method is provided as a convenience to avoid copying
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,73," the array, the elements of the array should <em>not</em> be modified.</p>"
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,74, @return a reference to the internal array storing the point
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,76,ublic double[] getPointRef() {
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,77,eturn point;
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,80,** Get the value of the objective function.
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,81, @return the stored value of the objective function
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,83,ublic double getValue() {
False,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java,84,eturn value;
False,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,35,xtends AbstractConvergenceChecker<RealPointValuePair> {
True,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,35,extends AbstractConvergenceChecker<PointValuePair> {
False,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,73,"inal RealPointValuePair previous,"
False,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,74,inal RealPointValuePair current) {
True,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,73,"final PointValuePair previous,"
True,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java,74,final PointValuePair current) {
False,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,35,xtends AbstractConvergenceChecker<RealPointValuePair> {
True,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,35,extends AbstractConvergenceChecker<PointValuePair> {
False,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,73,"inal RealPointValuePair previous,"
False,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,74,inal RealPointValuePair current) {
True,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,73,"final PointValuePair previous,"
True,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java,74,final PointValuePair current) {
False,src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java,src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java,25, @see RealPointValuePair
True,src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java,src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java,25,* @see PointValuePair
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,31,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,31,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,52,rivate RealPointValuePair[] simplex;
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,52,private PointValuePair[] simplex;
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,206,inal Comparator<RealPointValuePair> comparator);
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,206,final Comparator<PointValuePair> comparator);
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,221,implex = new RealPointValuePair[dimension + 1];
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,222,"implex[0] = new RealPointValuePair(startPoint, Double.NaN);"
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,221,simplex = new PointValuePair[dimension + 1];
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,222,"simplex[0] = new PointValuePair(startPoint, Double.NaN);"
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,231,"implex[i + 1] = new RealPointValuePair(vertexI, Double.NaN);"
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,231,"simplex[i + 1] = new PointValuePair(vertexI, Double.NaN);"
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,244,inal Comparator<RealPointValuePair> comparator) {
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,244,final Comparator<PointValuePair> comparator) {
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,247,inal RealPointValuePair vertex = simplex[i];
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,247,final PointValuePair vertex = simplex[i];
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,250,"implex[i] = new RealPointValuePair(point, evaluationFunction.value(point), false);"
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,250,"simplex[i] = new PointValuePair(point, evaluationFunction.value(point), false);"
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,265,"rotected void replaceWorstPoint(RealPointValuePair pointValuePair,"
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,266,inal Comparator<RealPointValuePair> comparator) {
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,265,"protected void replaceWorstPoint(PointValuePair pointValuePair,"
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,266,final Comparator<PointValuePair> comparator) {
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,269,ealPointValuePair tmp = simplex[i];
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,269,PointValuePair tmp = simplex[i];
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,282,ublic RealPointValuePair[] getPoints() {
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,283,inal RealPointValuePair[] copy = new RealPointValuePair[simplex.length];
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,282,public PointValuePair[] getPoints() {
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,283,final PointValuePair[] copy = new PointValuePair[simplex.length];
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,294,ublic RealPointValuePair getPoint(int index) {
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,294,public PointValuePair getPoint(int index) {
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,309,"rotected void setPoint(int index, RealPointValuePair point) {"
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,309,"protected void setPoint(int index, PointValuePair point) {"
False,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,323,rotected void setPoints(RealPointValuePair[] points) {
True,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java,323,protected void setPoints(PointValuePair[] points) {
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,31,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,31,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,234,rotected RealPointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,234,protected PointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,246,"eturn new RealPointValuePair(currentBest.getDataRef(),"
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,246,"return new PointValuePair(currentBest.getDataRef(),"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,28,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,28,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,46,rivate ConvergenceChecker<RealPointValuePair> checker;
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,46,private ConvergenceChecker<PointValuePair> checker;
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,65,rotected BaseAbstractMultivariateOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,65,protected BaseAbstractMultivariateOptimizer(ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,80,ublic ConvergenceChecker<RealPointValuePair> getConvergenceChecker() {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,80,public ConvergenceChecker<PointValuePair> getConvergenceChecker() {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,102,"ublic RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,102,"public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,148,rotected abstract RealPointValuePair doOptimize();
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java,148,protected abstract PointValuePair doOptimize();
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,24,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,24,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,64,rotected BaseAbstractMultivariateSimpleBoundsOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,64,protected BaseAbstractMultivariateSimpleBoundsOptimizer(ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,83,"ublic RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,83,"public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,89,"ublic RealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java,89,"public PointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,37,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,37,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,306,onvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,306,ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,359,rotected RealPointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,359,protected PointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,371,"ealPointValuePair optimum = new RealPointValuePair(getStartPoint(),"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,371,"PointValuePair optimum = new PointValuePair(getStartPoint(),"
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,373,ealPointValuePair lastResult = null;
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,373,PointValuePair lastResult = null;
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,428,ptimum = new RealPointValuePair(
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,428,optimum = new PointValuePair(
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,475,ealPointValuePair current =
False,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,476,"ew RealPointValuePair(bestArx.getColumn(0),"
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,475,PointValuePair current =
True,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java,476,"new PointValuePair(bestArx.getColumn(0),"
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,23,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,23,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,156,inal Comparator<RealPointValuePair> comparator) {
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,156,final Comparator<PointValuePair> comparator) {
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,158,inal RealPointValuePair[] original = getPoints();
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,159,inal RealPointValuePair best = original[0];
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,158,final PointValuePair[] original = getPoints();
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,159,final PointValuePair best = original[0];
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,162,"inal RealPointValuePair reflected = evaluateNewSimplex(evaluationFunction,"
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,162,"final PointValuePair reflected = evaluateNewSimplex(evaluationFunction,"
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,166,inal RealPointValuePair[] reflectedSimplex = getPoints();
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,167,"inal RealPointValuePair expanded = evaluateNewSimplex(evaluationFunction,"
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,166,final PointValuePair[] reflectedSimplex = getPoints();
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,167,"final PointValuePair expanded = evaluateNewSimplex(evaluationFunction,"
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,194,"rivate RealPointValuePair evaluateNewSimplex(final MultivariateFunction evaluationFunction,"
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,195,"inal RealPointValuePair[] original,"
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,194,"private PointValuePair evaluateNewSimplex(final MultivariateFunction evaluationFunction,"
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,195,"final PointValuePair[] original,"
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,197,inal Comparator<RealPointValuePair> comparator) {
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,197,final Comparator<PointValuePair> comparator) {
False,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,209,"etPoint(i, new RealPointValuePair(xTransformed, Double.NaN, false));"
True,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java,209,"setPoint(i, new PointValuePair(xTransformed, Double.NaN, false));"
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,22,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,22,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,188,inal Comparator<RealPointValuePair> comparator) {
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,188,final Comparator<PointValuePair> comparator) {
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,193,inal RealPointValuePair best = getPoint(0);
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,194,inal RealPointValuePair secondBest = getPoint(n - 1);
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,195,inal RealPointValuePair worst = getPoint(n);
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,193,final PointValuePair best = getPoint(0);
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,194,final PointValuePair secondBest = getPoint(n - 1);
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,195,final PointValuePair worst = getPoint(n);
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,217,inal RealPointValuePair reflected
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,218," new RealPointValuePair(xR, evaluationFunction.value(xR), false);"
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,217,final PointValuePair reflected
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,218,"= new PointValuePair(xR, evaluationFunction.value(xR), false);"
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,230,inal RealPointValuePair expanded
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,231," new RealPointValuePair(xE, evaluationFunction.value(xE), false);"
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,230,final PointValuePair expanded
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,231,"= new PointValuePair(xE, evaluationFunction.value(xE), false);"
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,247,inal RealPointValuePair outContracted
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,248," new RealPointValuePair(xC, evaluationFunction.value(xC), false);"
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,247,final PointValuePair outContracted
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,248,"= new PointValuePair(xC, evaluationFunction.value(xC), false);"
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,260,inal RealPointValuePair inContracted
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,261," new RealPointValuePair(xC, evaluationFunction.value(xC), false);"
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,260,final PointValuePair inContracted
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,261,"= new PointValuePair(xC, evaluationFunction.value(xC), false);"
False,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,277,"etPoint(i, new RealPointValuePair(x, Double.NaN, false));"
True,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java,277,"setPoint(i, new PointValuePair(x, Double.NaN, false));"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,27,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,27,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,32,mport org.apache.commons.math.optimization.univariate.UnivariateRealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,32,import org.apache.commons.math.optimization.univariate.UnivariatePointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,81,onvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,81,ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,117,rotected RealPointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,117,protected PointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,127,inal ConvergenceChecker<RealPointValuePair> checker
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,127,final ConvergenceChecker<PointValuePair> checker
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,148,"inal UnivariateRealPointValuePair optimum = line.search(x, d);"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,148,"final UnivariatePointValuePair optimum = line.search(x, d);"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,165,"inal RealPointValuePair previous = new RealPointValuePair(x1, fX);"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,166,"inal RealPointValuePair current = new RealPointValuePair(x, fVal);"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,165,"final PointValuePair previous = new PointValuePair(x1, fX);"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,166,"final PointValuePair current = new PointValuePair(x, fVal);"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,198,"inal UnivariateRealPointValuePair optimum = line.search(x, d);"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,198,"final UnivariatePointValuePair optimum = line.search(x, d);"
False,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,265,"ublic UnivariateRealPointValuePair search(final double[] p, final double[] d) {"
True,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java,265,"public UnivariatePointValuePair search(final double[] p, final double[] d) {"
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,26,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,26,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,103,ublic SimplexOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,103,public SimplexOptimizer(ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,126,rotected RealPointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,126,protected PointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,141,inal Comparator<RealPointValuePair> comparator
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,142, new Comparator<RealPointValuePair>() {
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,143,"ublic int compare(final RealPointValuePair o1,"
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,144,inal RealPointValuePair o2) {
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,141,final Comparator<PointValuePair> comparator
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,142,= new Comparator<PointValuePair>() {
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,143,"public int compare(final PointValuePair o1,"
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,144,final PointValuePair o2) {
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,155,ealPointValuePair[] previous = null;
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,155,PointValuePair[] previous = null;
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,157,inal ConvergenceChecker<RealPointValuePair> checker = getConvergenceChecker();
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,157,final ConvergenceChecker<PointValuePair> checker = getConvergenceChecker();
False,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,162,ealPointValuePair prev = previous[i];
True,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java,162,PointValuePair prev = previous[i];
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,25,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,25,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,54,rotected AbstractScalarDifferentiableOptimizer(ConvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,54,protected AbstractScalarDifferentiableOptimizer(ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,72,"ublic RealPointValuePair optimize(int maxEval,"
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,72,"public PointValuePair optimize(int maxEval,"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,26,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,26,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,80,onvergenceChecker<RealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,80,ConvergenceChecker<PointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,98,"onvergenceChecker<RealPointValuePair> checker,"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,98,"ConvergenceChecker<PointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,115,"onvergenceChecker<RealPointValuePair> checker,"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,115,"ConvergenceChecker<PointValuePair> checker,"
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,146,rotected RealPointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,147,inal ConvergenceChecker<RealPointValuePair> checker = getConvergenceChecker();
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,146,protected PointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,147,final ConvergenceChecker<PointValuePair> checker = getConvergenceChecker();
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,167,ealPointValuePair current = null;
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,167,PointValuePair current = null;
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,174,ealPointValuePair previous = current;
False,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,175,"urrent = new RealPointValuePair(point, objective);"
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,174,PointValuePair previous = current;
True,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java,175,"current = new PointValuePair(point, objective);"
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,25,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,25,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,104,"ublic RealPointValuePair optimize(final LinearObjectiveFunction f,"
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,104,"public PointValuePair optimize(final LinearObjectiveFunction f,"
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,127,rotected abstract RealPointValuePair doOptimize()
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,127,protected abstract PointValuePair doOptimize()
False,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,24,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,24,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,85,"ealPointValuePair optimize(LinearObjectiveFunction f, Collection<LinearConstraint> constraints,"
True,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java,85,"PointValuePair optimize(LinearObjectiveFunction f, Collection<LinearConstraint> constraints,"
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,24,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,24,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,185,ublic RealPointValuePair doOptimize()
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java,185,public PointValuePair doOptimize()
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,35,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,35,import org.apache.commons.math.optimization.PointValuePair;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,396,rotected RealPointValuePair getSolution() {
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,396,protected PointValuePair getSolution() {
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,426,"eturn new RealPointValuePair(coefficients, f.getValue(coefficients));"
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,426,"return new PointValuePair(coefficients, f.getValue(coefficients));"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,38,rivate final ConvergenceChecker<UnivariateRealPointValuePair> checker;
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,38,private final ConvergenceChecker<UnivariatePointValuePair> checker;
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,55,rotected BaseAbstractUnivariateOptimizer(ConvergenceChecker<UnivariateRealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,55,protected BaseAbstractUnivariateOptimizer(ConvergenceChecker<UnivariatePointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,112,"ublic UnivariateRealPointValuePair optimize(int maxEval, UnivariateFunction f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,112,"public UnivariatePointValuePair optimize(int maxEval, UnivariateFunction f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,138,"ublic UnivariateRealPointValuePair optimize(int maxEval,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,138,"public UnivariatePointValuePair optimize(int maxEval,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,148,ublic ConvergenceChecker<UnivariateRealPointValuePair> getConvergenceChecker() {
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,148,public ConvergenceChecker<UnivariatePointValuePair> getConvergenceChecker() {
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,160,rotected abstract UnivariateRealPointValuePair doOptimize();
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseAbstractUnivariateOptimizer.java,160,protected abstract UnivariatePointValuePair doOptimize();
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,38,xtends BaseOptimizer<UnivariateRealPointValuePair> {
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,38,extends BaseOptimizer<UnivariatePointValuePair> {
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,58,"nivariateRealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,58,"UnivariatePointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,82,"nivariateRealPointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
True,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateOptimizer.java,82,"UnivariatePointValuePair optimize(int maxEval, FUNC f, GoalType goalType,"
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,74,onvergenceChecker<UnivariateRealPointValuePair> checker) {
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,74,ConvergenceChecker<UnivariatePointValuePair> checker) {
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,108,rotected UnivariateRealPointValuePair doOptimize() {
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,108,protected UnivariatePointValuePair doOptimize() {
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,115,inal ConvergenceChecker<UnivariateRealPointValuePair> checker
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,115,final ConvergenceChecker<UnivariatePointValuePair> checker
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,140,nivariateRealPointValuePair previous = null;
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,141,nivariateRealPointValuePair current
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,142," new UnivariateRealPointValuePair(x, isMinim ? fx : -fx);"
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,140,UnivariatePointValuePair previous = null;
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,141,UnivariatePointValuePair current
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,142,"= new UnivariatePointValuePair(x, isMinim ? fx : -fx);"
False,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,257,"urrent = new UnivariateRealPointValuePair(x, isMinim ? fx : -fx);"
True,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java,257,"current = new UnivariatePointValuePair(x, isMinim ? fx : -fx);"
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,58,rivate UnivariateRealPointValuePair[] optima;
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,58,private UnivariatePointValuePair[] optima;
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,91,ublic ConvergenceChecker<UnivariateRealPointValuePair> getConvergenceChecker() {
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,91,public ConvergenceChecker<UnivariatePointValuePair> getConvergenceChecker() {
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,132,ublic UnivariateRealPointValuePair[] getOptima() {
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,132,public UnivariatePointValuePair[] getOptima() {
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,140,"ublic UnivariateRealPointValuePair optimize(int maxEval, final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,140,"public UnivariatePointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,147,"ublic UnivariateRealPointValuePair optimize(int maxEval, final FUNC f,"
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,147,"public UnivariatePointValuePair optimize(int maxEval, final FUNC f,"
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,152,ptima = new UnivariateRealPointValuePair[starts];
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,152,optima = new UnivariatePointValuePair[starts];
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,186,"rrays.sort(optima, new Comparator<UnivariateRealPointValuePair>() {"
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,187,"ublic int compare(final UnivariateRealPointValuePair o1,"
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,188,inal UnivariateRealPointValuePair o2) {
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,186,"Arrays.sort(optima, new Comparator<UnivariatePointValuePair>() {"
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,187,"public int compare(final UnivariatePointValuePair o1,"
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizer.java,188,final UnivariatePointValuePair o2) {
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariatePointValuePair.java,30,ublic class UnivariateRealPointValuePair implements Serializable {
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariatePointValuePair.java,30,public class UnivariatePointValuePair implements Serializable {
False,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariatePointValuePair.java,44,"ublic UnivariateRealPointValuePair(final double point,"
True,src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair.java,src/main/java/org/apache/commons/math/optimization/univariate/UnivariatePointValuePair.java,44,"public UnivariatePointValuePair(final double point,"
False,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,56,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,56,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,59,ealPointValuePair[] optima = optimizer.getOptima();
False,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,60,or (RealPointValuePair o : optima) {
True,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,59,PointValuePair[] optima = optimizer.getOptima();
True,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizerTest.java,60,for (PointValuePair o : optima) {
False,src/test/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizerTest.java,47,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizerTest.java,47,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,28,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,28,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,79,"ealPointValuePair expected = new RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,79,"PointValuePair expected = new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,89,"ealPointValuePair expected = new RealPointValuePair(point(DIM,0.0),1.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,89,"PointValuePair expected = new PointValuePair(point(DIM,0.0),1.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,104,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,105,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,104,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,105,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,115,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,116,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,115,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,116,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,126,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,127,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,126,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,127,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,137,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,138,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,137,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,138,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,148,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,149,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,148,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,149,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,159,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,160,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,159,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,160,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,170,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,171,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,170,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,171,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,181,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,182,"ew RealPointValuePair(point(DIM/2,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,181,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,182,"new PointValuePair(point(DIM/2,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,192,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,193,"ew RealPointValuePair(point(DIM/2,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,192,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,193,"new PointValuePair(point(DIM/2,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,203,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,204,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,203,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,204,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,215,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,216,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,215,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,216,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,227,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,228,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,227,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,228,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,239,"inal RealPointValuePair expected = new RealPointValuePair(point(DIM, 1.0), 0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,239,"final PointValuePair expected = new PointValuePair(point(DIM, 1.0), 0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,275,ealPointValuePair expected) {
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,275,PointValuePair expected) {
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,308,"ealPointValuePair expected,"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,308,"PointValuePair expected,"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,316,"/        RealPointValuePair result = optim.optimize(100000, func, goal, startPoint);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,316,"//        PointValuePair result = optim.optimize(100000, func, goal, startPoint);"
False,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,321,"ealPointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, lB, uB);"
True,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java,321,"PointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint, lB, uB);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,31,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,31,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,51,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,52,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,51,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,52,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,63,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,64,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,63,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,64,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,76,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,77,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,76,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,77,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,88,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,89,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,88,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,89,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,100,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,101,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,100,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,101,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,112,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,113,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,112,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,113,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,125,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,126,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,125,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,126,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,141,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,142,"ew RealPointValuePair(point(DIM,0.0),1.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,141,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,142,"new PointValuePair(point(DIM,0.0),1.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,161,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,162,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,161,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,162,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,176,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,177,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,176,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,177,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,191,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,192,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,191,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,192,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,206,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,207,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,206,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,207,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,221,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,222,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,221,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,222,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,236,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,237,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,236,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,237,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,251,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,252,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,251,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,252,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,266,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,267,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,266,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,267,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,281,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,282,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,281,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,282,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,296,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,297,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,296,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,297,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,311,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,312,"ew RealPointValuePair(point(DIM,0.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,311,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,312,"new PointValuePair(point(DIM,0.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,326,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,327,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,326,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,327,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,341,ealPointValuePair expected =
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,342,"ew RealPointValuePair(point(DIM,1.0),0.0);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,341,PointValuePair expected =
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,342,"new PointValuePair(point(DIM,1.0),0.0);"
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,375,ealPointValuePair expected) {
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,375,PointValuePair expected) {
False,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,382,"ealPointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint);"
True,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java,382,"PointValuePair result = optim.optimize(maxEvaluations, func, goal, startPoint);"
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,23,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,23,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,45,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,45,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,71,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,71,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,99,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,99,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,127,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapterTest.java,127,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,23,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,23,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,43,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,43,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,64,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,64,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,85,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,85,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,108,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,108,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,131,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,src/test/java/org/apache/commons/math/optimization/direct/MultivariateFunctionPenaltyAdapterTest.java,131,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,23,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,23,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,136,"inal RealPointValuePair result = optim.optimize(1000, func, goal, init);"
True,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java,136,"final PointValuePair result = optim.optimize(1000, func, goal, init);"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,22,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,22,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,35,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,35,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,50,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,50,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,65,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,65,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,80,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,80,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,106,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,106,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,132,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,132,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,147,"ealPointValuePair estimate = optimizer.optimize(1000, function,"
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java,147,"PointValuePair estimate = optimizer.optimize(1000, function,"
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,28,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,28,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,40,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,40,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,55,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,55,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,70,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,70,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,85,inal RealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,85,final PointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,102,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,102,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,117,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,117,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,140,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,140,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,164,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,164,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,190,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java,190,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,29,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,29,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,104,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,104,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,119,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,119,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,140,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,140,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,157,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,157,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,197,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,197,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,218,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,218,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,235,ealPointValuePair optimum1 =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,235,PointValuePair optimum1 =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,248,ealPointValuePair optimum2 =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,248,PointValuePair optimum2 =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,268,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,268,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,286,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,286,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,302,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,302,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,320,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,320,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,338,ealPointValuePair optimum =
True,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java,338,PointValuePair optimum =
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,26,mport org.apache.commons.math.optimization.RealPointValuePair;
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,26,import org.apache.commons.math.optimization.PointValuePair;
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,40,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,40,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,55,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,55,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,87,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,87,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,110,"ealPointValuePair solution = simplex.optimize(f, constraints, GoalType.MINIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,110,"PointValuePair solution = simplex.optimize(f, constraints, GoalType.MINIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,127,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,127,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,146,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,146,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,165,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,165,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,180,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,180,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,190,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,190,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,216,"ealPointValuePair solution1 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,216,"PointValuePair solution1 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,238,"ealPointValuePair solution2 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,238,"PointValuePair solution2 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,252,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,252,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,265,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,265,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,283,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,283,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,298,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,298,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,312,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,312,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,350,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,350,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,369,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,369,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,383,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,383,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,510,"ealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
True,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,510,"PointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);"
False,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,41,nivariateRealPointValuePair[] optima = optimizer.getOptima();
True,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,41,UnivariatePointValuePair[] optima = optimizer.getOptima();
False,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,63,nivariateRealPointValuePair optimum
True,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,63,UnivariatePointValuePair optimum
False,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,68,nivariateRealPointValuePair[] optima = optimizer.getOptima();
True,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/univariate/UnivariateMultiStartOptimizerTest.java,68,UnivariatePointValuePair[] optima = optimizer.getOptima();
