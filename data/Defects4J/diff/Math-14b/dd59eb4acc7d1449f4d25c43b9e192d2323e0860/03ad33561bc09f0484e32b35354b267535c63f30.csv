is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,143,final int varStart = tableau.getNumObjectiveFunctions();
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,144,final int varEnd = tableau.getWidth() - 1;
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,144,nt i = tableau.getNumObjectiveFunctions();
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,145,or (; i < tableau.getWidth() - 1 && !row.equals(minRow); i++) {
False,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,146,nteger basicRow = tableau.getBasicRow(i);
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,146,for (int i = varStart; i < varEnd && !row.equals(minRow); i++) {
True,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java,147,final Integer basicRow = tableau.getBasicRow(i);
