is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,19,import java.io.StringWriter;
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,153,tringPrintWriter writer = new StringPrintWriter(str.length() * 2);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,154,StringWriter writer = new StringWriter(str.length() * 2);
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,155,eturn writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,156,return writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,269,tringPrintWriter writer = new StringPrintWriter(str.length());
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,270,StringWriter writer = new StringWriter(str.length());
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,271,eturn writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,272,return writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,445,tringPrintWriter writer = new StringPrintWriter ((int)(str.length() * 1.5));
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,446,StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,447,eturn writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,448,return writer.toString();
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,517,tringPrintWriter writer = new StringPrintWriter ((int)(str.length() * 1.5));
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,518,StringWriter writer = new StringWriter ((int)(str.length() * 1.5));
False,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,519,eturn writer.getString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,520,return writer.toString();
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,2, Copyright 2002-2005 The Apache Software Foundation.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,14, limitations under the License.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,16,ackage org.apache.commons.lang;
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,18,mport java.io.PrintWriter;
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,19,mport java.io.StringWriter;
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,22, <p>A PrintWriter that maintains a String as its backing store.</p>
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,24, <p>Usage:
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,25, <pre>
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,26, StringPrintWriter out = new StringPrintWriter();
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,27, printTo(out);
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,28, System.out.println( out.getString() );
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,29, </pre>
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,30, </p>
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,32, @author Alex Chaffee
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,33, @author Scott Stanchfield
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,34, @author Gary D. Gregory
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,35, @since 2.0
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,37,lass StringPrintWriter extends PrintWriter {
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,40, Constructs a new instance.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,42,ublic StringPrintWriter() {
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,43,uper(new StringWriter());
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,47, Constructs a new instance using the specified initial string-buffer
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,48, size.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,50, @param initialSize  an int specifying the initial size of the buffer.
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,52,ublic StringPrintWriter(int initialSize) {
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,53,uper(new StringWriter(initialSize));
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,57," <p>Since toString() returns information *about* this object, we"
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,58, want a separate method to extract just the contents of the
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,59, internal buffer as a String.</p>
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,61, @return the contents of the internal string buffer
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,63,ublic String getString() {
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,64,lush();
False,src/java/org/apache/commons/lang/StringPrintWriter.java,src/java/org/apache/commons/lang/StringPrintWriter.java,65,eturn ((StringWriter) this.out).toString();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,19,import java.io.StringWriter;
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,108,tringPrintWriter writer = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,109,StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,110,"ssertEquals(expected, writer.getString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,111,"assertEquals(expected, writer.toString());"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,130,"tring str = StringEscapeUtils.unescapeJava(""\\u02-3"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,131,"StringEscapeUtils.unescapeJava(""\\u02-3"");"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,162,tringPrintWriter writer = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,163,StringWriter writer = new StringWriter();
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,164,"ssertEquals(unescaped, writer.getString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,165,"assertEquals(unescaped, writer.toString());"
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,213,tringPrintWriter sw = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,214,StringWriter sw = new StringWriter();
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,218,tring actual = original == null ? null : sw.getString();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,219,String actual = original == null ? null : sw.toString();
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,230,tringPrintWriter sw = new StringPrintWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,231,StringWriter sw = new StringWriter();
False,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,235,tring actual = original == null ? null : sw.getString();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,236,String actual = original == null ? null : sw.toString();
