is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,1,package org.apache.commons.lang;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,3,import java.util.HashMap;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,4,import java.util.Iterator;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,5,import java.util.Map;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,8,* Performs basic variable interpolation on a String for variables within
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,9,"* a Map. Variables of the form, ${var}, are supported."
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,11,* @author Ken Fitzpatrick
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,12,* @author Henri Yandell
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,14,public class Interpolation {
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,16,// QUERY: Anyway to escape the ${..} variable so it is not interpolated?
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,18,// TODO: Consider making these configurable?
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,19,"private static final String SYMBOLIC_VALUE_MARKER_START = ""${"";"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,20,"private static final String SYMBOLIC_VALUE_MARKER_END = ""}"";"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,23,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,24,*  Returns a String that is the result of having performed
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,25,"*  variable interpolation on <code>templateString</code>,"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,26,*  using the value set found in <code>values</code>.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,27,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,28,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,29,*  The solution is compatible with all JDK versions
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,30,*  where Jakarta/Commons/Lang also is supported.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,31,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,32,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,33,*  The expected format of <code>templateString</code> is:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,34,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,35,*   The ${animal} jumped over the ${target}.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,36,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,37,*  such that the key/value pairs found in <code>values</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,38,*  are substituted into the string at the <code>${key-name}</code> markers.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,39,"*  In the above example, <code>valuesMap</code> could have been populated as:"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,40,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,41,*   Map valuesMap = HashMap();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,42,"*   valuesMap.put( ""animal"", ""quick brown fox"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,43,"*   valuesMap.put( ""target"", ""lazy dog"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,44,"*   String resolvedString = StringUtils.interpolate( templateString, valuesMap );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,45,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,46,*  yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,47,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,48,*   The quick brown fox jumped over the lazy dog.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,49,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,50,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,51,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,52,*  The same <code>templateString</code> from the above example could be reused as:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,53,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,54,*   Map valuesMap = HashMap();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,55,"*   valuesMap.put( ""animal"", ""cow"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,56,"*   valuesMap.put( ""target"", ""moon"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,57,"*   String resolvedString = StringUtils.interpolate( templateString, valuesMap );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,58,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,59,*  yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,60,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,61,*   The cow jumped over the moon.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,62,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,63,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,64,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,65,*  The value of <code>templateString</code> is returned in an unaltered if <code>templateString</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,66,"*  is null, empty, or contains no marked variables that can be resolved by the key/value pairs found in"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,67,"*  <code>valuesMap</code>, or if <code>valuesMap</code> is null, empty or has no key/value pairs that can be"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,68,*  applied to the marked variables within <code>templateString</code>.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,69,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,70,* @param templateString String containing any mixture of variable and non-variable
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,71,"*      content, to be used as a template for the value substitution process"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,72,* @param valuesMap Map containing the key/value pairs to be used to resolve
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,73,*      the values of the marked variables found within <code>templateString</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,74,* @return String
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,76,"public static String interpolate( String templateString, Map valuesMap ) {"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,77,// pre-conditions
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,78,if ( valuesMap == null )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,79,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,80,if ( templateString == null )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,81,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,82,if ( templateString.length() < 1 )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,83,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,84,if ( valuesMap.isEmpty() )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,85,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,87,// default the returned String to the templateString
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,88,String returnString = templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,89,String nextKey = null;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,90,Object substitutionBean = null;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,91,String substitutionValue = null;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,92,String nextValueToBeSubstituted = null;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,94,// get a list of substitution valuesMap
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,95,Iterator keys = valuesMap.keySet().iterator();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,97,while( keys.hasNext() ) {
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,98,nextKey = ( String ) keys.next();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,99,substitutionValue = StringUtils.defaultString( ( String ) valuesMap.get( nextKey ) );
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,100,nextValueToBeSubstituted = SYMBOLIC_VALUE_MARKER_START + nextKey + SYMBOLIC_VALUE_MARKER_END;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,102,"returnString = StringUtils.replace( returnString, nextValueToBeSubstituted, substitutionValue );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,104,return returnString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,109,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,110,*  Returns a String that is the result of having performed variable interpolation on
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,111,"*  <code>templateString</code>, using the value set found in <code>values</code>,"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,112,*  repeatedly until there are no changes.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,113,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,114,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,115,*  The expected format of <code>templateString</code> is:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,116,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,117,*   The ${animal} jumped over the ${target}.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,118,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,119,*  such that the key/value pairs found in <code>values</code> are substituted into the string at the
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,120,"*  <code>${key-name}</code> markers.  In the above example, <code>valuesMap</code>"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,121,*  could have been populated as:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,122,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,123,*   Map valuesMap = HashMap();
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,124,"*   valuesMap.put( ""animal"", ""${critter}"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,125,"*   valuesMap.put( ""target"", ""${pet}"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,126,"*   valuesMap.put( ""pet"", ""${petCharacteristic} dog"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,127,"*   valuesMap.put( ""petCharacteristic"", ""lazy"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,128,"*   valuesMap.put( ""critter"", ""${critterSpeed} ${critterColor} ${critterType}"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,129,"*   valuesMap.put( ""critterSpeed"", ""quick"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,130,"*   valuesMap.put( ""critterColor"", ""brown"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,131,"*   valuesMap.put( ""critterType"", ""fox"" );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,132,"*   String resolvedString = StringUtils.interpolate( templateString, valuesMap, true );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,133,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,134,*  yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,135,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,136,*   The quick brown fox jumped over the lazy dog.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,137,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,138,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,139,*  yielding:
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,140,*<code><pre>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,141,*   The cow jumped over the moon.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,142,*</pre></code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,143,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,144,*  <p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,145,*  The value of <code>templateString</code> is returned in an unaltered form if
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,146,"*  <code>templateString</code> is null, empty, or"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,147,*  contains no marked variables that can be resolved by the key/value pairs found in
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,148,"*  <code>valuesMap</code>, or if <code>valuesMap</code> is null, empty or has no key/value"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,149,*  pairs that can be applied to the marked variables within <code>templateString</code>.
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,150,*  </p>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,151,* @param templateString String containing any mixture of variable and non-variable
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,152,"*      content, to be used as a template for the value substitution process"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,153,* @param valuesMap Map containing the key/value pairs to be used to resolve
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,154,*      the values of the marked variables found within <code>templateString</code>
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,155,* @return String
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,157,public static String interpolateRepeatedly(
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,158,"String templateString,"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,159,Map valuesMap)
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,161,// pre-conditions
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,162,if ( valuesMap == null )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,163,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,164,if ( templateString == null )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,165,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,166,if ( templateString.length() < 1 )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,167,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,168,if ( valuesMap.isEmpty() )
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,169,return templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,171,String currentResult = templateString;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,172,String previousResult = null;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,173,"while( ! StringUtils.equals( currentResult, previousResult ) )"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,175,previousResult = currentResult;
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,176,"currentResult = Interpolation.interpolate( previousResult, valuesMap );"
True,src/java/org/apache/commons/lang/Interpolation.java,src/java/org/apache/commons/lang/Interpolation.java,179,return currentResult;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,2,* Copyright 2002-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,16,package org.apache.commons.lang;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,18,import junit.framework.Test;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,20,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,21,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,23,import java.util.Map;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,24,import java.util.HashMap;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,27,* Unit tests {@link org.apache.commons.lang.Interpolation}.
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,29,* @author Henri Yandell
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,30,* @author Ken Fitzpatrick
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,31,"* @version $Id: InterpolationTest.java,v 1.1 2004/07/04 04:51:25 bayard Exp $"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,33,public class InterpolationTest extends TestCase {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,35,"private static final String INPUT_TEMPLATE     = ""The ${animal} jumped over the ${target}."";"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,36,"private static final String EXPECTED_RESULTS_1 = ""The quick brown fox jumped over the lazy dog."";"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,37,"private static final String EXPECTED_RESULTS_2 = ""The cow jumped over the moon."";"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,39,public InterpolationTest(String name) {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,40,super(name);
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,43,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,44,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,47,public static Test suite() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,48,TestSuite suite = new TestSuite(InterpolationTest.class);
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,49,"suite.setName(""Interpolation Tests"");"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,50,return suite;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,53,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,54,super.setUp();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,57,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,58,super.tearDown();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,61,public void testSimpleVariableSubstitution() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,63,"// test case: ""The quick brown fox jumped over the lazy dog."""
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,64,Map valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,65,"valuesMap.put( ""animal"", ""quick brown fox"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,66,"valuesMap.put( ""target"", ""lazy dog"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,67,"assertEquals( ""Test case 1: simple variable substitution"", EXPECTED_RESULTS_1,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,68,"Interpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,70,"// test case: ""The cow jumped over the moon."""
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,71,valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,72,"valuesMap.put( ""animal"", ""cow"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,73,"valuesMap.put( ""target"", ""moon"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,74,"assertEquals( ""Test case 2: template reuse, different results"" ,EXPECTED_RESULTS_2,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,75,"Interpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,78,public void testNullMap() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,79,// negative test case: Map == null
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,80,Map valuesMap = null;
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,81,"assertEquals( ""Test case 3: Map == null"", INPUT_TEMPLATE,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,82,"Interpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,85,public void testEmptyMap() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,86,// negative test case: Map.isEmpty()
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,87,Map valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,88,"assertEquals( ""Test case 4: Map.isEmpty()"", INPUT_TEMPLATE,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,89,"Interpolation.interpolate( INPUT_TEMPLATE, valuesMap) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,92,public void testNullTemplate() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,93,// negative test case: INPUT_TEMPLATE == null
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,94,Map valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,95,"valuesMap.put( ""animal"", ""cow"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,96,"valuesMap.put( ""target"", ""moon"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,97,"assertNull( ""Test case 5: template == null"","
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,98,"Interpolation.interpolate( null, valuesMap) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,101,public void testRecursive() {
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,102,// test case: process repeatedly
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,103,Map valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,104,"valuesMap.put( ""animal"", ""${critter}"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,105,"valuesMap.put( ""target"", ""${pet}"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,106,"valuesMap.put( ""pet"", ""${petCharacteristic} dog"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,107,"valuesMap.put( ""petCharacteristic"", ""lazy"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,108,"valuesMap.put( ""critter"", ""${critterSpeed} ${critterColor} ${critterType}"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,109,"valuesMap.put( ""critterSpeed"", ""quick"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,110,"valuesMap.put( ""critterColor"", ""brown"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,111,"valuesMap.put( ""critterType"", ""fox"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,112,"assertEquals( ""Test case 6: interpolateRepeatedly"", EXPECTED_RESULTS_1,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,113,"Interpolation.interpolateRepeatedly( INPUT_TEMPLATE, valuesMap ) );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,115,// test case: process repeatedly
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,116,valuesMap = new HashMap();
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,117,"valuesMap.put( ""animal"", ""cow"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,118,"valuesMap.put( ""target"", ""${celestialObject}"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,119,"valuesMap.put( ""celestialObject"", ""moon"" );"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,120,"assertEquals( ""Test case 8: interpolateRepeatedly"", EXPECTED_RESULTS_2,"
True,src/test/org/apache/commons/lang/InterpolationTest.java,src/test/org/apache/commons/lang/InterpolationTest.java,121,"Interpolation.interpolateRepeatedly( INPUT_TEMPLATE, valuesMap ) );"
False,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,29," @version $Id: LangTestSuite.java,v 1.26 2004/02/18 23:06:19 ggregory Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,29,"* @version $Id: LangTestSuite.java,v 1.27 2004/07/04 04:51:25 bayard Exp $"
True,src/test/org/apache/commons/lang/LangTestSuite.java,src/test/org/apache/commons/lang/LangTestSuite.java,65,suite.addTest(InterpolationTest.suite());
