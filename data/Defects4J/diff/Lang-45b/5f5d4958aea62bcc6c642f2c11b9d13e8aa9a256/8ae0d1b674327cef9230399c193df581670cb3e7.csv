is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,34," @version $Id: ClassUtils.java,v 1.34 2004/12/19 22:35:38 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,34,"* @version $Id: ClassUtils.java,v 1.35 2005/01/27 06:45:11 bayard Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,485,* <p>Enhanced version of java.lang.Class.forName(String) that can handle
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,486,* primitive types and arrays using the Foo[] notation.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,488,* @param name the fully qualified name of the class to create
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,489,* @return the desired class
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,490,* @since 2.1
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,492,public static Class forName(String name) throws ClassNotFoundException {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,493,String fixedName = name;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,494,"if(name.endsWith(""[]"")) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,495,"fixedName = ""[L"" + name.substring(0, name.length() - ""[]"".length()) + "";"";"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,497,try {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,498,return Class.forName(fixedName);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,499,} catch(ClassNotFoundException cnfe) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,500,// try primitives
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,501,"if(""boolean"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,502,return boolean.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,503,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,504,"if(""char"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,505,return char.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,506,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,507,"if(""byte"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,508,return byte.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,509,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,510,"if(""short"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,511,return short.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,512,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,513,"if(""int"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,514,return int.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,515,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,516,"if(""long"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,517,return long.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,518,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,519,"if(""float"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,520,return float.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,521,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,522,"if(""double"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,523,return double.class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,526,// try primitive arrays
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,527,"if(""boolean[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,528,return boolean[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,529,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,530,"if(""char[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,531,return char[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,532,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,533,"if(""byte[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,534,return byte[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,535,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,536,"if(""short[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,537,return short[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,538,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,539,"if(""int[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,540,return int[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,541,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,542,"if(""long[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,543,return long[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,544,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,545,"if(""float[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,546,return float[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,547,} else
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,548,"if(""double[]"".equals(name)) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,549,return double[].class;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,552,throw cnfe;
False,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,35," @version $Id: ClassUtilsTest.java,v 1.14 2004/12/19 22:35:38 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,35,"* @version $Id: ClassUtilsTest.java,v 1.15 2005/01/27 06:45:11 bayard Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,392,public void testForName() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,393,String[] names = new String[] {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,394,"""boolean"", ""char"", ""byte"", ""short"", ""int"", ""long"", ""float"", ""double"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,395,"""boolean[]"", ""char[]"", ""byte[]"", ""short[]"", ""int[]"", ""long[]"", ""float[]"", ""double[]"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,396,"""java.lang.Object[]"", ""java.lang.String"", ""java.lang.String[]"""
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,399,Class[] classes = new Class[] {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,400,"boolean.class, char.class, byte.class, short.class, int.class, long.class, float.class, double.class,"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,401,"boolean[].class, char[].class, byte[].class, short[].class, int[].class, long[].class, float[].class, double[].class,"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,402,"Object[].class, String.class, String[].class"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,405,for(int i=0; i<names.length; i++) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,406,try {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,407,"assertEquals( ""Incorrect class found. "", classes[i], ClassUtils.forName(names[i]) );"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,408,} catch(ClassNotFoundException cnfe) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,409,"fail(""Failed to find class for '"" + names[i] + ""'"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,413,try {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,414,"ClassUtils.forName(""SomeSillyMadeUpClassName"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,415,"fail(""Non-existent classname should have thrown an exception. "");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,416,} catch(ClassNotFoundException cnfe) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,417,// should fail
